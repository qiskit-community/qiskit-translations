msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-08-14 19:07\n"
"Last-Translator: \n"
"Language: pl\n"
"Language-Team: Polish\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pl\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "Ta strona została wygenerowana z `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE with Qiskit Aer Primitives"
msgstr "VQE z elementami podstawowymi Qiskit Aer"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates how to leverage the `Qiskit Aer Primitives <https://qiskit.org/documentation/apidoc/aer_primitives.html>`__ to run both noiseless and noisy simulations locally. Qiskit Aer not only allows you to define your own custom noise model, but also to easily create a noise model based on the properties of a real quantum device. This notebook will show an example of the latter, to illustrate the general workflow of running algorithms with local noisy simulators."
msgstr "Ten notes pokazuje jak wykorzystać `elementy podstawowe Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_primitives.html>`__ do lokalnej symulacji z szumem lub bez. Qiskit Aer pozwala na zdefiniowanie niestandardowych modeli szumu, jak i na stworzenie ich na wzór właściwości prawdziwych urządzeń kwantowych. Ten notes prezentuje przykład tworzenia tego drugiego rodzaju modelu, żeby zobrazować ogólny przebieg pracy algorytmów z lokalnymi symulatorami z szumem."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:13
msgid "For further information on the Qiskit Aer noise model, you can consult the `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, as well the tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "Więcej informacji na temat modelu szumu Qiskit Aer można znaleźć w `Dokumentacji Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, jak również poradniku `tworzenie modeli szumu <../simulators/3_building_noise_models.ipynb>`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:24
msgid "The algorithm of choice is once again VQE, where the task consists on finding the minimum (ground state) energy of a Hamiltonian. As shown in previous tutorials, VQE takes in a qubit operator as input. Here, you will take a set of Pauli operators that were originally computed by Qiskit Nature for the H2 molecule, using the ``SparsePauliOp`` class."
msgstr "Również w tym wypadku wybieramy algorytm VQE, a zadanie polega na znalezieniu minimalnej energii (stanu podstawowego) hamiltonianu. Tak jak pokazano w poprzednich tutorialach, VQE przyjmuje operator kubita jako dane wejściowe. W tym przypadku weźmy operatory Pauliego utworzone przez Qiskit Nature dla cząsteczki H2 przy użyciu klasy ``SparsePauliOp``."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:81
msgid "As the above problem is still easily tractable classically, you can use ``NumPyMinimumEigensolver`` to compute a reference value to compare the results later."
msgstr "Jako że powyższy problem jest łatwy do namierzenia klasycznie, możesz użyć ``NumPyMinimumEigensolver``, aby obliczyć wartość odwołania w celu późniejszego porównania wyników."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:132
msgid "The following examples will all use the same ansatz and optimizer, defined as follows:"
msgstr "Poniższe przykłady wykorzystują ten sam ansatz oraz optymalizator, zdefiniowane w następujący sposób:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:160
msgid "Performance *without* noise"
msgstr "Wydajność *bez* szumu"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:162
msgid "Let's first run the ``VQE`` on the default Aer simulator without adding noise, with a fixed seed for the run and transpilation to obtain reproducible results. This result should be relatively close to the reference value from the exact computation."
msgstr "Przeprowadź najpierw ``VQE`` na domyślnym symulatorze Aer bez dodawania szumu, z określonym ziarnem dla danego uruchomienia i transpilacji w celu uzyskania powtarzalnych wyników. Wynik powinien być dość zbliżony do wartości odniesienia z dokładnych obliczeń."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:259
msgid "You captured the energy values above during the convergence, so you can track the process in the graph below."
msgstr "Powyższe wartości energii zostały przechwycone podczas konwergencji. Proces można zaobserwować na poniższym wykresie."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:321
msgid "Performance *with* noise"
msgstr "Wydajność *z* szumu"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:323
msgid "Now, let's add noise to our simulation. In particular, you will extract a noise model from a (fake) device. As stated in the introduction, it is also possible to create custom noise models from scratch, but this task is beyond the scope of this notebook."
msgstr "Teraz uwzględnijmy szum w naszej symulacji. Model szumu wyodrębnić można z (fałszywego) urządzenia. Jak zaznaczono we wstępie, istnieje możliwość stworzenia niestandardowego modelu szumu od podstaw, ale zadanie to wykracza poza zakres tego poradnika."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:325
msgid "First, you need to get an actual device backend and from its ``configuration`` and ``properties`` you can setup a coupling map and a noise model to match the device. Note: You can also use this coupling map as the entanglement map for the variational form if you choose to."
msgstr "Po pierwsze, z poziomu backendu urządzenia możesz stworzyć mapę połączeń kwantowych (coupling map) oraz model szumu zgodny z urządzeniem, używając do tego ``configuration`` i ``properties``. Zauważ, że możesz też użyć mapy połączeń jako mapy splątań kwantowych dla alternatywnej formy."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:392
msgid "Once the noise model is defined, you can run ``VQE`` using an Aer ``Estimator``, where you can pass the noise model to the underlying simulator using the ``backend_options`` dictionary. Please note that this simulation will take longer than the noiseless one."
msgstr "Określiwszy model szumu, można uruchomić ``VQE`` przy użyciu Aer ``Estimator``, gdzie istnieje możliwość przekazania modelu szumu do bazowego symulatora za pomocą słownika ``backend_options``. Warto jednak pamiętać, że taka symulacja potrwa dłużej niż symulacja bez szumu."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:421
msgid "Instead of defining a new instance of the ``VQE`` class, you can now simply assign a new estimator to our previous ``VQE`` instance. As the callback method will be re-used, you will also need to re-start the ``counts`` and ``values`` variables to be able to plot the convergence graph later on."
msgstr "Zamiast definiować nowy przypadek klasy ``VQE``, teraz możesz przypisać nowy estymator do poprzedniej wersji ``VQE``. Ponieważ metoda wywołań zwrotnych zostanie użyta kolejny raz, konieczne będzie ponowne uruchomienie zmiennych ``counts`` i ``values``, w celu sporządzenia grafu zbieżności."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:512
msgid "Summary"
msgstr "Podsumowanie"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:523
msgid "In this tutorial, you compared three calculations for the H2 molecule ground state. First, you produced a reference value using a classical minimum eigensolver. Then, you proceeded to run ``VQE`` using the Qiskit Aer ``Estimator`` with 1024 shots. Finally, you extracted a noise model from a backend and used it to define a new ``Estimator`` for noisy simulations. The results are:"
msgstr "W niniejszym tutorialu zestawiono trzy obliczenia stanu podstawowego dla cząsteczki H2. Najpierw otrzymano wartość odniesienia przy użyciu klasycznego minimalnego eigensolvera. Następnie zastosowano ``VQE``, używając do tego QiskitAer ``Estimator`` z 1024 próbami (shots). Na koniec wyodrębniono model szumu z backendu i użyto go do zdefiniowania nowego ``Estimator``-a dla symulacji z szumem. Wyniki są następujące:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:576
msgid "You can notice that, while the noiseless simulation's result is closer to the exact reference value, there is still some difference. This is due to the sampling noise, introduced by limiting the number of shots to 1024. A larger number of shots would decrease this sampling error and close the gap between these two values."
msgstr "Choć wynik symulacji bez szumu bliski jest dokładnej wartości odniesienia, wciąż istnieje zauważalna różnica. Wynika to z zaszumienia próbkowania spowodowanego liczbą prób ograniczoną do 1024. Zwiększenie liczby prób zmniejszyłoby zaszumienie próbkowania oraz różnicę pomiędzy wartościami."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:578
msgid "As for the noise introduced by real devices (or simulated noise models), it could be tackled through a wide variety of error mitigation techniques. The `Qiskit Runtime Primitives <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/>`__ have enabled error mitigation through the ``resilience_level`` option. This option is currently available for remote simulators and real backends accessed via the Runtime Primitives, you can consult `this tutorial <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/tutorials/Error-Suppression-and-Error-Mitigation.html>`__ for further information."
msgstr "Z szumem wyprodukowanym przez rzeczywiste urządzenia (a także symulowane modele szumu) można uporać się za pomocą licznych mitygacji błędów. Elementy podstawowe z `Qiskit Runtime Primitives <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/>`__ pozwalają na mitygację błędów poprzez opcję ``resilience_level``. Opcja ta jest aktualnie dostępna dla zdalnych symulatorów oraz prawdziwych backendów. Można uzyskać do niej dostęp poprzez elementy podstawowe Runtime Primitives. Po więcej informacji przejdź do `tego tutorialu <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/tutorials/Error-Suppression-and-Error-Mitigation.html>`."

