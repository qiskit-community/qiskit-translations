msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-11 13:41+0000\n"
"PO-Revision-Date: 2020-10-11 14:27\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/development_strategy.po\n"
"X-Crowdin-File-ID: 7206\n"
"Language: ja_JP\n"

#: ../../development_strategy.rst:2
msgid "Development Strategy"
msgstr "開発ストラテジー"

#: ../../development_strategy.rst:7
msgid "Versioning"
msgstr "バージョン管理"

#: ../../development_strategy.rst:9
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has it's own releases and versions some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Qiskit プロジェクトは、各自異なる機能を実行するいくつかの要素(エレメント) から構成されています。各要素は独立しており、それ単独で機能します。しかしながら、利便性のためにこのリポジトリを提供し、全ての要素を一度にインストールできるように、単一のエントリーポイントのメタパッケージとして提供しています。これによりインストールプロセスが簡略化され、エンドユーザーに統一されたインタフェースを提供できます。ただし、それぞれの Qiskit エレメントは独自のリリースとバージョンをもつため、異なるリポジトリ間でのバージョンを扱う際には注意が必要です。このドキュメントは Qiskit エレメントとメタパッケージ両者のバージョンとリリースの扱いのガイドラインを概略します。"

#: ../../development_strategy.rst:19
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "このガイドの残りでは、異なるコンポーネントのバージョン番号を参照するのに、標準のセマンティック バージョニング (Semantic Versioning) 命名規則: ``Major.Minor.Patch`` を採用します。例えば、バージョン番号が ``0.7.1`` だった場合、メジャーバージョンは ``0`` 、マイナーバージョンが ``7``、そしてパッチバージョンが ``1`` です。"

#: ../../development_strategy.rst:26
msgid "Meta-package Version"
msgstr "メタパッケージバージョン"

#: ../../development_strategy.rst:28
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "Qiskitメタパッケージバージョンは、追跡対象の各要素のリリースによって決定される独立した値です。\n"
"リリースを追跡対象コンポーネントにプッシュする(または要素を追加する)たびに、メタパッケージの要件とバージョンを更新し、新しいリリースを公開する必要があります。 タイミングを要素のリリースと調整して、メタパッケージのリリースが要素のリリースを追跡するようにします。"

#: ../../development_strategy.rst:36
msgid "Adding New Elements"
msgstr "新しい要素(エレメント) の追加"

#: ../../development_strategy.rst:38
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "新しいQiskit要素がメタパッケージ要件に追加されると、メタパッケージのマイナーバージョンを増やす必要があります。"

#: ../../development_strategy.rst:41
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and it's version is ``0.7.4``. Then we release a new element ``qiskit-ignis`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "たとえば、メタパッケージが2つの要素 qiskit-aerとqiskit-terraを追跡しており、そのバージョンが 0.7.4であるとします。次に、メタパッケージに含める予定の新しい要素qiskit-ignisをリリースします。メタパッケージに新しい要素を追加するとき、バージョンを0.8.0に増やします。"

#: ../../development_strategy.rst:49
msgid "Patch Version Increases"
msgstr "パッチバージョンの増加"

#: ../../development_strategy.rst:51
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release we need also bump the requirement in the setup.py and then increase the patch version of the meta-package."
msgstr "メタパッケージによって既に追跡されているQiskit要素がバグを修正するためのパッチバージョンをリリースする際に、setup.pyの要件を上げてから、メタパッケージのパッチバージョンを増やす必要もあります。"

#: ../../development_strategy.rst:56
msgid "For example, if the meta-package is tracking 3 elements ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, and ``qiskit-ignis==0.1.4`` with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase it's patch version and release, becoming ``0.9.7``."
msgstr "たとえば、メタパッケージが3つの要素 ``qiskit-terra == 0.8.1``、``qiskit-aer == 0.2.1`` および ``qiskit-ignis == 0.1.4`` を追跡していて 現在のバージョン ``0.9.6`` だとします。qiskit-terraがバグ ``0.8.2`` を修正するための新しいパッチバージョンをリリースすると、メタパッケージもパッチバージョンとリリースを増やして ``0.9.7`` にする必要があります。"

#: ../../development_strategy.rst:62
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "さらに、メタパッケージ自体には、新しいリリースをプッシュすることで修正する必要があるパッケージングまたはその他のバグが時々あります。 それらがおきたら、パッチバージョンを増やして、破損したリリースと区別する必要があります。 いかなる状況でもpypiから壊れたリリースや古いリリースを削除しないでください。代わりに、パッチバージョンを増やして新しいリリースをアップロードしてください。"

#: ../../development_strategy.rst:71
msgid "Minor Version Increases"
msgstr "マイナーバージョンの増加"

#: ../../development_strategy.rst:73
msgid "Besides adding a new element to the meta-package the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "メタパッケージに新しい要素を追加することに加え、追跡される要素のマイナーバージョンが増加するたびに、メタパッケージのマイナーバージョンも増加させる必要があります。"

#: ../../development_strategy.rst:77
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "たとえば、メタパッケージが2つの要素 ``qiskit-terra == 0.7.0`` および ``qiskit-aer == 0.1.1`` を追跡しており、現在のバージョンが``0.7.5``であるとします。``qiskit-aer`` 要素が ``0.2.0`` をリリースしたら、新しいリリースに対応するためにメタパッケージのバージョンを ``0.8.0`` に増やす必要があります。"

#: ../../development_strategy.rst:84
msgid "Major Version Increases"
msgstr "メジャーバージョンの増加"

#: ../../development_strategy.rst:86
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now all the elements still have a major version number component of ``0`` and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1`` then the meta-package version should not increase the major version."
msgstr "メジャーバージョンは、他のバージョン番号コンポーネントとは異なります。追跡対象の各要素でロックステップで更新される他のバージョン番号コンポーネントとは異なり、メジャーバージョンは、すべての追跡対象バージョンがバンプされたとき（少なくとも``1.0.0`` の前に）にのみ増加します。現在、すべての要素のメジャーバージョン番号コンポーネントは `` 0`` であり、メジャーバージョンを ``>= 1`` にバンプしてメタリポジトリ内の各追跡要素が安定しているとマークされるまでは、 パッケージバージョンは、メジャーバージョンを増やすべきではありません。"

#: ../../development_strategy.rst:94
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "すべての要素が> = 1.0.0になった後のメジャーバージョン番号コンポーネントトラッキングの動作はまだ決定されていません。"

#: ../../development_strategy.rst:99
msgid "Qiskit Element Requirement Tracking"
msgstr "Qiskit要素の要件の追跡"

#: ../../development_strategy.rst:101
msgid "While not strictly related to the meta-package and Qiskit versioning how we track the element versions in the meta-package's requirements list is important. Each element listed in the setup.py should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "メタパッケージとQiskitのバージョン管理に厳密に関連しているわけではありませんが、メタパッケージの要件リストで要素のバージョンを追跡する方法が重要です。 setup.pyにリストされている各要素は、単一のバージョンに固定する必要があります。 つまり、Qiskitの各バージョンでは、追跡対象の要素ごとに1つのバージョンのみをインストールする必要があります。 たとえば、特定の時点での要件リストは次のようになります。"

#: ../../development_strategy.rst:113
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "これはデバッグに役立つだけでなく、複数の要素にわたるバージョンの追跡をより透明にするためでもあります。"

#: ../../development_strategy.rst:116
msgid "It is also worth pointing out that the order we install the elements is critically important too. ``pip`` does not have a real dependency solver which means the installation order matters. So if there are overlapping requirements versions between elements or dependencies between elements we need to ensure that the order in the requirements list installs everything as expected. If the order needs to be change for some install time incompatibility it should be noted clearly."
msgstr "また、要素をインストールする順序も非常に重要であることを指摘する価値があります。 `` pip``には実際の依存関係ソルバーがありません。つまり、インストールの順序が重要です。 したがって、要素間で要件バージョンが重複したり、要素間で依存関係がある場合、要件リストの順序ですべてが期待どおりにインストールされるようにする必要があります。 インストール時の非互換性のために順序を変更する必要がある場合は、明確に注意する必要があります。"

#: ../../development_strategy.rst:125
msgid "Community Extensions"
msgstr "コミュニティーによる拡張"

#: ../../development_strategy.rst:127
msgid "Qiskit has been designed with modularity in mind. It is extensible in many different ways; on the page, we highlight the ways in which the Qiskit community has engaged with Qiskit and developed extensions and packages on top of it."
msgstr "Qiskitはモジュール性を考慮した設計がされています。ここではQiskit コミュニティーとの協働で開発したエクステンションやパッケージ等、各種拡張に関するご紹介をします。"

#: ../../development_strategy.rst:132
msgid "Providers"
msgstr "プロバイダー"

#: ../../development_strategy.rst:134
msgid "The Qiskit base provider is an entity that provides access to a group of different backends (for example, backends available through IBM Quantum). It interacts with those backends to do many things: find out which ones are available, retrieve an instance of a particular backend, get backend properties and configurations, and handling running and working with jobs."
msgstr "Qiskit base providerは異なるバックエンド群 (IBM Quantumを通じて提供されているバックエンド等) へのアクセスを提供します。バックエンドとのやり取りをして、どのバックエンドがオンラインなのかを判断したり、特定のバックエンドのインスタンス、プロパティや設定を取得したり、ジョブの実行と管理等を行います。"

#: ../../development_strategy.rst:141
msgid "Additional providers"
msgstr "追加のプロバイダー"

#: ../../development_strategy.rst:143
msgid "**Decision diagram-based quantum simulator**"
msgstr "**Decision diagram-based quantum simulator**"

#: ../../development_strategy.rst
msgid "- **Organization:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"
msgstr "- **組織:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"

#: ../../development_strategy.rst
msgid "- **Description:** A local provider which allows Qiskit to use decision diagram-based quantum simulation"
msgstr "- **概要:** Qiskitによるdecision diagram-based quantum simulationの利用を提供するローカル・プロバイダー"

#: ../../development_strategy.rst
msgid "- **Qiskit Version:** 0.7"
msgstr "- **Qiskit バージョン:** 0.7"

#: ../../development_strategy.rst
msgid "- **More info:**  `Webpage at JKU <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>`__"
msgstr "- **追加情報:**  `JKUホームページ <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium ブログ <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `Github リポジトリ <https://github.com/Qiskit/qiskit-jku-provider>`__"

#: ../../development_strategy.rst:154
msgid "**Quantum Inspire**"
msgstr "**Quantum Inspire**"

#: ../../development_strategy.rst
msgid "- **Organization:** QuTech-Delft"
msgstr "- **組織:** QuTech-Delft"

#: ../../development_strategy.rst
msgid "- **Description:** A provider for the Quantum Inspire backend"
msgstr "- **概要:** Quantum Inspire バックエンドのプロバイダー"

#: ../../development_strategy.rst
msgid "- **More info:** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `GitHub <https://github.com/QuTech-Delft/quantuminspire>`__."
msgstr "- **追加情報:** `Medium ブログ <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `Github <https://github.com/QuTech-Delft/quantuminspire>`__."

#: ../../development_strategy.rst:164
msgid "Transpiler"
msgstr "トランスパイラー"

#: ../../development_strategy.rst:166
msgid "Circuit optimization is at the heart of making quantum computing feasible on actual hardware. A central component of Qiskit is the transpiler, which is a framework for manipulating quantum circuits according to certain transformations (known as transpiler passes). The transpiler enables users to create customized sets of passes, orchestrated by a pass manager, to transform the circuit according to the rules specified by the passes. In addition, the transpiler architecture is designed for modularity and extensibility, enabling Qiskit users to write their own passes, use them in the pass manager, and combine them with existing passes. In this way, the transpiler architecture opens up the door for research into aggressive optimization of quantum circuits."
msgstr "量子コンピューティングを実際のハードウェアで実現する鍵が量子回路の最適化です。Qiskitの主要コンポーネントはTranspilerで、特定の変換（Transpiler passes）に基づいて量子回路を操作するフレームワークです。Transpilerは、pass managerによって、ユーザーがカスタマイズされたパスを作成し、パスが指定したルールに基づいて回路を変換できるようにしたものです。加えて、Transpilerのアーキテクチャはモジュール性と拡張性を考慮して設計され、Qiskitユーザが各自のパスを設計し、pass managerで利用し、既存のパスと組み合わせられるようにしました。このように、Transpilerのアーキテクチャは量子回路のより積極的な最適化を可能にします。"

#: ../../development_strategy.rst:178
msgid "Additional passes"
msgstr "追加のパス"

#: ../../development_strategy.rst:180
msgid "**t|ket〉 optimization & routing pass**"
msgstr "**t|ket〉 optimization & routing pass**"

#: ../../development_strategy.rst
msgid "- **Organization:** Cambridge Quantum Computing"
msgstr "- **組織:** Cambridge Quantum Computing"

#: ../../development_strategy.rst
msgid "- **Description:** Transpiler pass for circuit optimization and mapping to backend using CQC's t|ket〉compiler."
msgstr "- **概要:** 回路の最適化とCQCの t|ket〉コンパイラーを活用したバックエンドへのマッピング。"

#: ../../development_strategy.rst
msgid "- **More info:** `Tutorial Notebook <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `GitHub <https://github.com/CQCL/pytket>`__."
msgstr "- **追加情報:** `チュートリアル・ノートブック <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `Github <https://github.com/CQCL/pytket>`__."

#: ../../development_strategy.rst:190
msgid "Tools"
msgstr "ツール"

#: ../../development_strategy.rst:192
msgid "Extending Qiskit with new tools and functionality is an important part of building a community. These tools can be new visualizations, slack integration, Jupyter extensions and much more."
msgstr "Qiskitの新しいツールや機能の拡張は、コミュニティーの発展にとって重要な取組です。新しいツールとは、可視化ツールであったり、Slackとの統合であったり、Jupyterのエクステンションをつくること等です。"

#: ../../development_strategy.rst:197
msgid "Additional Tools"
msgstr "追加のツール"

#: ../../development_strategy.rst:198
msgid "**OpenControls library**"
msgstr "**OpenControls library**"

#: ../../development_strategy.rst
msgid "- **Organization:** Q-CTRL"
msgstr "- **組織:** Q-CTRL"

#: ../../development_strategy.rst
msgid "- **Description:** Library of quantum control pulses derived from the open literature."
msgstr "- **概要:** 公開文献に基づく量子コントロール・パルスのライブラリ"

#: ../../development_strategy.rst
msgid "- **More info:**  `GitHub <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL website <https://q-ctrl.com/products/open-controls/>`__"
msgstr "- **追加情報:**  `Github <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL ウェブサイト <https://q-ctrl.com/products/open-controls/>`__"

