msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-03-18 15:41\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/operators/02_gradients_framework.po\n"
"X-Crowdin-File-ID: 9410\n"
"Language: ja_JP\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:10
msgid "This page was generated from `tutorials/operators/02_gradients_framework.ipynb`__."
msgstr "このページは `tutorials/operators/02_gradients_framework.ipynb`__ から生成されました。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/operators/02_gradients_framework.ipynb>`_."
msgstr "`IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/operators/02_gradients_framework.ipynb>`_ でインタラクティブに実行します。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:9
msgid "Qiskit Gradient Framework"
msgstr "Qiskit Gradient フレームワーク"

#: ../../tutorials/operators/02_gradients_framework.ipynb:11
msgid "The gradient framework enables the evaluation of quantum gradients as well as functions thereof. Besides standard first order gradients of expectation values of the form"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:13
msgid "\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle\n\n"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:15
msgid "The gradient framework also supports the evaluation of second order gradients (Hessians), and the Quantum Fisher Information (QFI) of quantum states :math:`|\\psi\\left(\\theta\\right)\\rangle`."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:18
msgid "Table of Contents"
msgstr "目次"

#: ../../tutorials/operators/02_gradients_framework.ipynb:20
msgid "`First Order Gradients <#grad>`__"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:21
msgid "`Gradients w.r.t. Measurement Operator Parameters <#grad_meas>`__"
msgstr "`測定演算子パラメーターに関する勾配 <#grad_meas>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:22
msgid "`Gradients w.r.t. State Parameters <#grad_state>`__"
msgstr "`状態パラメーターに関する勾配 <#grad_state>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:23
msgid "`Natural Gradient <#nat_grad>`__"
msgstr "`自然勾配 <#nat_grad>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:24
msgid "`Hessians <#hess>`__"
msgstr "`ヘシアン <#hess>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:25
msgid "`Hessians w.r.t. Measurement Operator Parameters <#hess_meas>`__"
msgstr "`測定演算子パラメーターに関するヘシアン <#hess_meas>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:26
msgid "`Hessians w.r.t. State Parameters <#hess_state>`__"
msgstr "`状態パラメーターに関する勾配 <#hess_state>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:27
msgid "`Quantum Fisher Information <#qfi>`__"
msgstr "`量子フィッシャー情報量 <#qfi>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:28
msgid "`Application Example: VQE with gradient-based optimization <#apps>`__"
msgstr "`応用例: 勾配ベース最適化による VQE <#apps>`__"

#: ../../tutorials/operators/02_gradients_framework.ipynb:39
msgid "|gradient_framework.png|"
msgstr "|gradient_framework.png|"

#: ../../tutorials/operators/02_gradients_framework.ipynb:53
msgid "Imports"
msgstr "インポート"

#: ../../tutorials/operators/02_gradients_framework.ipynb:83
msgid "First Order Gradients"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:86
msgid "Given a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`, and observable :math:`\\hat{O}\\left(\\omega\\right)=\\sum_{i}\\omega_i\\hat{O}_i`, we want to compute…"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:97
msgid "Gradients w.r.t. Measurement Operator Parameters"
msgstr "測定演算子パラメーターに関する勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:100
msgid "Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e."
msgstr "観測量 :math:`\\hat{O}\\left(\\omega\\right)` の測定演算子の係数に関する期待値の勾配は、以下のようになります。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:102
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega_i} = \\langle\\psi\\left(\\theta\\right)|\\hat{O}_i\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:113
msgid "First of all, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "まず、量子状態 :math:`|\\psi\\left(\\theta\\right)\\rangle` と観測量としてのハミルトニアン :math:`H`を定義します。そして状態とハミルトニアンを、以下のように期待値を定義するオブジェクトとしてラップします。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:115
#: ../../tutorials/operators/02_gradients_framework.ipynb:1029
msgid "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:193
msgid "We construct a list of the parameters for which we aim to evaluate the gradient. In this case, the parameters are given as the coefficients of :math:`H`. Now, this list and the expectation value operator are used to generate the operator which represents the gradient."
msgstr "勾配を評価するためのパラメーターのリストを作成します。今回は、パラメーターとして :math:`H` の係数が与えられています。このリストと期待値演算子によって、勾配を表す演算子を生成します。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:277
msgid "All that is left to do is to assign values to the pararameters and to evaluate the gradient operators."
msgstr "あとはパラメーターに値を代入して、勾配演算子を評価するだけです。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:319
msgid "Gradients w.r.t. State Parameters"
msgstr "状態パラメーターに関する勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:322
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e.\\"
msgstr "状態 :math:`|\\psi\\left(\\theta\\right)\\rangle` のパラメーターに関する期待値の勾配は以下のようになります。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:324
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:326
msgid "respectively of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e."
msgstr "状態 :math:`|\\psi\\left(\\theta\\right)\\rangle` のパラメーターに関するサンプリング確率は、以下のようになります。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:328
msgid "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:330
msgid "A gradient w.r.t. a state parameter may be evaluated with different methods. Each method has advantages and disadvantages."
msgstr "状態パラメーターに関する勾配は、別の方法でも評価することができます。それぞれの方法には、長所と短所があります。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:400
msgid "Parameter Shift Gradients"
msgstr "パラメーター・シフト勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:402
msgid "Given a Hermitian operator :math:`g` with two unique eigenvalues :math:`\\pm r` which acts as generator for a parameterized quantum gate"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:404
msgid "G(\\theta)= e^{-i\\theta g}.\n\n"
msgstr "G(\\theta)= e^{-i\\theta g}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:406
msgid "Then, quantum gradients can be computed by using eigenvalue :math:`r` dependent shifts to parameters. All `standard, parameterized Qiskit gates <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>`__ can be shifted with :math:`\\pi/2`, i.e.,"
msgstr "そうすると、量子勾配は固有値 :math:`r` に依存するパラメーターへのシフトによって計算することができます。全ての `Qiskit の標準的なパラメータ化ゲート <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>`__ は、以下のように :math:`\\pi/2` でシフトすることができます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:408
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\partial\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\partial\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:410
msgid "Probability gradients are computed equivalently."
msgstr "確率勾配も同様に計算されます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:597
msgid "#### Linear Combination of Unitaries Gradients Unitaries can be written as :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}`, where :math:`M\\left(\\omega\\right)` denotes a parameterized Hermitian matrix. Further, Hermitian matrices can be decomposed into weighted sums of Pauli terms, i.e., :math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` with :math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` and :math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` for :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` acting on the :math:`j^{\\text{th}}` qubit. Thus, the gradients of :math:`U_k\\left(\\omega_k\\right)` are given by :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"
msgstr "#### ユニタリ ー行列の線形結合の勾配 \n"
"ユニタリー行列は :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}` と書くことができます。ここで :math:`M\\left(\\omega\\right)` はパラメータ化されたエルミート行列です。さらにエルミート行列は次のように、 Pauli 行列の重み付き和に分解できます。:math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` ここで、:math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` 、 :math:`j` 番目の量子ビットに作用する :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` に対して、:math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` となっています。そのため、 :math:`U_k\\left(\\omega_k\\right)` の勾配は以下のように与えられます。 :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:602
msgid "Combining this observation with a circuit structure presented in `Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ allows us to compute the gradient with the evaluation of a single quantum circuit."
msgstr "`Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ で提案されている回路構成と観測を組み合わせることで、単一の量子回路の評価で勾配を計算することができます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:743
msgid "#### Finite Difference Gradients"
msgstr "#### 有限差分勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:745
msgid "Unlike the other methods, finite difference gradients are numerical estimations rather than analytical values. This implementation employs a central difference approach with :math:`\\epsilon << 1` $ :nbsphinx-math:`\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}` :nbsphinx-math:`\\approx `:nbsphinx-math:`\\frac{1}{2\\epsilon}` :nbsphinx-math:`\\left`(:nbsphinx-math:`\\langle`:nbsphinx-math:`\\psi`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\theta`+:nbsphinx-math:`\\epsilon`:nbsphinx-math:`\\right`)\\|:nbsphinx-math:`\\hat{O}`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\omega`:nbsphinx-math:`\\right`)\\|:nbsphinx-math:`\\psi`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\theta`+:nbsphinx-math:`\\epsilon`:nbsphinx-math:`\\right`):nbsphinx-math:`\\rangle `- :nbsphinx-math:`\\partial`:nbsphinx-math:`\\langle`:nbsphinx-math:`\\psi`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\theta`-:nbsphinx-math:`\\epsilon`:nbsphinx-math:`\\right`)\\|:nbsphinx-math:`\\hat{O}`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\omega`:nbsphinx-math:`\\right`)\\|:nbsphinx-math:`\\psi`:nbsphinx-math:`\\left`(:nbsphinx-math:`\\theta`-:nbsphinx-math:`\\epsilon`:nbsphinx-math:`\\right`):nbsphinx-math:`\\rangle`:nbsphinx-math:`\\right`).$ Probability gradients are computed equivalently."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:936
msgid "Natural Gradient"
msgstr "自然勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:939
msgid "A special type of first order gradient is the natural gradient which has proven itself useful in classical machine learning and is already being studied in the quantum context. This quantity represents a gradient that is ‘rescaled’ with the inverse `Quantum Fisher Information matrix <#qfi>`__ (QFI)"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:941
msgid "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:952
msgid "Instead of inverting the QFI, one can also use a least-square solver with or without regularization to solve"
msgstr "QFI の逆行列を取る代わりに、以下の問題を正則化の有無にかかわらず最小二乗ソルバーによって解くこともできます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:954
msgid "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:956
msgid "The implementation supports ridge and lasso regularization with automatic search for a good parameter using `L-curve corner search <https://arxiv.org/pdf/1608.04571.pdf>`__ as well as two types of perturbations of the diagonal elements of the QFI."
msgstr "この実装は、 `L-curve corner search <https://arxiv.org/pdf/1608.04571.pdf>`__ を用いたパラメーターの自動探索による L1 正則化と L2 正則化、および QFI の対角要素の二種類の摂動をサポートしています。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:958
msgid "The natural gradient can be used instead of the standard gradient with any gradient-based optimizer and/or ODE solver."
msgstr "自然勾配は、勾配ベースのオプティマイザーや ODE ソルバーで、標準勾配の代わりに用いることができます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1006
msgid "Hessians (Second Order Gradients)"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1009
msgid "Four types of second order gradients are supported by the gradient framework. 1. Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. $ :nbsphinx-math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega^2}` $ 2. Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. $ :nbsphinx-math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}` $ 3. Gradient of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. $ :nbsphinx-math:`\\frac{\\partial^2 p_i}{\\partial\\theta^2}` = :nbsphinx-math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}` $ 4. Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter and a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. $ :nbsphinx-math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta\\partial\\omega}` $"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1013
msgid "In the following examples are given for the first two Hessian types. The remainig Hessians are evaluated analogously."
msgstr "以下の例では、最初の二つのヘシアンについて説明します。残りのヘシアンは類似的に評価されます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1024
msgid "Hessians w.r.t. Measurement Operator Parameters"
msgstr "測定演算子のパラメーターに関する勾配"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1027
msgid "Again, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "ここでも、量子状態 :math:`|\\psi\\left(\\theta\\right)\\rangle` と観測量としてのハミルトニアン :math:`H`を定義します。そして状態とハミルトニアンを、以下のように期待値を定義するオブジェクトとしてラップします。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1066
msgid "Next, we can choose the parameters for which we want to compute second order gradients. - Given a tuple, the ``Hessian`` will evaluate the second order gradient for the two parameters. - Given a list, the ``Hessian`` will evaluate the second order gradient for all possible combinations of tuples of these parameters."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1068
msgid "After binding parameter values to the parameters, the Hessian can be evaluated."
msgstr "パラメーターを固定した後、ヘシアンを評価することができます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1123
msgid "Hessians w.r.t. State Parameters"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1199
msgid "Quantum Fisher Information (QFI)"
msgstr "量子フィッシャー情報量 (QFI)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1202
msgid "The Quantum Fisher Information is a metric tensor which is representative for the representation capacity of a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`."
msgstr "量子フィッシャー情報量は、入力状態 :math:`|\\psi\\rangle` および パラメータ化された仮設 :math:`V\\left(\\theta\\right)` からなる、パラメータ化された量子状態 :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` の表現能力を表す計量テンソルです。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1204
msgid "The entries of the QFI for a pure state reads"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1206
msgid "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"
msgstr "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1218
msgid "Circuit QFIs"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1220
msgid "The evaluation of the QFI corresponding to a quantum state that is generated by a parameterized quantum circuit can be conducted in different ways."
msgstr "パラメーター化された量子回路によって生成される量子状態の QFI の評価は、様々な方法で行うことができます。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1223
msgid "Linear Combination Full QFI"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1225
msgid "To compute the full QFI, we use a working qubit as well as intercepting controlled gates. See e.g. \\ `Variational ansatz-based quantum simulation of imaginary time evolution <https://www.nature.com/articles/s41534-019-0187-2>`__."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1280
msgid "Block-diagonal and Diagonal Approximation"
msgstr "ブロック対角と対角近似"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1282
msgid "A block-diagonal resp. diagonal approximation of the QFI can be computed without additional working qubits. This implementation requires the unrolling into Pauli rotations and unparameterized Gates."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1346
msgid "Application Example: VQE with gradient-based optimization"
msgstr "応用例: 勾配ベース最適化による VQE"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1359
msgid "Additional Imports"
msgstr "追加のインポート"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1386
msgid "The Gradient Framework can also be used for a gradient-based ``VQE``. First, the Hamiltonian and wavefunction ansatz are initialized."
msgstr "Gradient フレームワークは、勾配ベースの ``VQE`` にも利用できます。まず、ハミルトニアンと波動関数の仮設を初期化します。"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1432
msgid "Now, we can choose whether the ``VQE`` should use a ``Gradient`` or ``NaturalGradient``, define a ``QuantumInstance`` to execute the quantum circuits and run the algorithm."
msgstr "これで、 ``VQE`` が ``Gradient`` と ``NaturalGradient`` のどちらを使うかを選択し、量子回路を実行するための ``QuantumInstance`` を定義して、アルゴリズムを実行することができます。"

