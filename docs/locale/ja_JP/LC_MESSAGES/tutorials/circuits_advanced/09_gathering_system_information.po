msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 16:27+0000\n"
"PO-Revision-Date: 2020-12-22 04:56\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/09_gathering_system_information.po\n"
"X-Crowdin-File-ID: 9370\n"
"Language: ja_JP\n"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/09_gathering_system_information.ipynb`__."
msgstr "当ページは `tutorials/circuits_advanced/09_gathering_system_information.ipynb`__ から生成されました。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/circuits_advanced/09_gathering_system_information.ipynb>`_."
msgstr "`IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/circuits_advanced/09_gathering_system_information.ipynb>`_ でインタラクティブに実行します。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:9
msgid "Obtaining information about your ``backend``"
msgstr "``backend`` に関する情報の取得"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:12
msgid "*Note: All the attributes of the backend are described in detail in the*\\ `Qiskit Backend Specifications <https://arxiv.org/pdf/1809.03452.pdf>`__\\ *. This page reviews a subset of the spec.*"
msgstr "*注: バックエンドの全ての属性については、 *\\ `Qiskit バックエンド仕様 <https://arxiv.org/pdf/1809.03452.pdf>`__\\ * に詳しく記述されています。 このページでは、仕様のサブセットについて見直します。*"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:14
msgid "Programming a quantum computer at the microwave pulse level requires more information about the device than is required at the circuit level. A quantum circuit is built for an abstract quantum computer – it will yield the same quantum state on any quantum computer (except for varying performance levels). A pulse schedule, on the other hand, is so specific to the device, that running one program on two different backends is not expected to have the same result, even on perfectly noiseless systems."
msgstr "マイクロ波パルスレベルで量子コンピューターをプログラミングするには、回路レベルでプログラミングするよりもデバイスに関する詳細な情報が必要です。 量子回路は、抽象的な量子コンピューターのために構築されます – つまり、量子回路は、あらゆる量子コンピューター上で同じ状態を生成します(性能レベルが異なる場合を除いて)。 一方、パルススケジュールはデバイスに固有のものです。 2つの異なるバックエンドで1つのプログラムを実行して同じ結果を得ることは期待されていません。完全にノイズのないシステムだとしてもです。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:17
msgid "As a basic example, imagine a drive pulse ``q0_X180`` calibrated on qubit 0 to enact an :math:`X180` pulse, which flips the state of qubit 0. If we use the samples from that pulse on qubit 1 on the same device, or qubit 0 on another device, we do not know what the resulting state will be – but we can be pretty sure it won’t be an :math:`X180` operation. The qubits are each unique, with various drive coupling strengths. If we have specified a frequency for the drive pulse, it’s very probable that pulse would have little effect on another qubit, which has its own resonant frequency."
msgstr "基本的な例として、ドライブ・パルスの ``q0_X180`` を量子ビット0で較正し、量子ビット0の状態を反転させる :math:`X180` パルスを実行することを想像してください。同じデバイス上の量子ビット1、または別のでデバイス上の量子ビット0のパルスのサンプルを使用すると、結果の状態は分かりませんが、 :math:`X180` 演算子にはならないことが確信できます。各量子ビットはそれぞれ固有であり、さまざまなドライブカップリング強度があります。ドライブ・パルスの周波数を指定した場合、そのパルスは独自の共振周波数を持つ他の量子ビットにほとんど影響しない可能性があります。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:20
msgid "With that, we have motivated why information from the backend may be very useful at times for building Pulse schedules. The information included in a ``backend`` is broken into three main parts:"
msgstr "これにより、バックエンドからの情報がPulseスケジュールの作成に非常に役立つ理由がわかりました。 ``backend`` に含まれる情報は 3 つの主要部分に分かれています。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:22
msgid "`Configuration <#Configuration>`__: static backend features"
msgstr "`構成 <#Configuration>`__: 静的なバックエンドの特徴"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:23
msgid "`Properties <#Properties>`__: measured and reported backend characteristics"
msgstr "`プロパティー <#Properties>`__: 測定されレポートされたバックエンドの特性"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:24
msgid "`Defaults <#Defaults>`__: default settings for the OpenPulse-enabled backend"
msgstr "*デフォルト <#Defaults>`__: OpenPulse対応バックエンドのデフォルト設定"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:26
msgid "which are each covered in the following sections. While all three of these contain interesting data for Pulse users, the defaults are *only* provided for backends enabled with OpenPulse."
msgstr "それぞれが次のセクションで説明されています。これら3つすべてがPulseユーザーにとって興味深いデータを含んでいますが、デフォルトはOpenPulseが有効になっているバックエンドに*のみ*提供されてます。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:28
msgid "The first thing you’ll need to do is grab a backend to inspect. Here we use a mocked backend that contains a snapshot of data from the real OpenPulse-enabled backend."
msgstr "最初にする必要があるのは、バックエンドを調べることです。 ここでは、実際のOpenPulse対応バックエンドからのデータのスナップショットを含むモックのバックエンドを使用します。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:52
msgid "Configuration"
msgstr "構成"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:54
msgid "The configuration is where you’ll find data about the static setup of the device, such as its name, version, the number of qubits, and the types of features it supports."
msgstr "構成では、デバイスの静的設定に関するデータを確認できます。 名前、バージョン、量子ビットの数、サポートされている機能の種類など。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:56
msgid "Let’s build a description of our backend using information from the ``backend``\\ ’s config."
msgstr "``backend`` の構成からの情報を使ってバックエンドの説明を作りましょう。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:106
msgid "Neat! All of the above configuration is available for any backend, whether enabled with OpenPulse or not, although it is not an exhaustive list. There are additional attributes available on Pulse backends. Let’s go into a bit more detail with those."
msgstr "素晴らしいです。 OpenPulseが有効であるかどうかに関わらず、上記のすべての構成は任意のバックエンドで利用できますが、包括的なリストではありません。 Pulseバックエンドには追加の属性があります。もう少し詳しく見てみましょう。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:108
msgid "The **timescale**, ``dt``, is backend dependent. Think of this as the inverse sampling rate of the control rack’s arbitrary waveform generators. Each sample point and duration in a Pulse ``Schedule`` is given in units of this timescale."
msgstr "**時間単位**, ``dt``はバックエンドに依存しています。これは、制御ラックの任意の波形ジェネレータの逆サンプリングレートだと考えてください。 Pulse の ``Schedule`` の各サンプルポイントと期間は、この時間単位で与えられます。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:149
msgid "The configuration also provides information that is useful for building measurements. Pulse supports three measurement levels: ``0: RAW``, ``1: KERNELED``, and ``2: DISCRIMINATED``. The ``meas_levels`` attribute tells us which of those are supported by this backend. To learn how to execute programs with these different levels, see this page – COMING SOON."
msgstr "構成は、測定の構築に有用な情報も提供します。Pulseは3つの測定レベルに対応しています: ``0: RAW``, ``1: KERNELED``, および ``2: DISCRIMINATED``です。 ``meas_levels`` 属性は、このバックエンドでサポートされているものを示します。 これらの異なるレベルでプログラムを実行する方法については、こちらのページを参照してください – 近日公開予定です。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:190
msgid "For backends which support measurement level 0, the sampling rate of the control rack’s analog-to-digital converters (ADCs) also becomes relevant. The configuration also has this info, where ``dtm`` is the time per sample returned:"
msgstr "測定レベル0をサポートするバックエンドでは、制御ラックのアナログ-デジタルコンバータ (analog-to-digital converters、ADC) のサンプリングレートも関連性があります。 構成にはこの情報も含まれており、``dtm`` はサンプルごとに返される時間です。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:231
msgid "The measurement map, explained in detail on [this page COMING SOON], is also found here."
msgstr "このページ（準備中）で詳しく説明されている測定マップはここでも見られます。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:272
msgid "The configuration also supplies convenient methods for getting channels for your schedule programs. For instance:"
msgstr "構成では、スケジュールプログラムのチャンネルを取得するための便利なメソッドも提供します。例えば:"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:373
msgid "It is a matter of style and personal preference whether you use ``config.drive(0)`` or ``DriveChannel(0)``."
msgstr "``config.drive(0)`` または ``DriveChannel(0)`` を使用するかどうかはスタイルと個人の好みの問題です。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:376
msgid "Properties"
msgstr "プロパティー"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:378
msgid "The ``backend`` properties contain data that was measured and optionally reported by the provider. Let’s see what kind of information is reported for qubit 0."
msgstr "``backend`` プロパティーには、プロバイダーによって測定され、オプションで報告されたデータが含まれています。量子ビット0でどのような情報が報告されているか見てみましょう。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:459
msgid "Properties are not guaranteed to be reported, but backends without Pulse access typically also provide this data."
msgstr "プロパティーは報告される保証はありませんが、Pulseアクセスのないバックエンドは通常、このデータを提供します。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:462
msgid "Defaults"
msgstr "デフォルト"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:464
msgid "Unlike the other two sections, ``PulseDefaults`` are only available for Pulse-enabled backends. It contains the default program settings run on the device."
msgstr "他の 2 つのセクションとは異なり、``PulseDefaults`` は Pulse-enabled バックエンドでのみ使用できます。デバイス上で実行されるデフォルトのプログラム設定が含まれています。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:486
msgid "Drive frequencies"
msgstr "ドライブ周波数"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:488
msgid "Defaults contains the default frequency settings for the drive and measurement signal channels:"
msgstr "デフォルトには、ドライブと測定信号チャネルのデフォルト周波数設定が含まれています。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:536
msgid "Pulse Schedule definitions for QuantumCircuit instructions"
msgstr "QuantumCircuit 命令のパルス・スケジュールの定義"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:538
msgid "Finally, one of the most important aspects of the ``backend`` for ``Schedule`` building is the ``InstructionScheduleMap``. This is a basic mapping from a circuit operation’s name and qubit to the default pulse-level implementation of that instruction."
msgstr "最後に、``Schedule`` をビルドするための ``backend`` の最も重要な側面の 1 つである ``InstructionScheduleMap`` です。 これは回路動作名と量子ビットから、その命令のデフォルトのパルスレベル実装までの基本のマッピングです。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:717
msgid "Rather than build a measurement schedule from scratch, let’s see what was calibrated by the backend to measure the qubits on this device:"
msgstr "測定スケジュールを最初から作成するのではなく、バックエンドがこのデバイス上の量子ビットを測定するために何を較正したかを確認します。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:748
msgid "This can easily be appended to your own Pulse ``Schedule`` (``sched += calibrations.get('measure', <qubits>) << sched.duration``)!"
msgstr "これは Pulse の ``Schedule`` (``sched += calibrations.get('measure', <qubits>) << sched.duration`` ) に簡単に追加できます!"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:750
msgid "Likewise, each qubit will have a ``Schedule`` defined for each basis gate, and they can be appended directly to any ``Schedule`` you build."
msgstr "同様に、各量子ビットは基本ゲートごとに定義された ``Schedule`` を持ち、作成した ``Schedule`` に直接追加することができます。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:823
msgid "While building your schedule, you can also use ``calibrations.add(name, qubits, schedule)`` to store useful ``Schedule``\\ s that you’ve made yourself."
msgstr "スケジュールを作成する際には、 ``calibrations.add(name, qubits, schedule)`` を使って、自分で作成した便利な ``Schedule`` を保存することもできます。"

#: ../../tutorials/circuits_advanced/09_gathering_system_information.ipynb:825
msgid "On the `next page <6_pulse_scheduler.ipynb>`__, we’ll show how to schedule ``QuantumCircuit``\\ s into Pulse ``Schedule``\\ s."
msgstr "`次のページ <6_pulse_scheduler.ipynb>`__ では、Pulse ``Schedule``\\ に ``QuantumCircuit`` をどのようにスケジュールするかを紹介します。"

