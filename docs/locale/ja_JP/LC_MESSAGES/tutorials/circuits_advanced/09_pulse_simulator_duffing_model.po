msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-08-30 06:26\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/09_pulse_simulator_duffing_model.po\n"
"X-Crowdin-File-ID: 9482\n"
"Language: ja_JP\n"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb`__."
msgstr "当ページは `tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb`__ から生成されました。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:9
msgid "Qiskit Aer: Pulse simulation of two qubits using a Duffing oscillator model"
msgstr "Qiskit Aer: ダフィング振動子モデルを用いた2量子ビットのパルス・シミュレーション"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:11
msgid "This notebook shows how to use the Qiskit Aer pulse simulator, which simulates experiments specified as pulse ``Schedule`` objects at the Hamiltonian level. The simulator solves the Schrodinger equation for a specified Hamiltonian model and pulse ``Schedule`` in the frame of the drift Hamiltonian."
msgstr "このノートブックでは、Qiskit Aerのパルス・シミュレーターを使用する方法を解説します。これは、パルス``Schedule``オブジェクトとして与えられた、ハミルトニアン・レベルでの実験をシミュレートするものです。このシミュレーターはドリフト・ハミルトニアンの枠組みの中で、与えられたハミルトニアン・モデルとパルス``Schedule``に対するシュレディンガー方程式の解を求めます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:13
msgid "In particular, in this tutorial we will:"
msgstr "特に、このチュートリアルでは以下を行います:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:15
msgid "Construct a model of a two qubit superconducting system."
msgstr "2量子ビット超電動システムのモデルの構築"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:16
msgid "Calibrate :math:`\\pi` pulses on each qubit in the simulated system."
msgstr "シミュレーション・システムによる各量子ビットの :math:`\\pi` パルスによる較正"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:17
msgid "Observe cross-resonance oscillations when driving qubit 1 with target qubit 0."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:19
msgid "The Introduction outlines the concepts and flow of this notebook."
msgstr "「はじめに」では、このノートブックの概念と流れを概説します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:31
msgid "1. Introduction"
msgstr "1. はじめに"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:33
msgid "The main sections proceed as follows."
msgstr "主なセクションは以下の通りです。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:36
msgid "Section 3: Duffing oscillator model"
msgstr "セクション3: ダフィング振動子モデル"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:38
msgid "To simulate a physical system, it is necessary to specify a model. In this notebook, we will model superconducting qubits as a collection of *Duffing oscillators*. The model is specified in terms of the following parameters:"
msgstr "物理系をシミュレーションするためには、モデルを指定する必要があります。このノートブックでは、超伝導量子ビットを *ダフィング振動子* の集合としてモデリングします。このモデルは以下のパラメータによって指定されます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:40
msgid "Each Duffing oscillator is specified by a frequency :math:`\\nu`, anharmonicity :math:`\\alpha`, and drive strength :math:`r`, which result in the Hamiltonian terms:"
msgstr "各ダフィング振動子は、周波数 :math:`\\nu` 、非調和定数 :math:`\\alpha` 、ドライブ強度 :math:`r` によって指定されます。これによりハミルトニアンの各項は以下のようになります。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:42
msgid "\\begin{equation}\n"
"    2\\pi\\nu a^\\dagger a + \\pi \\alpha a^\\dagger a(a^\\dagger a - 1) + 2 \\pi r (a + a^\\dagger) \\times D(t),\n"
"\\end{equation}"
msgstr "\\begin{equation}\n"
"    2\\pi\\nu a^\\dagger a + \\pi \\alpha a^\\dagger a(a^\\dagger a - 1) + 2 \\pi r (a + a^\\dagger) \\times D(t),\n"
"\\end{equation}"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:48
msgid "where :math:`D(t)` is the signal on the drive channel for the qubit, and :math:`a^\\dagger` and :math:`a` are, respectively, the creation and annihilation operators for the qubit. Note that the drive strength :math:`r` sets the scaling of the control term, with :math:`D(t)` assumed to be a complex and unitless number satisfying :math:`|D(t)| \\leq 1`."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:50
msgid "A coupling between a pair of oscillators :math:`(l,k)` is specified by the coupling strength :math:`J`, resulting in an exchange coupling term:"
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:52
msgid "\\begin{equation}\n"
"    2 \\pi J (a_l a_k^\\dagger + a_l^\\dagger a_k),\n"
"\\end{equation}"
msgstr "\\begin{equation}\n"
"    2 \\pi J (a_l a_k^\\dagger + a_l^\\dagger a_k),\n"
"\\end{equation}"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:58
msgid "where the subscript denotes which qubit the operators act on."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:60
msgid "Additionally, for numerical simulation, it is necessary to specify a cutoff dimension; the Duffing oscillator model is *infinite dimensional*, and computer simulation requires restriction of the operators to a finite dimensional subspace."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:62
msgid "**In the code:** We will define a model of the above form for two coupled qubits using the helper function ``duffing_system_model``."
msgstr "**コード:** 補助関数 ``duffing_system_model``を用いて、結合された2量子ビットの上記の形式におけるモデルを定義します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:65
msgid "Section 4: :math:`\\pi`-pulse calibration using Ignis"
msgstr "セクション4: Ignisによる:math:`\\pi`-パルス較正"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:67
msgid "Once the model is defined, we will calibrate :math:`\\pi`-pulses on each qubit. A :math:`\\pi`-pulse is defined as a pulse on the drive channel of a qubit that “flips” the qubit; i.e. that takes the ground state to the first excited state, and the first excited state to the ground state."
msgstr "モデルを定義した後、 :math:`pi` -パルスを量子ビットごとに較正します。 :math:`\\pi` -パルスは量子ビットのドライブ・チャネル上のパルスであり、量子ビットを「反転」させるものとして定義されます。これは例えば、基底状態を第一励起状態に反転させ、第一励起状態を基底状態に反転させます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:69
msgid "We will experimentally find a :math:`\\pi`-pulse for each qubit using the following procedure:"
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:71
msgid "A fixed pulse shape is set - in this case it will be a Gaussian pulse."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:72
msgid "A sequence of experiments is run, each consisting of a Gaussian pulse on the qubit, followed by a measurement, with each experiment in the sequence having a subsequently larger amplitude for the Gaussian pulse."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:73
msgid "The measurement data is fit, and the pulse amplitude that completely flips the qubit is found (i.e. the :math:`\\pi`-pulse amplitude)."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:75
msgid "**In the code:** Using Ignis we will construct ``Schedule`` objects for the above experiments, then fit the data to find the :math:`\\pi`-pulse amplitudes."
msgstr "**コード:** Ignisを用いて、上記の実験に対応する``Schedule``オブジェクトを作成し、データをフィッティングして、 :math:`\\pi` -パルスの振幅を決定します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:78
msgid "Section 5: Cross-resonance oscillations"
msgstr "セクション5: 相互共鳴振動"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:80
msgid "Once the :math:`\\pi`-pulses are calibrated, we will simulate the effects of cross-resonance driving on qubit :math:`1` with target qubit :math:`0`. This means that we will drive qubit :math:`1` at the frequency of qubit :math:`0`, with the goal of observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`. This phenomenon provides a basis for creating two-qubit *controlled* gates. Note: This section requires the calibration of the :math:`\\pi`-pulse in Section 4."
msgstr ":math:`\\pi` -パルスの較正後、ターゲット量子ビット :math: `0` が量子ビット :math:`1` に与える相互共鳴ドライブの影響をシミュレートします。これは、量子ビット :math:`0` の位相空間上の軌跡や振動が量子ビット :math:`1` の状態に *依存する* という事実の観測を目標として、量子ビット :math: `0` の周波数により量子ビット :math:`1` をドライブすることを意味します。この現象は、2量子ビット *制御* ゲートを作成する上での基礎となります。注記: このセクションでは、セクション4の :math:`\\pi` -パルス較正が完了している必要があります。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:83
msgid "To observe cross-resonance driving, we will use experiments very similar to the :math:`\\pi`-pulse calibration case:"
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:85
msgid "Initially, qubit :math:`1` is either left in the ground state, or is driven to its first excited state using the :math:`\\pi`-pulse found in Section 4."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:86
msgid "A sequence of experiments is run, each consisting of a Gaussian pulse on qubit :math:`1` driven at the frequency of qubit :math:`0`, followed by a measurement of both qubits, with each experiment of the sequence having a subsequently larger amplitude for the Gaussian pulse."
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:88
msgid "**In the code:** Functions for defining the experiments and visualizing the data are constructed, including a visualization of the trajectory of the target qubit on the Bloch sphere."
msgstr "**コード: ** ターゲット量子ビットのブロッホ球上の軌跡の可視化を含め、実験を定義しデータを可視化するための関数が作成されています。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:100
msgid "2. Imports"
msgstr "2. インポート"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:102
msgid "This notebook makes use of the following imports."
msgstr "このノートブックでは、以下のライブラリを利用します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:128
msgid "Import qiskit libraries for working with ``pulse`` and calibration:"
msgstr "``pulse`` を用い、較正を行うための、qiskitライブラリをインポートします:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:153
msgid "Imports for qiskit pulse simulator:"
msgstr "Qiskitパルス・シミュレーターのインポート:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:179
msgid "3. Duffing oscillator system model"
msgstr "3. ダフィング振動子系モデル"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:181
msgid "An object representing a model for a collection of Duffing oscillators can be constructed using the ``duffing_system_model`` function. Here we construct a :math:`2` Duffing oscillator model with cutoff dimension :math:`3`."
msgstr "ダフィング振動子の集合のモデルを表すオブジェクトは、 ``duffing_system_model`` 関数を用いて作成することができます。ここでは、カットオフ次元 :math:`3` における、 :math:`2` ダフィング振動子モデルを作成しています。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:225
msgid "The function ``duffing_system_model`` returns a ``PulseSystemModel`` object, which is a general object for storing model information required for simulation with the ``PulseSimulator``."
msgstr "``duffing_system_model`` 関数は、 ``PulseSystemModel``オブジェクトを戻り値とします。これは、 ``PulseSimulator`` によるシミュレーションに必要なモデルの情報を格納するための汎用オブジェクトです。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:237
msgid "4 Calibrating :math:`\\pi` pulses on each qubit using Ignis"
msgstr "4. Ignisを用いた各量子ビット上の :math:`\\pi` パルス較正"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:239
msgid "As described in the introduction, we now calibrate :math:`\\pi` pulses on each qubit in ``two_qubit_model``. The experiments in this calibration procedure are known as *Rabi experiments*, and the data we will observe are known as *Rabi oscillations*."
msgstr "「はじめに」で説明したように、各量子ビットの :math:`\\pi` パルスを ``two_qubit_model`` で較正します。この較正法は *ラビ実験* として、観測データは *ラビ振動* としてそれぞれ知られています。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:251
msgid "4.1 Constructing the schedules"
msgstr "4.1 スケジュールの作成"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:253
msgid "We construct the schedules using the ``rabi_schedules`` function in Ignis. To do this, we need to supply an ``InstructionScheduleMap`` containing a measurement schedule."
msgstr "スケジュールをIgnisの ``rabi_schedules`` 関数で作成します。そのために、測定スケジュールを含む ``InstructionScheduleMap`` を与える必要があります。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:291
msgid "Next, construct the Rabi schedules."
msgstr "次に、ラビのスケジュールを作成します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:325
msgid "The ``Schedule``\\ s in ``rabi_schedules`` correspond to experiments to generate Rabi oscillations on both qubits in parallel. Each experiment consists of a Gaussian pulse on the qubits of a given magnitude, followed by measurement."
msgstr "``rabi_schedules`` の ``Schedule`` は、二つの量子ビットで並列してラビ振動を生成する実験に対応します。それぞれの実験は、量子ビットに対する与えられた振幅のガウスパルスと、それに続く測定から構成されます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:327
msgid "For example:"
msgstr "例:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:358
msgid "4.2 Simulate the Rabi experiments"
msgstr "4.2 ラビ実験のシミュレーション"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:360
msgid "To simulate the Rabi experiments, assemble the ``Schedule`` list into a qobj. When assembling, pass the ``PulseSimulator`` as the backend."
msgstr "ラビ実験をシミュレートするために、 ``Schedule`` のリストをqobjとしてアセンブルします。アセンブル時には、バックエンドとして ``PulseSimulator`` を渡します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:362
msgid "Here, we want to use local oscillators with frequencies automatically computed from Duffing model Hamiltonian."
msgstr "ここでは、ダフィング・モデルのハミルトニアンから自動的に算出される周波数をもった、局所的な振動子を用います。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:394
msgid "Run the simulation using the simulator backend."
msgstr "シミュレーター・バックエンドを使用して、シミュレーションを実行します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:417
msgid "4.3 Fit and plot the data"
msgstr "4.3 データのフィットとプロット"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:419
msgid "Next, we use ``RabiFitter`` in Ignis to fit the data, extract the :math:`\\pi`-pulse amplitude, and then plot the data."
msgstr "次に、Ignisの ``RabiFitter`` を用いてデータをフィッティングして、:math:`\\pi` -パルスの振幅を取得し、データをプロットします。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:478
msgid "Plotted is the averaged IQ data for observing each qubit. Observe that here, each qubit oscillates between the 0 and 1 state. The amplitude at which a given qubit reaches the peak of the oscillation is the desired :math:`\\pi`-pulse amplitude."
msgstr "プロットされているのは、各量子ビットを観測して得られる平均IQデータです。ここで、それぞれの量子ビットが基底状態と第一励起状態の間を振動する様子を観察できます。与えられた量子ビットが振動のピークに達する時の振幅は、期待された :math:`\\pi` -パルス振幅となっています。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:490
msgid "5. Oscillations from cross-resonance drive"
msgstr "5. 交差共鳴ドライブによる振動"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:492
msgid "Next, we simulate the effects of a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`."
msgstr "次に、ターゲット量子ビット :math:`0` が量子ビット :math:`1` に与える交差共鳴ドライブの影響をシミュレートし、量子ビット :math:`0` のブロッホ球上の軌跡や振動が量子ビット :math:`1` の状態に *依存する* ことを観測します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:494
msgid "**Note:** This section depends on the :math:`\\pi`-pulse calibrations of Section 2."
msgstr "**注記:** このセクションは、セクション2の :math:`\\pi` -パルス較正に依存します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:506
msgid "5.1 Cross-resonance ``ControlChannel`` indices"
msgstr "5.1 交差共鳴の ``ControlChannel`` インデックス"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:508
msgid "Driving qubit :math:`1` at the frequency of qubit :math:`0` requires use of a pulse ``ControlChannel``. The model generating function ``duffing_system_model``, automatically sets up ``ControlChannels`` for performing cross-resonance drives between pairs of coupled qubits. The index of the ``ControlChannel`` for performing a particular cross-resonance drive is retrievable using the class method ``control_channel_index`` on the returned ``PulseSystemModel``. For example, to get the ``ControlChannel`` index corresponding to a CR drive on qubit 1 with target 0, call the function ``control_channel_index`` with the tuple ``(1,0)``:"
msgstr "量子ビット :math:`0` の周波数によって量子ビット :math:`1` をドライブするには、パルスの ``ControlChannel`` を用いる必要があります。モデルを生成する関数である ``duffling_system_model`` は、結合された量子ビット対の間に交差共鳴ドライブを生じさせるため、自動的に ``ControlChannels`` を設定します。特定の交差共鳴ドライブを発生させるための ``ControlChannel`` のインデックスは、戻り値である ``PulseSystemModel`` の ``control_channel_index``クラス・メソッド を用いて取得できます。 例えば、ターゲット量子ビット :math:`0` による量子ビット :math:`1`の交差共鳴ドライブに対応した ``ControlChannel`` のインデックスを取得するためには、タプル ``(1, 0)`` で ``control_channel_index`` 関数を呼び出します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:550
msgid "Hence, to perform a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, use ``ControlChannel(1)``. This will be made use of when constructing ``Schedule`` objects in this section."
msgstr "したがって、ターゲット量子ビット :math:`0` による量子ビット :math:`1` の交差共鳴ドライブを実行するには、 ``ControlChannel(1)`` を使用します。これは、このセクションで ``Schedule`` オブジェクトを作成するときに使用されます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:562
msgid "5.2 Functions to generate the experiment list, and analyze the output"
msgstr "5.2 実験リストを作成して、出力を分析する関数"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:564
msgid "First, we define a function ``cr_drive_experiments``, which, given the drive and target indices, and the option to either start with the drive qubit in the ground or excited state, returns a list of experiments for observing the oscillations."
msgstr "はじめに、与えられたドライブおよびターゲットのインデックスと、ドライブされる量子ビットの初期状態を基底状態とするか励起状態とするかのオプションから、振動を観測するための実験リストを返す ``cr_drive_experiments`` 関数を定義します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:658
msgid "Next we create two functions for observing the data:"
msgstr "次に、データを観測する2つの関数を作成します。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:660
msgid "``plot_cr_pop_data`` - for plotting the oscillations between the ground state and the first excited state"
msgstr "``plot_cr_pop_data`` - 基底状態と第1励起状態の間の振動をプロットします"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:661
msgid "``plot_bloch_sphere`` - for viewing the trajectory of the target qubit on the bloch sphere"
msgstr "``plot_bloch_sphere`` - ブロッホ球上のターゲット量子ビットの軌跡を表示します"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:769
msgid "5.3 Drive qubit 1 to observe CR oscillations on qubit 0"
msgstr "5.3 量子ビット0上の交差共鳴振動を観測するための量子ビット1のドライブ"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:772
msgid "Qubit 1 in the ground state"
msgstr "量子ビット1が基底状態にある場合"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:774
msgid "First, we drive with both qubit 0 and qubit 1 in the ground state."
msgstr "まず、量子ビット0と量子ビット1の両方を基底状態としてドライブします。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:810
msgid "Run the simulation:"
msgstr "シミュレーションを実行します:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:841
msgid "Observe that qubit 1 remains in the ground state, while excitations are driven in qubit 0."
msgstr "量子ビット0は励起されている一方で、量子ビット1は基底状態に留まっていることが観測されます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:843
msgid "We may also observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "また、量子ビット0のブロッホ球上の軌跡を観測することもできます:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:874
msgid "Qubit 1 in the first excited state"
msgstr "量子ビット1が第一励起状態にある場合"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:876
msgid "Next, we again perform a CR drive qubit 1 with qubit 0 as the target, but now we start each experiment by flipping qubit 1 into the first excited state."
msgstr "次に、量子ビット0をターゲットとして、量子ビット1の交差共振ドライブを再び実行しますが、今回は量子ビット1を第一励起状態に反転させた上で各実験を始めます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:932
msgid "Observe that now qubit 1 is in the excited state, while oscillations are again being driven on qubit 0, now at a different rate as before."
msgstr "今回は、量子ビット0が前回とは異なる速度で再び振動する一方で、量子ビット1は励起状態にあることが観測されます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:934
msgid "Again, observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "この場合でも、量子ビット0のブロッホ球上の軌跡を観測することができます。"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:964
msgid "Here we see that qubit 0 takes a *different* trajectory on the Bloch sphere when qubit 1 is in the excited state. This is what enables controlled operations between two qubits."
msgstr "ここで、量子ビット1が励起状態にあるときには、量子ビット0がブロッホ球上で *異なる* 軌跡をとることがわかります。これにより2量子ビット間での制御操作が可能となります。"

