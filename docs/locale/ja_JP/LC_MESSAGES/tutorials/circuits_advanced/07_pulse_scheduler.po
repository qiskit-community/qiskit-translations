msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:10\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/07_pulse_scheduler.po\n"
"X-Crowdin-File-ID: 9478\n"
"Language: ja_JP\n"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/07_pulse_scheduler.ipynb`__."
msgstr "当ページは `tutorials/circuits_advanced/07_pulse_scheduler.ipynb`__ から生成されました。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:9
msgid "Using the Scheduler"
msgstr "スケジューラーの使用"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:11
msgid "The scheduler will translate a ``QuantumCircuit`` into a Pulse ``Schedule``, using gate and measurement *calibrations*: an optimized pulse-level description of an operation on particular qubits."
msgstr "スケジューラーは、ゲートと測定 *較正* を使用して、``QuantumCircuit`` を パルス ``Schedule`` に変換します。これは特定の量子ビットに関する操作の最適化されたパルスレベルの記述です。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:13
msgid "Backends that are OpenPulse enabled will typically have calibrations defined for measurements and for each of its basis gates. Calibrations can also be defined or updated by the user."
msgstr "OpenPulse対応のバックエンドは、通常、測定用および各基底ゲート用に定義された較正を行います。 較正は、ユーザーによって定義または更新することもできます。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:16
msgid "Basic usage"
msgstr "基本的な使い方"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:18
msgid "To start, build a quantum circuit as you would normally. For our example below, we create a simple Bell state."
msgstr "まず、普通に量子回路を構築します。以下の例では、シンプルな Bell 状態を作成します。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:55
msgid "We’ll use the mocked backend, ``FakeHanoi``, to demonstrate how to use the scheduler. It contains default calibrations for measurement and for its basis gates. The Hadamard operation is not one of those basis gates, so we use the transpiler to compile our input circuit to an equivalent circuit in terms of the basis gates of the device."
msgstr "スケジューラーの使い方を示すために、モックのバックエンドの ``FakeHanoi`` を使います。測定用と基本のゲート用のデフォルトの較正が含まれています。 アダマール演算は、それらの基底ゲート操作ではないので、トランスパイラーを使って、入力回路をデバイスの基底ゲートを使った等価回路にコンパイルします。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:82
msgid "Let’s see how our schedule ``schedule`` built from the circuit ``transpiled_circ`` looks."
msgstr "回路 ``transpiled_circ`` から構築されたスケジュール ``schedule`` がどのように見えるか見てみましょう。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:112
msgid "That covers the basics! We used the transpiler to rewrite the circuit in terms of the basis gates, and then used the backend’s default calibrations to schedule the transpiled circuit. Next we will go through scheduling with calibrations we will build ourselves."
msgstr "これは基本がカバーされています! 基底ゲートを使って回路を書き換えるためにトランスパイラーを使いました。そして、バックエンドのデフォルト較正を使ってトランスパイラー回路をスケジュールしました。次に、私たち自身が構築する較正でスケジュールしましょう。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:115
msgid "Scheduling with custom gate definitions"
msgstr "カスタム・ゲート定義によるスケジューリング"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:117
msgid "If your input circuit has calibrations defined, it will use those calibrations when scheduling your circuit."
msgstr "入力回路に較正が定義されている場合は、回路をスケジュールするときにこれらの較正を使用します。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:156
msgid "Notice that the initial pulse on ``D0``, the Hadamard gate, is now implemented with our custom pulse."
msgstr "``D0`` 上の最初のパルスである、アダマールゲートがカスタムパルスで実装されていることに注意してください。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:159
msgid "Scheduler methods"
msgstr "スケジューラーのメソッド"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:161
msgid "The scheduler can follow multiple routines. By default, it follows an *as late as possible* (ALAP) rule. Another scheduling method is *as soon as possible*, (ASAP). For both methods, the output schedule is minimal: in the longest-duration operation path of the input circuit, the start time of each operation is the end time of the proceeding operation. The methods determine how to schedule operations outside that longest path."
msgstr "スケジューラーは複数のルーチンに従うことができます。デフォルトでは、*可能な限り遅く*  (ALAP) ルールに従います。 別のスケジューリング方法は *できるだけ早く*  (ASAP) です。 両方の方法で、出力スケジュールは最小です: 入力回路の最長期間の動作経路内で、各操作の開始時刻は進行中の操作の終了時刻です。 メソッドは、その最も長いパスの外で操作をスケジュールする方法を決定します。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:163
msgid "This is made clear through an example:"
msgstr "これは、以下の例によって明確になります:"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:199
msgid "For our mocked backend, these :math:`X` gate operations are each the same duration (``duration = 160 dt``). For the schedule to be minimal, the two :math:`X` operations on qubit 0 will be scheduled back-to-back, and the measurement pulse will immediately follow the second of those pulses."
msgstr "モックバックエンドでは、これらの :math:`X` ゲート操作はそれぞれ同じ継続時間(``duration = 160 dt``)です。 スケジュールを最小限にするために、量子ビット 0 の 2 つの :math:`X` 操作が繰り返しスケジュールされます。 測定パルスは2個目のパルスのすぐ後ろに追随します"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:201
msgid "ALAP will choose the latest valid time to schedule lesser-constrained operations, so the :math:`X` gate on qubit 1 will play in sync with the second :math:`X` gate on qubit 0."
msgstr "ALAP はより制限が少ない操作をスケジュールする最新の有効時間を選択するため、量子ビット1の :math:`X` ゲートは、量子ビット0の2番目の :math:`X` ゲートと同期して実行されます"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:232
msgid "On the other hand, as the name suggests, ASAP will schedule operations as soon as its resources are free. Thus, the :math:`X` gate on qubit 1 will be scheduled at ``time=0``, in sync with the first :math:`X` gate on qubit 0."
msgstr "一方、名前が示すように、ASAPはリソースが解放されるとすぐに操作をスケジュールします。 したがって、量子ビット1 の :math:`X` ゲートは ``time=0`` にスケジュールされます。 量子ビット0の最初の :math:`X` ゲートと同期しています。"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:263
msgid "ALAP is the default because it allows qubits to remain idle as long as possible. In this case, the difference between ALAP and ASAP may be negligible, but in ALAP, qubit 0 has *no* time to decay from the excited state before measurement."
msgstr "ALAP は、量子ビットを可能な限りアイドル状態のままにできるため、デフォルトです。 この例の場合、ALAP と ASAP の違いは無視できますが、ALAP では、 量子ビット0は、測定前に励起状態から崩壊する時間が *ありません* 。"

