msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-03-13 00:27\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9358\n"
"Language: ja_JP\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:10
msgid "This page was generated from `tutorials/finance/09_credit_risk_analysis.ipynb`__."
msgstr "当ページは `tutorials/finance/09_credit_risk_analysis.ipynb`__. から生成されました。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_."
msgstr "`IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_ でインタラクティブに実行します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:9
msgid "*Credit Risk Analysis*"
msgstr "*信用リスク分析*"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers: - Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. [Woerner2019] - Credit Risk Analysis using Quantum Computers. Egger et al. (2019) [Egger2019]"
msgstr "このチュートリアルは、どのように量子アルゴリズムが信用リスク分析に使えるかを示します。より正確には、どのように量子振幅推定(QAE) が古典的なモンテカルロシミュレーションに比べて二次のスピードアップでリスク推定ができるかです。このチュートリアルは次の論文に基づいています: - Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. [Woerner2019] - Credit Risk Analysis using Quantum Computers. Egger et al. (2019) [Egger2019]"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:25
msgid "A general introduction to QAE can be found in the following paper and tutorial: - Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. - Qiskit Tutorial on Quantum Amplitude Estimation"
msgstr "QAE の一般的な紹介は、次の論文とチュートリアルにあります: - Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. - Qiskit Tutorial on Quantum Amplitude Estimation"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:27
msgid "The structure of the tutorial is as follows: 1. `Problem Definition <#Problem-Definition>`__ 2. `Uncertainty Model <#Uncertainty-Model>`__ 3. `Expected Loss <#Expected-Loss>`__ 4. `Cumulative Distribution Function <#Cumulative-Distribution-Function>`__ 5. `Value at Risk <#Value-at-Risk>`__ 6. `Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr "このチュートリアルの構造は、次のとおりです。1. `問題定義 <#Problem-Definition>`__ 2. `不確実性モデル <#Uncertainty-Model>`__ 3. `期待損失 <#Expected-Loss>`__ 4. `累積分布関数 <#Cumulative-Distribution-Function>`__ 5. `バリュー・アット・リスク <#Value-at-Risk>`__ 6. `条件付きバリュー・アット・リスク <#Conditional-Value-at-Risk>`__"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:54
msgid "Problem Definition"
msgstr "問題定義"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:56
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr "このチュートリアルでは :math:`K` 資産のポートフォリオの信用リスクを分析します。それぞれの資産 :math:`k` のデフォルト確率は *ガウス型条件付き独立* モデルに従います。すなわち、潜在乱数 :math:`Z` からサンプルされたある値 :math:`z` は標準正規分布に従い、資産:math:`k` のデフォルト確率は次で与えられます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:58
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:60
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr "ここで :math:`F` は :math:`Z` の累積確率分布、:math:`p_k^0` は資産 :math:`k`の :math:`z=0` におけるデフォルト確率、そして :math:`\\rho_k` は 資産 :math:`k` の :math:`Z` におけるデフォルト確率の感度です。こうして :math:`Z` の具体形が与えられ、個別のデフォルトはそれぞれ独立とみなされます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:62
msgid "We are interested in analyzing risk measures of the total loss"
msgstr "我々は総損失のリスク分析に興味があります。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:64
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:66
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr "ここで :math:`\\lambda_k` は資産 :math:`k` の*デフォルトによる損失*を意味し、:math:`Z`, :math:`X_k(Z)` は資産 :math:`k` のデフォルト・イベントに対するベルヌーイ変数です。より正確には、我々は期待値 :math:`\\mathbb{E}[L]` 、:math:`L` のバリュー・アット・リスク(VaR)と :math:`L` の条件付きバリュー・アット・リスク(期待ショートフォールとも呼ばれる)に興味があります。ここで VaR と CVaR は次のように定義されます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:68
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:70
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr "信頼レベル :math:`\\alpha \\in [0, 1]`、かつ以下の通りです。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:72
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:74
msgid "For more details on the considered model, see, e.g., Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca"
msgstr "検討されたモデルの詳細については、例えば Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca を参照してください。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:76
msgid "The problem is defined by the following parameters: - number of qubits used to represent :math:`Z`, denoted by :math:`n_z` - truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}` - the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` - sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)` - loss given default for asset :math:`k`, denoted by :math:`\\lambda_k` - confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr "この問題は次のパラメーターで定義されます。- :math:`n_z` で表される :math:`Z` を表現するための量子ビット数。 - :math:`z_{\\text{max}}` で表される :math:`Z` の切り捨て値、すなわちZ は :math:`\\{-z_{max}, ..., +z_{max}\\}` 内で、:math:`2^{n_z}`の等間隔な値をとると想定。 - :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` で表されるそれぞれの資産のベース・デフォルト確率。 - :math:`\\rho_k \\in [0, 1)` で表される、デフォルト確率の :math:`Z` による感度。 - :math:`\\lambda_k` で表される、資産 :math:`k` のデフォルト損失。 - :math:`\\alpha \\in [0, 1]` VaR/CVaR の信頼レベル。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:107
msgid "Uncertainty Model"
msgstr "不確実性モデル"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:109
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr "我々は不確実性モデルをロードする回路を構築します。これは標準正規分布に従う :math:`Z` を表現する :math:`n_z` 個の量子ビットの量子状態を作ることで達成されます。この状態は、:math:`K` 量子ビットの二つ目の量子レジスター上で、単一量子ビットの Y 回転を制御するために使われます。ここで量子ビット :math:`k` の :math:`|1\\rangle` 状態は資産 :math:`k` のデフォルト・イベントを表します。その結果の量子状態は、次のように記述できます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:111
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:116
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr "ここで :math:`z_i` は、切り捨てられ丸められた :math:`Z` の :math:`i` 番目の値を表します。[Egger2019]."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:205
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for - expected loss :math:`\\mathbb{E}[L]` - PDF and CDF of :math:`L` - value at risk :math:`VaR(L)` and corresponding probability - conditional value at risk :math:`CVaR(L)`"
msgstr "シミュレーターを使って、:math:`|\\Psi\\rangle` を構築する回路を検証し、次の厳密値を計算しましょう。- 期待損失 :math:`\\mathbb{E}[L]`。 - :math:`L` のPDF と CDF。 - バリュー・アット・リスク :math:`VaR(L)`。- 条件付きバリュー・アット・リスク :math:`CVaR(L)`。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:395
msgid "Expected Loss"
msgstr "期待損失"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:397
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr "期待損失を見積もるために、我々はまずはじめに加重合計演算子を適用し、個別損失を合計損失に足し上げます:"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:399
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:401
msgid "The required number of qubits to represent the result is given by"
msgstr "結果を表すために必要な量子ビット数は次の通りです。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:403
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:405
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:407
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:412
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "これにより、期待損失を評価するために振幅推定を実行できます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:464
msgid "Create the state preparation circuit:"
msgstr "状態準備回路を作成します:"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:588
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr "期待損失を見積もるために QAE を実行する前に、我々は目的関数の量子回路を直接シミュレートで検証し、目的量子ビットが :math:`|1\\rangle` 状態にいる確率を分析します。つまり、QAE の値は最終的に近似されます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:661
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "次に期待損失を推定するために、古典的モンテカルロ法よりも二次でスピードアップする QAE を実行します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:721
msgid "Cumulative Distribution Function"
msgstr "累積分布関数"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:723
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr "(古典的な方法で効率的に推定できる) 期待損失の代わりに、損失の累積分布関数(CDF) を推定します。古典的には、資産デフォルトのすべての可能な組み合わせを評価するか、モンテカルロシミュレーションで多数の古典的サンプルを評価するか、どちらかを伴います。QAE に基づくアルゴリズムは将来大幅に解析をスピードアップする可能性があります。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:725
msgid "To estimate the CDF, i.e., the probability $ :nbsphinx-math:`\\mathbb{P}`[L :nbsphinx-math:`\\leq `x] $, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr "CDF つまり確率 $ :nbsphinx-math:`\\mathbb{P}`[L :nbsphinx-math:`\\leq `x] $ を推定するために、再び :math:`\\mathcal{S}` を合計損失を計算するために適用し、そして与えられた :math:`x` に対し以下のように振る舞うコンパレーターを適用します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:727
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:735
msgid "The resulting quantum state can be written as"
msgstr "結果の量子状態は次のように記述できます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:737
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:742
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr "ここで、不確定性モデルの詳細を表す代わりに、合計された損失値とその確率を直接仮定します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:744
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr "CDF(\\ :math:`x`) は、目的量子ビットの :math:`|1\\rangle` 状態を測定する確率に等しく、QAE はそれを推定するために直接使うことができます。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:862
#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1425
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr "再び、量子シミュレーションを使って量子回路を検証します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1013
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "次に、 QAE を実行して、与えられた :math:`x` の CDF を推定します。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1072
msgid "Value at Risk"
msgstr "バリュー・アット・リスク"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1074
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr "以下では、効果的に CDF を評価してバリュー・アット・リスクを推定するために、二分法検索と QAE を使います。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1262
msgid "Conditional Value at Risk"
msgstr "条件付きバリュー・アット・リスク"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1264
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1266
msgid " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1273
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr "正規化するために、結果の期待値を VaR 確率 :math:`\\mathbb{P}[L \\leq VaR]` で割らなければなりません。"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1491
msgid "Next we run QAE to estimate the CVaR."
msgstr "次に、CVaRを推定するためにQAEを実行します。"

