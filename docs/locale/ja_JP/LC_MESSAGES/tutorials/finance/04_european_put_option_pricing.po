msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-21 18:06+0000\n"
"PO-Revision-Date: 2020-10-21 18:43\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/04_european_put_option_pricing.po\n"
"X-Crowdin-File-ID: 9348\n"
"Language: ja_JP\n"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/04_european_put_option_pricing.ipynb`__."
msgstr "当ページは `tutorials/finance/04_european_put_option_pricing.ipynb`__. から生成されました。"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:9
msgid "**Pricing European Put Options**"
msgstr "**ヨーロピアン・プット・オプションの価格推定**"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:23
msgid "Suppose a European put option with strike price :math:`K` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "権利行使価格 :math:`K` で、原資産の満期時のスポット価格 :math:`S_T` がある確率分布に従うヨーロピアン・プット・オプションを考えます。 その時のペイオフ関数は次のように定義されます:"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:25
msgid "\\max\\{K - S_T, 0\\}\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "以下では、振幅推定に基づく量子アルゴリズムを使用して、期待されるペイオフ、すなわちオプションの割引前の適正価格を見積もります。"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{K - S_T, 0\\} \\right]\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "同様に対応する :math:`\\Delta`、すなわちスポット価格に対するオプション価格の微分係数は、次のように与えられます："

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:33
msgid "\\Delta = -\\mathbb{P}\\left[S_T \\leq K\\right]"
msgstr "\\Delta = -\\mathbb{P}\\left[S_T \\leq K\\right]"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "目的関数の近似と量子コンピューターによる一般的なオプション価格設定とリスク分析は、以下の論文で紹介されています。"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:40
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:41
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:69
msgid "Uncertainty Model"
msgstr "不確実性モデル"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:71
msgid "We construct a circuit factory to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[\\text{low}, \\text{high}]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit factory implements the following:"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:73
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:75
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr "ここで :math:`p_i` は切り捨てられ離散化された分布を与える確率を表し、:math:`i` はアフィン写像で得られた正しい区間です。"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:77
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:148
msgid "Payoff Function"
msgstr "ペイオフ関数"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:150
msgid "The payoff function decreases linearly with an increasing spot price at maturity :math:`S_T` until it reaches zero for a spot price equal to the strike price :math:`K`, it stays constant to zero for larger spot prices. The implementation uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\leq K`, and this ancilla is used to control the linear part of the payoff function."
msgstr "ペイオフ関数は、満期時のスポット価格 :math:`S_T` がストライクプライス :math:`K` に一致してゼロになるまで減少し、スポット価格を超えるとゼロで一定になります。実装はコンパレーターを使用し、もし :math:`S_T \\leq K` ならば補助量子ビットを :math:`\\big|0\\rangle` から :math:`\\big|1\\rangle` にフリップし、この補助量子ビットがペイオフ関数の線形部分を制御します。"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:152
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:154
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:156
msgid "for small :math:`c_\\text{approx}`."
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:158
msgid "We can easily construct an operator that acts as"
msgstr "次のように機能する演算子を簡単に構築できます"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:160
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
"using controlled Y-rotations."
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:164
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr ""

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:166
msgid "For more details on the approximation, we refer to: Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "近似の詳細については、以下を参照してください: Quantum Risk Analysis, Woerner, Egger. 2018."

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:275
msgid "Evaluate Expected Payoff"
msgstr "期待ペイオフの評価"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:351
msgid "Evaluate Delta"
msgstr "デルタの評価"

#: ../../tutorials/finance/04_european_put_option_pricing.ipynb:353
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use a comparator circuit and an ancilla qubit to identify the cases where :math:`S_T \\leq K`. However, since we are only interested in the (negative) probability of this condition being true, we can directly use this ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "デルタは期待ペイオフよりも少し評価が簡単です。 期待ペイオフと同様に、コンパレータ回路と補助量子ビットを使用して、 :math:`S_T \\leq K` の場合を特定します。しかしながら、この条件が真であるときの(負の)確率のみに興味があるので、振幅推定において他に何も仮定せずにこの補助量子ビットを直接目的量子ビットとして使うことができます。"

