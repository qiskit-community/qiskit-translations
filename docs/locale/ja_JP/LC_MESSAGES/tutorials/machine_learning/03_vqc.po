msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 19:35\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/03_vqc.po\n"
"X-Crowdin-File-ID: 9468\n"
"Language: ja_JP\n"

#: ../../tutorials/machine_learning/03_vqc.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/03_vqc.ipynb`__."
msgstr "このページは、 `tutorials/machine_learning/03_vqc.ipynb`__ から生成されました。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."
msgstr "`IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_ でインタラクティブに実行します。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:9
msgid "Variational Quantum Classifier (VQC)"
msgstr "Variational Quantum Classifier (VQC)"

#: ../../tutorials/machine_learning/03_vqc.ipynb:11
msgid "The QSVM notebook demonstrated a kernel based approach. This notebook shows a variational method using the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm."
msgstr "QSVM のノートブックでは、カーネルに基づくアプローチを示しました。このノートブックでは、 `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ アルゴリズムを用いて、変分法に基づく手法を示します。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:13
msgid "For further information see also the following reference, as given in the QSVM notebook, that also describes this approach: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr "詳細については、 QSVM ノートブックにも記載してある、以下の参考文献も参照してください。 今回の手法についても記述があります。“Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"

#: ../../tutorials/machine_learning/03_vqc.ipynb:44
msgid "As per the QSVM notebook again we will use the ad hoc dataset as described in the above referenced paper. From the dataset we take samples for use as training, testing and the final prediction (datapoints)."
msgstr "QSVM ノートブックと同様に、上記の参考文献に記載されているアドホック・データセットを使用します。このデータセットから、訓練・テスト・最終予測 (データ点) として使用するためのサンプルを取ります。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:105
msgid "With the dataset ready we can setup the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm to do a classification. We use the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ data encoding circuit from the Qiskit circuit library, like we did with QSVM. But this is a variational algorithm so we need a variational form, i.e. parameterized circuit, whose parameters can be varied by an optimizer when computing VQC’s cost function. For this we choose `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ from the Qiskit circuit library. As the qasm_simulator has shot noise we choose to use `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ which is designed to perform under noisy conditions."
msgstr "データセットの準備ができたので、 `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ アルゴリズムを設定して、分類を行います。QSVM でもそうしたように、 Qiskit circuit ライブラリーの `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ データ符号化回路を用います。しかしこれは変分アルゴリズムなので、 VQC のコスト関数を計算する際に、オプティマイザーによってパラメータを変化させることができる変分形式、つまりパラメーター化された回路が必要になります。このために、 Qiskit circuit ライブラリーの `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ を用います。 qasm_simulator にはショットノイズがあるので、ノイズの多い状態でも動作するように設計されている `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ を使用します。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:108
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr "今回は BasicAer の ``qasm_simulator`` を1024ショットで使用します。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:174
msgid "Now VQC, as well as QSVM, have ``train``, ``test`` and ``predict`` methods. The ``run`` method, as used above, will call these in turn based on whatever data was supplied to the algorithm. But the methods called directly to say train a model and then do predict. Since the vqc instance has already been trained, lets predict another set of sample datapoints by directly calling ``predict``."
msgstr "VQC には QSVM と同様に ``train``, ``test``, ``predict`` メソッドがあります。上で用いた ``run`` メソッドは、アルゴリズムに与えられたデータに基づいて、これらを順番に呼び出します。しかし、これらのメソッドは直接呼び出されると、モデルの訓練と予測をそれぞれ別々に実行することができます。 VQC インスタンスは既に訓練済みなので、直接 ``predict`` を呼び出して、別のサンプル・データ点の組に対して予測を行ってみましょう。"

#: ../../tutorials/machine_learning/03_vqc.ipynb:228
msgid "Finally I will note that the Qiskit classifier algorithms can ``save_model`` after training and also ``load_model`` that had been previously saved."
msgstr "最後に Qiskit の分類アルゴリズムは、訓練後に ``save_model`` でモデルを保存したり、 ``load_model`` で保存されたモデルを読み込んだりできることも押さえておいてください。"

