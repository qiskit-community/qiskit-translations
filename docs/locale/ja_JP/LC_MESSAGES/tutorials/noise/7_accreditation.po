msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-25 19:50\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/7_accreditation.po\n"
"X-Crowdin-File-ID: 9144\n"
"Language: ja_JP\n"

#: ../../tutorials/noise/7_accreditation.ipynb:10
msgid "This page was generated from `tutorials/noise/7_accreditation.ipynb`__."
msgstr "このページは `tutorials/noise/7_accreditation.ipynb`__ から生成されました。"

#: ../../tutorials/noise/7_accreditation.ipynb:9
msgid "Accreditation protocol"
msgstr "適格性認定プロトコル"

#: ../../tutorials/noise/7_accreditation.ipynb:20
msgid "Accreditation Protocol (AP) is a protocol devised to characterize the reliability of noisy quantum devices."
msgstr "適格性認定プロトコル (AP) は、ノイズの多い量子デバイスの信頼性を特徴付けるために考案されたプロトコルです。"

#: ../../tutorials/noise/7_accreditation.ipynb:22
msgid "Given a noisy quantum device implementing a “target” quantum circuit, AP certifies an upper-bound on the variation distance between the probability distribution of the outputs returned by the device and the ideal probability distribution. This method is based on Ferracin et al, “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709."
msgstr "「ターゲット」量子回路を実装するノイズの多い量子デバイスに対して、 AP はデバイスから返される出力の確率分布と理想的な確率分布の間の全変動距離に対する上限を保証します。 この方法は Ferracinらの “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709. に基づいています。"

#: ../../tutorials/noise/7_accreditation.ipynb:24
msgid "This notebook gives an example for how to use the ignis.characterization.accreditation module. This particular example shows how to accredit the outputs of a 4-qubit quantum circuit of depth 5. All the circuits are run using the noisy Aer simulator."
msgstr "このノートブックでは、ignis.characterization.accreditation モジュールの使用方法の例を示します。 この例では、深さ5の4量子ビット量子回路の出力をどのように適格性認証するかを示します。 すべての回路は、ノイズのあるAerシミュレータを使用して実行されます。"

#: ../../tutorials/noise/7_accreditation.ipynb:58
msgid "Input to the protocol"
msgstr "プロトコルの入力"

#: ../../tutorials/noise/7_accreditation.ipynb:69
msgid "AP can accredit the outputs of a **target circuit** that 1) Takes as input :math:`n` qubits in the state :math:`|{0}>`\\  2) Ends with single-qubit measurements in the Pauli-\\ :math:`Z` basis 3) Is made of :math:`m` “bands”, each band containing a round of single-qubit gates and a round of controlled-\\ :math:`Z` gates. The accreditation is made by employing **trap circuits**, circuits that can be efficiently simulated on a classical computer and that whose outputs are used to witness the correct functionality of the device."
msgstr "AP は次の条件を満たす **ターゲット量子回路** の出力の適格性を認定します。\n"
"1) :math:`|{0}>` 状態の :math:`n` 量子ビットを入力としている。 \\ \n"
"2) Pauli-\\ :math:`Z` 基底での1量子ビット測定で終わっている。\n"
"3) 1量子ビットゲートのラウンドと制御 :math:`Z` ゲートのラウンドを含む :math:`m` 個の\"bands\" から成ります。 \n"
"APは **トラップ回路** を用いることで適格性を認定します。トラップ回路は、古典コンピュータで効率的にシミュレートでき、その出力から装置の機能の正しさを認証できる回路です。"

#: ../../tutorials/noise/7_accreditation.ipynb:72
msgid "Let’s now draw a target quantum circuit! We start with a simple circuit to generate and measure 4-qubits GHZ states."
msgstr "ターゲット量子回路を描画してみましょう。 4 量子ビット GHZ 状態を生成して測定します。"

#: ../../tutorials/noise/7_accreditation.ipynb:126
msgid "Generating accreditation circuits"
msgstr "認定回路の生成"

#: ../../tutorials/noise/7_accreditation.ipynb:137
msgid "The function :math:`accreditation\\_circuits` generates all the circuits required by AP, target and traps. It automatically appends random Pauli gates to the circuits (if the implementation is noisy, these random Pauli gates reduce the noise to Pauli errors ! )"
msgstr "関数 :math:`accreditation\\_circuits` は、APとターゲットとトラップに必要なすべての回路を生成します。これはランダムな Pauli ゲートを回路に自動的に追加します (実装にノイズがある場合、これらのランダムな Pauli ゲートはノイズをPauli エラーにします! )"

#: ../../tutorials/noise/7_accreditation.ipynb:139
msgid "It also returns the list :math:`postp\\_list` of strings required to post-process the outputs, as well as the number :math:`v\\_zero` indicating the circuit implementing the target."
msgstr "ターゲットを実装する回路を示す数 :math:`v\\_zero` と同時に、出力を事後処理するのに必要な文字列のリスト :math:`postp\\_list` を返します。"

#: ../../tutorials/noise/7_accreditation.ipynb:141
msgid "This is the target circuit with randomly chosen Pauli gates:"
msgstr "これはランダムに選ばれたパウリゲートを持つターゲット回路です。"

#: ../../tutorials/noise/7_accreditation.ipynb:176
msgid "This is how a trap looks like:"
msgstr "以下のようなトラップです。"

#: ../../tutorials/noise/7_accreditation.ipynb:206
msgid "One can use the optional twoqubitgate argument to switch use cx instead of cz gates and can arbitrarily change the coupling map, in order to compile to the desired device topology (which in this case might lead to more layers than expected)."
msgstr "任意のデバイス・トポロジーにコンパイルするために 、オプションの twoqubitgate 引数を使用して、cz ゲートの代わりに cx を使用するように切り替えてカップリングマップを任意に変更することができます。 (この場合、予想以上にレイヤーが生じる可能性があります)"

#: ../../tutorials/noise/7_accreditation.ipynb:242
msgid "Simulate the ideal circuits"
msgstr "理想回路をシミュレートする"

#: ../../tutorials/noise/7_accreditation.ipynb:253
msgid "Let’s implement AP."
msgstr "AP を実装しましょう。"

#: ../../tutorials/noise/7_accreditation.ipynb:255
msgid "We use :math:`accreditation\\_circuits` to generate target and trap circuits. Then, we use the function :math:`single\\_protocol\\_run` to implement all these circuits, keeping the output of the target only if all of the traps return the correct output."
msgstr "ターゲット量子回路とトラップ量子回路を生成するのに :math:`accreditation\\_circuits` を使います。次に、これら全ての回路を実装するのに関数 :math:`single\\_protocol\\_run` を使い、全てのトラップが正しい出力を返す場合にのみターゲットの出力を保持します。"

#: ../../tutorials/noise/7_accreditation.ipynb:315
msgid "In the absence of noise, all traps return the expected output, therefore we always accept the output of the target."
msgstr "ノイズがない場合、すべてのトラップは期待される出力を返すため、ターゲットの出力を常に受け入れます。"

#: ../../tutorials/noise/7_accreditation.ipynb:317
msgid "To obtain an upper-bound on the variation distance on the outputs of the target circuit, we need to implement AP :math:`d` times, each time with **v** different trap circuits."
msgstr "ターゲット回路の出力の変動距離の上限を求めるためには、 **v** だけ異なるトラップ回路ごとに AP を :math:`d` 回実装する必要があります。"

#: ../../tutorials/noise/7_accreditation.ipynb:457
msgid "The function :math:`bound\\_variation\\_distance` calculates the upper-bound on the variation distance (VD) using"
msgstr "関数 :math:`bound\\_variation\\_distance` は全変動距離(VD)の上限を計算します。"

#: ../../tutorials/noise/7_accreditation.ipynb:459
msgid "VD\\leq \\frac{\\varepsilon}{N_{\\textrm{acc}}/d-\\theta}\\textrm{ ,}\n\n"
msgstr "VD\\leq \\frac{\\varepsilon}{N_{\\textrm{acc}}/d-\\theta}\\textrm{ ,}\n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:461
msgid "where :math:`\\theta\\in[0,1]` is a positive number and"
msgstr ":math:`\\theta\\in[0,1]` は正の数で、"

#: ../../tutorials/noise/7_accreditation.ipynb:463
msgid "\\varepsilon= \\frac{1.7}{v+1}\n\n"
msgstr "\\varepsilon= \\frac{1.7}{v+1}\n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:465
msgid "is the maximum probability of accepting an incorrect state for the target. The function :math:`bound\\_variation\\_distance` also calculates the confidence in the bound as"
msgstr "は、ターゲットの間違った状態を受け入れる確率の最大値です。関数 :math:`bound\\_variation\\_distance` は、バインドされた状態の信頼度も計算します。"

#: ../../tutorials/noise/7_accreditation.ipynb:467
msgid "1-2\\textrm{exp}\\big(-2\\theta d^2\\big)\n\n"
msgstr "1-2\\textrm{exp}\\big(-2\\theta d^2\\big)\n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:520
msgid "Defining the noise model"
msgstr "ノイズモデルの定義"

#: ../../tutorials/noise/7_accreditation.ipynb:531
msgid "We define a noise model for the simulator. We add depolarizing error probabilities to the controlled-\\ :math:`Z` and single-qubit gates."
msgstr "シミュレータのノイズモデルを定義します。制御 :math:`Z` ゲートと1量子ビットゲートに脱分極エラー確率を追加します。"

#: ../../tutorials/noise/7_accreditation.ipynb:561
msgid "We then implement noisy circuits and pass their outputs to :math:`single\\_protocol\\_run`."
msgstr "次にノイズの多い回路を実装し、出力を :math:`single\\_protocol\\_run` に渡します。"

#: ../../tutorials/noise/7_accreditation.ipynb:706
msgid "Changing the number of trap circuits per protocol run changes the upper-bound on the VD, but not the confidence."
msgstr "プロトコル実行あたりのトラップ回路数を変更すると、VDの上限値は変化しますが、信頼性は変化しません。"

#: ../../tutorials/noise/7_accreditation.ipynb:708
msgid "What number of trap circuits will ensure the minimal upper-bound for your target circuit?"
msgstr "ターゲット回路の上限を最小限に抑えるトラップ回路の数は?"

