msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 19:20+0000\n"
"PO-Revision-Date: 2020-10-25 03:16\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/3_measurement_error_mitigation.po\n"
"X-Crowdin-File-ID: 9136\n"
"Language: ja_JP\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:10
msgid "This page was generated from `tutorials/noise/3_measurement_error_mitigation.ipynb`__."
msgstr "当ページは`tutorials/noise/3_measurement_error_mitigation.ipynb`__から生成されました。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:9
msgid "Measurement Error Mitigation"
msgstr "測定エラーの軽減"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:23
msgid "The measurement calibration is used to mitigate measurement errors. The main idea is to prepare all :math:`2^n` basis input states and compute the probability of measuring counts in the other basis states. From these calibrations, it is possible to correct the average results of another experiment of interest. This notebook gives examples for how to use the ``ignis.mitigation.measurement`` module."
msgstr "測定較正は、測定エラーを軽減するために使用されます。 主なアイデアは、すべての:math:`2^n`基底入力状態を準備し、他の基底状態での測定数の確率を計算することです。これらの較正により、関心のある別の実験の平均結果を修正することができます。このノートブックは、``ignis.mitigation.measurement``モジュールの使用例を示します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:57
msgid "3 Qubit Example of the Calibration Matrices"
msgstr "3量子ビットの較正行列の例"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:68
msgid "Assume that we would like to generate a calibration matrix for the 3 qubits Q2, Q3 and Q4 in a 5-qubit Quantum Register [Q0,Q1,Q2,Q3,Q4]."
msgstr "5量子ビットの量子レジスタ [Q0,Q1,Q2,Q3,Q4] のうち、3つの量子ビット Q2、Q3 および Q4 の較正行列を生成するとします。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:70
msgid "Since we have 3 qubits, there are :math:`2^3=8` possible quantum states."
msgstr "3つの量子ビットがあるため、:math:`2^3=8` 通りの量子状態が存在します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:82
msgid "Generating Measurement Calibration Circuits"
msgstr "測定較正回路の生成"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:84
msgid "First, we generate a list of measurement calibration circuits for the full Hilbert space. Each circuit creates a basis state. If there are :math:`n=3` qubits, then we get :math:`2^3=8` calibration circuits."
msgstr "まず、ヒルベルト空間全体に対する測定較正回路のリストを生成します。 それぞれの回路は基底状態を生成します。:math:`n=3` 量子ビットがある場合、:math:`2^3=8`通りの較正回路が得られます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:95
msgid "The following function **complete\\_meas\\_cal** returns a list **meas\\_calibs** of ``QuantumCircuit`` objects containing the calibration circuits, and a list **state\\_labels** of the calibration state labels."
msgstr "以下の関数 **complete\\_meas\\_cal** は、較正回路を含む``QuantumCircuit``オブジェクトのリスト **meas\\_calibs** と、較正状態ラベルのリスト ** state\\_labels** を返却します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:97
msgid "The input to this function can be given in one of the following three forms:"
msgstr "この関数への入力は、以下の3つの形式のいずれかで指定することができます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:99
msgid "**qubit\\_list:** A list of qubits to perform the measurement correction on, or:"
msgstr "**qubit\\_list:** 測定補正を実行する量子ビットのリスト、または:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:100
msgid "**qr (QuantumRegister):** A quantum register, or:"
msgstr "**qr (QuantumRegister):** 量子レジスタ、または:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:101
msgid "**cr (ClassicalRegister):** A classical register."
msgstr "**cr (ClassicalRegister):** 古典レジスタ。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:103
msgid "In addition, one can provide a string **circlabel**, which is added at the beginning of the circuit names for unique identification."
msgstr "さらに、一意に識別するため回路名の先頭に追加される文字列 **circlabel** を提供することもできます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:105
msgid "For example, in our case, the input is a 5-qubit ``QuantumRegister`` containing the qubits Q2,Q3,Q4:"
msgstr "例えば、今回のケースにおける入力は、量子ビットQ2、Q3、Q4を含む5量子ビットの``QuantumRegister``になります。:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:129
msgid "Print the :math:`2^3=8` state labels (for the 3 qubits Q2,Q3,Q4):"
msgstr ":math:`2^3=8` の状態ラベル(Q2、Q3、Q4の3量子ビット)を出力します。:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:171
msgid "Computing the Calibration Matrix"
msgstr "較正行列の計算"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:173
msgid "If we do not apply any noise, then the calibration matrix is expected to be the :math:`8 \\times 8` identity matrix."
msgstr "ノイズを適用しない場合、較正行列は :math:`8 \\times 8` の単位行列であることが期待されます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:242
msgid "Assume that we apply some noise model from Qiskit Aer to the 5 qubits, then the calibration matrix will have most of its mass on the main diagonal, with some additional 'noise'."
msgstr "Qiskit Aer から5量子ビットに対し、何らかのノイズモデルをに適用するものと仮定すると、較正行列は主対角線上にほとんどをもちますが、'ノイズ' もあります。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:244
msgid "Alternatively, we can execute the calibration circuits using an IBMQ provider."
msgstr "あるいは、IBMQプロバイダを使用して較正回路を実行することもできます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:347
msgid "Analyzing the Results"
msgstr "結果の分析"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:349
msgid "We would like to compute the total measurement fidelity, and the measurement fidelity for a specific qubit, for example, Q0."
msgstr "総測定忠実度および、特定の量子ビット（例えばQ0）の測定忠実度を計算します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:351
msgid "Since the on-diagonal elements of the calibration matrix are the probabilities of measuring state 'x' given preparation of state 'x', then the trace of this matrix is the average assignment fidelity."
msgstr "較正行列の対角要素は、状態'x'の準備を前提として状態'x'を測定する確率であり、この行列のトレースは平均割り当て忠実度です。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:399
msgid "Applying the Calibration"
msgstr "較正の適用"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:401
msgid "We now perform another experiment and correct the measured results."
msgstr "次に別の実験を行い、測定結果を修正します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:404
msgid "Correct Measurement Noise on a 3Q GHZ State"
msgstr "3Q GHZ状態での測定ノイズの補正"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:406
msgid "As an example, we start with the 3-qubit GHZ state on the qubits Q2,Q3,Q4:"
msgstr "例として、Q2、Q3、Q4の3量子ビットのGHZ状態から始めます。:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:408
msgid "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"
msgstr "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:457
#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1045
msgid "We now execute the calibration circuits (with the noise model above):"
msgstr "ここで、較正回路を実行します(上記のノイズモデルを使います)。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:479
msgid "We now compute the results without any error mitigation and with the mitigation, namely after applying the calibration matrix to the results."
msgstr "ここで、エラー軽減のない結果と軽減した結果（すなわち、結果に較正行列を適用した後のもの）を計算します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:481
msgid "There are two fitting methods for applying the calibration (if no method is defined, then 'least\\_squares' is used). - **'pseudo\\_inverse'**, which is a direct inversion of the calibration matrix, - **'least\\_squares'**, which constrains to have physical probabilities."
msgstr "較正を適用するための２つのフィッティングメソッドがあります（メソッドが定義されていない場合は 'least\\_squares' が使用されます）。 - **'pseudo\\_inverse'** は較正行列の直接逆行列です。、 - **'least\\_squares'** は物理的な確率をもつ制約です。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:483
msgid "The raw data to be corrected can be given in a number of forms:"
msgstr "修正する生データは、いくつかの形式で指定できます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:485
msgid "Form1: A counts dictionary from results.get\\_counts,"
msgstr "形式1: results.get\\_counts からのディクショナリ数。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:486
msgid "Form2: A list of counts of length=len(state\\_labels),"
msgstr "形式2: length=len(state\\_labels) による数のリスト。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:487
msgid "Form3: A list of counts of length=M\\*len(state\\_labels) where M is an integer (e.g. for use with the tomography data),"
msgstr "Form3: length=M\\*len(state\\_labels) のカウントリスト。ここでのMは整数(e.g. トモグラフィーデータと一緒に使うため),"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:488
msgid "Form4: A qiskit Result (e.g. results as above)."
msgstr "形式4: Qiskitの結果 (e.g. 上記の結果)。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:517
msgid "We can now plot the results with and without error mitigation:"
msgstr "これで、エラーを軽減した場合としない場合の結果をプロットできます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:549
msgid "Applying to a reduced subset of qubits"
msgstr "量子ビットが削減されたサブセットへの適用"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:560
msgid "Consider now that we want to correct a 2Q Bell state, but we have the 3Q calibration matrix. We can reduce the matrix and build a new mitigation object."
msgstr "ここで、2Qベル状態を修正したいと思いますが、すでに3Qの較正行列があります。行列を削減し、新たな軽減オブジェクトを構築できます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:696
msgid "Tensored mitigation"
msgstr "軽減のテンソル化"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:698
msgid "The calibration can be simplified if the error is known to be local. By \"local error\" we mean that the error can be tensored to subsets of qubits. In this case, less than :math:`2^n` states are needed for the computation of the calibration matrix."
msgstr "エラーが局所的であることがわかっている場合は、較正を簡略化できます。\"局所的なエラー\"とは、エラーを量子ビットのサブセットにテンソル化できることを意味します。この場合、より少ない:math:`2^n`状態は、較正行列の計算に必要となります。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:700
msgid "Assume that the error acts locally on qubit 2 and the pair of qubits 3 and 4. Construct the calibration circuits by using the function ``tensored_meas_cal``. Unlike before we need to explicitly divide the qubit list up into subset regions."
msgstr "エラーは量子ビット2と、量子ビット3と4のペアに対して局所的に作用すると仮定します。``tensored_meas_cal``関数を使用して、較正回路を構築します。以前とは異なり、量子ビットリストをサブセット領域に明示的に分割する必要があります。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:724
msgid "We now retrieve the names of the generated circuits. Note that in each label (of length 3), the least significant bit corresponds to qubit 2, the middle bit corresponds to qubit 3, and the most significant bit corresponds to qubit 4."
msgstr "生成された回路名を取得します。各ラベル（長さ3）では、最下位ビットが量子ビット2、中央ビットが量子ビット3、最上位ビットが量子ビット4に対応することに注意してください。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:771
msgid "Let us elaborate on the circuit names. We see that there are only four circuits, instead of eight. The total number of required circuits is :math:`2^m` where :math:`m` is the number of qubits in the larget subset (here :math:`m=2`)."
msgstr "回路名について詳しく説明しましょう。8つの回路ではなく、4つの回路しかないことがわかります。必要な回路の総数は:math:`2^m`です。ここでの:math:`m`は、大きなサブセットの量子ビットの数です（ここでは m=2）。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:773
msgid "Each basis state of qubits 3 and 4 appears exactly once. Only two basis states are required for qubit 2, so these are split equally across the four experiments. For example, state '0' of qubit 2 appears in state labels '000' and '010'."
msgstr "量子ビット3と4の各基底状態は1回だけ出現します。量子ビット2に必要な基底状態は2つだけなので、これらは4つの実験にわたって均等に分割されます。たとえば、量子ビット2の状態 '0' は、状態ラベル '000' と '010' で示されます。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:775
msgid "We now execute the calibration circuits on an Aer simulator, using the same noise model as before. This noise is in fact local to qubits 3 and 4 separately, but assume that we don't know it, and that we only know that it is local for qubit 2."
msgstr "今度は、以前と同じノイズモデルを使用して、Aerシミュレータで較正回路を実行します。実際、このノイズは量子ビット3と4それぞれに対して局所的ですが、それがわからないこと、および量子ビット2に対して局所的であることがわかっているものと仮定します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:823
msgid "The fitter provides two calibration matrices. One matrix is for qubit 2, and the other matrix is for qubits 3 and 4."
msgstr "フィッターは2つの較正行列を提供します。1つの行列は量子ビット2、もう1つの行列は量子ビット3および4のための行列です。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:871
msgid "We can look at the readout fidelities of the individual tensored components or qubits within a set:"
msgstr "セット内の個々のテンソル化されたコンポーネントまたは量子ビットの読み出し忠実度を確認できます。:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:925
msgid "Plot the individual calibration matrices:"
msgstr "個々の較正行列をプロットします。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1085
msgid "Plot the raw vs corrected state:"
msgstr "未処理の状態と処理後の状態をプロットします。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1118
msgid "As a check we should get the same answer if we build the full correction matrix from a tensor product of the subspace calibration matrices:"
msgstr "確認として、部分空間校正行列のテンソル積から完全な較正行列を作成すると、同じ解が得られるはずです。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1155
msgid "Running Aqua Algorithms with Measurement Error Mitigation"
msgstr "測定エラーの軽減を用いたAquaのアルゴリズムの実行"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1157
msgid "To use measurement error mitigation when running quantum circuits as part of an Aqua algorithm, we need to include the respective measurement error fitting instance in the QuantumInstance. This object also holds the specifications for the chosen backend."
msgstr "Aqua のアルゴリズムの一部として量子回路を実行する際に測定エラーの軽減を使用するには、 QuantumInstance にそれぞれの測定エラーをフィッティングするインスタンスを含める必要があります。 このオブジェクトは、選択したバックエンドの仕様も保持します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1159
msgid "In the following, we illustrate measurement error mitigation of Aqua algorithms on the example of searching the ground state of a Hamiltonian with VQE."
msgstr "以下では、 VQEでハミルトニアンの基底状態を探索する例で、 Aqua のアルゴリズムの測定エラーの緩和を説明します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1170
msgid "First, we need to import the libraries that provide backends as well as the classes that are needed to run the algorithm."
msgstr "最初に、バックエンドを提供するライブラリおよびアルゴリズムを実行するために必要なクラスをインポートする必要があります。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1201
msgid "Then, we initialize the instances that are required to execute the algorithm."
msgstr "次に、アルゴリズムを実行するために必要なインスタンスを初期化します。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1233
msgid "Here, we choose the Aer ``qasm_simulator`` as backend and also add a custom noise model. The application of an actual quantum backend provided by IBMQ is outlined in the commented code."
msgstr "ここでは、バックエンドとして Aer の ``qasm_simulator`` を選択し、カスタムノイズモデルを追加します。 IBMQ によって提供される実機の量子バックエンドのアプリケーションは、コメントアウトされたコードにあります。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1268
msgid "Finally, we can run the algorithm and check the results."
msgstr "最後に、アルゴリズムを実行し、結果を確認することができます。"

