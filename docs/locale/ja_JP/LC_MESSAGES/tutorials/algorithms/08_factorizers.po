msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:10\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/08_factorizers.po\n"
"X-Crowdin-File-ID: 9508\n"
"Language: ja_JP\n"

#: ../../tutorials/algorithms/08_factorizers.ipynb:10
msgid "This page was generated from `tutorials/algorithms/08_factorizers.ipynb`__."
msgstr "このページは  `tutorials/algorithms/08_factorizers.ipynb`__ から生成されました。"

#: ../../tutorials/algorithms/08_factorizers.ipynb:9
msgid "Shor’s algorithms"
msgstr "Shorのアルゴリズム"

#: ../../tutorials/algorithms/08_factorizers.ipynb:11
msgid "Qiskit has an implementation of `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."
msgstr "Qiskit には `Shor のアルゴリズム <https://qiskit.org/textbook/ch-algorithms/shor.html>`__ の実装があります。"

#: ../../tutorials/algorithms/08_factorizers.ipynb:13
msgid "The preceding reference has detailed explanations and build-out of circuits whereas this notebook has examples with the pre-built algorithms in Qiskit that you can use for experimentation and education purposes."
msgstr "上記の参照先では回路の配置と詳細な説明を行っていますが、このノートブックでは Qiskit であらかじめ構築されたアルゴリズムの例を示しているので、実験や教育の目的で用いることができます。"

#: ../../tutorials/algorithms/08_factorizers.ipynb:39
msgid "Shor’s Factoring algorithm"
msgstr "Shor の素因数分解アルゴリズム"

#: ../../tutorials/algorithms/08_factorizers.ipynb:41
msgid "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ is one of the most well-known quantum algorithms and finds the prime factors for input integer :math:`N` in polynomial time. The algorithm implementation in Qiskit is simply provided a target integer to be factored and run, as follows:"
msgstr "`Shor の素因数分解アルゴリズム <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ は最もよく知られた量子アルゴリズムの一つであり、入力された整数 :math:`N` の素因数を多項式時間で求めます。 Qiskit でのアルゴリズムの実装では、以下のように素因数分解する整数を与えるだけで実行できます。"

#: ../../tutorials/algorithms/08_factorizers.ipynb:91
msgid "Note: this implementation of Shor’s algorithm uses :math:`4n + 2` qubits, where :math:`n` is the number of bits representing the integer in binary. So in practice, for now, this implementation is restricted to factorizing small integers. Given the above value of N we compute :math:`4n +2` below and confirm the size from the actual circuit."
msgstr "注: Shor のアルゴリズムのこの実装は、:math:`n` を二進表示された入力整数のビット数として、 :math:`4n + 2` 量子ビット用いています。したがって実際には今のところ、小さな整数の素因数分解に限定されています。上記の N の値があたえられているので、以下に :math:`4n +2` を計算し、実際の回路サイズを確認します。"

