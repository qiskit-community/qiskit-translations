msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 15:01+0000\n"
"PO-Revision-Date: 2020-11-12 15:29\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/5_noise_transformation.po\n"
"X-Crowdin-File-ID: 9168\n"
"Language: ja_JP\n"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:10
msgid "This page was generated from `tutorials/simulators/5_noise_transformation.ipynb`__."
msgstr "このページは `tutorials/simulators/5_noise_transformation.ipynb`__ から生成されました。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/5_noise_transformation.ipynb>`_."
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:9
msgid "Noise Transformation"
msgstr "ノイズ変換"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:23
msgid "This notebook shows how to use the Qiskit Aer utility functions ``approximate_quantum_error`` and ``approximate_noise_model`` to transform quantum noise channels into a different, more suitable, noise channel."
msgstr "このノートブックは、量子ノイズチャネルを、他のより適切なノイズチャネルに変換するために Qiskit Aer ユーティリティ関数 ``approximate_quantum_error`` と ``approximate_noise_model`` を使用する方法を示します。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:25
msgid "Our guiding example is Clifford simulation. A Clifford simulator can efficiently simulate quantum computations which include gates only from a limited, non-universal set of gates (the Clifford gates). Not all quantum noises can be added to such simulations; hence, we aim to find a \"close\" noise channel which can be simulated in a Clifford simulator."
msgstr "私たちのガイド例はCliffordシミュレーションです。 Cliffordシミュレーターは、制限された非普遍的なゲート(Cliffordゲート) からのみゲートを含む量子計算を効率的にシミュレートすることができます。 すべての量子ノイズをシミュレーションに追加できるわけではありません。 そこで、Cliffordシミュレーターでシミュレーションできる「近い」ノイズチャネルを見つけることを目指しています。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:27
msgid "We begin by importing the transformation functions from the Aer provider utilities"
msgstr "まず、Aer プロバイダーユーティリティから変換関数をインポートします。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:49
msgid "The name \"approximate\" suggests that these functions generate the closest (in the Hilbert-Schmidt metric) error possible to the given one."
msgstr "\"approximate\" という名前は、これらの関数が与えられた関数に最も近い(Hilbert-Schmidtメトリックで) エラーを生成することを示唆しています。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:51
msgid "We demonstrate the approximation using several standard error channels defined in Qiskit."
msgstr "Qiskitで定義された、いくつかの標準エラーチャネルを使用した近似値を示します。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:78
msgid "Overview"
msgstr "概要"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:80
msgid "A 1-qubit quantum channel is a function :math:`\\mathcal{C}:\\mathbb{C}^{2\\times2}\\to\\mathbb{C}^{2\\times2}` mapping density operators to density operators (to ensure the image is a density operator :math:`\\mathcal{C}` is required to be completely positive and trace preserving, **CPTP**)."
msgstr "1量子ビットの量子チャネルは関数 :math:`\\mathcal{C}:\\mathbb{C}^{2\\times2}\\to\\mathbb{C}^{2\\times2}` 密度演算子を密度演算子にマッピングします (像が密度演算子 :math:`\\mathcal{C}` であるためには、完全正値でトレース保存である必要があります。 **CPTP**)."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:82
msgid "Given quantum channels :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}`, and probabilities :math:`p_1, p_2, \\dots, p_r` such that :math:`0\\le p_i \\le 1` and :math:`p_1+\\dots +p_r = 1`, a new quantum channel :math:`\\mathcal{C}_\\mathcal{E}` can be constructed such that :math:`\\mathcal{C}_\\mathcal{E}(\\rho)` has the effect of choosing the channel :math:`\\mathcal{E}_i` with probability :math:`p_i` and applying it to :math:`\\rho`."
msgstr "量子チャネル :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}` と、 :math:`0\\le p_i \\le 1` と :math:`p_1+\\dots +p_r = 1` である確率 :math:`p_1, p_2, \\dots, p_r` に対して、:math:`\\mathcal{C}_\\mathcal{E}(\\rho)` がチャネル :math:`\\mathcal{E}_i` を確率 :math:`p_i` で選択し状態 :math:`\\rho` に適用するのと同じ効果をもつような新しい量子チャネル :math:`\\mathcal{C}_\\mathcal{E}` を構成することができます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:84
msgid "The noise transformation function solves the following optimization problem: Given a channel :math:`\\mathcal{C}` (\"goal\") and a list of channels :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}`, find the probabilities :math:`p_1, p_2, \\dots, p_r` minimizing :math:`D(\\mathcal{C}, \\mathcal{C}_\\mathcal{E})` according to some distance metric :math:`D` (the Hilbert-Schmidt metric is currently used)."
msgstr "ノイズ変換関数は次の最適化問題を解決します: チャネル :math:`\\mathcal{C}` (\"ゴール\") とチャネル :math:`\\mathcal{E}_{1}, dots,\\mathcal{E}_{r}` のリストが与えられている時、 :math:`p_1, p_2, \\dots, p_r` の確率を発見し、距離メトリック :math:`D` に従って :math:`D(\\mathcal{C}, \\mathcal{C}_\\mathcal{E})` を最小化します（ヒルベルト-シュミットメトリックが現在使用されています）。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:86
msgid "To ensure the approximation is honest, in the sense that the approximate error channel serves as an \"upper bound\" for the actual error channel, we add the additional honesty constraint:"
msgstr "近似が Honest であること、つまりおおよそのエラーチャネルが実際のエラーチャネルの「上限」として機能するように、追加の Honesty 制約を加えます"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:88
msgid "\\text{F}(I,\\mathcal{C})\\ge F(I,\\mathcal{C}_\\mathcal{E})\n\n"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:90
msgid "Where :math:`\\text{F}` is a fidelity measure and :math:`I` is the identity channel."
msgstr ":math:`\\text{F}` が忠実度の尺度で、 :math:`I` がアイデンティティチャネルです。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:102
msgid "Example: Approximating amplitude damping noise with reset noise."
msgstr "例: リセットノイズを用いた振幅減衰ノイズの近似"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:104
msgid "**Amplitude damping** noise is described by a single parameter :math:`0\\le \\gamma \\le 1` and given by the Kraus operators:"
msgstr "**振幅減衰** ノイズは :math:`0\\le \\gamma \\le 1` で記述され、Kraus演算子によって与えられます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:106
msgid "\\left(\\begin{array}{cc}\n"
"1 & 0\\\\\n"
"0 & \\sqrt{1-\\gamma}\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & \\sqrt{\\gamma}\\\\\n"
"0 & 0\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:116
msgid "**Reset** error is described by probabilities :math:`0\\le p, q\\le 1` such that :math:`p+q\\le 1` and given by the Kraus operators:"
msgstr "**リセット** エラーは、 :math:`0\\le p, q\\le 1` によって記述されています。これは :math:`p+q\\le 1` と Kraus 演算子によって与えられます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:118
msgid "\\left(\\begin{array}{cc}\n"
"\\sqrt{p} & 0\\\\\n"
"0 & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & \\sqrt{p}\\\\\n"
"0 & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & 0\\\\\n"
"\\sqrt{q} & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & 0\\\\\n"
"0 & \\sqrt{q}\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:134
msgid "This can be thought of as \"resetting\" the quantum state of the affected qubit to :math:`\\left|0\\right\\rangle` with probability :math:`p`, to :math:`\\left|1\\right\\rangle` with probability :math:`q`, and do nothing with probability :math:`1-(p+q)`."
msgstr "これは影響を受けた量子ビットの量子状態を確率 :math:`p` で :math:`\\left|0\\right\\rangle` に、確率 :math:`q` で :math:`\\left|1\\right\\rangle` に、確率 :math:`1-(p+q)` で何もしないという「リセット」だと思うことができます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:136
msgid "It is not too difficult to determine analytically the best values of :math:`p,q` to approximate a :math:`\\gamma` amplitude damping channel, see the details **`here <https://arxiv.org/abs/1207.0046>`__**. The best approximation is:"
msgstr ":math:`\\gamma` 振幅減衰チャネルを近似する最良の値 :math:`p,q` を解析的に決めるのはそんなに難しくはありません。 詳細は `こちら <https://arxiv.org/abs/1207.0046>`__ を見てください。最良の近似値は："

#: ../../tutorials/simulators/5_noise_transformation.ipynb:138
msgid "p=\\frac{1}{2}\\left(1+\\gamma-\\sqrt{1-\\gamma}\\right), q=0\n\n"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:161
msgid "We only needed the above code to perform the actual approximation."
msgstr "実際の近似を実行するためには、上記のコードしか必要としませんでした。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:224
msgid "We got the results predicted analytically."
msgstr "分析的に予測された結果が得られました"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:227
msgid "Different input types"
msgstr "異なる入力タイプ"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:229
msgid "The approximation function is given two inputs: The error channel to approximate, and a set of error channels that can be used in constructing the approximation."
msgstr "近似関数には、次の 2 つの入力が与えられます: 近似するエラーチャネルと 近似を構築するのに使えるエラーチャネルの集まりです"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:231
msgid "The **error channel** to approximate can be given as any input that can be converted to the ``QuantumError`` object."
msgstr "近似する **エラーチャネル** は、``QuantumError`` オブジェクトに変換できる任意の入力として与えることができます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:233
msgid "As an example, we explicitly construct the Kraus matrices of amplitude damping and pass to the same approximation function as before:"
msgstr "例として、振幅減衰のKraus行列を明示的に構築し、以前と同じ近似関数に渡します。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:281
msgid "The **error operators** that are used to construct the approximating channel can be either given as a list, a dictionary or a string indicating hard-coded channels."
msgstr "近似チャネルを構築するために使用される **error operators** はリスト、辞書またはハードコードされたチャネルを示す文字列として与えられます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:283
msgid "Any channel can be either a list of Kraus operators, or 'QuantumError' objects."
msgstr "任意のチャンネルは Kraus 演算子のリストまたは 'QuantumError' オブジェクトのいずれかになります。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:285
msgid "The identity channel does not need to be passed directly; it is always implicitly used."
msgstr "ID チャンネルは直接渡す必要はありません。常に暗黙的に使用されます。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:287
msgid "As an example, we approximate amplitude damping using an explicit Kraus representation for reset noises:"
msgstr "一例として、リセットノイズの明示的なKraus表現を使用して振幅減衰を近似します。"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:342
msgid "Note the difference in the output channel: The probabilities are the same, but the input Kraus operators were converted to general Kraus channels, which cannot be used in a Clifford simulator. Hence, it is always better to pass a ``QuantumError`` object instead of the Kraus matrices, when possible."
msgstr "出力チャンネルの違いに注意してください: 確率は同じです。 しかし、入力KrausオペレータはCliffordシミュレータでは使用できない一般的なKrausチャンネルに変換されました。 したがって、可能な場合は、Kraus 行列の代わりに ``QuantumError`` オブジェクトを渡す方が良いでしょう。"

