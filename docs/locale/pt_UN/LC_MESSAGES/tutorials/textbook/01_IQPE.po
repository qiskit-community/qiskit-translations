msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-03 18:43+0000\n"
"PO-Revision-Date: 2023-02-03 19:26\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/textbook/01_IQPE.po\n"
"X-Crowdin-File-ID: 9622\n"
"Language: pt_UN\n"

#: ../../tutorials/textbook/01_IQPE.ipynb:10
msgid "This page was generated from `tutorials/textbook/01_IQPE.ipynb`__."
msgstr "Esta página foi gerada a partir de `tutorials/textbook/01_IQPE.ipynb`__."

#: ../../tutorials/textbook/01_IQPE.ipynb:9
msgid "Iterative Quantum Phase Estimation Algorithm"
msgstr "Algoritmo de Estimativa de Fase Quântica Iterativa"

#: ../../tutorials/textbook/01_IQPE.ipynb:11
msgid "The goal of this tutorial is to understand how the Iterative Phase Estimation (IPE) algorithm works, why would we use the IPE algorithm instead of the QPE (Quantum Phase Estimation) algorithm and how to build it with Qiskit using the same circuit exploiting reset gate and the ``c_if`` method that allows to apply gates conditioned by the values stored in a classical register, resulting from previous measurements."
msgstr "O objetivo desse tutorial é entender como o algoritmo de Estimativa de Fase Iterativa (IPE) funciona, porque usaríamos o algoritmo IPE em vez do algoritmo QPE (Estimativa de Fase Quântica) e como construí-lo com o Qiskit usando o mesmo circuito explorando a porta de reset e o método ``c_if`` que permite aplicar portas condicionadas pelos valores armazenados em um registrador clássico, resultantes de medições anteriores."

#: ../../tutorials/textbook/01_IQPE.ipynb:13
msgid "**References**"
msgstr "**Referências**"

#: ../../tutorials/textbook/01_IQPE.ipynb:15
msgid "`Section 2 of Lab 4: Iterative Phase Estimation (IPE) Algorithm <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__"
msgstr "Seção 2 do Lab 4: Algoritmo de Estimativa de Fase Iterativa (IPE) <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>` __"

#: ../../tutorials/textbook/01_IQPE.ipynb:17
msgid "`Ch.3.6 Quantum Phase Estimation <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__"
msgstr "`Ch.3.6 Estimativa de Fase Quântica <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__"

#: ../../tutorials/textbook/01_IQPE.ipynb:42
msgid "Conditioned gates: the c_if method"
msgstr "Portas condicionadas: o método c_if"

#: ../../tutorials/textbook/01_IQPE.ipynb:53
msgid "Before starting the IPE algorithm, we will give a brief tutorial about the Qiskit conditional method, c_if, as it goes into building the IPE circuit."
msgstr "Antes de iniciar o algoritmo IPE, daremos um breve tutorial sobre o método condicional Qiskit, c_if, conforme se avança na construção do circuito IPE."

#: ../../tutorials/textbook/01_IQPE.ipynb:55
msgid "``c_if`` is a function (actually a method of the gate class) to perform conditioned operations based on the value stored previously in a classical register. With this feature you can apply gates after a measurement in the same circuit conditioned by the measurement outcome."
msgstr "``c_if`` é uma função (na verdade um método da classe porta) para realizar operações condicionadas baseadas no valor anteriormente armazenado em um registrador clássico. Com esta funcionalidade, você pode aplicar portas após uma medição no mesmo circuito condicionado pelo resultado da medição."

#: ../../tutorials/textbook/01_IQPE.ipynb:57
msgid "For example, the following code will execute the :math:`X` gate if the value of the classical register is :math:`0`."
msgstr "Por exemplo, o código a seguir executará a porta :math:`X` se o valor do registrador clássico for :math:`0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:93
msgid "We highlight that the method c_if expects as the first argument a whole classical register, not a single classical bit (or a list of classical bits), and as the second argument a value in decimal representation (a non-negative integer), not the value of a single bit, 0, or 1 (or a list/string of binary digits)."
msgstr "Ressaltamos que o método c_if espera como o primeiro argumento todo um registrador clássico, não um único bit clássico (ou uma lista de bits clássicos), e como o segundo argumento um valor na representação decimal (um inteiro não negativo), não o valor de um único bit, 0 ou 1 (ou uma lista/cadeia de dígitos binários)."

#: ../../tutorials/textbook/01_IQPE.ipynb:95
msgid "Let’s make another example. Consider that we want to perform a bit flip on the third qubit after the measurements in the following circuit, when the results of the measurement of :math:`q_0` and :math:`q_1` are both :math:`1`."
msgstr "Façamos outro exemplo. Considere que queremos executar um bit flip no terceiro qubit após as medições no circuito a seguir, quando os resultados da medição de :math:`q_0` e :math:`q_1` são ambos :math:`1`."

#: ../../tutorials/textbook/01_IQPE.ipynb:133
msgid "We want to apply the :math:`X` gate, only if both the results of the measurement of :math:`q_0` and :math:`q_1` are :math:`1`. We can do this using the c_if method, conditioning the application of :math:`X` depending on the value passed as argument to c_if."
msgstr "Queremos aplicar a porta :math:`X` somente se ambos os resultados da medição de :math:`q_0` e :math:`q_1` forem :math:`1`. Podemos fazer isso usando o método c_if, condicionando a aplicação de :math:`X` dependendo do valor passado como argumento para c_if."

#: ../../tutorials/textbook/01_IQPE.ipynb:135
msgid "We will have to encode the value to pass to the c_if method such that it will check the values 011 and 111 (in binary representation), since it does not matter what :math:`q_2` is measured as."
msgstr "Teremos que codificar o valor para passar para o método c_if tal que ele verificará os valores 011 e 111 (em representação binária), uma vez que não importa como :math:`q_2` é medido."

#: ../../tutorials/textbook/01_IQPE.ipynb:137
msgid "The 2 integer values in decimal representation:"
msgstr "Os 2 valores inteiros em representação decimal:"

#: ../../tutorials/textbook/01_IQPE.ipynb:148
msgid "|957d4f97f5484c65bc228a052f88cc39|"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:150
msgid "957d4f97f5484c65bc228a052f88cc39"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:161
msgid "We can check the solutions using the bin() method in python (the prefix ``0b`` indicates the binary format)."
msgstr "Podemos verificar as soluções usando o método bin() em python (o prefixo ``0b`` indica o formato binário)."

#: ../../tutorials/textbook/01_IQPE.ipynb:210
msgid "So we have to apply :math:`X` to :math:`q_2` using c_if two times, one for each value corresponding to 011 and 111."
msgstr "Por isso, temos que aplicar :math:`X` a :math:`q_2` utilizando c_if duas vezes, uma para cada valor correspondente a 011 e 111."

#: ../../tutorials/textbook/01_IQPE.ipynb:253
msgid "IPE"
msgstr "IPE"

#: ../../tutorials/textbook/01_IQPE.ipynb:255
msgid "The motivation for using the IPE algorithm is that QPE algorithm works fine for short depth circuits but when the circuit starts to grow, it doesn’t work properly due to gate noise and decoherence times."
msgstr "A motivação para usar o algoritmo IPE é que o algoritmo QPE funciona bem para circuitos de curta profundidade mas quando o circuito começa a crescer, ele não funciona adequadamente devido aos tempos de ruído da porta e decoerência."

#: ../../tutorials/textbook/01_IQPE.ipynb:257
msgid "The detailed explanation of how the algorithm works can be found in `Iterative Phase Estimation (IPE) Algorithm <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__. To understand QPE in depth, you can see also `Ch.3.6 Quantum Phase Estimation <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__."
msgstr "A explicação detalhada de como o algoritmo funciona pode ser encontrada em `Algoritmo de Estimativa de Fase Iterativa (IPE) <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>` __. Para entender o QPE em profundidade, você pode ver também `Ch.3.6 Estimativa de Fase Quântica <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>` __."

#: ../../tutorials/textbook/01_IQPE.ipynb:260
msgid "IPE example with a 1-qubit gate for :math:`U`"
msgstr "Exemplo do IPE com uma porta de 1 qubit para :math:`U`"

#: ../../tutorials/textbook/01_IQPE.ipynb:262
msgid "We want to apply the IPE algorithm to estimate the phase for a 1-qubit operator :math:`U`. For example, here we use the :math:`S`-gate."
msgstr "Queremos aplicar o algoritmo IPE para estimar a fase para um operador de 1-qubit :math:` U `. Por exemplo, aqui utilizamos a porta :math:`S`."

#: ../../tutorials/textbook/01_IQPE.ipynb:264
msgid "Let’s apply the IPE algorithm to estimate the phase for :math:`S`-gate. Its matrix is"
msgstr "Apliquemos o algoritmo IPE para estimar a fase para a porta :math:` S `. Sua matriz é"

#: ../../tutorials/textbook/01_IQPE.ipynb:266
msgid " S =\n"
"\\begin{bmatrix}\n"
"1 & 0\\\\\n"
"0 & e^\\frac{i\\pi}{2}\\\\\n"
"\\end{bmatrix}"
msgstr " S =\n"
"\\begin{bmatrix}\n"
"1 & 0\\\\\n"
"0 & e^\\frac{i\\pi}{2}\\\\\n"
"\\end{bmatrix}"

#: ../../tutorials/textbook/01_IQPE.ipynb:274
msgid "That is, the :math:`S`-gate adds a phase :math:`\\pi/2` to the state :math:`|1\\rangle`, leaving unchanged the phase of the state :math:`|0\\rangle`"
msgstr "Ou seja, a porta :math:`S` adiciona uma fase :math:`\\pi/2` ao estado :math:`|1\\rangle`, deixando inalterada a fase do estado :math:`|0\\rangle`"

#: ../../tutorials/textbook/01_IQPE.ipynb:276
msgid "S|1\\rangle = e^\\frac{i\\pi}{2}|1\\rangle\n\n"
msgstr "S|1\\rangle = e^\\frac{i\\pi}{2}|1\\rangle\n\n"

#: ../../tutorials/textbook/01_IQPE.ipynb:278
msgid "In the following, we will use the notation and terms used in `Section 2 of lab 4 <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__."
msgstr "No seguinte, utilizaremos a notação e os termos utilizados na `Seção 2 do laboratório 4 <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>` __."

#: ../../tutorials/textbook/01_IQPE.ipynb:280
msgid "Let’s consider to estimate the phase :math:`\\phi=\\frac{\\pi}{2}` for the eigenstate :math:`|1\\rangle`, we should find :math:`\\varphi=\\frac{1}{4}` (where :math:`\\phi = 2 \\pi \\varphi`). Therefore to estimate the phase we need exactly 2 phase bits, i.e. :math:`m=2`, since :math:`1/2^2=1/4`. So :math:`\\varphi=0.\\varphi_1\\varphi_2`."
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:282
msgid "Remember from the theory that for the IPE algorithm, :math:`m` is also the number of iterations, so we need only :math:`2` iterations or steps."
msgstr "Lembre-se da teoria de que para o algoritmo IPE, :math:`m` é também o número de iterações, portanto, precisamos de apenas :math:`2` iterações ou etapas."

#: ../../tutorials/textbook/01_IQPE.ipynb:284
msgid "First, we initialize the circuit. IPE works with only 1 auxiliary qubit, instead of :math:`m` counting qubits of the QPE algorithm. Therefore, we need 2 qubits, 1 auxiliary qubit and 1 for the eigenstate of :math:`U`-gate, and a classical register of 2 bits, for the phase bits :math:`\\varphi_1`, :math:`\\varphi_2`."
msgstr "Primeiro, inicializamos o circuito. O IPE trabalha com apenas 1 qubit auxiliar, em vez de :math:`m` qubits de contagem do algoritmo QPE. Por isso, precisamos de 2 qubits, 1 qubit auxiliar e 1 para o autoestado da porta :math:`U`, e um registrador clássico de 2 bits, para os bits de fase :math:`\\varphi_1`, :math:`\\varphi_2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:311
#: ../../tutorials/textbook/01_IQPE.ipynb:702
msgid "First step"
msgstr "Primeiro passo"

#: ../../tutorials/textbook/01_IQPE.ipynb:313
msgid "Now we build the quantum circuit for the first step, that is, the first iteration of the algorithm, to estimate the least significant phase bit :math:`\\varphi_m`, in this case :math:`\\varphi_2`. For the first step we have 3 sub-steps: - initialization - application of the Controlled-:math:`U` gates - measure of the auxiliary qubit in x-basis"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:316
#: ../../tutorials/textbook/01_IQPE.ipynb:707
msgid "Initialization"
msgstr "Inicialização"

#: ../../tutorials/textbook/01_IQPE.ipynb:318
msgid "The initialization consists of application the Hadamard gate to the auxiliary qubit and the preparation of the eigenstate :math:`|1\\rangle`."
msgstr "A inicialização consiste da aplicação da porta Hadamard no qubit auxiliar e da preparação do autoestado :math:`|1\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:351
#: ../../tutorials/textbook/01_IQPE.ipynb:742
msgid "Application of the Controlled-:math:`U` gates"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:353
msgid "Then we have to apply :math:`2^t` times the Controlled-:math:`U` operators (see also in the docs `Two qubit gates <https://qiskit.org/documentation/tutorials/circuits/3_summary_of_quantum_operations.html#Two-qubit-gates>`__), that, in this example, is the Controlled-:math:`S` gate (:math:`CS` for short)."
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:355
msgid "To implement :math:`CS` in the circuit, since :math:`S` is a phase gate, we can use the controlled phase gate :math:`\\text{CP}(\\theta)`, with :math:`\\theta=\\pi/2`."
msgstr "Para implementar :math:`CS` no circuito, já que :math:`S` é um porta de fase, podemos usar a porta de fase controlada :math:`\\text{CP}(\\theta)`, com :math:`\\theta=\\pi/2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:387
msgid "Let’s apply :math:`2^t` times :math:`\\text{CP}(\\pi/2)`. Since for the first step :math:`t=m-1`, and :math:`m=2`, we have :math:`2^t=2`."
msgstr "Apliquemos :math:`2^t` vezes :math:`\\text{CP}(\\pi/2)`. Dado que para o primeiro passo :math:`t=m-1`, e :math:`m=2`, temos :math:`2^t=2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:420
#: ../../tutorials/textbook/01_IQPE.ipynb:811
msgid "Measure in x-basis"
msgstr "Medição na base x"

#: ../../tutorials/textbook/01_IQPE.ipynb:422
msgid "Finally, we perform the measurement of the auxiliary qubit in x-basis. So we will define a function to perform the x_measure and then apply it."
msgstr "Finalmente, procedemos com a medição do qubit auxiliar na base-x. Então definiremos uma função para realizar a medida_x e então aplicá-la."

#: ../../tutorials/textbook/01_IQPE.ipynb:446
msgid "In this way we obtain the phase bit :math:`\\varphi_2` and store it in the classical bit :math:`c_0`."
msgstr "Desta forma obtemos o bit de fase :math:`\\varphi_2` e o armazenamos no bit clássico :math:`c_0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:478
msgid "Subsequent steps (2nd step)"
msgstr "Passos subsequentes (2° passo)"

#: ../../tutorials/textbook/01_IQPE.ipynb:480
msgid "Now we build the quantum circuit for the other remaining steps, in this example, only the second one. In these steps we have 4 sub-steps: the 3 sub-steps as in the first step and, in the middle, the additional step of the phase correction - initialization with reset - phase correction - application of the Controlled-:math:`U` gates - measure of the auxiliary qubit in x-basis"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:483
#: ../../tutorials/textbook/01_IQPE.ipynb:850
msgid "Initialization with reset"
msgstr "Inicialização com reset"

#: ../../tutorials/textbook/01_IQPE.ipynb:485
msgid "As we want to perform an iterative algorithm in the same circuit, we need to reset the auxiliary qubit :math:`q0` after the measument gate and initialize it again as before to recycle the qubit."
msgstr "Como queremos realizar um algoritmo iterativo no mesmo circuito, precisamos reiniciar o qubit auxiliar :math:`q0` após a porta de medição e inicializá-lo novamente como antes para reciclar o qubit."

#: ../../tutorials/textbook/01_IQPE.ipynb:518
#: ../../tutorials/textbook/01_IQPE.ipynb:883
msgid "Phase correction (for step 2)"
msgstr "Correção de fase (para o passo 2)"

#: ../../tutorials/textbook/01_IQPE.ipynb:520
msgid "As seen in the theory, in order to extract the phase bit :math:`\\varphi_{1}`, we perform a phase correction of :math:`-\\pi\\varphi_2/2`. Of course, we need to apply the phase correction in the circuit only if the phase bit :math:`\\varphi_2=1`, i.e. we have to apply the phase correction of :math:`-\\pi/2` only if the classical bit :math:`c_0` is 1."
msgstr "Como visto na teoria, para extrair o bit de fase :math:`\\varphi_{1}`, realizamos uma correção de fase de :math:`-\\pi\\varphi_2/2`. Claro, precisamos aplicar a correção de fase no circuito apenas se o bit de fase :math:`\\varphi_2=1`, ou seja, temos que aplicar a correção de fase de ::math:`-\\pi/2` apenas se o bit clássico :math:`c_0` for 1."

#: ../../tutorials/textbook/01_IQPE.ipynb:522
msgid "So, after the reset we apply the phase gate :math:`P(\\theta)` with phase :math:`\\theta=-\\pi/2` conditioned by the classical bit :math:`c_0` (:math:`=\\varphi_2`) using the ``c_if`` method. So as we saw in the first part of this tutorial, we have to use the ``c_if`` method with a value of 1, as :math:`1_{10} = 001_{2}` (the subscripts :math:`_{10}` and :math:`_2` indicate the decimal and binary representations)."
msgstr "Então, após o reset aplicamos a porta de fase :math:`P(\\theta)` com fase :math:`\\theta=-\\pi/2` condicionada pelo bit clássico :math:`c_0` (:math:`=\\varphi_2`) usando o método ``c_if``. Logo, como vimos na primeira parte deste tutorial, temos que usar o método ``c_if`` com um valor de 1, como em :math:`1_{10} = 001_{2}` (os subscritos :math:`_{10}` e :math:`_2` indicam as representações decimal e binária)."

#: ../../tutorials/textbook/01_IQPE.ipynb:554
#: ../../tutorials/textbook/01_IQPE.ipynb:919
msgid "Application of the Controlled-:math:`U` gates and x-measurement (for step 2)"
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:556
msgid "We apply the :math:`CU` operations as we did in the first step. For the second step we have :math:`t=m-2`, hence :math:`2^t=1`. So we apply :math:`\\text{CP}(\\pi/2)` once. And then we perform the x-measurement of the qubit :math:`q_0`, storing the result, the phase bit :math:`\\varphi_1`, in the bit :math:`c_1` of classical register."
msgstr "Aplicamos as operações :math:`CU` assim como fizemos no primeiro passo. Para o segundo passo temos :math:`t=m-2`, daí :math:`2^t=1`. Então aplicamos :math:`\\text{CP}(\\pi/2)` uma vez. E então realizamos a x-medição do qubit :math:`q_0`, armazenando o resultado, o bit de phase :math:`\\varphi_1`, no bit :math:`c_1` do registrador clássico."

#: ../../tutorials/textbook/01_IQPE.ipynb:581
msgid "Et voilà, we have our final circuit"
msgstr "Et voilà, temos nosso circuito final"

#: ../../tutorials/textbook/01_IQPE.ipynb:611
msgid "Let’s execute the circuit with the ``qasm_simulator``, the simulator without noise that run locally."
msgstr "Executemos o circuito com o ``qasm_simulator``, o simulador sem ruído que funciona localmente."

#: ../../tutorials/textbook/01_IQPE.ipynb:641
msgid "In the picture we have the same histograms but on the left we have on the x-axis the string with phase bits :math:`\\varphi_1`, :math:`\\varphi_2` and on the right the actual phase :math:`\\varphi` in decimal representation."
msgstr "Na imagem temos os mesmos histogramas mas à esquerda temos no eixo x a string com bits de fase :math:`\\varphi_1`, :math:`\\varphi_2` e à direita a fase real :math:`\\varphi` em representação decimal."

#: ../../tutorials/textbook/01_IQPE.ipynb:643
msgid "As we expected we have found :math:`\\varphi=\\frac{1}{4}=0.25` with a :math:`100\\%` probability."
msgstr "Como esperávamos encontramos :math:`\\varphi=\\frac{1}{4}=0.25` com uma probabilidade de :math:`100\\%`."

#: ../../tutorials/textbook/01_IQPE.ipynb:655
msgid "IPE example with a 2-qubit gate"
msgstr "Exemplo de IPE com uma porta de 2 qubits"

#: ../../tutorials/textbook/01_IQPE.ipynb:657
msgid "Now, we want to apply the IPE algorithm to estimate the phase for a 2-qubit gate :math:`U`. For this example, let’s consider the controlled version of the :math:`T` gate, i.e. the gate :math:`U=\\textrm{Controlled-}T` (that from now we will express more compactly with :math:`CT`). Its matrix is"
msgstr "Agora, queremos aplicar o algoritmo IPE para estimar a fase de uma porta de 2 qubits :math:`U`. Para este exemplo, vamos considerar a versão controlada da porta :math:`T`, ou seja, a porta :math:`U=\\textrm{Controlled-}T` (que a partir de agora vamos expressar de forma mais compacta com :math:` CT'). Sua matriz é"

#: ../../tutorials/textbook/01_IQPE.ipynb:659
msgid " CT =\n"
"\\begin{bmatrix}\n"
"1 & 0 & 0 & 0\\\\\n"
"0 & 1 & 0 & 0\\\\\n"
"0 & 0 & 1 & 0\\\\\n"
"0 & 0 & 0 & e^\\frac{i\\pi}{4}\\\\\n"
"\\end{bmatrix}"
msgstr " CT =\n"
"\\begin{bmatrix}\n"
"1 & 0 & 0 & 0\\\\\n"
"0 & 1 & 0 & 0\\\\\n"
"0 & 0 & 1 & 0\\\\\n"
"0 & 0 & 0 & e^\\frac{i\\pi}{4}\\\\\n"
"\\end{bmatrix}"

#: ../../tutorials/textbook/01_IQPE.ipynb:669
msgid "That is, the :math:`CT` gate adds a phase :math:`\\pi/4` to the state :math:`|11\\rangle`, leaving unchanged the phase of the other computational basis states :math:`|00\\rangle`, :math:`|01\\rangle`, :math:`|10\\rangle`."
msgstr "Isto é, a porta :math:`CT` adiciona uma fase :math:`\\pi/4` para o estado :math:`|11\\rangle`, deixando inalterada a fase dos outros estados de base computacional :math:`|00\\rangle`, :math:`|01\\rangle`, :math:`|10\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:671
msgid "Let’s consider to estimate the phase :math:`\\phi=\\pi/4` for the eigenstate :math:`|11\\rangle`, we should find :math:`\\varphi=1/8`, since :math:`\\phi = 2 \\pi \\varphi`. Therefore to estimate the phase we need exactly 3 classical bits, i.e. :math:`m=3`, since :math:`1/2^3=1/8`. So :math:`\\varphi=0.\\varphi_1\\varphi_2\\varphi_3`."
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:673
msgid "As done with the example for the 1-qubit :math:`U` operator we will go through the same steps but this time we will have :math:`3` steps since :math:`m=3`, and we will not repeat all the explanations. So for details see the above example for 1-qubit :math:`U` gate."
msgstr "Como feito com o exemplo para o operador de 1 qubit :math:`U`, seguiremos os mesmos passos, mas desta vez teremos :math:`3` passos já que :math:`m=3`, e não vamos repetir todas as explicações. Portanto, para obter detalhes, consulte o exemplo acima para a porta de 1 qubit :math:`U`."

#: ../../tutorials/textbook/01_IQPE.ipynb:675
msgid "First, we initialize the circuit with 3 qubits, 1 for the auxiliary qubit and 2 for the 2-qubit gate, and 3 classical bits to store the phase bits :math:`\\varphi_1`, :math:`\\varphi_2`, :math:`\\varphi_3`."
msgstr "Primeiro, inicializamos o circuito com 3 qubits, 1 para o qubit auxiliar e 2 para a porta de 2 qubits, e 3 bits clássicos para armazenar os bits de fase :math:`\\varphi_1`, :math:`\\varphi_2`, :math:`\\varphi_3`."

#: ../../tutorials/textbook/01_IQPE.ipynb:704
msgid "Now we build the quantum circuit for the first step, to estimate the least significant phase bit :math:`\\varphi_m=\\varphi_3`."
msgstr "Agora construímos o circuito quântico para a primeira etapa, para estimar o bit de fase menos significativo :math:`\\varphi_m=\\varphi_3`."

#: ../../tutorials/textbook/01_IQPE.ipynb:709
msgid "We initialize the auxiliary qubit and the other qubits with the eigenstate :math:`|11\\rangle`."
msgstr "Nós inicializamos o qubit auxiliar e os outros qubits com o estado inerente :math:`|11\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:744
msgid "Then we have to apply multiple times the :math:`CU` operator, that, in this example, is the Controlled-:math:`CT` gate (:math:`CCT` for short)."
msgstr ""

#: ../../tutorials/textbook/01_IQPE.ipynb:746
msgid "To implement :math:`CCT` in the circuit, since :math:`T` is a phase gate, we can use the multi-controlled phase gate :math:`\\text{MCP}(\\theta)`, with :math:`\\theta=\\pi/4`."
msgstr "Para implementar :math:`CCT` no circuito, dado que :math:`T` é uma porta de fase, podemos usar a porta de fase multi-controlada :math:`\\text{MCP}(\\theta)`, com :math:`\\theta=\\pi/4`."

#: ../../tutorials/textbook/01_IQPE.ipynb:778
msgid "Let’s apply :math:`2^t` times :math:`\\text{MCP}(\\pi/4)`. Since for the first step :math:`t=m-1` and :math:`m=3`, we have :math:`2^t=4`."
msgstr "Apliquemos :math:`2^t` vezes :math:`\\text{MCP}(\\pi/4)`. Uma vez que para o primeiro passo :math:`t=m-1` e :math:`m=3`, temos :math:`2^t=4`."

#: ../../tutorials/textbook/01_IQPE.ipynb:813
msgid "Finally, we perform the measurement of the auxiliary qubit in x-basis. We can use the ``x_measurement`` function defined above in the example for 1-qubit gate. In this way we have obtained the phase bit :math:`\\varphi_3` and stored it in the classical bit :math:`c_0`."
msgstr "Finalmente, realizamos a medida do qubit auxiliar na base x. Podemos usar a função ``x_measurement`` definida acima, no exemplo de uma porta de 1 qubit. Dessa forma, obtemos o bit de fase :math:`\\varphi_3` e podemos guardá-lo no bit clássico :math:`c_0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:845
msgid "Subsequent steps (2nd, 3rd)"
msgstr "Passos subsequentes (2°, 3°)"

#: ../../tutorials/textbook/01_IQPE.ipynb:847
msgid "Now we build the quantum circuit for the other remaining steps, the second and the third ones. As said in the first example, in these steps we have the additional sub-step of the phase correction."
msgstr "Agora, construímos o circuito quântico para os outros passos restantes, o segundo e o terceiro. Como dito no primeiro exemplo, nesses passos temos uma subetapa adicional de correção de fase."

#: ../../tutorials/textbook/01_IQPE.ipynb:885
msgid "In order to extract the phase bit :math:`\\varphi_{2}`, we perform a phase correction of :math:`-\\pi\\varphi_3/2`."
msgstr "Para extrair o bit de fase :math:`\\varphi_{2}`, fazemos uma correção de fase de :math:`-\\pi\\varphi_3/2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:887
msgid "So, after the reset we apply the phase gate :math:`P(\\theta)` with phase :math:`\\theta=-\\pi/2` conditioned by the classical bit :math:`c_0` (:math:`=\\varphi_3`)."
msgstr "Então, após fazer o reset, aplicamos a porta de fase :math:`P(\\theta)` com fase :math:`\\theta=-\\pi/2`, condicionada pelo bit clássico :math:`c_0` (:math:`=\\varphi_3`)."

#: ../../tutorials/textbook/01_IQPE.ipynb:921
msgid "We apply the :math:`CU` operations as we did in the first step. For the second step we have :math:`t=m-2`, hence :math:`2^t=2`. So we apply :math:`\\text{MCP}(\\pi/4)` :math:`2` times. And then we perform the x-measurement of the qubit :math:`q_0`, storing the phase bit :math:`\\varphi_2` in the bit :math:`c_1`."
msgstr "Nós aplicamos as operações :math:`CU` como no primeiro passo. Já no segundo passo, temos :math:`t=m-2`, de modo que :math:`2^t=2`. Então aplicamos :math:`\\text{MCP}(\\pi/4)` :math:`2` vezes. E então realizamos a medida em x do qubit :math:`q_0`, guardando o bit de fase :math:`\\varphi_2` no bit :math:`c_1`."

#: ../../tutorials/textbook/01_IQPE.ipynb:955
msgid "All substeps of the 3rd step"
msgstr "Todos os subpassos do 3° passo"

#: ../../tutorials/textbook/01_IQPE.ipynb:957
msgid "For the 3rd and last step, we perform the reset and initialization of the auxiliary qubit as done in the second step."
msgstr "Para o 3° e último passo, realizamos o reset e a inicialização do qubit auxiliar como feito no segundo passo."

#: ../../tutorials/textbook/01_IQPE.ipynb:959
msgid "Then at the 3rd step we have to perform the phase correction of :math:`-2\\pi 0.0\\varphi_{2}\\varphi_{3}= -2\\pi \\left(\\frac{\\varphi_2}{4}+\\frac{\\varphi_3}{8}\\right)=-\\frac{\\varphi_2\\pi}{2}-\\frac{ \\varphi_3\\pi}{4}`, thus we have to apply 2 conditioned phase corrections, one conditioned by :math:`\\varphi_3` (:math:`=c_0`) and the other by :math:`\\varphi_2`\\ (:math:`=c_1`). To do this we have to apply the following: - gate :math:`P(-\\pi/4)` conditioned by :math:`c_0=1`, that is, by :math:`c=001` (c_if with value :math:`1`) - gate :math:`P(-\\pi/2)` conditioned by :math:`c_1=1`, that is, the gate is applied when :math:`c=010` (c_if with values :math:`2`) - gate :math:`P(-3\\pi/4)` conditioned by :math:`c_1=1` and :math:`c_0=1` that is, the gate is applied when :math:`c=011` (c_if with values :math:`3`)"
msgstr "Então, no 3° passo, realizamos uma correção de fase de :math:`-2\\pi 0.0\\varphi_{2}\\varphi_{3}= -2\\pi \\left(\\frac{\\varphi_2}{4}+\\frac{\\varphi_3}{8}\\right)=-\\frac{\\varphi_2\\pi}{2}-\\frac{ \\varphi_3\\pi}{4}`, portanto precisamos aplicar 2 correções de fase condicionadas, uma condicionada por :math:`\\varphi_3` (:math:`=c_0`) e a outra por :math:`\\varphi_2`\\ (:math:`=c_1`). Para fazer isso, precisamos aplicar o seguinte: - porta :math:`P(-\\pi/4)` condicionado por :math:`c_0=1`, ou seja, by :math:`c=001` (c_if com valor :math:`1`) - porta :math:`P(-\\pi/2)` condicionado por :math:`c_1=1`, ou seja, a porta é aplicaca quando :math:`c=010` (c_if com valores :math:`2`) - porta :math:`P(-3\\pi/4)` condicionado por :math:`c_1=1` e :math:`c_0=1` ou seja, a porta é aplicada quando :math:`c=011` (c_if com valores :math:`3`)"

#: ../../tutorials/textbook/01_IQPE.ipynb:962
msgid "Next, the :math:`CU` operations: we apply :math:`2^t` times the :math:`\\text{MCP}(\\pi/4)` gate and since at the 3rd step :math:`t=m-3=0`, we apply the gate only once."
msgstr "Em seguida, as operações :math:`CU`: aplicamos :math:`2^t` vezes a porta :math:`\\text{MCP}(\\pi/4)` e desde o 3° passo :math:`t=m-3=0`, aplicamos a porta apenas uma vez."

#: ../../tutorials/textbook/01_IQPE.ipynb:1010
msgid "Now, we execute the circuit with the simulator without noise."
msgstr "Agora, executamos o circuito com o simulador sem ruído."

#: ../../tutorials/textbook/01_IQPE.ipynb:1040
msgid "We have obtained :math:`100\\%` probability to find :math:`\\varphi=0.125`, that is, :math:`1/8`, as expected."
msgstr "Obtivemos probabilidade de :math:`100\\%` de encontrar :math:`\\varphi=0.125`, isto é, :math:`1/8`, como esperado."

