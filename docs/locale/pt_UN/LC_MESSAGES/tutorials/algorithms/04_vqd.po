msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-05-14 16:55\n"
"Last-Translator: \n"
"Language: pt_UN\n"
"Language-Team: Portuguese (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/04_vqd.po\n"
"X-Crowdin-File-ID: 9933\n"

#: ../../tutorials/algorithms/04_vqd.ipynb:10
msgid "This page was generated from `tutorials/algorithms/04_vqd.ipynb`__."
msgstr "Esta página foi gerada, a partir de `tutorials/algorithms/04_vqd.ipynb`__."

#: ../../tutorials/algorithms/04_vqd.ipynb:9
msgid "Variational Quantum Deflation (VQD) Algorithm"
msgstr "Algoritmo de Deflação Quântica Variacional (VQD)"

#: ../../tutorials/algorithms/04_vqd.ipynb:11
msgid "This notebook demostrates how to use Qiskit's implementation of the `Variational Quantum Deflation (VQD) <https://qiskit.org/documentation/stubs/qiskit.algorithms.eigensolvers.VQD.html>`__ algorithm for computing higher energy states of a Hamiltonian, as introduced in this `reference paper <https://arxiv.org/abs/1805.08138>`__."
msgstr "Este notebook mostra como usar a implementação do Qiskit do algoritmo `Variational Quantum Deflation (VQD) <https://qiskit.org/documentation/stubs/qiskit.algorithms.eigensolvers.VQD.html>`__ para calcular estados de energia mais altos de um hamiltoniano, conforme apresentado neste `documento de referência <https://arxiv.org/abs/1805.08138>`__."

#: ../../tutorials/algorithms/04_vqd.ipynb:23
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/algorithms/04_vqd.ipynb:25
msgid "VQD is a quantum algorithm that uses a variational technique to find the *k* eigenvalues of the Hamiltonian *H* of a given system."
msgstr "VQD é um algoritmo quântico que usa uma técnica variacional para encontrar os autovalores *k* do hamiltoniano *H* de um determinado sistema."

#: ../../tutorials/algorithms/04_vqd.ipynb:27
msgid "The algorithm computes excited state energies of generalized hamiltonians by optimizing over a modified cost function. Each successive eigenvalue is calculated iteratively by introducing an overlap term with all the previously computed eigenstates that must be minimized. This ensures that higher energy eigenstates are found."
msgstr "O algoritmo calcula as energias do estado excitado de hamiltonianos generalizados otimizando sobre uma função de custo modificada. Cada autovalor sucessivo é calculado iterativamente pela introdução de um termo de sobreposição com todos os autoestados previamente calculados que devem ser minimizados. Isso garante que auto-estados de maior energia sejam encontrados."

#: ../../tutorials/algorithms/04_vqd.ipynb:39
msgid "Complete working example for VQD"
msgstr "Exemplo de trabalho completo para VQD"

#: ../../tutorials/algorithms/04_vqd.ipynb:50
msgid "The first step of the VQD workflow is to create a qubit operator, ansatz and optimizer. For this example, you can use the H2 molecule, which should already look familiar if you have completed the previous VQE tutorials:"
msgstr "A primeira etapa do fluxo de trabalho VQD é criar um operador qubit, ansatz e otimizador. Para este exemplo, você pode usar a molécula H2, que já deve parecer familiar se você tiver concluído os tutoriais VQE anteriores:"

#: ../../tutorials/algorithms/04_vqd.ipynb:81
msgid "You can set up, for example, a ``TwoLocal`` ansatz with three qubits, and choose ``SLSQP`` as the optimization method."
msgstr "Você pode configurar, por exemplo, um ansatz ``TwoLocal`` com três qubits e escolher ``SLSQP`` como método de otimização."

#: ../../tutorials/algorithms/04_vqd.ipynb:117
msgid "The next step of the workflow is to define the required primitives for running ``VQD``. This algorithm requires two different primitive instances: one ``Estimator`` for computing the expectation values for the \"VQE part\" of the algorithm, and one ``Sampler``. The sampler will be passed along to the ``StateFidelity`` subroutine that will be used to compute the cost for higher energy states. There are several methods that you can use to compute state fidelities, but to keep things simple, you can use the ``ComputeUncompute`` method already available in ``qiskit.algorithm.state_fidelities``."
msgstr "A próxima etapa do fluxo é definir as primitivas necessárias para executar o ``VQD``. Este algoritmo requer duas instâncias primitivas diferentes: uma ``Estimator`` para calcular os valores esperados para a “parte VQE” do algoritmo, e uma ``Sampler``. O amostrador será passado para a sub-rotina ``StateFidelity`` que será usada para calcular o custo para estados de energia mais altos. Existem vários métodos que você pode usar para calcular fidelidades de estado, mas para simplificar, você pode usar o método ``ComputeUncompute`` já disponível em ``qiskit.algorithm.state_fidelities``."

#: ../../tutorials/algorithms/04_vqd.ipynb:144
msgid "In order to set up the VQD algorithm, it is important to define two additional inputs: the number of energy states to compute (``k``) and the ``betas`` defined in the original VQD paper. In this example, the number of states (``k``) will be set to three, which indicates that two excited states will be computed in addition to the ground state."
msgstr "Para configurar o algoritmo VQD, é importante definir duas entradas adicionais: o número de estados de energia a serem computados (``k``) e os ``betas`` definidos no artigo original do VQD. Neste exemplo, o número de estados (``k``) será definido como três, o que indica que dois estados excitados serão computados além do estado fundamental."

#: ../../tutorials/algorithms/04_vqd.ipynb:146
msgid "The ``betas`` balance the contribution of each overlap term to the cost function, and they are an optional argument in the ``VQD`` construction. If not set by the user, they can be autoevaluated for input operators of type ``SparsePauliOp``. Please note that if you want to set your own ``betas``, you should provide a list of values of length ``k``."
msgstr "Os ``betas`` equilibram a contribuição de cada termo de sobreposição para a função de custo e são um argumento opcional na construção do ``VQD``. Se não forem definidos pelo usuário, eles podem ser avaliados automaticamente para operadores de entrada do tipo ``SparsePauliOp``. Por favor, note que se você quiser definir seus próprios ``betas``, você deve fornecer uma lista de valores de comprimento ``k``."

#: ../../tutorials/algorithms/04_vqd.ipynb:168
msgid "You are almost ready to run the VQD algorithm, but let's define a callback first to store intermediate values:"
msgstr "Você está quase pronto(a) para executar o algoritmo VQD, mas primeiro vamos definir um callback para armazenar valores intermediários:"

#: ../../tutorials/algorithms/04_vqd.ipynb:196
msgid "You can finally instantiate ``VQD`` and compute the eigenvalues for the chosen operator."
msgstr "Você pode finalmente instanciar ``VQD`` e calcular os autovalores para o operador escolhido."

#: ../../tutorials/algorithms/04_vqd.ipynb:221
msgid "You can see the three state energies as part of the ``VQD`` result:"
msgstr "Você pode ver as três energias de estado como parte do resultado ``VQD``:"

#: ../../tutorials/algorithms/04_vqd.ipynb:266
msgid "And we can use the values stored by the callback to plot the energy convergence for each state:"
msgstr "E podemos usar os valores armazenados pelo retorno de chamada para plotar a convergência de energia para cada estado:"

#: ../../tutorials/algorithms/04_vqd.ipynb:312
msgid "This molecule can be solved exactly using the ``NumPyEigensolver`` class, which will give a reference value that you can compare with the ``VQD`` result:"
msgstr "Esta molécula pode ser resolvida exatamente usando a classe ``NumPyEigensolver``, que fornecerá um valor de referência que você pode comparar com o resultado ``VQD``:"

#: ../../tutorials/algorithms/04_vqd.ipynb:338
msgid "Let's see a comparison of the exact result with the previously computed ``VQD`` eigenvalues:"
msgstr "Vamos ver uma comparação do resultado exato com os autovalores ``VQD`` calculados anteriormente:"

#: ../../tutorials/algorithms/04_vqd.ipynb:387
msgid "As you can see, the result from VQD matches the values from the exact solution, and extends VQE to also compute excited states."
msgstr "Como você pode ver, o resultado do VQD corresponde aos valores da solução exata e estende o VQE para também computar estados excitados."

