msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:57\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"
"Language: pt_UN\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "Esta página foi gerada a partir de `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Uma introdução aos Algoritmos no Qiskit"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr "Esta é uma introdução aos algoritmos no Qiskit e fornece uma visão geral de alto nível para ajudar a entender os vários aspectos da funcionalidade a ser iniciado. Outros tutoriais fornecerão material mais aprofundado, sobre os algoritmos, e formas de usá-los, etc."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "Como a biblioteca de algoritmos está estruturada?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Linear Solvers`` for linear systems of equations problems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr "O Qiskit fornece um número de `Algoritmos <https://qiskit.org/documentation/apidoc/algorithms.html>`__ e eles estão agrupados por categoria, de acordo com a tarefa que eles podem executar. Por exemplo, ``Minimun Eigensolvers`` para encontrar o menor autovalor de um operador, por exemplo, a energia base de um Hamiltoniano químico ou uma solução para um problema de otimização quando expressa como Hamiltoniano Ising. Existem ``Linear Solvers`` para sistemas lineares de equações e ``Amplitude Estimators`` para estimativa de valor que pode ser usada, digamos, em aplicações financeiras. O conjunto completo de categorias pode ser visto no link de documentação dos algoritmos acima."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr "Algoritmos são configuráveis e muitas vezes parte da configuração estará na forma de blocos de construção menores, de que instâncias diferentes do tipo bloco de construção podem ser fornecidas. Por exemplo, com ``VQE``, o Variacional Quantum Eigensolver, precisa de uma função de onda experimental, na forma de um ``QuantumCircuit`` e um otimizador clássico entre outras coisas."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let’s take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "Vamos dar uma olhada em um exemplo para construir uma instância de VQE. Aqui ``TwoLocal`` é a forma variacional (versão de ondas de teste), um circuito parametrizado que pode ser variado e ``SLSQP`` um otimizador clássico. Estas são criadas como instâncias separadas e transmitidas para o VQE quando este for construído. Tentando, por exemplo, um otimizador clássico diferente, ou forma variacional é simplesmente um caso de criação de uma instância da que você deseja e a passagem para o VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:58
msgid "Let’s draw the ansatz so we can see it’s a QuantumCircuit where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We’ll come back to the parameters later in a working example below."
msgstr "Vamos desenhar o ansatz para que possamos ver que é um QuantumCircuit onde[0] através de θ[7] serão os parâmetros variados conforme o otimizador do VQE encontrar o eigenvalue mínimo. Voltaremos aos parâmetros mais tarde, abaixo, em um exemplo funcional."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:132
msgid "But more is needed before we can run the algorithm so let’s get to that next."
msgstr "Mas é necessário mais antes de podermos executar o algoritmo, então vamos em frente."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:144
msgid "How to run an algorithm?"
msgstr "Como executar um algoritmo?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:146
msgid "In order to run an algorithm we need to have backend, a simulator or real device, on which the circuits that comprise the algorithm can be run. So for example we can use the ``aer_simulator_statevector`` from the Aer provider."
msgstr "Para executar um algoritmo precisamos ter backend, um simulador ou dispositivo real, sobre o qual os circuitos que compreendem o algoritmo podem ser executados. Assim, por exemplo, podemos utilizar o ``aer_simulator_statevector`` do provedor Aer."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:169
msgid "Now a backend on its own does not have information on how you might want to run the circuits etc. For example how many shots, do you want a noise model, even options around transpiling the circuits. For this Qiskit Terra has a `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ which is provided both the backend as well as various settings around the circuit processing and execution so for instance:"
msgstr "Agora um serviço por conta própria não tem informações sobre como você pode querer executar os circuitos etc. Por exemplo quantas interações, você quer um modelo de ruído, até mesmo opções ao redor transpilando os circuitos. Para este Qiskit Terra possui um `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ que é fornecido tanto o serviço como também várias configurações em torno do processamento e execução do circuito assim por exemplo:"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:193
msgid "Note: if you provide the backend directly then internally a QuantumInstance will be created from it, with default settings, so at all times the algorithms are working through a QuantumInstance."
msgstr "Nota: se você fornecer o backend diretamente então internamente ums QuantumInstance será criado a partir dele, com configurações padrão, para que os algoritmos trabalhem todo o tempo através de uma QuantumInstance."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:195
msgid "So now we would be able to call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr "Então agora nós seríamos capazes de chamar o método `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__. Este último é a interface de escolha para os módulos de aplicativos, como Natureza e Otimização, a fim de que possam trabalhar de forma intercambiável com qualquer algoritmo dentro da categoria específica."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:207
msgid "A complete working example"
msgstr "Um exemplo de trabalho completo"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:209
msgid "Let’s put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It’s a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr "Vamos colocar tudo o que aprendemos acima junto e criar um exemplo completo de trabalho. O VQE irá encontrar o valor minimum eigenvalue, ou seja, valor mínimo de energia de um operador Hamiltoniano e, portanto, precisamos de um operador com o qual o VQE possa trabalhar. Um operador desse tipo é fornecido abaixo. Isso foi originalmente criado pelo módulo de aplicativo de Química como um Hamiltonian para uma molécula de H2 à distância interatômica de 0,735A. É uma soma de termos Pauli abaixo, mas, por enquanto, não vou falar sobre isso, já que o objetivo é executar o algoritmo, porém informações adicionais sobre operadores podem ser encontradas em outros tutoriais."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:237
msgid "So let’s build a VQE instance passing a backend using a QuantumInstance, to the constructor. Now VQE does have setters so the QuantumInstance can also be passed later."
msgstr "Então vamos construir uma instância VQE passando um serviço QuantumInstance, para o construtor. Agora o VQE tem funções para que o QuantumInstance também possa ser passado mais tarde."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:239
msgid "Note: In order that you can run this notebook and see the exact same output the random number generator used throughout algorithms in algorithms_globals, as well as the transpiler and simulator, via the QuantumInstance, are seeded. You do not have to do this but if want to be able to reproduce the exact same outcome each time then this is how it’s done."
msgstr "Nota: Para que você possa executar este notebook e ver o resultado exato, o gerador de números aleatórios usado em toda a Aqua em aqua_globals, assim como o transpiler e o simulador, através da QuantumInstance precisa ser usado. Você não precisa fazer isso, mas se quiser ser capaz de reproduzir exatamente o mesmo resultado toda vez, então é assim que se faz."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:241
msgid "So let’s run VQE and print the result object it returns."
msgstr "Então, vamos executar o VQE e imprimir o resultado que ele retorna."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:345
msgid "From the above result we can see it took the optimizer ``65`` evaluations of parameter values until it found the minimum eigenvalue of ``-1.85727`` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr "Do resultado acima nós podemos ver que o otimizador ``65`` foi levado pelas avaliações dos valores dos parâmetros até que ele encontre o valor minimum eigenvalue of ``-1.85727`` que é a energia eletrônica do estado fundamental da molécula H2 indicada. Os parâmetros ideais do ansatz também podem ser vistos, que são os valores que estavam nos ansatz com valor mínimo."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:357
msgid "Using VQE setting QuantumInstance after Construction"
msgstr "Usando a configuração VQE QuantumInstance após construção"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:359
msgid "To close off let’s also create a VQE instance without supplying the QuantumInstance. We later set it as long as by the time VQE runs it has a QuantumInstance to use."
msgstr "Para fechar vamos também criar uma instância VQE sem fornecer o QuantumInstance. Posteriormente configuramos desde que pelo tempo o VQE o executa tem uma QuantumInstance para usar."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:463
msgid "As the identical seeding was used as the prior example the result can be seen to be the same."
msgstr "Uma vez que a semeadura idêntica foi utilizada como exemplo prévio, o resultado pode ser visto como o mesmo."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:474
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "Isso conclui essa introdução aos algoritmos no Qiskit. Confira os outros tutoriais de algoritmos nesta série para uma cobertura mais ampla e mais profunda dos algoritmos."

