msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:42\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/1_getting_started_with_qiskit.po\n"
"X-Crowdin-File-ID: 9114\n"
"Language: pt_UN\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."
msgstr "Esta página foi originada de `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:9
msgid "Getting Started with Qiskit"
msgstr "Começando com o Qiskit"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. The fundamental package of Qiskit is Terra that provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Execute**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Execute** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Aqui, trazemos uma visão geral de como utilizar o Qiskit. O pacote fundamental do Qiskit é o Terra, que fornece os blocos básicos de construção necessários para programar computadores quânticos. A unidade fundamental do Qiskit é o `circuito quântico <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Um fluxo básico utilizando Qiskit consiste de dois estágios: **Construção** e **Execução**. **Construção** permite que você faça diferentes circuitos quânticos que representam o problema que você está resolvendo, e **Execução** permite que você rode tais circuitos em diferentes backends. Após rodar os processos, os dados são coletados e pós-processados dependendo da saída desejada."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:36
msgid "Circuit Basics"
msgstr "Princípios básicos sobre Circuitos"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:39
msgid "Building the circuit"
msgstr "Construindo o circuito"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:41
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "O elemento básico necessário para seu primeiro programa é o QuantumCircuit. Começamos por criar um ``QuantumCircuit`` composto de três qubits."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:63
msgid "After you create the circuit with its registers, you can add gates (“operations”) to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr "Após criar o circuito com seus registradores, você pode adicionar portas (“operações”) para manipular os registradores. Conforme você avançar pelos tutoriais, descobrirá mais portas e circuitos; abaixo há um exemplo de circuito quântico que cria um estado GHZ de três qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:65
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:67
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit 0, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A controlled-Not operation (:math:`C_{X}`) between qubit 0 and qubit 1. - A controlled-Not operation between qubit 0 and qubit 2."
msgstr "Para criar tal estado, nós começamos com um registrador quântico de 3 qubits. Por padrão, cada qubit no registrador é inicializado em :math:`|0\\rangle`. Para fazer o estado GHZ, as seguintes portas são aplicadas: - Uma porta Hadamard :math:`H` no qubit 0, que o coloca no estado de superposição :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - Uma operações de inversão controlada (:math:`C_{X}`) entre os qubit 0 e 1. - Outra operação de inversão controlada entre os qubit 0 e 2."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:69
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "Em um computador quântico ideal, a execução desse circuito produziria o estado GHZ acima."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:71
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr "No Qiskit, as operações podem ser adicionadas ao circuito uma a uma, como mostrado abaixo."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:125
msgid "Visualize Circuit"
msgstr "Visualizar o Circuito"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:127
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Você pode visualizar seu circuito usando Qiskit ``QuantumCircuit.draw()``, que desenha o circuito na forma encontrada em muitos livros didáticos."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:157
msgid "In this circuit, the qubits are put in order, with qubit zero at the top and qubit two at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr "Neste circuito, os qubits são colocados em ordem, com o qubit zero na parte superior e o qubit dois na parte inferior. O circuito é lido da esquerda para a direita (as portas aplicadas antes no circuito aparecem mais para a esquerda)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:172
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Ao representar o estado de um sistema de múltiplos qubits, a ordem tensorial utilizada no Qiskit é diferente daquela empregada na maioria dos livros de física. Suponha que existam :math:`n` qubits, e o qubit :math:`j` é rotulado como :math:`Q_{j}`. O Qiskit usa uma ordem na qual o qubit :math:`n^{\\mathrm{th}}` está do lado esquerdo do produto tensorial, de forma que os vetores de base são rotulados como :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:174
msgid "For example, if qubit zero is in state 0, qubit 1 is in state 0, and qubit 2 is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Por exemplo, se o qubit zero estiver no estado 0, o qubit 1 no estado 0 e o qubit 2 no estado 1, o Qiskit representaria este estado como :math:`|100\\rangle`, enquanto que muitos livros sobre física o representariam como :math:`|001\\rangle`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:176
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit 0 being the control and qubit 1 being the target as"
msgstr "Essa diferença na rotulação afeta a forma como as operações multi-qubit são representadas como matrizes. Por exemplo, o Qiskit representa uma operação X-controlada (:math:`C_{X}`) com o qubit 0 sendo o controle e o qubit 1 sendo o alvo como"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:178
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:194
msgid "Simulating circuits using Qiskit Aer"
msgstr "Simulando circuitos usando Qiskit Aer"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:196
msgid "Qiskit Aer is our package for simulating quantum circuits. It provides many different backends for doing a simulation. There is also a basic, Python only, implementation called ``BasicAer`` in Terra that can be used as a drop-in replacement for ``Aer`` in the examples below."
msgstr "Qiskit Aer é o nosso pacote para a simulação de circuitos quânticos. Ele provê diferentes backends para a realização de simulações. Há também uma implementação básica, apenas para Python, chamada ``BasicAer`` no Terra que pode ser usada como um substituto direto para o ``Aer``, como nos exemplos abaixo."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:199
msgid "Statevector backend"
msgstr "Backend de Vetor de Estados"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:201
msgid "The most common backend in Qiskit Aer is the ``statevector_simulator``. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "O backend mais comum do Qiskit Aer é o ``statevector_simulator``. Ele retorna o estado quântico, que é um vetor complexo de dimensão :math:`2^n`, na qual :math:`n` é o número de qubits (então tenha cuidado ao usá-lo, já que ele rapidamente se tornará grande demais para a execução na sua máquina)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:212
msgid "To run the above circuit using the statevector simulator, first you need to import Aer and then set the backend to ``statevector_simulator``."
msgstr "Para executar o circuito acima usando o backend de vetor de estados, primeiro é necessário importar o Aer e então definir o backend como ``statevector_simulator``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:237
msgid "Now that we have chosen the backend, it’s time to compile and run the quantum circuit. In Qiskit we provide the ``execute`` function for this. ``execute`` returns a ``job`` object that encapsulates information about the job submitted to the backend."
msgstr "Agora que já escolhemos o backend, é hora de compilar e executar o circuito quântico. No Qiskit, é provida a função ``execute`` para isso. Ela retorna um objeto ``job`` que encapsula a informação quanto à tarefa sendo enviada ao backend."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:243
msgid "Tip: You can obtain the above parameters in Jupyter. Simply place the text cursor on a function and press Shift+Tab."
msgstr "Dica: Você pode obter os parâmetros acima no Jupyter. Simplesmente coloque o cursor sobre uma função e aperte Shift+Tab."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:269
msgid "When you run a program, a job object is made that has the following two useful methods: ``job.status()`` and ``job.result()``, which return the status of the job and a result object, respectively."
msgstr "Ao rodar um programa, um objeto job é criado que tem 2 métodos úteis: ``job.status()`` e ``job.result()``, que retornam o estados da tarefa e um objeto result, respectivamente."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:275
msgid "Note: Jobs run asynchronously, but when the result method is called, it switches to synchronous and waits for it to finish before moving on to another task."
msgstr "Obs.: Tarefas rodam assincronamente, mas quando o método result é chamado, isso muda para um modo síncrono e espera que termine antes de prosseguir para outra task."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:300
msgid "The results object contains the data and Qiskit provides the method ``result.get_statevector(circ)`` to return the state vector for the quantum circuit."
msgstr "O objeto results contém os dados e o Qiskit provê o método ``result.get_statevector(circ)`` para retornar o vetor de estados para o circuito quântico."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:349
msgid "Qiskit also provides a visualization toolbox to allow you to view these results."
msgstr "O Qiskit também fornece uma toolbox de visualização a fim de permitir que você observe esses resultados."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:351
msgid "Below, we use the visualization function to plot the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "Abaixo, utilizaremos a função de visualização para desenhar as componentes reais e imaginárias da matriz de densidade de estados :math:`\\rho`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:383
msgid "Unitary backend"
msgstr "Backend Unitário"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:394
msgid "Qiskit Aer also includes a ``unitary_simulator`` that works *provided all the elements in the circuit are unitary operations*. This backend calculates the :math:`2^n \\times 2^n` matrix representing the gates in the quantum circuit."
msgstr "O Qiskit Aer também inclui um ``unitary_simulator`` que funciona *desde que todos os elementos no circuito sejam operações unitárias*. Esse backend calcula a matrix :math:`2^n \\times 2^n` que representa as portas no circuito quântico."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:491
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:502
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Os simuladores acima são úteis porque fornecem informações sobre o estado final do circuito ideal e a representação matricial do circuito. No entanto, um experimento real termina *medindo* cada qubit (geralmente na base computacional :math:`|0\\rangle, |1\\rangle` ). Sem medições, não podemos obter informações sobre o estado. Medições fazem o sistema quântico colapsar para bits clássicos."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:504
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Por exemplo, suponha que façamos medições independentes em cada qubit do estado GHZ de três qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:506
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:508
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit 2, :math:`y` to the outcome on qubit 1, and :math:`z` to the outcome on qubit 0."
msgstr "e considere :math:`xyz` denotando a bitstring resultante. Lembre que, sob o rótulo de qubit usado pelo Qiskit, :math:`x` corresponderia ao resultado no qubit 2, :math:`y` para o resultado no qubit 1 e :math:`z` para o resultado no qubit 0."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:514
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Obs.: Esta representação da bitstring coloca o bit mais significativo (MSB) à esquerda, e o bit menos significativo (LSB) à direita. Esta é a ordenação padrão de bitstrings binárias. Ordenamos os qubits da mesma forma (qubit representando o MSB tem índice 0), razão pela qual o Qiskit usa uma ordem de produto tensorial fora do padrão."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:520
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Lembre-se que a probabilidade de obter resultado :math:`xyz` é dada por"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:522
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:524
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "e como tal, as probabilidades de se obter 000 ou 111 no estado GHZ são ambas de 1/2."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:526
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Para simular um circuito que inclua medições, nós precisamos adicionar elas ao circuito original acima e usar um backend Aer diferente."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:629
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Este circuito adiciona um registrador clássico e três medições que são usadas para mapear o resultado dos qubits nos bits clássicos."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:631
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``execute`` function, via the ``shots`` keyword."
msgstr "Para simular este circuito, usamos o ``qasm_simulator`` do Qiskit Aer. Cada execução desse circuito resultará na bitstring 000 ou 111. Para construir estatísticas sobre a distribuição das bitstrings (para, por exemplo, estimar :math:`\\mathrm{Pr}(000)`), precisamos repetir o circuito várias vezes. O número de repetições pode ser especificado na função ``execute`` através da palavra-chave ``shots``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:661
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Uma vez que você possua um objeto de resultado, você pode acessar as contagens através da função ``get_counts(circuit)``. Isso lhe fornece os resultados binários *agregados* do circuito que você submeteu."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:707
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Aproximadamente 50% das vezes, a string de bits da saída é 000. Qiskit também provê a função ``plot_histogram``, que permite que você veja os resultados."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:738
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``execute`` function and see how the estimated probabilities change."
msgstr "A probabilidades estimadas das saídas :math:`\\mathrm{Pr}(000)` e :math:`\\mathrm{Pr}(111)` são calculadas tomando as contagens agregadas e dividindo pelo número de shots (vezes que o circuito foi repetido). Tente mudar a palavra-chave ``shots`` na função ``execute`` e veja como as probabilidades estimadas mudam."

