msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-27 13:03+0000\n"
"PO-Revision-Date: 2023-10-27 14:02\n"
"Last-Translator: \n"
"Language: pt_UN\n"
"Language-Team: Portuguese (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/migration_guides/algorithms_migration.po\n"
"X-Crowdin-File-ID: 9995\n"

#: ../../migration_guides/algorithms_migration.rst:3
msgid "Algorithms Migration Guide"
msgstr "Guia de Migração de Algoritmos"

#: ../../migration_guides/algorithms_migration.rst:6
msgid "TL;DR"
msgstr "TL;DR"

#: ../../migration_guides/algorithms_migration.rst:8
msgid "The :mod:`qiskit.algorithms` module has been fully refactored to use the :mod:`~qiskit.primitives`, for circuit execution, instead of the :class:`~qiskit.utils.QuantumInstance`, which is now deprecated."
msgstr "O módulo :mod:`qiskit.algorithms` foi completamente refatorado para que use o :mod:`~qiskit.primitives`, na execução de circuitos, em vez da :class:`~qiskit.utils.QuantumInstance`, a qual está agora depreciada."

#: ../../migration_guides/algorithms_migration.rst:10
msgid "There have been **3 types of refactoring**:"
msgstr "Temos **3 tipos de refatoração**:"

#: ../../migration_guides/algorithms_migration.rst:12
msgid "Algorithms refactored in a new location to support :mod:`~qiskit.primitives`. These algorithms have the same class names as the :class:`~qiskit.utils.QuantumInstance`\\-based ones but are in a new sub-package."
msgstr "Algoritmos refatorados em uma nova localização a fim de suportar :mod:`~qiskit.primitives`. Esses algoritmos têm o mesmos nomes de classe que aquelas baseadas em :class:`~qiskit.utils.QuantumInstance`\\-, mas estão em um novo sub-pacote."

#: ../../migration_guides/algorithms_migration.rst:17
msgid "**Careful with import paths!!** The legacy algorithms are still importable directly from :mod:`qiskit.algorithms`. Until the legacy imports are removed, this convenience import is not available for the refactored algorithms. Thus, to import the refactored algorithms you must always **specify the full import path** (e.g., ``from qiskit.algorithms.eigensolvers import VQD``)"
msgstr "**Cuidado com caminhos de importação!!** Os algoritmos legados ainda podem ser importados diretamente de :mod:`qiskit.algorithms`. Até que as importações legadas sejam removidas, essa importação de conveniência não estará disponível para os algoritmos refatorados. Portanto, para importar os algoritmos refatorados, você deve sempre **especificar o caminho de importação completo** (por exemplo, ``from qiskit.algorithms.eigensolvers import VQD``)"

#: ../../migration_guides/algorithms_migration.rst:22
msgid "`Minimum Eigensolvers`_"
msgstr "`Minimum Eigensolvers`_"

#: ../../migration_guides/algorithms_migration.rst:23
msgid "`Eigensolvers`_"
msgstr "`Eigensolvers`_"

#: ../../migration_guides/algorithms_migration.rst:24
msgid "`Time Evolvers`_"
msgstr "`Time Evolvers`_"

#: ../../migration_guides/algorithms_migration.rst:26
msgid "Algorithms refactored in-place (same namespace) to support both :class:`~qiskit.utils.QuantumInstance` and :mod:`~qiskit.primitives`. In the future, the use of :class:`~qiskit.utils.QuantumInstance` will be removed."
msgstr "Algoritmos refatorados in-place (mesmo namespace) para suportar ambos :class:`~qiskit.utils.QuantumInstance` e :mod:`~qiskit.primitives`. No futuro, o uso da :class:`~qiskit.utils.QuantumInstance` será removido."

#: ../../migration_guides/algorithms_migration.rst:29
msgid "`Amplitude Amplifiers`_"
msgstr "`Amplificadores de Amplitude`_"

#: ../../migration_guides/algorithms_migration.rst:30
msgid "`Amplitude Estimators`_"
msgstr "`Estimadores de Amplitude`_"

#: ../../migration_guides/algorithms_migration.rst:31
msgid "`Phase Estimators`_"
msgstr "`Phase Estimators`_"

#: ../../migration_guides/algorithms_migration.rst:34
msgid "Algorithms that were deprecated and are now removed entirely from :mod:`qiskit.algorithms`. These are algorithms that do not currently serve as building blocks for applications. Their main value is educational, and as such, will be kept as tutorials in the qiskit textbook. You can consult the tutorials in the following links:"
msgstr "Algoritmos que estavam depreciados e que agora foram totalmente removidos do :mod:`qiskit.algorithms`. Estes são algoritmos que atualmente não servem como blocos de construção para aplicativos. Seu principal valor é educacional e, como tal, serão mantidos como tutoriais no manual do qiskit. Você pode consultar os tutoriais nos seguintes links:"

#: ../../migration_guides/algorithms_migration.rst:38
msgid "`Linear Solvers (HHL) <https://learn.qiskit.org/course/ch-applications/solving-linear-systems-of-equations-using-hhl-and-its-qiskit-implementation>`_ ,"
msgstr "`Linear Solvers (HHL) <https://learn.qiskit.org/course/ch-applications/solving-linear-systems-of-equations-using-hhl-and-its-qiskit-implementation>`_ ,"

#: ../../migration_guides/algorithms_migration.rst:39
msgid "`Factorizers (Shor) <https://learn.qiskit.org/course/ch-algorithms/shors-algorithm>`_"
msgstr "`Fatoradores (Shor) <https://learn.qiskit.org/course/ch-algorithms/shors-algorithm>`_"

#: ../../migration_guides/algorithms_migration.rst:42
msgid "The remainder of this migration guide will focus on the algorithms with migration alternatives within :mod:`qiskit.algorithms`, that is, those under refactoring types 1 and 2."
msgstr "O restante deste guia de migração se concentrará nos algoritmos com alternativas de migração dentro de :mod:`qiskit.algorithms`, ou seja, aqueles sob os tipos de refatoração 1 e 2."

#: ../../migration_guides/algorithms_migration.rst:46
msgid "Background"
msgstr ""

#: ../../migration_guides/algorithms_migration.rst:48
#: ../../migration_guides/algorithms_migration.rst:75
#: ../../migration_guides/algorithms_migration.rst:160
#: ../../migration_guides/algorithms_migration.rst:529
#: ../../migration_guides/algorithms_migration.rst:719
#: ../../migration_guides/algorithms_migration.rst:819
#: ../../migration_guides/algorithms_migration.rst:859
#: ../../migration_guides/algorithms_migration.rst:906
msgid "*Back to* `TL;DR`_"
msgstr "*De volta a* `TL;DR`_"

#: ../../migration_guides/algorithms_migration.rst:50
msgid "The :mod:`qiskit.algorithms` module was originally built on top of the :mod:`qiskit.opflow` library and the :class:`~qiskit.utils.QuantumInstance` utility. The development of the :mod:`~qiskit.primitives` introduced a higher-level execution paradigm, with the ``Estimator`` for computation of expectation values for observables, and ``Sampler`` for executing circuits and returning probability distributions. These tools allowed to refactor the :mod:`qiskit.algorithms` module, and deprecate both :mod:`qiskit.opflow` and :class:`~qiskit.utils.QuantumInstance`."
msgstr "O módulo :mod:`qiskit.algorithms` foi originalmente construído sobre a biblioteca :mod:`qiskit.opflow` e o utilitário :class:`~qiskit.utils.QuantumInstance`. O desenvolvimento do :mod:`~qiskit.primitives` introduziu um paradigma de execução de alto nível, com o ``Estimator`` para cálculo de valores esperados para observáveis e ``Sampler`` para circuitos de execução e retorno de distribuições de probabilidade. Essas ferramentas permitiram refatorar o módulo :mod:`qiskit.algorithms` e descontinuar ambos :mod:`qiskit.opflow` e :class:`~qiskit.utils.QuantumInstance`."

#: ../../migration_guides/algorithms_migration.rst:59
msgid "The transition away from :mod:`qiskit.opflow` affects the classes that algorithms take as part of the problem setup. As a rule of thumb, most :mod:`qiskit.opflow` dependencies have a direct :mod:`qiskit.quantum_info` replacement. One common example is the class :mod:`qiskit.opflow.PauliSumOp`, used to define Hamiltonians (for example, to plug into VQE), that can be replaced by :mod:`qiskit.quantum_info.SparsePauliOp`. For information on how to migrate other :mod:`~qiskit.opflow` objects, you can refer to the `Opflow migration guide <https://qisk.it/opflow_migration>`_."
msgstr "A transição de :mod:`qiskit.opflow` afeta as classes que os algoritmos tomam como parte da configuração do problema. Como regra geral, a maioria das dependências :mod:`qiskit.opflow` tem uma substituição direta de :mod:`qiskit.quantum_info`. Um exemplo comum é a classe :mod:`qiskit.opflow.PauliSumOp`, usada para definir Hamiltonianos (por exemplo, para conectar ao VQE), que pode ser substituída por :mod:`qiskit.quantum_info.SparsePauliOp`. Para obter informações sobre como migrar outros objetos :mod:`~qiskit.opflow`, você pode consultar o `Guia de migração Opflow <https://qisk.it/opflow_migration>`_."

#: ../../migration_guides/algorithms_migration.rst:66
msgid "For further background and detailed migration steps, see the:"
msgstr "Para obter mais informações e passos detalhados de migração, consulte:"

#: ../../migration_guides/algorithms_migration.rst:68
msgid "`Opflow migration guide <https://qisk.it/opflow_migration>`_"
msgstr "`Guia de migração Opflow <https://qisk.it/opflow_migration>`_"

#: ../../migration_guides/algorithms_migration.rst:69
msgid "`Quantum Instance migration guide <https://qisk.it/qi_migration>`_"
msgstr "`Guia de migração de Quantum Instance <https://qisk.it/qi_migration>`_"

#: ../../migration_guides/algorithms_migration.rst:73
msgid "How to choose a primitive configuration for your algorithm"
msgstr "Como escolher uma configuração primitiva para seu algoritmo"

#: ../../migration_guides/algorithms_migration.rst:77
msgid "The classes in :mod:`qiskit.algorithms` are initialized with any implementation of :class:`qiskit.primitive.BaseSampler` or class:`qiskit.primitive.BaseEstimator`."
msgstr "As classes em :mod:`qiskit.algorithms` são inicializadas com qualquer implementação de :class:`qiskit.primitive.BaseSampler` ou class:`qiskit.primitive.BaseEstimator`."

#: ../../migration_guides/algorithms_migration.rst:80
msgid "Once the kind of primitive is known, you can choose between the primitive implementations that better adjust to your case. For example:"
msgstr "Uma vez conhecido o tipo de primitiva, você pode escolher entre as implementações primitivas que melhor se ajustam ao seu caso. Por exemplo:"

#: ../../migration_guides/algorithms_migration.rst:82
msgid "For quick prototyping, you can use the **reference implementations of primitives** included in Qiskit: :class:`qiskit.primitives.Sampler` and :class:`qiskit.primitives.Estimator`."
msgstr "Para prototipagem rápida, você pode usar as **reference implementations of primitives** inclusas no Qiskit: :class:`qiskit.primitives.Sampler` e :class:`qiskit.primitives.Estimator`."

#: ../../migration_guides/algorithms_migration.rst:83
msgid "For finer algorithm tuning, a local simulator such as the **primitive implementation in Aer**: :class:`qiskit_aer.primitives.Sampler` and :class:`qiskit_aer.primitives.Estimator`."
msgstr "Para um ajuste mais fino do algoritmo, um simulador local como a **primitive implementation in Aer**: :class:`qiskit_aer.primitives.Sampler` e :class:`qiskit_aer.primitives.Estimator`."

#: ../../migration_guides/algorithms_migration.rst:84
msgid "For executing in quantum hardware you can:"
msgstr "Para executar em um hardware quântico, você pode:"

#: ../../migration_guides/algorithms_migration.rst:86
msgid "access services with native primitive implementations, such as **IBM's Qiskit Runtime service** via :class:`qiskit_ibm_runtime.Sampler` and :class:`qiskit_ibm_runtime.Estimator`"
msgstr "acessar serviços com implementações primitivas nativas, como **IBM's Qiskit Runtime service** via :class:`qiskit_ibm_runtime.Sampler` e :class:`qiskit_ibm_runtime.Estimator`"

#: ../../migration_guides/algorithms_migration.rst:87
msgid "Wrap any backend with **Backend Primitives** (:class:`~qiskit.primitives.BackendSampler` and :class:`~qiskit.primitives.BackendEstimator`). These wrappers implement a primitive interface on top of a backend that only supports ``Backend.run()``."
msgstr "Encapsule qualquer backend com **Backend Primitives** (:class:`~qiskit.primitives.BackendSampler` e :class:`~qiskit.primitives.BackendEstimator`). Esses wrappers implementam uma interface primitiva em cima de um backend que suporta apenas ``Backend.run()``."

#: ../../migration_guides/algorithms_migration.rst:89
msgid "For more detailed information and examples, particularly on the use of the **Backend Primitives**, please refer to the `Quantum Instance migration guide <https://qisk.it/qi_migration>`_."
msgstr "Para obter informações e exemplos mais detalhados, particularmente sobre o uso de **Backend Primitives**, consulte o `Guia de Migração de Quantum Instance <https://qisk.it/qi_migration>`_."

#: ../../migration_guides/algorithms_migration.rst:92
msgid "In this guide, we will cover 3 different common configurations for algorithms that determine **which primitive import** you should be selecting:"
msgstr "Neste guia, abordaremos 3 configurações comuns diferentes para algoritmos que determinam **qual importação primitiva** você deve selecionar:"

#: ../../migration_guides/algorithms_migration.rst:95
msgid "Running an algorithm with a statevector simulator (i.e., using :mod:`qiskit.opflow`\\'s legacy :class:`.MatrixExpectation`), when you want the ideal outcome without shot noise:"
msgstr "Executando um algoritmo com um simulador de vetor de estado (ou seja, usando a :class:`.MatrixExpectation` legada de :mod:`qiskit.opflow`), quando você desejar um resultado ideal sem ruído de execução:"

#: ../../migration_guides/algorithms_migration.rst:98
msgid "Reference Primitives with default configuration (see `QAOA`_ example):"
msgstr "Primitivas Aer **com simulador de vetores de estado** (consulte o exemplo de `QAOA`_):"

#: ../../migration_guides/algorithms_migration.rst:104
msgid "Aer Primitives **with statevector simulator** (see `QAOA`_ example):"
msgstr "Primitivas Aer **com simulador de vetores de estado** (consulte o exemplo de `QAOA`_):"

#: ../../migration_guides/algorithms_migration.rst:113
msgid "Running an algorithm using a simulator/device with shot noise (i.e., using :mod:`qiskit.opflow`\\'s legacy :class:`.PauliExpectation`):"
msgstr "Executando um algoritmo usando um simulador/dispositivo com ruído de shot (ou seja, usando a classe legada :class:`.PauliExpectation` do módulo :mod:`qiskit.opflow`):"

#: ../../migration_guides/algorithms_migration.rst:116
msgid "Reference Primitives **with shots** (see `VQE`_ examples):"
msgstr "Primitivas de Referência **com shots** (consulte exemplos de `VQE`_):"

#: ../../migration_guides/algorithms_migration.rst:132
msgid "Aer Primitives with default configuration (see `VQE`_ examples):"
msgstr "Primitivas Aer com configuração padrão (consulte exemplos de `VQE`_):"

#: ../../migration_guides/algorithms_migration.rst:138
msgid "IBM's Qiskit Runtime Primitives with default configuration (see `VQD`_ example):"
msgstr "Primitivas IBM's Qiskit Runtime com configuração padrão (consulte o exemplo de `VQD`_):"

#: ../../migration_guides/algorithms_migration.rst:145
msgid "3. Running an algorithm on an Aer simulator using a custom instruction (i.e., using :mod:`qiskit.opflow`\\'s legacy :class:`.AerPauliExpectation`):"
msgstr "3. Executando um algoritmo em um simulador Aer usando uma instrução personalizada (ou seja, usando a classe legada :class:`.AerPauliExpectation` do módulo :mod:`qiskit.opflow`):"

#: ../../migration_guides/algorithms_migration.rst:148
msgid "Aer Primitives with ``shots=None``, ``approximation=True`` (see `TrotterQRTE`_ example):"
msgstr "Primitivas Aer com ``shots=None``, ``approximation=True`` (consulte o exemplo de `TrotterQRTE`_):"

#: ../../migration_guides/algorithms_migration.rst:159
msgid "Minimum Eigensolvers"
msgstr "Eigensolvers mínimos"

#: ../../migration_guides/algorithms_migration.rst:162
msgid "The minimum eigensolver algorithms belong to the first type of refactoring listed above (Algorithms refactored in a new location to support :mod:`~qiskit.primitives`). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.minimum_eigensolvers` are now initialized using an instance of the :mod:`~qiskit.primitives.Sampler` or :mod:`~qiskit.primitives.Estimator` primitive, depending on the algorithm. The legacy classes can still be found in :mod:`qiskit.algorithms.minimum_eigen_solvers`."
msgstr "Os algoritmos eigensolver mínimos pertencem ao primeiro tipo de refatoração listado acima (Algoritmos refatorados em um novo local para suportar :mod:`~qiskit.primitives`). Em vez de uma :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.minimum_eigensolvers` agora são inicializados usando uma instância de :mod:`~qiskit.primitives.Sampler` ou :mod:`~ qiskit.primitives.Estimator` primitivo, dependendo do algoritmo. As classes legadas ainda podem ser encontradas em :mod:`qiskit.algorithms.minimum_eigen_solvers`."

#: ../../migration_guides/algorithms_migration.rst:170
msgid "For the :mod:`qiskit.algorithms.minimum_eigensolvers` classes, depending on the import path, you will access either the primitive-based or the quantum-instance-based implementation. You have to be extra-careful, because the class name does not change."
msgstr "Para as classes :mod:`qiskit.algorithms.minimum_eigensolvers`, dependendo do caminho de importação, você acessará a implementação baseada em primitiva ou baseada em instância quântica. Você tem que ter muito cuidado, porque o nome da classe não muda."

#: ../../migration_guides/algorithms_migration.rst:174
msgid "Old import (Quantum Instance based): ``from qiskit.algorithms import VQE, QAOA, NumPyMinimumEigensolver``"
msgstr "Antigas importações (baseadas em instancia Quantum): ``from qiskit.algorithms import VQE, QAOA, NumPyMinimumEigensolver``"

#: ../../migration_guides/algorithms_migration.rst:175
msgid "New import (Primitives based): ``from qiskit.algorithms.minimum_eigensolvers import VQE, SamplingVQE, QAOA, NumPyMinimumEigensolver``"
msgstr "Novas importações (baseadas em Primitives): ``from qiskit.algorithms.minimum_eigensolvers import VQE, SamplingVQE, QAOA, NumPyMinimumEigensolver``"

#: ../../migration_guides/algorithms_migration.rst:178
msgid "VQE"
msgstr "VQE"

#: ../../migration_guides/algorithms_migration.rst:180
msgid "The legacy :class:`qiskit.algorithms.minimum_eigen_solvers.VQE` class has now been split according to the use-case:"
msgstr "A classe legada :class:`qiskit.algorithms.minimum_eigen_solvers.VQE` foi dividida de acordo com os casos de uso:"

#: ../../migration_guides/algorithms_migration.rst:182
msgid "For general-purpose Hamiltonians, you can use the Estimator-based :class:`qiskit.algorithms.minimum_eigensolvers.VQE` class."
msgstr "Para Hamiltonianos de uso geral, você pode usar a classe :class:`qiskit.algorithms.minimum_eigensolvers.VQE` baseada na Estimator."

#: ../../migration_guides/algorithms_migration.rst:184
msgid "If you have a diagonal Hamiltonian, and would like the algorithm to return a sampling of the state, you can use the new Sampler-based :class:`qiskit.algorithms.minimum_eigensolvers.SamplingVQE` algorithm. This could formerly be realized using the legacy :class:`~qiskit.algorithms.minimum_eigen_solvers.VQE` with :class:`~qiskit.opflow.expectations.CVaRExpectation`."
msgstr "Se você tiver um Hamiltoniano diagonal e quiser que o algoritmo retorne uma amostra do estado, você pode usar o novo algoritmo :class:`qiskit.algorithms.minimum_eigensolvers.SamplingVQE` baseado em Sampler. Anteriormente, isso poderia ser realizado usando a classe legada :class:`~qiskit.algorithms.minimum_eigen_solvers.VQE` com a :class:`~qiskit.opflow.expectations.CVaRExpectation`."

#: ../../migration_guides/algorithms_migration.rst:191
msgid "In addition to taking in an :mod:`~qiskit.primitives.Estimator` instance instead of a :class:`~qiskit.utils.QuantumInstance`, the new :class:`~qiskit.algorithms.minimum_eigensolvers.VQE` signature has undergone the following changes:"
msgstr "Além de receber uma instância :mod:`~qiskit.primitives.Estimator` em vez de uma :class:`~qiskit.utils.QuantumInstance`, a nova assinatura :class:`~qiskit.algorithms.minimum_eigensolvers.VQE` sofreu as seguintes alterações:"

#: ../../migration_guides/algorithms_migration.rst:194
#: ../../migration_guides/algorithms_migration.rst:560
msgid "The ``expectation`` and ``include_custom`` parameters have been removed, as this functionality is now defined at the ``Estimator`` level."
msgstr "Os parâmetros ``expectation`` e ``include_custom`` foram removidos, já que esta funcionalidade agora é definida no nível de ``Estimator``."

#: ../../migration_guides/algorithms_migration.rst:196
#: ../../migration_guides/algorithms_migration.rst:377
msgid "The ``gradient`` parameter now takes in an instance of a primitive-based gradient class from :mod:`qiskit.algorithms.gradients` instead of the legacy :mod:`qiskit.opflow.gradients.Gradient` class."
msgstr "O parâmetro ``gradient`` agora usa uma instância de uma classe de gradiente baseada em primitiva de :mod:`qiskit.algorithms.gradients` em vez da classe :mod:`qiskit.opflow.gradients.Gradient` herdada."

#: ../../migration_guides/algorithms_migration.rst:198
#: ../../migration_guides/algorithms_migration.rst:379
#: ../../migration_guides/algorithms_migration.rst:565
msgid "The ``max_evals_grouped`` parameter has been removed, as it can be set directly on the optimizer class."
msgstr "O parâmetro ``max_evals_grouped`` foi removido, pois pode ser definido diretamente na classe optimizer."

#: ../../migration_guides/algorithms_migration.rst:199
msgid "The ``estimator``, ``ansatz`` and ``optimizer`` are the only parameters that can be defined positionally (and in this order), all others have become keyword-only arguments."
msgstr "O ``estimator``, ``ansatz`` e ``optimizer`` são os únicos parâmetros que podem ser definidos posicionalmente (e nesta ordem), todos os outros se tornaram argumentos keyword-only."

#: ../../migration_guides/algorithms_migration.rst:204
msgid "The new :class:`~qiskit.algorithms.minimum_eigensolvers.VQEResult` class does not include the state anymore, as this output was only useful in the case of diagonal operators. However, if it is available as part of the new :class:`~qiskit.algorithms.minimum_eigensolvers.SamplingVQE`'s :class:`~qiskit.algorithms.minimum_eigensolvers.SamplingVQEResult`."
msgstr "A nova classe :class:`~qiskit.algorithms.minimum_eigensolvers.VQEResult` não inclui mais o estado, pois esta saída só foi útil no caso de operadores diagonais. No entanto, se estiver disponível como parte da classe :class:`~qiskit.algorithms.minimum_eigensolvers.SamplingVQEResult` da nova classe :class:`~qiskit.algorithms.minimum_eigensolvers.SamplingVQE`'s ."

#: ../../migration_guides/algorithms_migration.rst
msgid "VQE Example"
msgstr "Exemplo de VQD"

#: ../../migration_guides/algorithms_migration.rst:212
#: ../../migration_guides/algorithms_migration.rst:284
#: ../../migration_guides/algorithms_migration.rst:393
#: ../../migration_guides/algorithms_migration.rst:477
#: ../../migration_guides/algorithms_migration.rst:580
#: ../../migration_guides/algorithms_migration.rst:754
#: ../../migration_guides/algorithms_migration.rst:832
#: ../../migration_guides/algorithms_migration.rst:873
#: ../../migration_guides/algorithms_migration.rst:920
msgid "**[Legacy] Using Quantum Instance:**"
msgstr "**[Legacy] Usando Quantum Instance:**"

#: ../../migration_guides/algorithms_migration.rst:245
#: ../../migration_guides/algorithms_migration.rst:319
#: ../../migration_guides/algorithms_migration.rst:427
#: ../../migration_guides/algorithms_migration.rst:500
#: ../../migration_guides/algorithms_migration.rst:615
#: ../../migration_guides/algorithms_migration.rst:788
#: ../../migration_guides/algorithms_migration.rst:843
#: ../../migration_guides/algorithms_migration.rst:887
#: ../../migration_guides/algorithms_migration.rst:933
msgid "**[Updated] Using Primitives:**"
msgstr "**[Updated] Usando Primitives:**"

#: ../../migration_guides/algorithms_migration.rst
msgid "VQE applying CVaR (SamplingVQE) Example"
msgstr "Exemplo de VQE aplicado a CVaR (SamplingVQE)"

#: ../../migration_guides/algorithms_migration.rst:356
#: ../../migration_guides/algorithms_migration.rst:462
#: ../../migration_guides/algorithms_migration.rst:523
#: ../../migration_guides/algorithms_migration.rst:852
#: ../../migration_guides/algorithms_migration.rst:900
#: ../../migration_guides/algorithms_migration.rst:945
msgid "For complete code examples, see the following updated tutorials:"
msgstr "Para obter exemplos de código completos, consulte os seguintes tutoriais atualizados:"

#: ../../migration_guides/algorithms_migration.rst:358
msgid "`VQE Introduction <https://qiskit.org/documentation/tutorials/algorithms/01_algorithms_introduction.html>`_"
msgstr "`Introdução ao VQE <https://qiskit.org/documentation/tutorials/algorithms/01_algorithms_introduction.html>`_"

#: ../../migration_guides/algorithms_migration.rst:359
#: ../../migration_guides/algorithms_migration.rst:525
msgid "`VQE, Callback, Gradients, Initial Point <https://qiskit.org/documentation/tutorials/algorithms/02_vqe_advanced_options.html>`_"
msgstr "`Callback, Gradientes, Pontos Iniciais do VQE <https://qiskit.org/documentation/tutorials/algorithms/02_vqe_advanced_options.html>`_"

#: ../../migration_guides/algorithms_migration.rst:360
msgid "`VQE with Aer Primitives <https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html>`_"
msgstr "`VQE com Aer Primitives <https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html>`_"

#: ../../migration_guides/algorithms_migration.rst:363
msgid "QAOA"
msgstr "QAOA"

#: ../../migration_guides/algorithms_migration.rst:365
msgid "The legacy :class:`qiskit.algorithms.minimum_eigen_solvers.QAOA` class used to extend :class:`qiskit.algorithms.minimum_eigen_solvers.VQE`, but now, :class:`qiskit.algorithms.minimum_eigensolvers.QAOA` extends :class:`qiskit.algorithms.minimum_eigensolvers.SamplingVQE`. For this reason, **the new QAOA only supports diagonal operators**."
msgstr "A classe :class:`qiskit.algorithms.minimum_eigen_solvers.QAOA` legada usada para estender :class:`qiskit.algorithms.minimum_eigen_solvers.VQE`, mas agora, a :class:`qiskit.algorithms.minimum_eigensolvers.QAOA` estende :class: `qiskit.algorithms.minimum_eigensolvers.SamplingVQE`. Por esta razão, **o novo QAOA suporta apenas operadores diagonais**."

#: ../../migration_guides/algorithms_migration.rst:372
msgid "In addition to taking in an :mod:`~qiskit.primitives.Sampler` instance instead of a :class:`~qiskit.utils.QuantumInstance`, the new :class:`~qiskit.algorithms.minimum_eigensolvers.QAOA` signature has undergone the following changes:"
msgstr "Além de receber uma instância de :mod:`~qiskit.primitives.Sampler` em vez de uma :class:`~qiskit.utils.QuantumInstance`, a nova assinatura da classe :class:`~qiskit.algorithms.minimum_eigensolvers.QAOA` sofreu as seguintes alterações:"

#: ../../migration_guides/algorithms_migration.rst:375
msgid "The ``expectation`` and ``include_custom`` parameters have been removed. In return, the ``aggregation`` parameter has been added (it used to be defined through a custom ``expectation``)."
msgstr "Os parâmetros ``expectation`` e ``include_custom`` foram removidos. Em troca, o parâmetro ``aggregation`` foi adicionado (costumava ser definido através de uma ``expectation`` adaptada)."

#: ../../migration_guides/algorithms_migration.rst:380
msgid "The ``sampler`` and ``optimizer`` are the only parameters that can be defined positionally (and in this order), all others have become keyword-only arguments."
msgstr "O ``sampler`` e ``optimizer`` são os únicos parâmetros que podem ser definidos posicionalmente (e nesta ordem), todos os outros se tornaram parâmetros keyword-only."

#: ../../migration_guides/algorithms_migration.rst:385
msgid "If you want to run QAOA on a non-diagonal operator, you can use the :class:`.QAOAAnsatz` with :class:`qiskit.algorithms.minimum_eigensolvers.VQE`, but bear in mind there will be no state result. If your application requires the final probability distribution, you can instantiate a ``Sampler`` and run it with the optimal circuit after :class:`~qiskit.algorithms.minimum_eigensolvers.VQE`."
msgstr "Se você deseja executar QAOA em um operador não diagonal, pode usar a :class:`.QAOAAnsatz` com :class:`qiskit.algorithms.minimum_eigensolvers.VQE`, mas tenha em mente que não haverá resultado de estado. Se seu aplicativo requer a distribuição de probabilidade final, você pode instanciar um ``Sampler`` e executá-lo com o circuito ideal após a :class:`~qiskit.algorithms.minimum_eigensolvers.VQE`."

#: ../../migration_guides/algorithms_migration.rst
msgid "QAOA Example"
msgstr "Exemplo de QAOA"

#: ../../migration_guides/algorithms_migration.rst:464
msgid "`QAOA <https://qiskit.org/documentation/tutorials/algorithms/05_qaoa.html>`_"
msgstr "`QAOA <https://qiskit.org/documentation/tutorials/algorithms/05_qaoa.html>`_"

#: ../../migration_guides/algorithms_migration.rst:467
msgid "NumPyMinimumEigensolver"
msgstr "NumPyMinimumEigensolver"

#: ../../migration_guides/algorithms_migration.rst:469
msgid "Because this is a classical solver, the workflow has not changed between the old and new implementation. The import has however changed from :class:`qiskit.algorithms.minimum_eigen_solvers.NumPyMinimumEigensolver` to :class:`qiskit.algorithms.minimum_eigensolvers.NumPyMinimumEigensolver` to conform to the new interfaces and result classes."
msgstr "Como este é um solucionador clássico, o fluxo de trabalho não mudou entre a implementação antiga e a nova. No entanto, a importação mudou de :class:`qiskit.algorithms.minimum_eigen_solvers.NumPyMinimumEigensolver` para :class:`qiskit.algorithms.minimum_eigensolvers.NumPyMinimumEigensolver` para se adequar às novas interfaces e classes de resultados."

#: ../../migration_guides/algorithms_migration.rst
msgid "NumPyMinimumEigensolver Example"
msgstr "Exemplo de NumPyMinimumEigensolver"

#: ../../migration_guides/algorithms_migration.rst:528
msgid "Eigensolvers"
msgstr "Eigensolver"

#: ../../migration_guides/algorithms_migration.rst:531
msgid "The eigensolver algorithms also belong to the first type of refactoring (Algorithms refactored in a new location to support :mod:`~qiskit.primitives`). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.eigensolvers` are now initialized using an instance of the :class:`~qiskit.primitives.Sampler` or :class:`~qiskit.primitives.Estimator` primitive, or **a primitive-based subroutine**, depending on the algorithm. The legacy classes can still be found in :mod:`qiskit.algorithms.eigen_solvers`."
msgstr "Os algoritmos eigensolver também pertencem ao primeiro tipo de refatoração (Algoritmos refatorados em um novo local para suportar :mod:`~qiskit.primitives`). Em vez de uma :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.eigensolvers` eles agora são inicializados usando uma instância de :class:`~qiskit.primitives.Sampler` ou :class:`~ qiskit.primitives.Estimator` primitivo, ou **uma sub-rotina baseada em primitivo**, dependendo do algoritmo. As classes legadas ainda podem ser encontradas em :mod:`qiskit.algorithms.eigen_solvers`."

#: ../../migration_guides/algorithms_migration.rst:540
msgid "For the :mod:`qiskit.algorithms.eigensolvers` classes, depending on the import path, you will access either the primitive-based or the quantum-instance-based implementation. You have to be extra-careful, because the class name does not change."
msgstr "Para as classes de :mod:`qiskit.algorithms.eigensolvers`, dependendo do caminho de importação, você acessará a implementação baseada em primitivas ou baseada em instância quântica. Você tem que ter muito cuidado, porque o nome da classe não muda."

#: ../../migration_guides/algorithms_migration.rst:544
msgid "Old import path (Quantum Instance): ``from qiskit.algorithms import VQD, NumPyEigensolver``"
msgstr "Antigo caminho de importação (Instância Quantum): ``from qiskit.algorithms import VQD, NumPyEigensolver``"

#: ../../migration_guides/algorithms_migration.rst:545
msgid "New import path (Primitives): ``from qiskit.algorithms.eigensolvers import VQD, NumPyEigensolver``"
msgstr "Novo caminho de importação (Primitivas): ``from qiskit.algorithms.eigensolvers import VQD, NumPyEigensolver``"

#: ../../migration_guides/algorithms_migration.rst:548
msgid "VQD"
msgstr "VQD"

#: ../../migration_guides/algorithms_migration.rst:550
msgid "The new :class:`qiskit.algorithms.eigensolvers.VQD` class is initialized with an instance of the :class:`~qiskit.primitives.Estimator` primitive instead of a :class:`~qiskit.utils.QuantumInstance`. In addition to this, it takes an instance of a state fidelity class from mod:`qiskit.algorithms.state_fidelities`, such as the :class:`~qiskit.primitives.Sampler`-based :class:`~qiskit.algorithms.state_fidelities.ComputeUncompute`."
msgstr "A nova classe :class:`qiskit.algorithms.eigensolvers.VQD` é inicializada com uma instância de :class:`~qiskit.primitives.Estimator` ao invés de uma :class:`~qiskit.utils.QuantumInstance`. Além disso, ela usa uma instância de uma classe de fidelidade de estado de mod:`qiskit.algorithms.state_fidelities`, como a :class:`~qiskit.primitives.Sampler` baseada em :class:`~qiskit.algorithms. state_fidelities.ComputeUncompute`."

#: ../../migration_guides/algorithms_migration.rst:557
#: ../../migration_guides/algorithms_migration.rst:743
msgid "In addition to taking in an :mod:`~qiskit.primitives.Estimator` instance instead of a :class:`~qiskit.utils.QuantumInstance`, the new :class:`~qiskit.algorithms.eigensolvers.VQD` signature has undergone the following changes:"
msgstr "Além de receber uma instância de :mod:`~qiskit.primitives.Estimator` em vez de uma :class:`~qiskit.utils.QuantumInstance`, a nova assinatura da :class:`~qiskit.algorithms.eigensolvers.VQD` sofreu as seguintes alterações:"

#: ../../migration_guides/algorithms_migration.rst:562
msgid "The custom ``fidelity`` parameter has been added, and the custom ``gradient`` parameter has been removed, as current classes in :mod:`qiskit.algorithms.gradients` cannot deal with state fidelity gradients."
msgstr "O parâmetro personalizado ``fidelity`` foi adicionado e o parâmetro personalizado ``gradient`` foi removido, pois as classes atuais em :mod:`qiskit.algorithms.gradients` não podem lidar com gradientes de fidelidade de estado."

#: ../../migration_guides/algorithms_migration.rst:566
msgid "The ``estimator``, ``fidelity``, ``ansatz`` and ``optimizer`` are the only parameters that can be defined positionally (and in this order), all others have become keyword-only arguments."
msgstr "O ``estimator``, ``fidelity``, ``ansatz`` e ``optimizer`` são os únicos parâmetros que podem ser definidos posicionalmente (e nesta ordem), todos os outros se tornaram parâmetros keyword-only."

#: ../../migration_guides/algorithms_migration.rst:571
msgid "Similarly to VQE, the new :class:`~qiskit.algorithms.eigensolvers.VQDResult` class does not include the state anymore. If your application requires the final probability distribution, you can instantiate a ``Sampler`` and run it with the optimal circuit for the desired excited state after running :class:`~qiskit.algorithms.eigensolvers.VQD`."
msgstr "Da mesma forma que o VQE, a nova classe :class:`~qiskit.algorithms.eigensolvers.VQDResult` não inclui mais o estado. Se sua aplicação exige a distribuição de probabilidade final, você pode instanciar um ``Sampler`` e executá-lo com o circuito ideal para o estado excitado desejado após executar a classe :class:`~qiskit.algorithms.eigensolvers.VQD`."

#: ../../migration_guides/algorithms_migration.rst
msgid "VQD Example"
msgstr "Exemplo de VQD"

#: ../../migration_guides/algorithms_migration.rst:657
msgid "For complete code examples, see the following updated tutorial:"
msgstr "Para obter exemplos de código completos, consulte o seguinte tutorial atualizado:"

#: ../../migration_guides/algorithms_migration.rst:659
msgid "`VQD <https://qiskit.org/documentation/tutorials/algorithms/04_vqd.html>`_"
msgstr "`VQD <https://qiskit.org/documentation/tutorials/algorithms/04_vqd.html>`_"

#: ../../migration_guides/algorithms_migration.rst:662
msgid "NumPyEigensolver"
msgstr "NumPyEigensolver"

#: ../../migration_guides/algorithms_migration.rst:663
msgid "Similarly to its minimum eigensolver counterpart, because this is a classical solver, the workflow has not changed between the old and new implementation. The import has however changed from :class:`qiskit.algorithms.eigen_solvers.NumPyEigensolver` to :class:`qiskit.algorithms.eigensolvers.MinimumEigensolver` to conform to the new interfaces and result classes."
msgstr "Da mesma forma que a contraparte do minimum eigensolver, uma vez que este é um solucionador clássico, o fluxo de trabalho não mudou entre a implementação antiga e a nova. No entanto, a importação mudou de :class:`qiskit.algorithms.eigen_solvers.NumPyEigensolver` para :class:`qiskit.algorithms.eigensolvers.MinimumEigensolver` para se adequar às novas interfaces e classes de resultado."

#: ../../migration_guides/algorithms_migration.rst
msgid "NumPyEigensolver Example"
msgstr "Exemplo de NumPyEigensolver"

#: ../../migration_guides/algorithms_migration.rst:671
msgid "**[Legacy]:**"
msgstr "**[Legacy]: **"

#: ../../migration_guides/algorithms_migration.rst:694
msgid "**[Updated]:**"
msgstr "**[Updated]:**"

#: ../../migration_guides/algorithms_migration.rst:718
msgid "Time Evolvers"
msgstr "Time Evolvers"

#: ../../migration_guides/algorithms_migration.rst:721
msgid "The time evolvers are the last group of algorithms to undergo the first type of refactoring (Algorithms refactored in a new location to support :mod:`~qiskit.primitives`). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.time_evolvers` are now initialized using an instance of the :class:`~qiskit.primitives.Estimator` primitive. The legacy classes can still be found in :mod:`qiskit.algorithms.evolvers`."
msgstr "Os evoluidores de tempo são o último grupo de algoritmos a passar pelo primeiro tipo de refatoração (Algoritmos refatorados em um novo local para suportar :mod:`~qiskit.primitives`). Em vez de :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.time_evolvers` agora são inicializados usando uma instância da primitiva :class:`~qiskit.primitives.Estimator`. As classes legadas ainda podem ser encontradas em :mod:`qiskit.algorithms.evolvers`."

#: ../../migration_guides/algorithms_migration.rst:727
msgid "On top of the migration, the module has been substantially expanded to include **Variational Quantum Time Evolution** (:class:`~qiskit.algorithms.time_evolvers.VarQTE`\\) solvers."
msgstr "Além da migração, o módulo foi substancialmente expandido para incluir **Variational Quantum Time Evolution** (:class:`~qiskit.algorithms.time_evolvers.VarQTE`\\)."

#: ../../migration_guides/algorithms_migration.rst:731
msgid "TrotterQRTE"
msgstr "TrotterQRTE"

#: ../../migration_guides/algorithms_migration.rst:734
msgid "For the :class:`qiskit.algorithms.time_evolvers.TrotterQRTE` class, depending on the import path, you will access either the primitive-based or the quantum-instance-based implementation. You have to be extra-careful, because the class name does not change."
msgstr "Para a classe :class:`qiskit.algorithms.time_evolvers.TrotterQRTE`, dependendo do caminho de importação, você acessará a implementação baseada em primitiva ou baseada em instância quântica. Você tem que ter muito cuidado, porque o nome da classe não muda."

#: ../../migration_guides/algorithms_migration.rst:738
msgid "Old import path (Quantum Instance): ``from qiskit.algorithms import TrotterQRTE``"
msgstr "Antigo caminho de importação (Quantum Instance): ``from qiskit.algorithms import TrotterQRTE``"

#: ../../migration_guides/algorithms_migration.rst:739
msgid "New import path (Primitives): ``from qiskit.algorithms.time_evolvers import TrotterQRTE``"
msgstr "Novo caminho de importação (Primitives): ``from qiskit.algorithms.time_evolvers import TrotterQRTE``"

#: ../../migration_guides/algorithms_migration.rst:746
msgid "The ``expectation`` parameter has been removed, as this functionality is now defined at the ``Estimator`` level."
msgstr "O parâmetro ``expectation`` foi removido, já que esta funcionalidade agora é definida no nível ``Estimator``."

#: ../../migration_guides/algorithms_migration.rst:748
msgid "The ``num_timesteps`` parameters has been added, to allow to define the number of steps the full evolution time is divided into."
msgstr "Os parâmetros ``num_timesteps`` foram adicionados, para permitir definir o número de etapas em que o tempo de evolução completo é dividido."

#: ../../migration_guides/algorithms_migration.rst
msgid "TrotterQRTE Example"
msgstr "Exemplo de TrotterQRTE"

#: ../../migration_guides/algorithms_migration.rst:818
msgid "Amplitude Amplifiers"
msgstr "Amplificadores de Amplitude"

#: ../../migration_guides/algorithms_migration.rst:821
msgid "The amplitude amplifier algorithms belong to the second type of refactoring (Algorithms refactored in-place). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.amplitude_amplifiers` are now initialized using an instance of any \"Sampler\" primitive e.g. :mod:`~qiskit.primitives.Sampler`."
msgstr "Os algoritmos amplificadores de amplitude pertencem ao segundo tipo de refatoração (Algoritmos refatorados no local). Em vez de uma classe :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.amplitude_amplifiers` agora são inicializados usando uma instância de qualquer primitiva \"Sampler\", por exemplo :mod:`~qiskit.primitives.Sampler`."

#: ../../migration_guides/algorithms_migration.rst:826
msgid "The full :mod:`qiskit.algorithms.amplitude_amplifiers` module has been refactored in place. No need to change import paths."
msgstr "O módulo completo :mod:`qiskit.algorithms.amplitude_amplifiers` foi refatorado no lugar. Não há necessidade de alterar os caminhos de importação."

#: ../../migration_guides/algorithms_migration.rst
msgid "Grover Example"
msgstr "Exemplo de Grover"

#: ../../migration_guides/algorithms_migration.rst:854
msgid "`Amplitude Amplification and Grover <https://qiskit.org/documentation/tutorials/algorithms/06_grover.html>`_"
msgstr "`Amplificação de Amplitude e Grover <https://qiskit.org/documentation/tutorials/algorithms/06_grover.html>`_"

#: ../../migration_guides/algorithms_migration.rst:855
msgid "`Grover Examples <https://qiskit.org/documentation/tutorials/algorithms/07_grover_examples.html>`_"
msgstr "`Exemplos de Grover <https://qiskit.org/documentation/tutorials/algorithms/07_grover_examples.html>`_"

#: ../../migration_guides/algorithms_migration.rst:858
msgid "Amplitude Estimators"
msgstr "Estimadores de Amplitude"

#: ../../migration_guides/algorithms_migration.rst:861
msgid "Similarly to the amplitude amplifiers, the amplitude estimators also belong to the second type of refactoring (Algorithms refactored in-place). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.amplitude_estimators` are now initialized using an instance of any \"Sampler\" primitive e.g. :mod:`~qiskit.primitives.Sampler`."
msgstr "Da mesma forma que os amplificadores de amplitude, os estimadores de amplitude também pertencem ao segundo tipo de refatoração (Algoritmos refatorados no local). Em vez de uma classe :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.amplitude_estimators` agora são inicializados usando uma instância de qualquer primitiva \"Sampler\", por exemplo :mod:`~qiskit.primitives.Sampler`."

#: ../../migration_guides/algorithms_migration.rst:867
msgid "The full :mod:`qiskit.algorithms.amplitude_estimators` module has been refactored in place. No need to change import paths."
msgstr "O módulo completo :mod:`qiskit.algorithms.amplitude_estimators` foi refatorado no local. Não há necessidade de alterar os caminhos de importação."

#: ../../migration_guides/algorithms_migration.rst
msgid "IAE Example"
msgstr "Exemplos de IAE"

#: ../../migration_guides/algorithms_migration.rst:902
msgid "`Amplitude Estimation <https://qiskit.org/documentation/finance/tutorials/00_amplitude_estimation.html>`_"
msgstr "`Estimação de Amplitude <https://qiskit.org/documentation/finance/tutorials/00_amplitude_estimation.html>`_"

#: ../../migration_guides/algorithms_migration.rst:905
msgid "Phase Estimators"
msgstr "Estimadores de fase"

#: ../../migration_guides/algorithms_migration.rst:908
msgid "Finally, the phase estimators are the last group of algorithms to undergo the first type of refactoring (Algorithms refactored in-place). Instead of a :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.phase_estimators` are now initialized using an instance of any \"Sampler\" primitive e.g. :mod:`~qiskit.primitives.Sampler`."
msgstr "Finalmente, os estimadores de fase são o último grupo de algoritmos a passar pelo primeiro tipo de refatoração (Algoritmos refatorados no local). Em vez de uma classe :class:`~qiskit.utils.QuantumInstance`, :mod:`qiskit.algorithms.phase_estimators` agora são inicializados usando uma instância de qualquer primitiva \"Sampler\", por exemplo :mod:`~qiskit.primitives.Sampler`."

#: ../../migration_guides/algorithms_migration.rst:914
msgid "The full :mod:`qiskit.algorithms.phase_estimators` module has been refactored in place. No need to change import paths."
msgstr "O módulo :mod:`qiskit.algorithms.phase_estimators` completo foi refatorado. Não há necessidade de alterar os caminhos de importação."

#: ../../migration_guides/algorithms_migration.rst
msgid "IPE Example"
msgstr "Exemplo de IPE"

#: ../../migration_guides/algorithms_migration.rst:947
msgid "`Iterative Phase Estimation <https://qiskit.org/documentation/tutorials/algorithms/09_IQPE.html>`_"
msgstr "`Estimativa de fase Iterativa <https://qiskit.org/documentation/tutorials/algorithms/09_IQPE.html>`_"

