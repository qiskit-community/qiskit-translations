# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/finance/08_fixed_income_pricing.ipynb`__."
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:9
msgid "**Pricing Fixed-Income Assets**"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:23
msgid ""
"We seek to price a fixed-income asset knowing the distributions "
"describing the relevant interest rates. The cash flows :math:`c_t` of the"
" asset and the dates at which they occur are known. The total value "
":math:`V` of the asset is thus the expectation value of:"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:25
msgid ""
"V = \\sum_{t=1}^T \\frac{c_t}{(1+r_t)^t}\n"
"\n"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:27
msgid ""
"Each cash flow is treated as a zero coupon bond with a corresponding "
"interest rate :math:`r_t` that depends on its maturity. The user must "
"specify the distribution modeling the uncertainty in each :math:`r_t` "
"(possibly correlated) as well as the number of qubits he wishes to use to"
" sample each distribution. In this example we expand the value of the "
"asset to first order in the interest rates :math:`r_t`. This corresponds "
"to studying the asset in terms of its duration. The approximation of the "
"objective function follows the following paper: Quantum Risk Analysis. "
"Woerner, Egger. 2018."
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:66
msgid "Uncertainty Model"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:68
msgid ""
"We construct a circuit factory to load a multivariate normal random "
"distribution in :math:`d` dimensions into a quantum state. The "
"distribution is truncated to a given box :math:`\\otimes_{i=1}^d [low_i, "
"high_i]` and discretized using :math:`2^{n_i}` grid points, where "
":math:`n_i` denotes the number of qubits used for dimension :math:`i = "
"1,\\ldots, d`. The unitary operator corresponding to the circuit factory "
"implements the following:"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:70
msgid ""
"\\big|0\\rangle_{n_1}\\ldots\\big|0\\rangle_{n_d} \\mapsto "
"\\big|\\psi\\rangle = \\sum_{i_1=0}^{2^n_-1}\\ldots\\sum_{i_d=0}^{2^n_-1}"
" "
"\\sqrt{p_{i_1,...,i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},"
"\n"
"\n"
"where :math:`p_{i_1, ..., i_d}` denote the probabilities corresponding to"
" the truncated and discretized distribution and where :math:`i_j` is "
"mapped to the right interval :math:`[low_j, high_j]` using the affine "
"map:"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:74
msgid ""
"\\{0, \\ldots, 2^{n_{j}}-1\\} \\ni i_j \\mapsto \\frac{high_j - "
"low_j}{2^{n_j} - 1} * i_j + low_j \\in [low_j, high_j].\n"
"\n"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:76
msgid ""
"In addition to the uncertainty model, we can also apply an affine map, "
"e.g. resulting from a principal component analysis. The interest rates "
"used are then given by:"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:78
msgid ""
"\\vec{r} = A * \\vec{x} + b,\n"
"\n"
"where :math:`\\vec{x} \\in \\otimes_{i=1}^d [low_i, high_i]` follows the "
"given random distribution."
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:145
msgid "Cash flow, payoff function, and exact expected value"
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:147
msgid ""
"In the following we define the cash flow per period, the resulting payoff"
" function and evaluate the exact expected value."
msgstr ""

#: ../../tutorials/finance/08_fixed_income_pricing.ipynb:149
msgid ""
"For the payoff function we first use a first order approximation and then"
" apply the same approximation technique as for the linear part of the "
"payoff function of the `European Call Option "
"<european_call_option_pricing.ipynb>`__."
msgstr ""

