# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/finance/02_portfolio_diversification.ipynb`__."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:9
msgid "**Portfolio Diversification**"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:12
msgid "Introduction"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:14
msgid ""
"In asset management, there are broadly two approaches: active and passive"
" investment management. Within passive investment management, there are "
"index-tracking funds and there are approaches based on portfolio "
"diversification, which aim at representing a portfolio with a large "
"number of assets by a smaller number of representative stocks. This "
"notebook illustrates a portfolio diversification problem, which has "
"recently become popular for two reasons: 1. it makes it possible to mimic"
" the performance of an index (or a similarly large set of assets) with a "
"limited budget, at limited transaction costs. That is: traditional index-"
"tracking may purchase all assets in the index, ideally with the same "
"weights as in the index. This may be impractical for a number of reasons:"
" the total of even a single round lot per asset may amount to more than "
"the assets under management, the large scale of the index-tracking "
"problem with integrality constraints may render the optimization problem "
"difficult, and the transaction costs of the frequent rebalancing to "
"adjust the positions to the weights in the index may render the approach "
"expensive. Thus, a popular approach is to select a portfolio of :math:`q`"
" assets that represent the market with :math:`n` assets, where :math:`q` "
"is significantly smaller than :math:`n`, but where the portfolio "
"replicates the behavior of the underlying market. To determine how to "
"group assets into :math:`q` clusters and how to determine which :math:`q`"
" assets should represent the :math:`q` clusters amounts to solving a "
"large-scale optimization problem. In the following we describe the "
"mathematical model for the portfolio diversification problem as "
"introduced in [Cornuejols & Tutuncu, 2006] 2. it allows for similarity "
"measures between time-series beyond the covariance matrix. Notice that "
"traditionally, modern portfolio theory considers the covariance matrix as"
" a measure of similarity between the assets. As such, however, the "
"covariance matrix is imperfect. Consider, for instance, a company listed "
"both in London and New York. Although both listings should be very "
"similar, only parts of the time series of the prices of the two listings "
"will overlap, because of the partial overlap of the times the markets "
"open. Instead of covariance, one can consider, for example, dynamic time "
"warping of [Berndt and Clifford, 1994] as a measure of similarity between"
" two time series, which allows for the fact that for some time periods, "
"the data are captured by only one of the time series, while for others, "
"both time series exhibit the similarity due to the parallel evolution of "
"the stock price."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:21
msgid "The overall workflow we demonstrate comprises:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:23
msgid ""
"pick the ground set of assets. In our case, this is a small number of US "
"stocks."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:25
msgid ""
"load the time series capturing the evolution of the prices of assets. In "
"our case, this is a simplistic load of adjusted daily closing price data "
"from Wikipedia or Nasdaq or LSE or EuroNext, whereas in a real asset "
"management, a much higher frequency may be considered."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:27
msgid ""
"compute the pair-wise similarity among the time series. In our case, we "
"run a linear-time approximation of the dynamic time warping, still on the"
" classical computer."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:29
msgid ""
"compute the actual portfolio of :math:`q` representative assets, based on"
" the similarity measure. This step is run twice, actually. First, we "
"obtain a reference value by a run of an IBM solver (IBM ILOG CPLEX or the"
" Exact Eigensolver) on the classical computer. Second, we run an "
"alternative, hybrid algorithm partly on the quantum computer."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:31
msgid ""
"visualization of the results. In our case, this is again a simplistic "
"plot."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:33
msgid ""
"In the following, we first explain the model used in (4) above, before we"
" proceed with the installation of the pre-requisites and the data "
"loading."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:36
msgid "The Model"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:38
msgid ""
"As discussed in [Cornuejols & Tutuncu, 2006], we describe a mathematical "
"model that clusters assets into groups of similar ones and selects one "
"representative asset from each group to be included in the index fund "
"portfolio. The model is based on the following data, which we will "
"discuss in more detail later:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:40
msgid ""
"\\rho_{ij} = \\textrm{similarity}\\, \\textrm{between}\\, "
"\\textrm{stock}\\, i \\, \\textrm{and}\\, \\textrm{stock}\\, j."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:45
msgid ""
"For example, :math:`\\rho_{ii} = 1`, :math:`\\rho_{ij} \\leq 1` for "
":math:`i \\neq j` and :math:`\\rho_{ij}` is larger for more similar "
"stocks. An example of this is the correlation between the returns of "
"stocks :math:`i` and :math:`j`. But one could choose other similarity "
"indices :math:`\\rho_{ij}`."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:47
msgid "The problem that we are interested in solving is:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:49
msgid ""
"(M) \\quad  f = \\max_{x_{ij}, y_{j}} \\,\\, \\sum_{i=1}^n \\sum_{j=1}^n "
"\\rho_{ij} x_{ij}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:54
msgid "subject to the clustering constraint:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:56
msgid "\\sum_{j=1}^n y_j = q,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:61
msgid "to consistency constraints:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:63
msgid ""
"\\sum_{j=1}^n x_{ij} = 1, \\,\\textrm{ for }\\,  i = 1,\\ldots, n,\n"
"\\quad x_{ij} \\leq y_j,\\,\\textrm{ for }\\,  i = 1,\\ldots, n; \\, j = "
"1,\\ldots, n,\n"
"\\quad x_{jj} = y_j,\\,\\textrm{ for }\\,  j = 1,\\ldots, n,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:70
msgid "and integral constraints:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:72
msgid ""
"\\quad  x_{ij}, y_j \\in\\{0,1\\}, \\,\\textrm{ for }\\,  i = 1,\\ldots, "
"n; \\, j = 1,\\ldots, n."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:77
msgid ""
"The variables :math:`y_j` describe which stocks :math:`j` are in the "
"index fund (:math:`y_j = 1` if :math:`j` is selected in the fund, "
":math:`0` otherwise). For each stock :math:`i = 1,\\dots,n`, the variable"
" :math:`x_{ij}` indicates which stock :math:`j` in the index fund is most"
" similar to :math:`i` (:math:`x_{ij} = 1` if :math:`j` is the most "
"similar stock in the index fund, :math:`0` otherwise)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:79
msgid ""
"The first constraint selects :math:`q` stocks in the fund. The second "
"constraint imposes that each stock :math:`i` has exactly one "
"representative stock :math:`j` in the fund. The third and fourth "
"constraints guarantee that stock :math:`i` can be represented by stock "
":math:`j` only if :math:`j` is in the fund. The objective of the model "
"maximizes the similarity between the :math:`n` stocks and their "
"representatives in the fund. Different cost functions can also be "
"considered."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:81
msgid "Let us concatenate the decision variables in one vector"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:83
msgid ""
"{\\bf z} = [x_{11},x_{12},\\ldots,x_{11}, x_{22},\\ldots,x_{nn}, "
"y_{1},\\ldots,y_{n}],"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:88
msgid ""
"whose dimension is :math:`{\\bf z} \\in \\{0,1\\}^N`, with :math:`N = n "
"(n+1)` and denote the optimal solution with :math:`{\\bf z}^*`, and the "
"optimal cost :math:`f^*`."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:91
msgid "A Hybrid Approach"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:93
msgid ""
"Here, we demonstrate an approach that combines classical and quantum "
"computing steps, following the quantum approximate optimization approach "
"of Farhi, Goldstone, and Gutman (2014)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:96
msgid "Construct a binary polynomial optimization"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:98
msgid ""
"From :math:`(M)` one can construct a binary polynomial optimization with "
"equality constraints only, by substituting the :math:`x_{ij} \\leq y_j` "
"inequality constraints with the equivalent equality constraints "
":math:`x_{ij} (1- y_j) = 0`. Then the problem becomes:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:100
msgid ""
"(BPO) \\quad  f = \\max_{x_{ij}, y_{j}} \\,\\, \\sum_{i=1}^n "
"\\sum_{j=1}^n \\rho_{ij} x_{ij}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:105
msgid ""
"subject to the clustering constraint, the integral constraints, and the "
"following modified consistency constraints:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:107
msgid ""
"\\sum_{j=1}^n x_{ij} = 1, \\,\\textrm{ for }\\,  i = 1,\\ldots, n,\n"
"\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:109
msgid ""
"\\quad x_{ij} (1- y_j) = 0,\\,\\textrm{ for }\\,  i = 1,\\ldots, n; \\, j"
" = 1,\\ldots, n,\n"
"\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:111
msgid ""
"\\quad x_{jj} = y_j,\\,\\textrm{ for }\\,  j = 1,\\ldots, n.\n"
"\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:114
msgid "Construct the Ising Hamiltonian"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:116
msgid ""
"We can now construct the Ising Hamiltonian (QUBO) by penalty methods "
"(introducing a penalty coefficient :math:`A` for each equality "
"constraint) as"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:118
msgid ""
"(IH) \\quad H = \\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij} + A\\Big( "
"\\sum_{j=1}^n y_j - q\\Big)^2 + \\sum_{i=1}^n A\\Big( \\sum_{j=1}^n "
"x_{ij} - 1\\Big)^2 + \\sum_{j=1}^n A (x_{jj}-y_j)^2 +\\sum_{i=1}^n "
"\\sum_{j=1}^n A \\left(x_{ij} (1- y_j)\\right)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:124
msgid "From Hamiltonian to Quadratic Programming (QP) formulation"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:126
msgid ""
"In the vector :math:`{\\bf z}`, the Ising Hamiltonian elements can be "
"rewritten as follows,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:128
msgid "First term:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:130
msgid ""
"\\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij} = "
"[\\rho_{11},\\rho_{12},\\ldots,\\rho_{11}, "
"\\rho_{22},\\ldots,\\rho_{nn}|{\\bf 0}_n ]{\\bf z} =: {\\bf c}_0^T {\\bf "
"z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:135
msgid "Second term:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:137
msgid ""
"A\\Big( \\sum_{j=1}^n y_j - q\\Big)^2 = A \\Big(\\sum_{j=1}^n y_j\\Big)^2"
" - 2 A \\sum_{j=1}^n y_j + A q^2 = A {\\bf z}^T "
"\\left[\\begin{array}{c}{\\bf 0}_{n^2} \\\\ \\hline  {\\bf 1}_n  "
"\\end{array}\\right]\\left[\\begin{array}{cc}{\\bf 0}_{n^2} | {\\bf 1}_n"
"  \\end{array}\\right]{\\bf z} - 2 A q [{\\bf 0}_{n^2}|{\\bf 1}_n]{\\bf "
"z} + A q^2 =: {\\bf z}^T {\\bf Q}_0 {\\bf z} + {\\bf c}_1^T {\\bf z} + "
"r_0"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:142
msgid "Third term:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:144
msgid ""
"\\sum_{i=1}^n A\\Big( \\sum_{j=1}^n x_{ij} - 1\\Big)^2 = A\\sum_{i=1}^n "
"\\Big(\\sum_{j=1}^n x_{ij}\\Big)^2 - 2 A \\sum_{i=1}^n\\sum_{j=1}^n "
"x_{ij} + n A = \\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:149
msgid "which is equivalent to:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:151
msgid ""
"\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad = A {\\bf z}^T "
"\\left(\\sum_{i=1}^n \\left[\\begin{array}{c}{\\bf 0}_{n(i-1)}  \\\\ "
"{\\bf 1}_n  \\\\ {\\bf 0}_{n(n-i)} \\\\ \\hline {\\bf 0}_{n} "
"\\end{array}\\right]\\left[\\begin{array}{cccc}{\\bf 0}_{n(i-1)} & {\\bf "
"1}_n  & {\\bf 0}_{n(n-i)} & | {\\bf 0}_{n} "
"\\end{array}\\right]\\right){\\bf z} - 2 A [{\\bf 1}_{n^2}|{\\bf "
"0}_n]{\\bf z} + n A =: {\\bf z}^T {\\bf Q}_1 {\\bf z} + {\\bf c}_2^T "
"{\\bf z} + r_1"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:156
msgid "Fourth term:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:158
msgid ""
"A \\sum_{j=1}^n  (x_{jj}-y_j)^2 = A {\\bf z}^T  \\left(\\sum_{j=0}^{n-1} "
"\\left[\\begin{array}{c}{\\bf 0}_{nj + j}  \\\\ 1  \\\\ {\\bf "
"0}_{n^2-(nj+j+1)} \\\\ \\hline {\\bf 0}_{j} \\\\ -1 \\\\ {\\bf 0}_{n-j-1}"
" \\end{array}\\right]\\left[\\begin{array}{cccccc}{\\bf 0}_{nj + j} & 1  "
"& {\\bf 0}_{n^2-(nj+j+1)} & | {\\bf 0}_{j} & -1 & {\\bf 0}_{n-j-1}  "
"\\end{array}\\right]\\right){\\bf z} = A {\\bf z}^T {\\bf Q}_2 {\\bf z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:163
msgid "Fifth term:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:165
msgid ""
"\\sum_{i=1}^n \\sum_{j=1}^n A \\left(x_{ij} (1- y_j)\\right) = A [{\\bf "
"1}_{n^2}|{\\bf 0}_n]{\\bf z} + A {\\bf z}^T \\left( \\sum_{i=1}^n "
"\\sum_{j=1}^n \\left[\\begin{array}{ccc|c}  &  & & \\\\ & {\\bf "
"0}_{n^2\\times n^2} & & -1/2_{(ij,j)}  \\\\ & & & \\\\ \\hline & "
"-1/2_{(j, ij)} &  & {\\bf 0}_{n} \\end{array}\\right] \\right) {\\bf z} "
"=:  {\\bf z}^T {\\bf Q}_3 {\\bf z} + {\\bf c}_3^T {\\bf z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:170
msgid "Therefore, the formulation becomes,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:172
msgid ""
"(IH-QP)\\quad \\max_{{\\bf z}\\in\\{0,1\\}^{n(n+1)}} \\, {\\bf z}^T "
"({\\bf Q}_0+{\\bf Q}_1+ {\\bf Q}_2 + {\\bf Q}_3 ){\\bf z} + ({\\bf "
"c}_0+{\\bf c}_1+{\\bf c}_2+{\\bf c}_3)^T {\\bf z} +r_0+r_1+r_2"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:177
msgid "which can be passed to the variational quantum eigensolver."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:180
msgid "References"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:182
msgid ""
"[1] G. Cornuejols, M. L. Fisher, and G. L. Nemhauser, *Location of bank "
"accounts to optimize float: an analytical study of exact and approximate "
"algorithms*, Management Science, vol. 23(8), 1997"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:184
msgid "[2] E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028, 2014"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:186
msgid "[3] G. Cornuejols and R. Tutuncu, *Optimization methods in finance*, 2006"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:188
msgid ""
"[4] DJ. Berndt and J. Clifford, *Using dynamic time warping to find "
"patterns in time series*. In KDD workshop 1994 (Vol. 10, No. 16, pp. "
"359-370)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:190
msgid ""
"[5] https://github.com/Qiskit/qiskit-"
"tutorial/blob/master/qiskit/aqua/optimization/maxcut\\_and\\_tsp.ipynb"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:202
msgid "The Implementation"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:204
msgid "First, we import the requisite modules."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:249
msgid ""
"Next, we download price data for two stocks and compute their pair-wise "
"similarity matrix (dynamic time warping distance normalized to (0,1] by "
"taking the reciprocal). If this fails, e.g., due to you being offline or "
"exceeding the daily limit for accesses to the stock-market data, we "
"consider a constant matrix instead."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:284
msgid ""
"Now we decide on the number of clusters. This has to be smaller than the "
"number of stocks we have loaded."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:306
msgid "Classical solution using IBM ILOG CPLEX"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:308
msgid ""
"For a classical solution, we use IBM CPLEX. CPLEX is able to find the "
"exact solution of this problem. We first define a ClassicalOptimizer "
"class that encodes the problem in a way that CPLEX can solve, and then "
"instantiate the class and solve it."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:477
msgid ""
"Solution shows the selected stocks via the stars and in green the links "
"(via similarities) with other stocks that are represented in the fund by "
"the linked stock."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:489
msgid "Quantum Computing with IBM Q"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:491
msgid ""
"For the quantum solution, we use Qiskit. We first define a class "
"QuantumOptimizer that encodes the quantum approach to solve the problem "
"and then we instantiate it and solve it. We define the following methods "
"inside the class:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:493
msgid ""
"``exact_solution`` : to make sure that the Ising Hamiltonian is correctly"
" encoded in the :math:`Z` basis, we can compute its eigendecomposition "
"classically, i.e., considering a symmetric matrix of dimension :math:`2^N"
" \\times 2^N`. For the problem at hand :math:`n=3`, that is :math:`N = "
"12`, seems to be the limit for many laptops;"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:494
msgid ""
"``vqe_solution`` : solves the problem :math:`(M)` via the variational "
"quantum eigensolver (VQE);"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:495
msgid ""
"``qaoa_solution`` : solves the problem :math:`(M)` via a Quantum "
"Approximate Optimization Algorithm (QAOA)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:586
msgid "Step 1"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:588
msgid ""
"Instantiate the quantum optimizer class with parameters: - the similarity"
" matrix ``rho``; - the number of assets and clusters ``n`` and ``q``;"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:611
msgid "Step 2"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:613
msgid "Encode the problem as a binary formulation (IH-QP)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:615
msgid ""
"Sanity check: make sure that the binary formulation in the quantum "
"optimizer is correct (i.e., yields the same cost given the same "
"solution)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:669
msgid "Step 3"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:671
msgid "Encode the problem as an Ising Hamiltonian in the Z basis."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:673
msgid ""
"Sanity check: make sure that the formulation is correct (i.e., yields the"
" same cost given the same solution)"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:724
msgid "Step 4"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:726
msgid ""
"Solve the problem via VQE. Notice that depending on the number of qubits,"
" this can take a while: for 6 qubits it takes 15 minutes on a 2015 "
"Macbook Pro, for 12 qubits it takes more than 12 hours. For longer runs, "
"logging may be useful to observe the workings; otherwise, you just have "
"to wait until the solution is printed."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:777
msgid "Step 5"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:779
msgid "Visualize the solution"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:836
msgid ""
"Solution shows the selected stocks via the stars and in green the links "
"(via similarities) with other stocks that are represented in the fund by "
"the linked stock. Keep in mind that VQE is a heuristic working on the QP "
"formulation of the Ising Hamiltonian, though. For suitable choices of A, "
"local optima of the QP formulation will be feasible solutions to the ILP."
" While for some small instances, as above, we can find optimal solutions "
"of the QP formulation which coincide with optima of the ILP, finding "
"optimal solutions of the ILP is harder than finding local optima of the "
"QP formulation, in general. Even within the VQE, one may provide stronger"
" guarantees, for specific variational forms (trial wave functions)."
msgstr ""

