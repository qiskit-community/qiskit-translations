# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/finance/05_bull_spread_pricing.ipynb`__."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:9
msgid "**Pricing Bull Spreads**"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:23
msgid ""
"Suppose a bull spread with strike prices :math:`K_1 < K_2` and an "
"underlying asset whose spot price at maturity :math:`S_T` follows a given"
" random distribution. The corresponding payoff function is defined as:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:25
msgid ""
"\\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\}\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:27
msgid ""
"In the following, a quantum algorithm based on amplitude estimation is "
"used to estimate the expected payoff, i.e., the fair price before "
"discounting, for the option:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:29
msgid ""
"\\mathbb{E}\\left[ \\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\} \\right]"
"\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:31
msgid ""
"as well as the corresponding :math:`\\Delta`, i.e., the derivative of the"
" option price with respect to the spot price, defined as:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:33
msgid "\\Delta = \\mathbb{P}\\left[K_1 \\leq S \\leq K_2\\right]"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:38
msgid ""
"The approximation of the objective function and a general introduction to"
" option pricing and risk analysis on quantum computers are given in the "
"following papers:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:40
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:41
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:71
msgid "Uncertainty Model"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:73
msgid ""
"We construct a circuit factory to load a log-normal random distribution "
"into a quantum state. The distribution is truncated to a given interval "
":math:`[low, high]` and discretized using :math:`2^n` grid points, where "
":math:`n` denotes the number of qubits used. The unitary operator "
"corresponding to the circuit factory implements the following:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:75
msgid ""
"\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = "
"\\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:77
msgid ""
"where :math:`p_i` denote the probabilities corresponding to the truncated"
" and discretized distribution and where :math:`i` is mapped to the right "
"interval using the affine map:"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:79
msgid ""
"\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{high - low}{2^n - 1} * i +"
" low \\in [low, high].\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:149
msgid "Payoff Function"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:151
msgid ""
"The payoff function equals zero as long as the spot price at maturity "
":math:`S_T` is less than the strike price :math:`K_1`, then increases "
"linearly, and is bounded by :math:`K_2`. The implementation uses two "
"comparators, that flip an ancilla qubit each from :math:`\\big|0\\rangle`"
" to :math:`\\big|1\\rangle` if :math:`S_T \\geq K_1` and $S\\_T "
":nbsphinx-math:`\\leq `K\\_2, and these ancillas are used to control the "
"linear part of the payoff function."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:153
msgid ""
"The linear part itself is then approximated as follows. We exploit the "
"fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small "
":math:`|y|`. Thus, for a given approximation scaling factor "
":math:`c_{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:155
msgid ""
"\\sin^2( \\pi/2 * c_{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * "
"c_{approx} * ( x - 1/2 ) + 1/2\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:157
msgid "for small :math:`c_{approx}`."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:159
msgid "We can easily construct an operator that acts as"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:161
msgid ""
"\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( "
"\\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n"
"\n"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:163
msgid "using controlled Y-rotations."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:165
msgid ""
"Eventually, we are interested in the probability of measuring "
":math:`\\big|1\\rangle` in the last qubit, which corresponds to "
":math:`\\sin^2(a*x+b)`. Together with the approximation above, this "
"allows to approximate the values of interest. The smaller we choose "
":math:`c_{approx}`, the better the approximation. However, since we are "
"then estimating a property scaled by :math:`c_{approx}`, the number of "
"evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:167
msgid ""
"For more details on the approximation, we refer to: Quantum Risk "
"Analysis. Woerner, Egger. 2018."
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:281
msgid "Evaluate Expected Payoff"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:354
msgid "Evaluate Delta"
msgstr ""

#: ../../tutorials/finance/05_bull_spread_pricing.ipynb:356
msgid ""
"The Delta is a bit simpler to evaluate than the expected payoff. "
"Similarly to the expected payoff, we use comparator circuits and ancilla "
"qubits to identify the cases where :math:`K_1 \\leq S_T \\leq K_2`. "
"However, since we are only interested in the probability of this "
"condition being true, we can directly use an ancilla qubit as the "
"objective qubit in amplitude estimation without any further "
"approximation."
msgstr ""

