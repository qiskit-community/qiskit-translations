# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/finance/01_portfolio_optimization.ipynb`__."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:9
msgid "**Portfolio Optimization**"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:23
msgid ""
"This tutorial shows how to solve the following mean-variance portfolio "
"optimization problem for :math:`n` assets:"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:25
msgid ""
":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - "
"\\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:27
msgid "where we use the following notation:"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:29
msgid ""
":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision "
"variables, which indicate which assets to pick (:math:`x[i] = 1`) and "
"which not to pick (:math:`x[i] = 0`),"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:30
msgid ""
":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the "
"assets,"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:31
msgid ""
":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances "
"between the assets,"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:32
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:33
msgid ""
"and :math:`B` denotes the budget, i.e. the number of assets to be "
"selected out of :math:`n`."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:35
msgid ""
"We assume the following simplifications: - all assets have the same price"
" (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one"
" has to select exactly :math:`B` assets."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:37
msgid ""
"The equality constraint :math:`1^T x = B` is mapped to a penalty term "
":math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from "
"the objective function. The resulting problem can be mapped to a "
"Hamiltonian whose ground state corresponds to the optimal solution. This "
"notebook shows how to use the Variational Quantum Eigensolver (VQE) or "
"the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal"
" solution for a given set of parameters."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:39
msgid ""
"Experiments on real quantum hardware for this problem are reported for "
"instance in the following paper: Improving Variational Quantum "
"Optimization using CVaR. Barkoutsos et al. 2019."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:71
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:73
msgid ""
"If you would like to run the experiment on a real device, you need to "
"setup your account first."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:75
msgid ""
"Note: If you do not store your token yet, use "
"``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:87
msgid "Define problem instance"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:89
msgid ""
"Here an Operator instance is created for our Hamiltonian. In this case "
"the paulis are from an Ising Hamiltonian translated from the portfolio "
"problem. We use a random portfolio problem for this notebook. It is "
"straight-forward to extend this to using real financial data as "
"illustrated here: `Loading and Processing Stock-Market Time-Series Data "
"<11_time_series.ipynb>`__"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:154
msgid "We define some utility methods to print the results in a nice format."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:196
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:198
msgid "Lets solve the problem. First classically..."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:200
msgid ""
"We can now use the Operator we built above without regard to the "
"specifics of how it was created. We set the algorithm for the "
"NumPyMinimumEigensolver so we can have a classical reference. The problem"
" is set for 'ising'. Backend is not required since this is computed "
"classically not using quantum computation. The result is returned as a "
"dictionary."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:284
msgid "Solution using VQE"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:286
msgid ""
"We can now use the Variational Quantum Eigensolver (VQE) to solve the "
"problem. We will specify the optimizer and variational form to be used."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:288
msgid ""
"Note: You can switch to different backends by providing the name of "
"backend."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:382
msgid "Solution using QAOA"
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:384
msgid ""
"We also show here a result using the Quantum Approximate Optimization "
"Algorithm (QAOA). This is another variational algorithm and it uses an "
"internal variational form that is created based on the problem."
msgstr ""

