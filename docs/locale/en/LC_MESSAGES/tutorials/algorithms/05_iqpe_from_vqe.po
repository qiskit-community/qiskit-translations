# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-15 20:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/algorithms/05_iqpe_from_vqe.ipynb`__."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:12
msgid ""
"Run interactively in the `IBM Quantum lab <https://quantum-"
"computing.ibm.com/jupyter/tutorial/algorithms/05_iqpe_from_vqe.ipynb>`_."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:9
msgid "IQPE and evolution of VQE output state"
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:11
msgid ""
"This notebook demonstrates using an output result state from `VQE "
"<https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQE.html>`__"
" as the input, starting state for evolution by the `IQPE "
"<https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.IQPE.html>`__"
" (Iterative Quantum Phase Estimation) algorithm."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:13
msgid ""
"This is accomplished by first running VQE and then preparing IQPE’s "
"initial state using the variational form as produced by VQE upon its "
"termination."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:41
msgid ""
"First we create a qubit operator for VQE. Here we will use the same "
"operator as used in the algorithms introduction, which was originally "
"computed by Qiskit Chemistry for an H2 molecule."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:66
msgid ""
"First we will use the classical NumPyMinimumEigensolver to compute a "
"reference ground state energy value so later we can compare with the VQE "
"result first, then IQPE’s."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:109
msgid ""
"Having established the reference ground energy, we next carry on with our"
" experiment. First we configure a VQE algorithm instance. The idea is "
"that we can set an termination condition such that the VQE instance "
"returns rather quickly with a rough estimation result."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:163
msgid ""
"As previously indicated, the energy estimation result is rather rough–it "
"is far from being an acceptable final estimation figure. But, it is close"
" enough such that the accompanying variational form might be a reasonably"
" good approximation to the ground eigenstate, which means the "
"corresponding wave function can serve as the initial state for the IQPE "
"execution that follows. We next prepare such an initial state."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:184
msgid ""
"With the VQE-generated quantum state wave function prepared for the "
"initial state, we now go ahead with configuring and running an IQPE "
"instance."
msgstr ""

#: ../../tutorials/algorithms/05_iqpe_from_vqe.ipynb:233
msgid ""
"As can be seen, the resultant ground state energy estimation, as produced"
" by IQPE, is much more accurate that the intermediate result produced by "
"VQE."
msgstr ""

