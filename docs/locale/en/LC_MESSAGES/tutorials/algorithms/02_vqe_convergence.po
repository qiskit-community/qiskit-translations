# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-25 18:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid ""
"This page was generated from "
"`tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid ""
"Variational algorithms in Qiskit, like `VQE "
"<https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ "
"and `QAOA "
"<https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, "
"provide the option for a user to give a callback method that can be used "
"to monitor optimization progress as the algorithm runs and converges to "
"the minimum. The callback is invoked for each functional evaluation by "
"the optimizer and provides the current optimizer value, evaluation count,"
" current optimizer parameters etc. Note that, depending on the specific "
"optimizer this may not be each iteration (step) of the optimizer, so for "
"example if the optimizer is calling the cost function to compute a finite"
" difference based gradient this will be visible via the callback."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid ""
"This notebook demonstrates using Qiskitâ€™s VQE algorithm to plot graphs of"
" the convergence path to ground state energy with a selected set of "
"optimizers."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:43
msgid ""
"First we create a qubit operator for VQE. Here we will use the same "
"operator as used in the algorithms introduction, which was originally "
"computed by Qiskit Nature for an H2 molecule."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:68
msgid ""
"We will show the callback usage below over a set of optimizers for "
"comparison. The minimum energy of the H2 Hamiltonian can be found quite "
"easily so we are able to set maxiters to a small value"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:132
msgid ""
"Now from the callback data we stored we can plot the energy value at each"
" objective function call each optimizer makes. An optimizer using a "
"finite difference method for computing gradient has that characteristic "
"step like plot where for a number of evaluations it is computing the "
"value for close by points to establish a gradient (the close by points "
"having very similar values whose difference cannot be seen on the scale "
"of the graph here)."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:167
msgid ""
"Finally since the above problem is still easily tractable classically we "
"can use NumPyMinimumEigensolver to compute a reference value for the "
"solution. We can now plot the difference from the resultant exact "
"solution as the energy converges with VQE towards the minimum value which"
" should be that exact classical solution."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:240
msgid "Using Gradient framework"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:242
msgid ""
"Qiskit now has a Gradient framework as part of the Opflow capability. "
"With the gradient computed for the optimizer we now see just the "
"optimization steps themselves."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:327
msgid "Monitoring via the logging"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:329
msgid ""
"Much of the code is instrumented with `Python logging "
"<https://docs.python.org/3/library/logging.html>`__ statements. The "
"logging is configurable to adjust level of logging etc. Here we set the "
"logging level to ``INFO``"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:352
msgid ""
"and at INFO level logging VQE will include information on the "
"evaluations, as below."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:354
msgid ""
"INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation "
"returned [-1.07392554] - 116.41884 (ms), eval count: 1 "
"INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation "
"returned [-1.43698938] - 4.05884 (ms), eval count: 2 "
"INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation "
"returned [-1.74596698] - 7.40194 (ms), eval count: 3 "
"INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation "
"returned [-1.75399268] - 6.61016 (ms), eval count: 4"
msgstr ""

