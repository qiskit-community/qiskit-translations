# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-15 20:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../tutorials/machine_learning/03_vqc.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/03_vqc.ipynb`__."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:12
msgid ""
"Run interactively in the `IBM Quantum lab <https://quantum-"
"computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:9
msgid "Variational Quantum Classifier (VQC)"
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:11
msgid ""
"The QSVM notebook demonstrated a kernel based approach. This notebook "
"shows a variational method using the `VQC "
"<https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__"
" algorithm."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:13
msgid ""
"For further information see also the following reference, as given in the"
" QSVM notebook, that also describes this approach: “Supervised learning "
"with quantum enhanced feature spaces,” `arXiv: 1804.11326 "
"<https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:44
msgid ""
"As per the QSVM notebook again we will use the ad hoc dataset as "
"described in the above referenced paper. From the dataset we take samples"
" for use as training, testing and the final prediction (datapoints)."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:105
msgid ""
"With the dataset ready we can setup the `VQC "
"<https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__"
" algorithm to do a classification. We use the `ZZFeatureMap "
"<https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__"
" data encoding circuit from the Qiskit circuit library, like we did with "
"QSVM. But this is a variational algorithm so we need a variational form, "
"i.e. parameterized circuit, whose parameters can be varied by an "
"optimizer when computing VQC’s cost function. For this we choose "
"`TwoLocal "
"<https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__"
" from the Qiskit circuit library. As the qasm_simulator has shot noise we"
" choose to use `SPSA "
"<https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__"
" which is designed to perform under noisy conditions."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:108
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:174
msgid ""
"Now VQC, as well as QSVM, have ``train``, ``test`` and ``predict`` "
"methods. The ``run`` method, as used above, will call these in turn based"
" on whatever data was supplied to the algorithm. But the methods called "
"directly to say train a model and then do predict. Since the vqc instance"
" has already been trained, lets predict another set of sample datapoints "
"by directly calling ``predict``."
msgstr ""

#: ../../tutorials/machine_learning/03_vqc.ipynb:228
msgid ""
"Finally I will note that the Qiskit classifier algorithms can "
"``save_model`` after training and also ``load_model`` that had been "
"previously saved."
msgstr ""

