# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-10 20:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:10 Migration
msgid ""
"This page was generated from `aqua_tutorials/Qiskit Algorithms Migration "
"Guide.ipynb`__."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:9 Migration
msgid "Qiskit Algorithms Migration Guide"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:11 Migration
msgid "**Restructuring the applications**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:13 Migration
msgid ""
"The Qiskit 0.25.0 release includes a restructuring of the applications "
"and algorithms. What previously has been referred to as Qiskit Aqua, the "
"single applications and algorithms module of Qiskit, is now split into "
"dedicated application modules for Optimization, Finance, Machine Learning"
" and Nature (including Physics & Chemistry). The core algorithms and "
"opflow operator functionality are moved to Qiskit Terra."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:15 Migration
msgid "**Algorithm interfaces**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:17 Migration
msgid ""
"Additionally to the restructuring, all algorithms follow a new unified "
"paradigm: algorithms are classified according to the problems they solve,"
" and within one application class algorithms can be used interchangeably "
"to solve the same problem. This means that, unlike before, algorithm "
"instances are decoupled from the problem they solve. We can summarize "
"this in a flowchart:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:19 Migration
msgid "|e9244417c3b54576b581804311862ebb|"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:21 Migration
msgid ""
"For example, the variational quantum eigensolver, ``VQE`` is a "
"``MinimumEigensolver`` as it computes the minimum eigenvalue of an "
"operator. The problem here is specified with the operator, whose "
"eigenvalue we seek, while properties such as the variational ansatz "
"circuit and classical optimizer are properties of the algorithm. That "
"means the ``VQE`` has the following structure"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:28 Migration
msgid ""
"We can exchange the ``VQE`` with any other algorithm that implements the "
"``MinimumEigensolver`` interface to compute the eigenvalues of your "
"operator, e.g."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:35 Migration
msgid ""
"This allows you to easily switch between different algorithms, check "
"against classical references, and provide your own implementation "
":math:`-` you just have to implement the existing interface."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:47 Migration
msgid ""
"This notebook serves as migration guide to facilitate changing your "
"current code using Qiskit Aqua to the new structure."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:58 Migration
msgid ""
"We’re disabling deprecation warning for this notebook so you won’t see "
"any when we instantiate an object from ``qiskit.aqua``. Note though, that"
" the entire package is deprecated and will emit a warning like the "
"following:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:119 Migration
msgid "QuantumInstance"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:121 Migration
msgid "The ``QuantumInstance`` moved the import location from"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:127 Guide.ipynb:201
#: Guide.ipynb:315 Migration
msgid "to"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:142 Guide.ipynb:216
#: Guide.ipynb:330 Guide.ipynb:440 Guide.ipynb:540 Guide.ipynb:788
#: Guide.ipynb:1071 Guide.ipynb:1277 Guide.ipynb:1388 Guide.ipynb:1476
#: Guide.ipynb:1607 Guide.ipynb:1754 Guide.ipynb:1892 Guide.ipynb:2030
#: Guide.ipynb:2166 Guide.ipynb:2304 Guide.ipynb:2493 Guide.ipynb:2521
#: Guide.ipynb:2558 Guide.ipynb:2600 Migration
msgid "**Previously:**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:167 Guide.ipynb:239
#: Guide.ipynb:353 Guide.ipynb:484 Guide.ipynb:586 Guide.ipynb:1425
#: Guide.ipynb:1673 Guide.ipynb:1937 Guide.ipynb:2364 Guide.ipynb:2497
#: Guide.ipynb:2525 Guide.ipynb:2562 Guide.ipynb:2657 Migration
msgid "**New:**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:193 Migration
msgid "Operators"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:195 Migration
msgid "The Opflow operators moved from"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:262 Migration
msgid "**Additional features:**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:264 Migration
msgid ""
"With ``qiskit.opflow`` we introduce a new, more efficient representation "
"of sums of Pauli strings, which can significantly speed up computations "
"on very large sums of Paulis. This efficient representation is "
"automatically used if Pauli strings are summed:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:307 Migration
msgid "Optimizers"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:309 Migration
msgid "The classical optimization routines changed locations from"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:377 Migration
msgid "Grover"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:380 Guide.ipynb:691
#: Guide.ipynb:1025 Guide.ipynb:1729 Guide.ipynb:1854 Guide.ipynb:1986
#: Guide.ipynb:2258 Guide.ipynb:2484 Guide.ipynb:2514 Guide.ipynb:2551
#: Migration
msgid "Summary"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:382 Migration
msgid "The previous structure"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:389 Migration
msgid "is changed to split problem/oracle settings and algorithm settings, to"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:411 Guide.ipynb:724
#: Guide.ipynb:1041 Guide.ipynb:1743 Guide.ipynb:1868 Guide.ipynb:1991
#: Guide.ipynb:2265 Guide.ipynb:2489 Guide.ipynb:2519 Guide.ipynb:2556
#: Migration
msgid "Migration guide"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:413 Migration
msgid ""
"For oracles provided as circuits and a ``is_good_state`` function to "
"determine good states"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:529 Migration
msgid ""
"Since we are streamlining all algorithms to use the ``QuantumCircuit`` "
"class as base primitive, defining oracles using the "
"``qiskit.aqua.compontents.Oracle`` class is deprecated. Instead of using "
"e.g. the ``LogicalExpressionOracle`` you can now use the ``PhaseOracle`` "
"circuit from the circuit library."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:633 Migration
msgid ""
"The ``qiskit.aqua.components.oracles.TruthTableOracle`` is not yet "
"ported, but the behaviour can easily be achieved with the "
"``qiskit.circuit.classicalfunction`` module, see the tutorials on "
"Grover’s algorithm."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:645 Guide.ipynb:901
#: Guide.ipynb:2421 Migration
msgid "More examples"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:656 Migration
msgid ""
"To construct the circuit we can call ``construct_circuit`` and pass the "
"problem instance we are interested in:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:688 Migration
msgid "Amplitude estimation"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:693 Migration
msgid ""
"For all amplitude estimation algorithms \\* ``AmplitudeEstimation`` \\* "
"``IterativeAmplitudeEstimation`` \\* "
"``MaximumLikelihoodAmplitudeEstimation``, and \\* "
"``FasterAmplitudeEstimation``"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:695 Migration
msgid "the interface changed from"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:702 Migration
msgid "to split problem/oracle settings and algorithm settings"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:726 Migration
msgid ""
"Here, we’d like to estimate the probability of measuring a "
":math:`|1\\rangle` in our single qubit. If the state preparation is "
"provided as circuit"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:840 Guide.ipynb:1182
#: Guide.ipynb:1327 Guide.ipynb:1524 Guide.ipynb:1802 Guide.ipynb:2109
#: Guide.ipynb:2210 Migration
msgid "**Now:**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:889 Migration
msgid ""
"Note that the old class used the last qubit in the ``state_preparation`` "
"as objective qubit as default, if no other indices were specified. This "
"default does not exist anymore to improve transparency and remove "
"implicit assumptions."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:912 Migration
msgid "To construct the circuit for amplitude estimation, we can do"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:942 Migration
msgid ""
"Now that the problem is separated from the algorithm we can exchange "
"``AmplitudeEstimation`` with any other algorithm that implements the "
"``AmplitudeEstimator`` interface."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1022 Migration
msgid "Minimum eigenvalues"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1027 Migration
msgid ""
"The interface remained mostly the same, but where previously it was "
"possible to pass the operator in the initializer ."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1028 Migration
msgid ""
"The operators must now be constructed with operators from "
"``qiskit.opflow`` instead of ``qiskit.aqua.operators``."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1029 Migration
msgid "The ``VQE`` argument ``var_form`` has been renamend to ``ansatz``."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1052 Migration
msgid "Assume we want to find the minimum eigenvalue of"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1054 Migration
msgid "H = Z \\otimes I."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1069 Migration
msgid "NumPy-based eigensolver"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1073 Migration
msgid "Previously we imported the operators from ``qiskit.aqua.operators``:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1096 Migration
msgid "and then solved for the minimum eigenvalue using"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1140 Migration
msgid ""
"It used to be possible to pass the observable in the initializer, which "
"is now not allowed anymore due to the problem-algorithm separation."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1184 Migration
msgid ""
"Now we need to import from ``qiskit.opflow`` but the other syntax remains"
" exactly the same:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1242 Migration
msgid "VQE"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1244 Migration
msgid ""
"The same changes hold for VQE. Let’s use the ``RealAmplitudes`` circuit "
"as ansatz:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1279 Migration
msgid ""
"Previously, we had to import both the optimizer and operators from Qiskit"
" Aqua:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1329 Migration
msgid ""
"Now we import optimizers from ``qiskit.algorithms.optimizers`` and "
"operators from ``qiskit.opflow``."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1377 Migration
msgid ""
"Note that the ``qiskit.aqua.components.variational_forms`` are completely"
" deprecated in favor of circuit objects. Most variational forms have "
"already been ported to circuit library in previous releases and now also "
"``UCCSD`` is part of the Qiskit Nature’s circuit library:"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1463 Migration
msgid "QAOA"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1465 Migration
msgid ""
"For Hamiltonians from combinatorial optimization (like ours: :math:`Z "
"\\otimes I`) we can use the QAOA algorithm."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1572 Migration
msgid "**More examples:**"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1603 Migration
msgid "Classical CPLEX"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1605 Migration
msgid ""
"The ``ClassicalCPLEX`` algorithm is now available via the "
"``CplexOptimizer`` interface in the machine learning module."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1726 Migration
msgid "(General) Eigenvalues"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1731 Migration
msgid ""
"As for the ``MinimumEigenSolver``, the only change for the "
"``EigenSolver`` is the type for the observable and the import path."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1851 Migration
msgid "Shor’s algorithm"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1856 Migration
msgid ""
"The arguments ``N`` and ``a`` moved from the initializer to the "
"``Shor.factor`` method."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1870 Migration
msgid "We’ll be using a shot-based readout for speed here."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1983 Migration
msgid "HHL"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1988 Migration
msgid ""
"HHL has been completely refactored to allow an intuitive interface and "
"return an efficient, circuit-based representation of the result."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1993 Migration
msgid "Assume we want to solve the following linear system"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:1995 Migration
msgid ""
"\\begin{pmatrix}\n"
"1 & -1/3 \\\\\n"
"-1/3 & 1 \\\\\n"
"\\end{pmatrix}\n"
"\\vec x\n"
"=\n"
"\\begin{pmatrix}\n"
"1 \\\\ 0\n"
"\\end{pmatrix}"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2143 Migration
msgid ""
"Note that the solution vector is not returned, since that would require "
"an exponentially expensive simulation of the solution circuit. Instead, "
"the circuit can be used to evaluate observables on the solution. For "
"details, see the documentation and docstrings of HHL."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2155 Migration
msgid "NumPy-based linear solver"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2255 Migration
msgid "Phase estimation"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2260 Migration
msgid ""
"Phase estimation has been completely refactored and instead of just one "
"``qiskit.aqua.algorithms.QPE`` class that was used to compute the "
"eigenvalue of a Hamiltonian, we now have two separate implementations: "
"the ``HamiltonianPhaseEstimation`` taking the role of the old ``QPE`` and"
" a new ``PhaseEstimation`` algorithm for textbook phase estimation."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2262 Migration
msgid ""
"The iterative phase estimation, ``qiskit.aqua.algorithms.IQPE`` is not "
"yet replaced but will follow soon."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2267 Migration
msgid "Let’s consider the problem of finding the eigenvalue of"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2278 Migration
msgid "H = 0.5 X + Y + Z"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2283 Migration
msgid "with the input state :math:`|0\\rangle`."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2423 Migration
msgid "Now we can also do standard phase estimation to solve"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2425 Migration
msgid "U|\\psi\\rangle = e^{2\\pi i\\phi}|\\psi\\rangle."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2481 Migration
msgid "VQC"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2486 Migration
msgid ""
"``VQC`` changed the location to "
"``qiskit_machine_learning.algorithms.VQC`` and is now implemented as "
"``NeuralNetworkClassification`` object instead of a generic variational "
"algorithm. The interface has been updated accordingly, see the tutorials "
"below."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2491 Migration
msgid ""
"Since the examples are rather lengthy, we refer to a comparison of the "
"previous and new tutorials."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2495 Migration
msgid ""
"https://github.com/Qiskit/qiskit-"
"tutorials/blob/master/tutorials/machine_learning/03_vqc.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2499 Migration
msgid ""
"https://github.com/Qiskit/qiskit-machine-"
"learning/blob/main/docs/tutorials/02_neural_network_classifier_and_regressor.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2511 Migration
msgid "QSVM"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2516 Migration
msgid ""
"The ``QSVM`` workflow has been replaced by a more generic "
"``QuantumKernel`` routine to better highlight the possibly advantage of "
"quantum computers in computing kernels."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2523 Migration
msgid ""
"https://github.com/Qiskit/qiskit-"
"tutorials/blob/master/tutorials/machine_learning/01_qsvm_classification.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2527 Migration
msgid ""
"https://github.com/Qiskit/qiskit-machine-"
"learning/blob/main/docs/tutorials/03_quantum_kernel.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2539 Migration
msgid "QGAN"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2553 Migration
msgid ""
"The interface and methods remained the same, only the import location of "
"the algorithm and it’s components changed from ``qiskit.aqua`` to "
"``qiskit_machine_learning``."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2560 Migration
msgid ""
"https://github.com/Qiskit/qiskit-"
"tutorials/blob/master/tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2564 Migration
msgid ""
"https://github.com/Qiskit/qiskit-machine-"
"learning/blob/main/docs/tutorials/04_qgans_for_loading_random_distributions.ipynb"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2576 Migration
msgid "Educational algorithms"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2578 Migration
msgid ""
"All educational algorithms have been deprecated and most are now "
"available in the textbook."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2581 Migration
msgid "Deutsch-Josza"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2583 Migration
msgid ""
"Moved to the textbook: https://qiskit.org/textbook/ch-algorithms/deutsch-"
"jozsa.html."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2586 Migration
msgid "Bernstein-Vazirani"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2588 Migration
msgid ""
"Moved to the textbook: https://qiskit.org/textbook/ch-algorithms"
"/bernstein-vazirani.html."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2591 Migration
msgid "Simon"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2593 Migration
msgid ""
"Moved to the textbook: https://qiskit.org/textbook/ch-"
"algorithms/simon.html."
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2596 Migration
msgid "EOH"
msgstr ""

#: ../../aqua_tutorials/Qiskit Algorithms Guide.ipynb:2598 Migration
msgid ""
"The Evolution of Hamiltonian algorithm is can now be implemented with "
"basic tools from ``qiskit.opflow``."
msgstr ""

