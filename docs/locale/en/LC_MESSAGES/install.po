# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-05 21:32+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../install.rst:2
msgid "Installing Qiskit"
msgstr ""

#: ../../install.rst:5
msgid "Requirements"
msgstr ""

#: ../../install.rst:7
msgid ""
"Qiskit supports Python 3.5 or later. However, both Python and Qiskit are "
"evolving ecosystems, and sometimes when new releases occur in one or the "
"other, there can be problems with compatibility."
msgstr ""

#: ../../install.rst:11
msgid ""
"If you're having trouble installing or using Qiskit after updating "
"Python, check the `Qiskit Package metadata "
"<https://pypi.org/project/qiskit/>`__ for **Programming Language** to see"
" which specific versions of Python are supported."
msgstr ""

#: ../../install.rst:15
msgid ""
"We recommend installing `Anaconda "
"<https://www.anaconda.com/download/>`__, a cross-platform Python "
"distribution for scientific computing. Jupyter, included in Anaconda, is "
"recommended for interacting with Qiskit."
msgstr ""

#: ../../install.rst:19
msgid "Qiskit is tested and supported on the following 64-bit systems:"
msgstr ""

#: ../../install.rst:21
msgid "Ubuntu 16.04 or later"
msgstr ""

#: ../../install.rst:22
msgid "macOS 10.12.6 or later"
msgstr ""

#: ../../install.rst:23
msgid "Windows 7 or later"
msgstr ""

#: ../../install.rst:26
msgid "Install"
msgstr ""

#: ../../install.rst:28
msgid ""
"We recommend using Python virtual environments to cleanly separate Qiskit"
" from other applications and improve your experience."
msgstr ""

#: ../../install.rst:31
msgid ""
"The simplest way to use environments is by using the ``conda`` command, "
"included with Anaconda. A Conda environment allows you to specify a "
"specific version of Python and set of libraries. Open a terminal window "
"in the directory where you want to work."
msgstr ""

#: ../../install.rst:36
msgid ""
"It is preferred that you use Anaconda prompt installed with the Anaconda."
" All you have to do is create a virtual environment inside Anaconda and "
"activate the environment. These commands can be run in Anaconda prompt "
"irrespective of Windows or Linux machine."
msgstr ""

#: ../../install.rst:40
msgid "Create a minimal environment with only Python installed in it."
msgstr ""

#: ../../install.rst:46
msgid "Activate your new environment."
msgstr ""

#: ../../install.rst:55
msgid ""
"If you are using conda versions prior to 4.6, use: For Linux or macOS: "
"``source activate name_of_my_env`` For Windows: ``activate "
"name_of_my_env``"
msgstr ""

#: ../../install.rst:61
msgid ""
"Next, install the Qiskit package, which includes Terra, Aer, Ignis, and "
"Aqua."
msgstr ""

#: ../../install.rst:69
msgid ""
"Starting with Qiskit 0.13.0 pip 19 or newer is needed to install qiskit-"
"aer from the precompiled binary on Linux. If you do not have pip 19 "
"installed you can run ``pip install -U pip`` to upgrade it. Without pip "
"19 or newer this command will attempt to install qiskit-aer from sdist "
"(source distribution) which will try to compile aer locally under the "
"covers."
msgstr ""

#: ../../install.rst:75
msgid ""
"If the packages installed correctly, you can run ``conda list`` to see "
"the active packages in your virtual environment."
msgstr ""

#: ../../install.rst:78
msgid ""
"If you intend to use visualization functionality or Jupyter notebooks it "
"is recommended to install qiskit with the visualization extra "
"requirements"
msgstr ""

#: ../../install.rst:85
msgid ""
"It is worth point at if you're a zsh user (which is the default shell on "
"newer versions of macOS) you'll need to put ``qiskit[visualization]`` in "
"quotes:"
msgstr ""

#: ../../install.rst:94
msgid ""
"After you've installed and verified the Qiskit packages you want to use, "
"import them into your environment with Python to begin working."
msgstr ""

#: ../../install.rst:105
msgid ""
"If you want to contribute to the Qiskit community by developing and "
"contributing code with the most recently updated Qiskit code, see "
":ref:`Build Qiskit packages from source "
"<install_install_from_source_label>`."
msgstr ""

#: ../../install.rst:110
msgid "Access IBM Quantum Systems"
msgstr ""

#: ../../install.rst:112
msgid ""
"IBM Quantum offers several real quantum computers and high-performance "
"classical computing simulators through its IBM Quantum Experience with "
"Qiskit. Follow these steps to set up your Qiskit environment to send jobs"
" to IBM Quantum systems."
msgstr ""

#: ../../install.rst:118
msgid ""
"With the release of Qiskit 0.11, if you had previously saved your IBM "
"Quantum Experience credentials locally, you might need to update them so "
"that you can use the new IBM Quantum Experience V2. See `Updating your "
"IBM Quantum Experience Credentials <https://github.com/Qiskit/qiskit-"
"ibmq-provider/#updating-your-ibm-q-experience-credentials>`__."
msgstr ""

#: ../../install.rst:123
msgid ""
"To configure your account, you will create a local configuration file "
"which includes an API key"
msgstr ""

#: ../../install.rst:125
msgid ""
"**1.** `Create a free IBM Quantum Experience account <https://quantum-"
"computing.ibm.com/login>`__."
msgstr ""

#: ../../install.rst:127
msgid "**2.**  Navigate to **My Account** to view your account settings."
msgstr ""

#: ../../install.rst:132
msgid ""
"**3.** Click on **Copy token** to copy the token to your clipboard. "
"Temporarily paste this API token into your favorite text editor so you "
"can use it later to create an account configuration file."
msgstr ""

#: ../../install.rst:139
msgid ""
"**4.** Run the following commands to store your API token locally for "
"later use in a configuration file called ``qiskitrc``. Replace "
"``MY_API_TOKEN`` with the API token value that you stored in your text "
"editor."
msgstr ""

#: ../../install.rst:149
msgid ""
"For more details, such as how to manage multiple IBM Quantum account "
"credentials, refer to this tutorial titled `The IBM Quantum Account "
"<https://github.com/Qiskit/qiskit-"
"tutorials/blob/master/qiskit/fundamentals/3_the_ibmq_account.ipynb>`__."
msgstr ""

#: ../../install.rst:155
msgid "Checking Which Version is Installed"
msgstr ""

#: ../../install.rst:157
msgid ""
"Since the Qiskit package includes a constellation of different elements, "
"simply printing the version by running ``qiskit.__version__`` can be "
"misleading as it returns only the version for the ``qiskit-terra`` "
"package. This is because the ``qiskit`` namespace in Python doesn't come "
"from the Qiskit package, but instead is part of the ``qiskit-terra`` "
"package."
msgstr ""

#: ../../install.rst:169
msgid ""
"To see the versions of all the Qiskit elements in your environment you "
"can use the ``__qiskit_version__`` attribute. For example, running the "
"following command will return a dictionary that includes the versions for"
" each of the installed Qiskit packages."
msgstr ""

#: ../../install.rst:181
msgid ""
"If you're filing an issue or need to share your installed Qiskit versions"
" for something, use the ``__qiskit_version__`` attribute."
msgstr ""

