# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2017-2023, Qiskit Development Team
# This file is distributed under the same license as the Qiskit package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Qiskit \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-11 15:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../intro_tutorial1.rst:3
msgid "Introduction to Qiskit"
msgstr ""

#: ../../intro_tutorial1.rst:5
msgid ""
"When using Qiskit a user workflow nominally consists of following four "
"high-level steps:"
msgstr ""

#: ../../intro_tutorial1.rst:8
msgid ""
"**Build**: Design a quantum circuit(s) that represents the problem you "
"are considering."
msgstr ""

#: ../../intro_tutorial1.rst:10
msgid ""
"**Compile**: Compile circuits for a specific quantum service, e.g. a "
"quantum system or classical simulator."
msgstr ""

#: ../../intro_tutorial1.rst:12
msgid ""
"**Run**: Run the compiled circuits on the specified quantum service(s).  "
"These services can be cloud-based or local."
msgstr ""

#: ../../intro_tutorial1.rst:14
msgid ""
"**Analyze**: Compute summary statistics and visualize the results of the "
"experiments."
msgstr ""

#: ../../intro_tutorial1.rst:17
msgid ""
"Here is an example of the entire workflow, with each step explained in "
"detail in subsequent sections:"
msgstr ""

#: ../../intro_tutorial1.rst:67
msgid "Workflow Step--by--Step"
msgstr ""

#: ../../intro_tutorial1.rst:69
msgid "The program above can be broken down into six steps:"
msgstr ""

#: ../../intro_tutorial1.rst:71
msgid "Import packages"
msgstr ""

#: ../../intro_tutorial1.rst:72
msgid "Initialize variables"
msgstr ""

#: ../../intro_tutorial1.rst:73
msgid "Add gates"
msgstr ""

#: ../../intro_tutorial1.rst:74
msgid "Visualize the circuit"
msgstr ""

#: ../../intro_tutorial1.rst:75
msgid "Simulate the experiment"
msgstr ""

#: ../../intro_tutorial1.rst:76
msgid "Visualize the results"
msgstr ""

#: ../../intro_tutorial1.rst:81
msgid "Step 1 : Import Packages"
msgstr ""

#: ../../intro_tutorial1.rst:83
msgid "The basic elements needed for your program are imported as follows:"
msgstr ""

#: ../../intro_tutorial1.rst:91
msgid "In more detail, the imports are"
msgstr ""

#: ../../intro_tutorial1.rst:93
msgid ""
"``QuantumCircuit``: can be thought as the instructions of the quantum "
"system. It holds all your quantum operations."
msgstr ""

#: ../../intro_tutorial1.rst:95
msgid "``AerSimulator``: is the Aer high performance circuit simulator."
msgstr ""

#: ../../intro_tutorial1.rst:96
msgid "``plot_histogram``: creates histograms."
msgstr ""

#: ../../intro_tutorial1.rst:102
msgid "Step 2 : Initialize Variables"
msgstr ""

#: ../../intro_tutorial1.rst:104
msgid "Consider the next line of code"
msgstr ""

#: ../../intro_tutorial1.rst:110
msgid ""
"Here, you are initializing with 2 qubits in the zero state; with 2 "
"classical bits set to zero; and ``circuit`` is the quantum circuit."
msgstr ""

#: ../../intro_tutorial1.rst:113
msgid "Syntax:"
msgstr ""

#: ../../intro_tutorial1.rst:115
msgid "``QuantumCircuit(int, int)``"
msgstr ""

#: ../../intro_tutorial1.rst:121
msgid "Step 3 : Add Gates"
msgstr ""

#: ../../intro_tutorial1.rst:123
msgid ""
"You can add gates (operations) to manipulate the registers of your "
"circuit."
msgstr ""

#: ../../intro_tutorial1.rst:125
msgid "Consider the following three lines of code:"
msgstr ""

#: ../../intro_tutorial1.rst:133
msgid "The gates are added to the circuit one-by-one to form the Bell state"
msgstr ""

#: ../../intro_tutorial1.rst:135
msgid ""
"|\\psi\\rangle = \\left(|00\\rangle+|11\\rangle\\right)/\\sqrt{2}.\n"
"\n"
msgstr ""

#: ../../intro_tutorial1.rst:137
msgid "The code above applies the following gates:"
msgstr ""

#: ../../intro_tutorial1.rst:139
msgid ""
"``QuantumCircuit.h(0)``: A Hadamard gate :math:`H` on qubit 0, which puts"
" it into a **superposition state**."
msgstr ""

#: ../../intro_tutorial1.rst:141
msgid ""
"``QuantumCircuit.cx(0, 1)``: A controlled-Not operation (:math:`CNOT`) on"
" control qubit 0 and target qubit 1, putting the qubits in an **entangled"
" state**."
msgstr ""

#: ../../intro_tutorial1.rst:144
msgid ""
"``QuantumCircuit.measure([0,1], [0,1])``: if you pass the entire quantum "
"and classical registers to ``measure``, the ith qubitâ€™s measurement "
"result will be stored in the ith classical bit."
msgstr ""

#: ../../intro_tutorial1.rst:152
msgid "Step 4 : Visualize the Circuit"
msgstr ""

#: ../../intro_tutorial1.rst:154
msgid ""
"You can use :meth:`qiskit.circuit.QuantumCircuit.draw` to view the "
"circuit that you have designed in the various forms used in many "
"textbooks and research articles."
msgstr ""

#: ../../intro_tutorial1.rst:161
msgid ""
"In this circuit, the qubits are ordered with qubit zero at the top and "
"qubit one at the bottom. The circuit is read left-to-right, meaning that "
"gates which are applied earlier in the circuit show up farther to the "
"left."
msgstr ""

#: ../../intro_tutorial1.rst:165
msgid ""
"The default backend for ``QuantumCircuit.draw()`` or "
"``qiskit.visualization.circuit_drawer()`` is the text backend. However, "
"depending on your local environment you may want to change these defaults"
" to something better suited for your use case. This is done with the user"
" config file.  By default the user config file should be located in "
"``~/.qiskit/settings.conf`` and is a ``.ini`` file."
msgstr ""

#: ../../intro_tutorial1.rst:171
msgid "For example, a ``settings.conf`` file for setting a Matplotlib drawer is:"
msgstr ""

#: ../../intro_tutorial1.rst:178
msgid ""
"You can use any of the valid circuit drawer backends as the value for "
"this config, this includes text, mpl, latex, and latex_source."
msgstr ""

#: ../../intro_tutorial1.rst:185
msgid "Step 5 : Simulate the Experiment"
msgstr ""

#: ../../intro_tutorial1.rst:187
msgid ""
"Qiskit Aer is a high performance simulator framework for quantum "
"circuits. It provides `several backends <apidoc/aer_provider.html>`__ to "
"achieve different simulation goals."
msgstr ""

#: ../../intro_tutorial1.rst:191
msgid ""
"If you have issues installing Aer, you can alternatively use the Basic "
"Aer provider by replacing `Aer` with `BasicAer`. Basic Aer is included in"
" Qiskit Terra."
msgstr ""

#: ../../intro_tutorial1.rst:201
msgid ""
"To simulate this circuit, you will use the ``AerSimulator``. Each run of "
"this circuit will yield either the bit string 00 or 11."
msgstr ""

#: ../../intro_tutorial1.rst:213
msgid ""
"As expected, the output bit string is 00 approximately 50 percent of the "
"time. The number of times the circuit is run can be specified via the "
"``shots`` argument of the ``execute`` method. The number of shots of the "
"simulation was set to be 1000 (the default is 1024)."
msgstr ""

#: ../../intro_tutorial1.rst:218
msgid ""
"Once you have a ``result`` object, you can access the counts via the "
"method ``get_counts(circuit)``. This gives you the aggregate outcomes of "
"the experiment you ran."
msgstr ""

#: ../../intro_tutorial1.rst:226
msgid "Step 6 : Visualize the Results"
msgstr ""

#: ../../intro_tutorial1.rst:228
msgid "Qiskit provides `many visualizations <apidoc/visualization.html>`__,"
msgstr ""

#: ../../intro_tutorial1.rst:230
msgid "including the function ``plot_histogram``, to view your results."
msgstr ""

#: ../../intro_tutorial1.rst:236
msgid ""
"The observed probabilities :math:`Pr(00)` and :math:`Pr(11)` are computed"
" by taking the respective counts and dividing by the total number of "
"shots."
msgstr ""

#: ../../intro_tutorial1.rst:241
msgid ""
"Try changing the ``shots`` keyword in the ``run()`` method to see how the"
" estimated probabilities change."
msgstr ""

#: ../../intro_tutorial1.rst:247
msgid "Next Steps"
msgstr ""

#: ../../intro_tutorial1.rst:249
msgid "Now that you have learnt the basics, consider these learning resources:"
msgstr ""

#: ../../intro_tutorial1.rst:251
msgid ":ref:`Qiskit tutorials<tutorials>`"
msgstr ""

#: ../../intro_tutorial1.rst:252
msgid ""
"`Textbook: Learn Quantum Computing using Qiskit "
"<https://qiskit.org/textbook>`_"
msgstr ""

#: ../../intro_tutorial1.rst:253
msgid ""
"`Video series: Coding with Qiskit <https://www.youtube.com/playlist?list"
"=PLOFEBzvs-Vvp2xg9-POLJhQwtVktlYGbY>`_"
msgstr ""

