msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-28 11:50+0000\n"
"PO-Revision-Date: 2022-09-05 14:52\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/maintainers_guide.po\n"
"X-Crowdin-File-ID: 9838\n"
"Language: fr_FR\n"

#: ../../maintainers_guide.rst:4
msgid "Maintainers Guide"
msgstr "Guide des mainteneurs"

#: ../../maintainers_guide.rst:6
msgid "This document defines a *maintainer* as a contributor with merge privileges. The information detailed here is mostly related to Qiskit releases and other internal processes."
msgstr "Ce document définit un * maintainer * comme un contributeur disposant de privilèges de fusion. Les informations détaillées ici sont principalement liées aux versions de Qiskit et aux autres processus internes."

#: ../../maintainers_guide.rst:12
msgid "Stable Branch Policy"
msgstr "Politique de la branche stable"

#: ../../maintainers_guide.rst:14
msgid "The stable branch is intended to be a safe source of fixes for high-impact bugs and security issues that have been fixed on master since a release. When reviewing a stable branch PR, we must balance the risk of any given patch with the value that it will provide to users of the stable branch. Only a limited class of changes are appropriate for inclusion on the stable branch. A large, risky patch for a major issue might make sense, as might a trivial fix for a fairly obscure error-handling case. A number of factors must be weighed when considering a change:"
msgstr "La branche dite stable est la source saine des différentes corrections des anomalies majeures identifies et corrigées dans le master depuis la dernière version. Toute modification de cette branche stable doit se faire en évaluant en premier le risque lié à la modification et en le comparant au bénéfices obtenus. Seuls quelques changements bien identifiés doivent être inclus dans cette branche stable. Une correction majeure mais adressant une anomalie critique ou bien une correction triviale pour une fonctionnalité très mineure peuvent être considérées. Dans tous les cas, il est bon de considérer les points suivants :"

#: ../../maintainers_guide.rst:24
msgid "The risk of regression: even the tiniest changes carry some risk of breaking something, and we really want to avoid regressions on the stable branch."
msgstr "Le risque de régression : même la plus petite des modifications peut avoir un impact sur la stabilité du code. Et l'objectif est bien entendu de garder la branche stable la plus sûre possible."

#: ../../maintainers_guide.rst:27
msgid "The user visibility benefit: are we fixing something that users might actually notice, and if so, how important is it?"
msgstr "Le bénéfice utilisateur : sommes-nous en train de corriger quelque chose constaté par les utilisateurs ? Cela apporte-t-il un réel gain pour eux ?"

#: ../../maintainers_guide.rst:29
msgid "How self-contained the fix is: if it fixes a significant issue but also refactors a lot of code, it's probably worth thinking about what a less risky fix might look like."
msgstr "La portée de la correction : si cette correction règle un problème important, mais qu'elle engendre des modifications fortes du code, il doit être envisagé d'imaginer une correction plus légère."

#: ../../maintainers_guide.rst:32
msgid "Whether the fix is already on master: a change must be a backport of a change already merged onto master, unless the change simply does not make sense on master."
msgstr "La correction est-elle déjà dans le Master ? Une modification peut être le rétroportage d'une correction déjà présente dans le Master, ou bien la correction n'a peut-être aucun sens dans le Master."

#: ../../maintainers_guide.rst:39
msgid "Backporting procedure:"
msgstr "Procédure de rétroportage (Backporting) :"

#: ../../maintainers_guide.rst:41
msgid "When backporting a patch from master to stable, we want to keep a reference to the change on master. When you create the branch for the stable PR, use::"
msgstr "Lorsqu'une correction est réalisée du Master vers la branche stable, il est important d'en garder la trace dans le Master. Lorsque vous créez la branche recevant la PR stable, utilisez la commande::"

#: ../../maintainers_guide.rst:47
msgid "However, this only works for small self-contained patches from master. If you need to backport a subset of a larger commit (from a squashed PR, for example) from master, do this manually. In these cases, add::"
msgstr "Bien entendu, cette méthode ne fonctionne que pour les correctifs simples issus du Master. Si vous devez rétroporter (backport) un ensemble conséquent de modifications (commits), issues du Master, faite le manuellement. Dans ce cas, ajoutez ::"

#: ../../maintainers_guide.rst:53
msgid "so that we can track the source of the change subset, even if a strict cherry-pick doesn\\'t make sense."
msgstr "pour que nous puissions suivre la source du sous-ensemble des modifications, même si un cherry-pick strict n'a pas de sens."

#: ../../maintainers_guide.rst:56
msgid "If the patch you're proposing will not cherry-pick cleanly, you can help by resolving the conflicts yourself and proposing the resulting patch. Please keep Conflicts lines in the commit message to help review of the stable patch."
msgstr "Si la mise à jour que vous proposez ne va pas choisir le correctif, vous pouvez aider en résolvant vous-même les conflits et en proposant le correctif qui en résulte. Veuillez conserver les lignes de conflit dans le message de commit pour aider à revoir le correctif stable."

#: ../../maintainers_guide.rst:64
msgid "Backport labels"
msgstr "Étiquettes de rétroportage"

#: ../../maintainers_guide.rst:66
msgid "Bugs or PRs tagged with ``stable backport potential`` are bugs that apply to the stable release too and may be suitable for backporting once a fix lands in master. Once the backport has been proposed, the tag should be removed."
msgstr "Les anomalies ou PR avec l'étiquette ``stable backport potential`` sont celles candidates à un backportage dans le Master. Une fois l'intégration réalisée, l'étiquette doit être supprimée."

#: ../../maintainers_guide.rst:71
msgid "Include ``[Stable]`` in the title of the PR against the stable branch, as a sign that setting the target branch as stable was not a mistake. Also, reference to the PR number in master that you are porting."
msgstr "Ajoutez ``[Stable]`` dans le titre de la PR envoyée à la branche stable pour confirmer la pertinence de cette PR. N'oubliez pas d'ajouter le numéro de la PR dans le Master."

#: ../../maintainers_guide.rst:80
msgid "Qiskit Versioning"
msgstr "Gestion des versions de Qiskit"

#: ../../maintainers_guide.rst:82
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has its own releases and versions, some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Le projet Qiskit est constitué de plusieurs éléments couvrant différentes fonctionnalités. Chacun des éléments a son utilité et peut être utilisé de manière indépendante, mais pour faciliter les choses nous fournissons une source et un meta-package servant de point d'entrée et permettant d'installer tous les\n"
"éléments en une seule fois. Il s'agit de simplifier le processus d'installation et d'offrir une interface unique aux utilisateurs. Cependant dans la mesure ou chacun des éléments a ses propres versions, il faut apporter un minimum d'attention lorsque l'on gère les différentes versions de chacun des éléments. Ce document souligne les lignes directrices à observer pour gérer les différentes versions des éléments, et le meta-package."

#: ../../maintainers_guide.rst:92
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "Pour la suite de ce guide, la nomenclature standard de la gestion de version est la suivante ``Majeure.Mineure.Correctif`` pour référencer les différentes composantes du numéro de version. Par exemple si le numéro de version est ``0.7.1``, alors la version majeure est ``0``, la version mineure est ``7``, et le niveau de correctif est ``1``."

#: ../../maintainers_guide.rst:99
msgid "Meta-package Version"
msgstr "Version du Meta-package"

#: ../../maintainers_guide.rst:101
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "La version du meta-package de Qiskit est une valeur indépendante qui est déterminée par les versions de chacun des éléments qui le constituent. A chaque fois que la mise mise à jour d'un élément est publiée (ou qu'un élément est ajouté), la définition du contenu du méta-package sera mise à jour et sa version sera changée. Les calendriers de mise à jours seront coordonnés pour s'assurer que les publications du méta-package sont consistantes avec la mise à jour des éléments."

#: ../../maintainers_guide.rst:109
msgid "Adding New Tracked Elements"
msgstr "Ajout de nouveaux éléments tracés"

#: ../../maintainers_guide.rst:111
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "Lorsqu'un élément de Qiskit est mis à jour ou ajouté et qu'il modifie les dépendances,\n"
"nous augmentons la version **Mineure** du meta-package."

#: ../../maintainers_guide.rst:114
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and its version is ``0.7.4``. Then we release a new element ``qiskit-new`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "Par exemple supposons que le meta-package suit deux éléments ``qiskit-aer``et ``qiskit-terra`` et que sa version est ``0.7.4``. Ensuite nous publions le nouvel élément ``qiskit-ignis`` que nous voulons aussi suivre dans le meta-package, alors nous passons la version du meta-package à ``0.8.0``."

#: ../../maintainers_guide.rst:122
msgid "Patch Version Increases"
msgstr "Incrément des version de correction"

#: ../../maintainers_guide.rst:124
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release, we need also bump the requirement in the ``setup.py`` and then increase the patch version of the meta-package."
msgstr "Lorsqu'un élément de Qiskit déjà suivi dans le méta-package fait l'objet d'une modification pour corriger des problèmes, alors les exigences doivent apparaître dans le fichier setup.py et cela va incrémenter la version du méta-package."

#: ../../maintainers_guide.rst:129
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.8.1`` and ``qiskit-aer==0.2.1``, with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase its patch version and release, becoming ``0.9.7``."
msgstr "Par exemple, supposons que le méta-package suit 2 éléments ``qiskit-terra==0.8.1`` et ``qiskit-aer==0.2.1``, à la version ``0.9.6``. Lorsque qu'une correction sera apportée à qiskit-terra pour corriger un problème, ce dernier passera à la version ``0.8.2``, le méta-package sera également incrémenté et son niveau deviendra ``0.9.7``."

#: ../../maintainers_guide.rst:135
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "De plus, il y a parfois des paquets ou d'autres bogues dans le méta-paquet lui-même qui doivent être corrigés en poussant les nouvelles versions. Quand ceci se produit, nous devrions augmenter la version de patch pour la différencier de la version buggée. **Ne supprimez pas** les versions buggées ou anciennes de Pypi , en aucun cas, à la place augmentez simplement la version du patch et téléchargez une nouvelle version."

#: ../../maintainers_guide.rst:143
msgid "Minor Version Increases"
msgstr "Incrément des version Mineures"

#: ../../maintainers_guide.rst:145
msgid "Besides when adding a new element to the meta-package, the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "De plus lorsqu'un nouvel élément est ajouté au métapackage, la version mineure du métapackage devrait également être augmentée chaque fois qu'une version mineure est augmentée parmi les éléments suivis."

#: ../../maintainers_guide.rst:149
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "Par exemple supposons que le meta-package suit les deux éléments ``qiskit-terra==0.7.0`` et ``qiskit-aer==0.1.1``, et que sa version courante est ``0.7.5``. Lorsque la version de ``qiskit-aer`` passe à ``0.2.0`` alors la version du méta-package va passer à ``0.8.0``."

#: ../../maintainers_guide.rst:155
msgid "Major Version Increases"
msgstr "Incrément de version majeure"

#: ../../maintainers_guide.rst:157
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now, all the elements still have a major version number component of ``0``, and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1``, then the meta-package version should not increase the major version."
msgstr "La version majeure est gérée de manière un peu différente des autres composantes constituant la gestion des version, lesquelles sont modifiées selon les changement de version des composants. La version majeure n'est changée que lors d'un changement de version de tous les composants (du moins avant la version 1.0.0). Actuellement tous les composants on un niveau de majeur ``0``et tant qu'ils ne seront pas tous marqués comme ayant atteint une version stable (donc à une version majeure ``>=1``) alors le métapackage ne peut pas passer à la version majeure suivante."

#: ../../maintainers_guide.rst:165
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "La règle de changement de version majeure du meta-package après que tous les composants soient à une version >=1.0.0 n'est pas encore déterminée."

#: ../../maintainers_guide.rst:169
msgid "Optional Extras"
msgstr "Options supplémentaires"

#: ../../maintainers_guide.rst:171
msgid "In addition to the tracked elements, there are additional packages built on top of Qiskit which are developed in tandem with Qiskit, for example, the application repositories like qiskit-optimization. For convienence these packages are tracked by the Qiskit metapackage as optional extras that can be installed with Qiskit. Releases of these optional downstream projects do not trigger a metapackage release as they are unpinned and do not affect the metapackage version. If there is a compatibility issue between Qiskit and these downstream optional dependencies and the minimum version needs to be adjusted in a standalone release, this will only be done as a patch version release as it's a packaging bugfix."
msgstr "En plus des éléments suivis, il y a des paquets supplémentaires construits au dessus de Qiskit et qui sont développés en marge de Qiskit par exemple les référentiels d'application comme qiskit-optimization. Pour des raisons pratiques ces paquets sont suivis par le métapaquet Qiskit comme des suppléments facultatifs pouvant être installés avec Qiskit. Les versions de ces projets facultatifs n'ont pas d'effet sur le métapackage car elles n'y sont pas liées. S'il y a un problème de compatibilité entre Qiskit et ces dépendances optionnelles et que la version minimale doit être ajustée par une version autonome, cela sera fait par la publication d'un correctif."

#: ../../maintainers_guide.rst:183
msgid "Qiskit Element Requirement Tracking"
msgstr "Exigences de suivi des éléments d Qiskit"

#: ../../maintainers_guide.rst:185
msgid "While not strictly related to the meta-package and Qiskit versioning, how we track the element versions in the meta-package's requirements list is important. Each element listed in the ``setup.py`` should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "Bien que ce ne soit pas strictement relié à la gestion des versions du méta-package et de Qiskit, la manière dont nous suivons les versions des éléments dans les exigences du méta-package est importante. Chacun des éléments listés dans setup.py devrait correspondre à une version unique. Ceci signifie que chaque version de Qiskit ne définit qu'une seule version de chacun de ses éléments. Par exemple, la liste des exigences devrait toujours être de la forme::"

#: ../../maintainers_guide.rst:197
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "Ceci est conçu de manière à aider au déboggage, mais aussi pour faciliter le suivi des\n"
"versions pour l'ensemble des éléments."

#: ../../maintainers_guide.rst:201
msgid "Documentation Structure"
msgstr "Structure de la Documentation"

#: ../../maintainers_guide.rst:203
msgid "The way documentation is structured in Qiskit is to push as much of the actual documentation into the docstrings as possible. This makes it easier for additions and corrections to be made during development, because the majority of the documentation lives near the code being changed. There are three levels in the normal documentation structure in Terra:"
msgstr "La façon dont la documentation est structurée dans Qiskit est de la faire figurer autant que possible la documentation réelle dans les \"docstring\". Il est ainsi plus facile de faire des ajouts et des corrections au cours du développement, car la majorité de la documentation se trouve près du code modifié. Il y a trois niveaux dans la structure de documentation normale à Terra :"

#: ../../maintainers_guide.rst:231
msgid "The ``.rst`` files in the ``docs/apidocs``"
msgstr "Les fichiers ``.rst``dans le répertoire ``docs/apidocs``"

#: ../../maintainers_guide.rst:210
msgid "These files are used to tell Sphinx which modules to include in the rendered documentation. This contains two pieces of information: an `internal reference <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#reference-names>`__ or `cross reference <https://www.sphinx-doc.org/en/latest/usage/restructuredtext/roles.html#ref-role>`__ to the module, which can be used for internal links inside the documentation, and an `automodule directive <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ used to parse the module docstrings from a specified import path. For example, the ``dagcircuit.rst`` file contains::"
msgstr "Ces fichiers permettent de préciser à Sphinx quels modules sont à intégrer dans la documentation finale. Ils contiennent deux types d'information : une `référence interne <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#reference-names>`__ ou `une référence croisée <https://www.sphinx-doc.org/en/latest/usage/restructuredtext/roles.html#ref-role>`__ à un autre module, utilisé comme lien interne à l'intérieur de la documentation, et une `directive automodule <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ utilisée pour détailler les docstrings via un chemin d'import (import path). Par exemple, le fichier dagcircuit.rst contient::"

#: ../../maintainers_guide.rst:228
msgid "The only ``.rst`` file outside of this is ``qiskit.rst``, which contains the table of contents. If you're adding a new ``.rst`` file for a new module's documentation, make sure to add it to the `toctree <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents>`__ in that file."
msgstr "Le fichier ``qiskit.rst`` est différent et contient la table des matières. Si vous créez un fichier ``.rst`` pour documenter un nouveau module, assurez-vous de l'ajouter au fichier `toctree <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents>`__."

#: ../../maintainers_guide.rst:276
msgid "The module-level docstring"
msgstr "Le docstring au niveau du module"

#: ../../maintainers_guide.rst:234
msgid "This docstring is at the module level for the module specified in the ``automodule`` directive in the rst file. If the module specified is a directory/namespace, the docstring should be specified in the ``__init__.py`` file for that directory. This module-level docstring contains more details about the module being documented. The normal structure to this docstring is to outline all the classes and functions of the public API that are contained in that module. This is typically done using the `autosummary directive <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>`__ (or `autodoc directives <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ directly if the module is simple, such as in the case of ``qiskit.execute``). The autosummary directive is used to autodoc a list of different Python elements (classes, functions, etc.) directly without having to manually call out the autodoc directives for each one. The module-level docstring is where to provide a high-level overview of what functionality the module provides. This is normally done by grouping the different components of the public API together into multiple subsections."
msgstr "Ce dosctring est au niveau du module pour le module spécifié dans la directive ``automodule`` dans le fichier rst. Si le module spécifié est un répertoire / espace de nom, la chaîne de caractères doit être spécifiée dans le fichier ``__init__.py`` pour ce répertoire. Ce docstring de niveau module contient plus de détails sur le module en cours de documentation. La structure normale de cette chaîne de caractères consiste à décrire toutes les classes et toutes les fonctions de l'API publique contenues dans ce module. Ceci est généralement effectué à l'aide de la directive \"autosummary\" <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>` __ (ou \" autodoc directives <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>` __ directement si le module est simple, comme dans le cas de ``qiskit.execute``). La directive autosummary est utilisée pour autodocumenter une liste de différents éléments Python (classes, fonctions, etc.) directement sans avoir à appeler manuellement les directives autodoc pour chacune d'elles. La chaîne docstring de niveau module permet de fournir une présentation générale de la fonctionnalité fournie par le module. Cela se fait normalement en regroupant les différentes composantes de l'API publique en plusieurs sous-sections."

#: ../../maintainers_guide.rst:251
msgid "For example, as in the previous dagcircuit module example, the contents of the module docstring for ``qiskit/dagcircuit/__init__.py`` would be::"
msgstr "Par exemple, pour le module dagcircuit déjà évoqué, le contenu du docstring dans ``qiskit/dagcircuit/__init__.py`` serait::"

#: ../../maintainers_guide.rst:275
msgid "This is just an example and the actual module docstring for the dagcircuit module might diverge from this."
msgstr "Ce n'est qu'un exemple et le module docstring pour le module dagcircuit peut en réalité être différent."

#: ../../maintainers_guide.rst:293
msgid "The actual docstring for the elements listed in the module docstring"
msgstr "La chaîne de docstring réelle des éléments répertoriés dans la docstring du module"

#: ../../maintainers_guide.rst:279
msgid "You should strive to document thoroughly all the public interfaces exposed using examples when necessary. For docstrings, `Google Python Style Docstrings <https://google.github.io/styleguide/pyguide.html?showone=Comments#38-comments-and-docstrings>`__ are used. This is parsed using the `napoleon sphinx extension <https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html>`__. The `napoleon documentation <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__ contains a good example of how docstrings should be formatted."
msgstr "Vous devez absolument documenter toutes les interfaces publiques, en utilisant des exemples si nécessaire. Pour les docstrings, sont utilisés les `Google Python Style Docstrings <https://google.github.io/styleguide/pyguide.html?showone=Comments#38-comments-and-docstrings>`__ Le parsing est réalisé par la `napoleon sphinx extension <https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html>`__. L`extension sphinx napoleon <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__ contient de bons exemples de docstrings correctement formatés."

#: ../../maintainers_guide.rst:288
msgid "You can use any Sphinx directive or rst formatting in a docstring as it makes sense. For example, one common extension used is the ``jupyter-execute`` directive, which is used to execute a code block in Jupyter and display both the code and output. This is particularly useful for visualizations."
msgstr "Vous pouvez utiliser toute directive Sphinx ou format de rst si cela a du sens. Par exemple, une extension couramment utilisée est la directive ``jupyter-execute`` employée pour executer un bloc de code Jupyter et afficher à la fois le code et le résultat. Ceci est particulièrement utile lorsqu'il s'agit de visualisations."

#: ../../maintainers_guide.rst:296
msgid "Documentation Integration"
msgstr "Intégration de la documentation"

#: ../../maintainers_guide.rst:298
msgid "The hosted documentation at https://qiskit.org/documentation/ covers the entire Qiskit project; Terra is just one component of that. As such, the documentation builds for the hosted version are built by the Qiskit meta-package repository https://github.com/Qiskit/qiskit. When commits are merged to that repo, the output of Sphinx builds are uploaded to the qiskit.org website. Those Sphinx builds are configured to pull in the documentation from the version of the Qiskit elements installed by the meta-package at that point. For example, if the meta-package version is currently 0.13.0, then that will copy the documentation from Terra's 0.10.0 release. When the meta-package's requirements are bumped, then it will start pulling documentation from the new version. This means that fixes for incorrect API documentation will need to be included in a new release. Documentation fixes are valid backports for a stable patch release per the stable branch policy (see :ref:`stable_branch_policy`)."
msgstr "La documentation dans https://qiskit.org/documentation/ couvre l'intégralité du projet Qiskit. Terra n'est qu'une partie de ce projet. Les builds de cette documentation sont produits par le meta-package Qiskit https://github.com/Qiskit/qiskit. Lorsque les Commits sont rassemblés dans ce répertoire, les builds Sphinx sont chargés dans le site web qiskit.org. Ces builds Sphinx sont configurés pour pousser la documentation dans la version définie dans les metapackages. Par exemple, si la version des metapackages est toujours la 0.13.0, la documentation est issue de la version 0.10.0 de Terra. La documentation est poussée depuis la nouvelle version lorsque les meta-packages évoluent. Cela implique que les corrections faites à la documentation d'une API doivent être incluses dans une nouvelle version. Ces corrections sont des rétroportages d'une version stable, conforme à la politique de branche stable (voir ci-dessous :ref:`stable_branch_policy`)."

#: ../../maintainers_guide.rst:312
msgid "During the build process, the contents of each element's ``docs/apidocs/`` are recursively copied into a shared copy of ``doc/apidocs/`` in the meta-package repository along with all the other elements. This means that what is in the root of docs/apidocs on each element at a release will end up on the root of https://qiskit.org/documentation/apidoc/."
msgstr "Pendant le processus de build, le contenu de ``docs/apidocs/`` est copié dans une version partagée de ``doc/apidocs/`` dans le répertoire du métapackage, en même temps que tous les autres éléments. Le contenu intégral de docs/apidocs se retrouvera donc à la racine de https://qiskit.org/documentation/apidoc/."

