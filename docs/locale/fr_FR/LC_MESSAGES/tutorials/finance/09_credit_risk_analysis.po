msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 19:37\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9358\n"
"Language: fr_FR\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:10
msgid "This page was generated from `tutorials/finance/09_credit_risk_analysis.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/finance/9_credit_risk_analysis.ipynb`__."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_."
msgstr "Exécuter en mode interactif dans le `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:9
msgid "*Credit Risk Analysis*"
msgstr "*Analyse du Risque de Crédit*"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers:"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:25
msgid "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:26
msgid "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:28
msgid "A general introduction to QAE can be found in the following paper:"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:30
msgid "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:32
msgid "The structure of the tutorial is as follows:"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:34
msgid "`Problem Definition <#Problem-Definition>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:35
msgid "`Uncertainty Model <#Uncertainty-Model>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:36
msgid "`Expected Loss <#Expected-Loss>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:37
msgid "`Cumulative Distribution Function <#Cumulative-Distribution-Function>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:38
msgid "`Value at Risk <#Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:39
msgid "`Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:66
msgid "Problem Definition"
msgstr "Définition du Problème"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:68
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr "Dans ce tutoriel, nous voulons analyser le risque de crédit d'un portefeuille de :math:`K` actifs. La probabilité par défaut de chaque actif :math:`k` suit un modèle *Gaussien d'indépendance conditionnelle*, c'est-à-dire étant donné une valeur :math:`z` échantillonnée à partir d'une variable aléatoire latente :math:`Z` suivant une distribution normale standard, la probabilité par défaut de l'actif :math:`k` est donnée par"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:70
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:72
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr "où :math:`F` indique la fonction de distribution cumulée de :math:`Z`, :math:`p_k^0` est la probabilité par défaut de l'actif :math:`k` pour :math:`z=0` et :math:`\\rho_k` est la sensibilité de la probabilité par défaut de l'actif :math:`k` par rapport à :math:`Z`. Ainsi, compte tenu d'une réalisation concrète de :math:`Z` les événements par défaut individuels sont supposés être indépendants les uns des autres."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:74
msgid "We are interested in analyzing risk measures of the total loss"
msgstr "Nous nous intéressons à l'analyse des mesures de risque de perte totale"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:76
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:78
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr "où :math:`\\lambda_k` indique la *perte par défaut* de l'actif :math:`k`, et a donné :math:`Z`, :math:`X_k(Z)` désigne une variable de Bernoulli représentant l'événement par défaut de l'actif :math:`k`. Plus précisément, nous nous interessons à la valeur espérée :math:`\\mathbb{E}[L]`, la valeur à risque (VaR) de :math:`L` et la valeur conditionnelle à risque de :math:`L` (également appelée déficit attendu). Là où VaR et CVaR sont définis comme"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:80
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:82
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr "avec le niveau de confiance :math:`\\alpha \\in [0, 1]`, et"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:84
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:86
msgid "For more details on the considered model, see, e.g., Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca"
msgstr "Pour plus de détails sur le modèle considéré, voir par exemple Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:88
msgid "The problem is defined by the following parameters: - number of qubits used to represent :math:`Z`, denoted by :math:`n_z` - truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}` - the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` - sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)` - loss given default for asset :math:`k`, denoted by :math:`\\lambda_k` - confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr "Le problème est défini par les paramètres suivants : - nombre de qubits utilisés pour représenter :math:`Z`, notés :math:`n_z` - valeur de troncature pour :math:`Z`, dénoté par :math:`z_{\\text{max}}`, i. ., Z est supposé prendre :math:`2^{n_z}` valeurs équidistantes dans :math:`\\{-z_{max}, ... +z_{max}\\}` - les probabilités par défaut de base pour chaque ressource :math:`p_0^k \\in (0, 1)`, :math:`k=1, ... K` - Sensibilité des probabilités par défaut par rapport à :math:`Z`, notés :math:`\\rho_k \\in [0, 1)` - perte par défaut pour la ressource :math:`k`, notée :math:`\\lambda_k` - niveau de confiance pour VaR / CVaR :math:`\\alpha \\in [0, 1]`."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:119
msgid "Uncertainty Model"
msgstr "Modèle d'incertitude"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:121
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr "Nous construisons maintenant un circuit qui permet de charger le modèle d'incertitude. Ceci peut être réalisé en créant un état quantique dans un registre de :math:`n_z` qubits qui représente :math:`Z` suivant une distribution normale standard. Cet état est ensuite utilisé pour contrôler des rotations en Y sur un second registre de qubits de :math:`K`qubits, où un état :math:`|1\\rangle` de qubit :math:`k` représente l'événement par défaut de l'asset :math:`k`. L'état quantique résultant peut être écrit comme"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:123
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:128
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr "où nous notons :math:`z_i` la :math:`i`-ème valeur de la valeur discrétisée et tronquée :math:`Z` [Egger2019]."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:217
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for - expected loss :math:`\\mathbb{E}[L]` - PDF and CDF of :math:`L` - value at risk :math:`VaR(L)` and corresponding probability - conditional value at risk :math:`CVaR(L)`"
msgstr "Nous utilisons maintenant le simulateur pour valider le circuit qui construit l'état :math:`|\\Psi\\rangle` et calculer les valeurs exactes correspondantes pour - la perte attendue :math:`\\mathbb{E}[L]` - PDF et CDF de :math:`L` - la valeur à risque :math:`VaR(L)` et la probabilité correspondante - la valeur conditionnelle à risque :math:`CVaR(L)`"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:407
msgid "Expected Loss"
msgstr "Perte attendue"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:409
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr "Pour estimer la perte attendue, nous appliquons d'abord un opérateur de somme pondérée pour obtenir la perte totale à partir des pertes individuelles :"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:411
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:413
msgid "The required number of qubits to represent the result is given by"
msgstr "Le nombre qubits requis pour représenter le résultat est donné par"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:415
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:417
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr "Une fois que nous avons la distribution des pertes totales dans un registre quantique, nous pouvons utiliser les techniques décrites dans [Woerner2019] pour faire correspondre une perte totale :math:`L \\in \\ { 0, ..., 2 ^{n_s}-1 \\ } ` à l'amplitude d'un qubit cible par un opérateur"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:419
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:424
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "ce qui permet d'exécuter l'estimation de l'amplitude pour évaluer l'espérance de la perte."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:476
msgid "Create the state preparation circuit:"
msgstr "Création du circuit de préparation d'état :"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:600
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr "Avant d'utiliser QAE pour estimer la perte attendue, nous validons le circuit quantique représentant la fonction objectif en le simulant directement et en analysant la probabilité que le qubit objectif soit dans l'état :math:`|1\\rangle` c'est-à-dire que la valeur QAE sera approchée."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:673
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "Ensuite, nous exécutons QAE pour estimer la perte attendue avec une accélération quadratique par rapport à la simulation classique de Monte Carlo."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:733
msgid "Cumulative Distribution Function"
msgstr "Fonction de distribution cumulée"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:735
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr "Au lieu de l'espérance de la perte (qui pourrait aussi être estimée efficacement à l'aide de techniques classiques), nous estimons à présent la fonction de distribution cumulative (CDF) de la perte. En termes classiques, il s'agit soit d'évaluer toutes les combinaisons possibles d'actifs défaillants, soit de nombreux échantillons classiques dans une simulation de Monte Carlo. Les algorithmes basés sur la QAE ont le potentiel d'accélérer considérablement cette analyse à l'avenir."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:737
msgid "To estimate the CDF, i.e., the probability :math:`\\mathbb{P}[L \\leq x]`, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:739
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:747
msgid "The resulting quantum state can be written as"
msgstr "L'état quantique obtenu peut être écrit comme ceci"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:749
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"
msgstr " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:754
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr "où nous adoptons directement la somme des valeurs de perte et des probabilités correspondantes au lieu de présenter les détails du modèle d'incertitude."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:756
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr "Le CDF (\\ :math:`x`) est égal à la probabilité de mesurer :math:`|1\\rangle` dans le qubit objectif et QAE peut être utilisé directement pour l'estimer."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:874
#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1437
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr "Encore une fois, nous utilisons d'abord la simulation quantique pour valider le circuit quantique."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1025
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "Ensuite, nous exécutons QAE pour estimer le CDF pour un :math:`x` donné."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1084
msgid "Value at Risk"
msgstr "Valeur à Risque"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1086
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr "Dans ce qui suit, nous utilisons une recherche de bisection et QAE pour évaluer efficacement le CDF pour estimer la valeur à risque."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1274
msgid "Conditional Value at Risk"
msgstr "Valeur à Risque Conditionnelle"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1276
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr "Enfin, nous calculons le CVaR, c'est-à-dire que la valeur attendue de la perte est conditionnelle à ce qu'elle soit supérieure ou égale à la VaR. Pour ce faire, nous évaluons une fonction objectif linéaire par morceaux :math:`f(L)`, dépendant de la perte totale :math:`L`, qui est donnée par"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1278
msgid " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1285
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1503
msgid "Next we run QAE to estimate the CVaR."
msgstr "Ensuite, nous exécutons QAE pour estimer la CVaR."

