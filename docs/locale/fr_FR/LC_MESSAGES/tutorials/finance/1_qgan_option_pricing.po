msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-14 09:35+0000\n"
"PO-Revision-Date: 2020-07-31 17:27\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/1_qgan_option_pricing.po\n"
"X-Crowdin-File-ID: 9292\n"
"Language: fr_FR\n"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/1_qgan_option_pricing.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/finance/1_qgan_option_pricing.ipynb`__."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:9
msgid "**Qiskit Finance: qGAN Option Pricing**"
msgstr "** Qiskit Finance: Tarification des options avec un qGAN * *"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:11
msgid "The latest version of this notebook is available on https://github.com/Qiskit/qiskit-iqx-tutorials."
msgstr "La dernière version de ce bloc-notes est disponible sur https://github.com/Qiskit/qiskit-tutorial."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:16
msgid "Contributors"
msgstr "Contributeurs"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:18
msgid "Christa Zoufal[1,2], Stefan Woerner[1] ### Affiliation - [1]IBMQ - [2]ETH Zurich"
msgstr "Christa Zoufal [ 1, 2 ], Stefan Woerner[1] ### Affiliation- [1]IBMQ- [2]ETH Zurich"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:23
msgid "In this notebook, we discuss how a Quantum Machine Learning Algorithm, namely a quantum Generative Adversarial Network (qGAN), can facilitate the pricing of a European call option. More specifically, a qGAN can be trained such that a quantum circuit models the spot price of an asset underlying a European call option. The resulting model can then be integrated into a Quantum Amplitude Estimation based algorithm to evaluate the expected payoff - see `European Call Option Pricing <../simulation/european_call_option_pricing.ipynb>`__. For further details on learning and loading random distributions by training a qGAN please refer to Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019."
msgstr "Dans ce bloc-notes, nous discutons de la façon dont un algorithme d'apprentissage quantique, à savoir un Qgan (quantum Generative Adversarial Network), peut faciliter la tarification d'une option d'appel européen. Plus précisément, un qGAN peut être entrainé de telle sorte qu'un circuit quantique puisse représenter un modèle de prix au comptant d'un actif sous-jacent à une option d'appel européen. Le modèle qui en résulte peut ensuite être intégré à un algorithme basé sur l'estimation d'amplitude quantique pour évaluer le paiement anticipé - voir `Prix de l'option d'appel européen <../simulation/european_call_option_pricing.ipynb>` __. Pour plus de détails sur l'apprentissage et le chargement des distributions aléatoires, veuillez vous référer à Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:59
msgid "Uncertainty Model"
msgstr "Modèle d'incertitude"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:61
msgid "The Black-Scholes model assumes that the spot price at maturity :math:`S_T` for a European call option is log-normally distributed. Thus, we can train a qGAN on samples from a log-normal distribution and use the result as an uncertainty model underlying the option. A notebook that explains the implementation of a qGAN to learn and load a random distribution is presented in `qGANs for Loading Random Distributions <../../aqua/machine_learning/qgans_for_loading_random_distributions.ipynb>`__. In the following, we construct a quantum circuit that loads the uncertainty model. The circuit output reads"
msgstr "Le modèle Black-Scholes suppose que le prix au comptant à l'échéance :math:`S_T` pour une option d'appel européen est log-normalement distribué. Ainsi, nous pouvons former un qGAN sur des échantillons à partir d'une distribution log-normale et utiliser le résultat comme un modèle d'incertitude sous-jacent à l'option. Un bloc-notes expliquant la mise en oeuvre d'un qGAN pour apprendre et charger une distribution aléatoire est présenté dans `qGANs for Loading Random Distributions <../../aqua/machine_learning/qgans_for_loading_random_distributions.ipynb>` __. Dans ce qui suit, nous construisons un circuit quantique qui charge le modèle d'incertitude. La sortie du circuit donne :"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:64
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:66
msgid "where the probabilities :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, represent a model of the target distribution."
msgstr "où les probabilités :math:` p_ {\\theta } ^{j}`, pour :math:` j\\in \\left\\{0, \\ldots, { 2 ^ n-1 } \\right\\ } `, représentent un modèle de la distribution cible."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:135
#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:259
msgid "Evaluate Expected Payoff"
msgstr "Evaluation du paiement attendu"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:137
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function with Quantum Amplitude Estimation."
msgstr "Maintenant, le modèle d'incertitude ainsi entrainé peut être utilisé pour évaluer l'espérance de la fonction de paiement de l'option grâce à l'estimation d'amplitude quantique."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:170
msgid "Plot the probability distribution"
msgstr "Traçage de la distribution des probabilités"

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:172
msgid "Next, we plot the trained probability distribution and, for reasons of comparison, also the target probability distribution."
msgstr "Ensuite, nous traçons la distribution de probabilité entrainée, ainsi que la distribution de probabilité cible, pour des raisons de comparaison."

#: ../../tutorials/finance/1_qgan_option_pricing.ipynb:261
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function analytically and with Quantum Amplitude Estimation."
msgstr "Maintenant, le modèle d'incertitude ainsi entrainé peut être utilisé pour évaluer l'espérance de la fonction de paiement de l'option grâce à l'estimation d'amplitude quantique."

