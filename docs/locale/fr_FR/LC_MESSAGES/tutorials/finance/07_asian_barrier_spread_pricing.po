msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 00:19+0000\n"
"PO-Revision-Date: 2021-04-06 12:39\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/07_asian_barrier_spread_pricing.po\n"
"X-Crowdin-File-ID: 9354\n"
"Language: fr_FR\n"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/07_asian_barrier_spread_pricing.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/finance/07_asian_barrier_spread_pricing.ipynb`__."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/07_asian_barrier_spread_pricing.ipynb>`_."
msgstr "Exécuter en mode interactif dans le `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/07_asian_barrier_spread_pricing.ipynb>` _."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:9
msgid "*Pricing Asian Barrier Spreads*"
msgstr "**Evaluation des options asiatiques sur spread**"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:23
msgid "An Asian barrier spread is a combination of 3 different option types, and as such, combines multiple possible features that the Qiskit Finance option pricing framework supports:"
msgstr "Une option asiatique sur spread est une combinaison de 3 types d'options différents, et en tant que tel, combine plusieurs fonctionnalités que le framework d'évaluation des prix des options Qiskit Finance supporte :"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:25
msgid "Asian option: The payoff depends on the average price over the considered time horizon."
msgstr "Option asiatique: Le paiement dépend du prix moyen durant une période déterminée."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:26
msgid "Barrier Option: The payoff is zero if a certain threshold is exceeded at any time within the considered time horizon."
msgstr "Option à barrière: le paiement est égal à zéro si un certain seuil est dépassé à n' importe quel moment de la période de temps considérée."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:27
msgid "(Bull) Spread: The payoff follows a piecewise linear function (depending on the average price) starting at zero, increasing linear, staying constant."
msgstr "Option ( haussières ) sur spread: Le paiement suit une fonction linéaire par morceaux (selon le prix moyen) partant de zéro, augmentant linéairement, demeurant constants."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:29
msgid "Suppose strike prices :math:`K_1 < K_2` and time periods :math:`t=1,2`, with corresponding spot prices :math:`(S_1, S_2)` following a given multivariate distribution (e.g. generated by some stochastic process), and a barrier threshold :math:`B>0`. The corresponding payoff function is defined as"
msgstr "Supposons les prix d'exercice :math:`K_1 < K_2` et les périodes :math:`t=1,2`, avec les cours de sous-jacents correspondants :math:`(S_1, S_ 2)` suivant une distribution multivariée donnée (générée par exemple par un processus stochastique), et un seuil de barrière :math:`B> 0`. La fonction de paiement correspondante est définie comme"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:31
msgid "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"
msgstr "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ si } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{sinon.}\n"
"\\end{cases}"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:40
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option"
msgstr "Dans ce qui suit, un algorithme quantique basé sur l'estimation d'amplitude est utilisé pour évaluer le paiement, c'est-à-dire le juste prix avant décote, pour l'option"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:42
msgid "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:44
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "L'approximation de la fonction objectif et une introduction générale à l'évaluation des prix d'options et à l'analyse des risques sur les ordinateurs quantiques sont donnés dans les articles suivants :"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:46
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:47
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:77
msgid "Uncertainty Model"
msgstr "Modèle d'Incertitude"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:79
msgid "We construct a circuit factory to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit factory implements the following:"
msgstr "Nous construisons un circuit afin de représenter une distribution aléatoire en log-normale multidimensionnelle dans un état quantique sur :math:`n` qubits. Pour chaque dimension :math:`j = 1,\\ldots,d`, la distribution est limitée à l'intervalle :math:`[\\text{low}_j, \\text{high}_j]` et discrétisée en utilisants :math:`2^{n_j}` points, où :math:`n_j` correspond au nombre de qubits utilisés pour représenter la dimension :math:`j`, c'est à dire : :math:`n_1+\\ldots+n_d = n`. L'opérateur unitaire correspondant à ce circuit est le relation suivant :"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:82
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:84
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "où :math:`p_{i_1\\ldots i_d}` représentent les probabilités de chaque distribution tronquée et discrétisée et où :math:`i_j` est mappé sur l'intervalle approprié en utilisant la relation affine suivante :"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:86
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:88
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "Pour simplifier, nous supposons que les cours des deux titres sont indépendants et distribués de manière identique. Cette hypothèse simplifie la paramétrisation ci-dessous et peut être facilement étendue à des distributions plus complexes multivariées et également corrélées. La seule hypothèse importante pour l'implémentation suivante est que la grille de discrétisation des différentes dimensions ait la même taille de pas."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:173
msgid "Payoff Function"
msgstr "Fonction de Paiement"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:175
msgid "For simplicity, we consider the sum of the spot prices instead of their average. The result can be transformed to the average by just dividing it by 2."
msgstr "Pour simplifier, nous considérons la somme des cours des sous-jacents au lieu de leur moyenne. Le résultat peut être transformé en moyenne en le divisant par 2."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:177
msgid "The payoff function equals zero as long as the sum of the spot prices :math:`(S_1 + S_2)` is less than the strike price :math:`K_1` and then increases linearly until the sum of the spot prices reaches :math:`K_2`. Then payoff stays constant to :math:`K_2 - K_1` unless any of the two spot prices exceeds the barrier threshold :math:`B`, then the payoff goes immediately down to zero. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_1 + S_2) \\geq K_1` and another comparator/ancilla to capture the case that :math:`(S_1 + S_2) \\geq K_2`. These ancillas are used to control the linear part of the payoff function."
msgstr "La fonction de paiement est égale à zéro tant que la somme des cours des sous-jacents :math:` (S_1 + S_ 2) ` est inférieure au prix d'exercice :math:` K_1 `, puis augmente de façon linéaire jusqu'à ce que cette somme atteigne :math:` K_2 `. Alors, le paiement reste constant à :math:` K_2-K_1 ` à moins que l'un des deux cours dépasse le seuil barrière :math:` B `, et le paiement va immédiatement à zéro. L'implémentation utilise d'abord un opérateur de somme pondérée pour calculer la somme des prix spot dans un registre ancilla, puis utilise un comparateur, qui flip un qubit ancilla de :math:` \\big | 0\\rangle ` à :math:` \\big | 1\\rangle ` si :math:` (S_1 + S_ 2) \\geq K_1 ` et un autre comparateur / ancilla pour capturer le cas ou :math:` (S_1 + S_ 2) \\geq K_2 `. Ces ancillas sont utilisées pour contrôler la partie linéaire de la fonction de paiement."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:180
msgid "In addition, we add another ancilla variable for each time step and use additional comparators to check whether :math:`S_1`, respectively :math:`S_2`, exceed the barrier threshold :math:`B`. The payoff function is only applied if :math:`S_1, S_2 \\leq B`."
msgstr "En outre, nous ajoutons une autre variable ancilla pour chaque pas de temps et utilisons des comparateurs supplémentaires pour vérifier si :math:` S_1 `, respectivement :math:` S_2 `, dépasse le seuil barrière :math:` B `. La fonction de paiement n'est appliquée que si :math:` S_1, S_2 \\leq B `."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:182
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "Une approximation de la partie linéaire proprement dite est faite de la façon suivante. On exploite le fait que :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` pour :math:`|y|` petit.\n"
"Ainsi, pour un facteur d'échelle d'approximation :math:`c_\\text{approx} \\in [0, 1]` et :math:`x \\in [0, 1]` on considère"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:184
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:186
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ pour de petites valeurs de :math:`c_\\text{approx}`."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:188
msgid "We can easily construct an operator that acts as"
msgstr "Nous pouvons facilement construire un opérateur qui agit ainsi"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:190
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:192
msgid "using controlled Y-rotations."
msgstr "en utilisant des Y-rotations contrôlées."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:194
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Il est aussi intéressant de connaitre la probabilité de mesurer :math:`\\big|1\\rangle` sur le dernier qubit, qui correspond à :math:`\\sin^2(a*x+b)`. En complément de l'approximation précédente, nous pouvons alors estimer la valeurs des intérêts. Plus :math:`c_\\text{approx}` est choisi petit, meilleure est l'approximation. Cependant, puisque nous estimons une propriété dépendant de :math:`c_\\text{approx}`, le nombre de qubits d'évaluation :math:`m` doit être choisi en conséquence."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:196
msgid "For more details on the approximation, we refer to: Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Pour plus de détails sur l'approximation, nous nous référons à: Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:198
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "Étant donné que l'opérateur de somme pondérée (dans son implémentation actuelle) ne peut additionner que des entiers, nous devons faire correspondre les intervalles d'origine avec les intervalles représentables pour estimer le résultat, puis inverser cette correspondance avant d'interpréter le résultat. Cela correspond essentiellement à la relation affine décrite dans le cadre du modèle d'incertitude ci-dessus."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:591
msgid "Evaluate Expected Payoff"
msgstr "Evaluation du Paiement Attendu"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:593
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "Nous commençons par vérifier le circuit quantique en le simulant et en analysant la probabilité de mesurer l'état :math:`|1\\rangle` sur le qubit objectif."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:699
msgid "Next we use amplitude estimation to estimate the expected payoff. Note that this can take a while since we are simulating a large number of qubits. The way we designed the operator (asian_barrier_spread) implies that the number of actual state qubits is significantly smaller, thus, helping to reduce the overall simulation time a bit."
msgstr "Nous utilisons ensuite l'estimation de l'amplitude pour obtenir une estimation du gain attendu. Notez que cela peut prendre un certain temps car nous simulons un grand nombre de qubits. La façon dont nous avons conçu l'opérateur (asian_barrier_spread) implique que le nombre de qubits utilisé est significativement plus petit, contribuant ainsi à réduire un peu le temps de simulation global."

