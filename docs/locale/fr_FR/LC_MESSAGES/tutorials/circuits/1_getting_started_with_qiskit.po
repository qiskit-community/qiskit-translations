msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-04-24 10:22\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/1_getting_started_with_qiskit.po\n"
"X-Crowdin-File-ID: 9114\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."
msgstr "Cette page a été générée puis traduite à partir de `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:9
msgid "Getting Started with Qiskit"
msgstr "Démarrer avec Qiskit"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. The fundamental package of Qiskit is Terra that provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Execute**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Execute** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Ici, nous présentons une vue d'ensemble de l'utilisation de Qiskit. Le package fondamental de Qiskit est Terra, qui fournit les éléments de base nécessaires à la programmation des ordinateurs quantiques. L'unité fondamentale de Qiskit est le `circuit quantique <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Un travail de base avec Qiskit se décompose en deux étapes : la **construction** et l'**exécution**. La **construction** permet de construire différents circuits quantiques qui représentent le problème que vous êtes en train de résoudre, tandis que l'**exécution** permet de les executer sur différents backends. Après l'exécution des circuits, les données sont collectées et traitées en fonction du résultat souhaité."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:36
msgid "Circuit Basics"
msgstr "Principes de base des circuits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:39
msgid "Building the circuit"
msgstr "Construction du circuit"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:41
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "L'élément de base dont vous aurez besoin pour ce premier programme est le QuantumCircuit (circuit quantique). Nous commençons par créer un ``QuantumCircuit`` constitué de 3 qubits."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:63
msgid "After you create the circuit with its registers, you can add gates (\"operations\") to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr "Après avoir créé le circuit avec ses registres, vous pouvez ajouter les portes (\"opérations\") pour manipuler les registres. En parcourant les tutoriels vous trouverez davantage de portes et de circuits ; ci-dessous un exemple de circuit quantique qui crée un état GHZ avec 3 qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:65
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:67
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit :math:`q_{0}`, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A controlled-Not operation (:math:`C_{X}`) between qubit :math:`q_{0}` and qubit :math:`q_{1}`. - A controlled-Not operation between qubit :math:`q_{0}` and qubit :math:`q_{2}`."
msgstr "Pour créer un tel état, nous commençons par un registre quantique à trois qubits. Par défaut, chaque qubit dans le registre est initialisé à :math:`|0\\rangle`. Pour obtenir l'état GHZ, nous appliquons les portes suivantes : - Une porte Hadamard :math:`H` sur le qubit :math:`q_{0}`, qui le met dans l'état de superposition :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - Une opération pas contrôlée (:math:`C_{X}`) entre le qubit :math:`q_{0}` et le qubit :math:`q_{1}`. - Une opération contrôlée-Pas entre le qubit :math:`q_{0}` et le qubit :math:`q_{2}`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:70
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "Dans un calculateur quantique parfait, l'état produit en exécutant ce circuit serait l'état GHZ ci-dessus."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:72
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr "Dans Qiskit, les opérations peuvent être ajoutées au circuit une par une, comme montré ci-dessous."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:126
msgid "Visualize Circuit"
msgstr "Visualisation du circuit"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:128
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Vous pouvez visualiser le circuit en utilisant la méthode ``QuantumCircuit.draw()``, qui dessinera le circuit tel qu'on le voit dans de nombreux ouvrages."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:158
msgid "In this circuit, the qubits are put in order, with qubit :math:`q_{0}` at the top and qubit :math:`q_{2}` at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr "Dans ce circuit, les qubits sont mis dans l'ordre, avec le qubit :math:`q_{0}` en haut et le qubit :math:`q_{2}` en bas. Le circuit est lu de gauche à droite (ce qui signifie que les portes qui sont appliquées plus tôt dans le circuit apparaissent plus loin à gauche)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:173
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Lorsque l'on représente l'état d'un système à plusieurs qubits, l'ordre des produits tensoriels utilisé dans Qiskit est différent de celui de la plupart des manuels de physique. Supposons qu'il y a :math:`n` qubits, et que le qubit de numéro :math:`j` soit dénoté par :math:`Q_{j}`. Qiskit utilise l'ordre dans lequel le qubit numéro :math:`n` est à gauche dans l'expression du produit tensoriel, de telle sorte à ce que les vecteurs de base soient dénotés par :math:` Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:175
msgid "For example, if qubit :math:`Q_{0}` is in state 0, qubit :math:`Q_{1}` is in state 0, and qubit :math:`Q_{2}` is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Par exemple, si le qubit :math:`Q_{0}` est en état 0, qubit :math:`Q_{1}` est en état 0, et qubit :math:`Q_{2}` est en état 1, Qiskit représenterait cet état comme :math:`|100\\rangle`, alors que beaucoup de manuels de physique le représenteraient comme :math:`|001\\rangle`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:177
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit :math:`Q_{0}` being the control and qubit :math:`Q_{1}` being the target as"
msgstr "Cette différence dans l'étiquetage affecte la façon dont les opérations multi-qubit sont représentées comme des matrices. Par exemple, Qiskit représente une opération contrôlée-X (:math:`C_{X}`) avec le qubit :math:`Q_{0}` étant le contrôle et le qubit :math:`Q_{1}` étant la cible comme"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:179
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:195
msgid "Simulating circuits using Qiskit Aer"
msgstr "Simuler des circuits en utilisant Qiskit Aer"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:197
msgid "Qiskit Aer is our package for simulating quantum circuits. It provides many different backends for doing a simulation. There is also a basic, Python only, implementation called ``BasicAer`` in Terra that can be used as a drop-in replacement for ``Aer`` in the examples below."
msgstr "Qiskit Aer est le module qui nous permet de simuler des circuits quantiques. Il fournit plusieurs plateformes différentes pour effectuer une telle simulation. Il existe également dans Terra une implémentation simple utilisant exclusivement Python appelée ``BasicAer`` qui peut être utilisée comme une alternative à ``Aer`` dans les exemples suivants."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:200
msgid "Statevector backend"
msgstr "Backend dédié aux vecteurs d'état"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:202
msgid "The most common backend in Qiskit Aer is the ``statevector_simulator``. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "Le backend le plus commun de Qiskit Aer est le ``statevector_simulator``. Ce simulateur renvoie l'état quantique, qui est un vecteur complexe de dimension :math:`2^n`, où :math:`n` est le nombre de qubits (faites donc attention en utilisant ce backend, comme la taille du vecteur en question peut rapidement devenir trop grande pour votre machine)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:213
msgid "To run the above circuit using the statevector simulator, first you need to import Aer and then set the backend to ``statevector_simulator``."
msgstr "Pour exécuter le circuit ci-dessus en utilisant le simulateur de vecteur d'état, vous devez d'abord importer Aer et ensuite paramétrer l'environnement d'exécution, ou backend en anglais, sur ``statevector_simulator``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:238
msgid "Now that we have chosen the backend, it's time to compile and run the quantum circuit. In Qiskit we provide the ``run`` method for this. ``run`` returns a ``job`` object that encapsulates information about the job submitted to the backend."
msgstr "Maintenant que nous avons choisi le backend, il est temps de compiler et d'exécuter le circuit quantique. Dans Qiskit nous fournissons la méthode ``run`` pour cela. ``run`` retourne un objet ``job`` qui encapsule les informations sur la tâche soumise à l'arrière-plan."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:244
msgid "Tip: You can obtain the above parameters in Jupyter. Simply place the text cursor on a function and press Shift+Tab."
msgstr "Astuce: Il est possible d'obtenir les paramètres ci-dessus dans Jupyter. Placez simplement le curseur sur une fonction et pressez Shift+Tab."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:270
msgid "When you run a program, a job object is made that has the following two useful methods: ``job.status()`` and ``job.result()``, which return the status of the job and a result object, respectively."
msgstr "Lorsque vous exécutez un programme, un objet job est créé. Cet objet possède deux méthodes pouvant se révéler utiles : ``job.status()`` et ``job.result()``, qui retourneront respectivement l'état du job et un objet résultat."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:276
msgid "Note: Jobs run asynchronously, but when the result method is called, it switches to synchronous and waits for it to finish before moving on to another task."
msgstr "Note : Les tâches s'exécutent de façon asynchrone, mais quand la méthode result est appelée, on bascule en mode synchrone et on attend que la tâche en cours soit finie avant de passer à la suivante."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:301
msgid "The results object contains the data and Qiskit provides the method ``result.get_statevector(circ)`` to return the state vector for the quantum circuit."
msgstr "L'objet result contient les données voulues et Qiskit fournit la méthode ``result.get_statevector(circ)`` pour retourner le vecteur d'état du circuit quantique."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:350
msgid "Qiskit also provides a visualization toolbox to allow you to view these results."
msgstr "Qiskit fournit aussi une boite à outil de visualisation qui permet d'afficher ces résultats."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:352
msgid "Below, we use the visualization function to plot the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "Ci-dessous, nous utilisons la fonction de visualisation pour afficher les points correspondants aux composantes réelles et imaginaires de la matrice de densité :math:`\\rho`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:384
msgid "Unitary backend"
msgstr "Backend associé aux opérateurs unitaires"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:395
msgid "Qiskit Aer also includes a ``unitary_simulator`` that works *provided all the elements in the circuit are unitary operations*. This backend calculates the :math:`2^n \\times 2^n` matrix representing the gates in the quantum circuit."
msgstr "Qiskit Aer inclut également ``unitary_simulator`` qui permet, *en supposant que tous les éléments du circuit soient des opérations unitaires*, de calculer la matrice de taille :math:`2^n \\times 2^n` représentant les portes du circuit quantique."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:492
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:503
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Les simulateurs précédents sont utiles car ils fournissent une information sur l'état de sortie d'un circuit idéal et la représentation matricielle de ce circuit. Toutefois, une expérience réelle se termine par la mesure de chaque qubit (habituellement sur la base de calcul :math:`|0\\rangle, |1\\rangle`). Sans mesure, on ne peut pas récupérer d'information à propos de l'état. Cependant, la mesure provoque l'effondrement du système quantique en un système de bits classiques."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:505
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Par exemple, supposons que nous fassions des mesures indépendantes sur chaque qubit de l'état GHZ à trois qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:507
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:509
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit :math:`q_{2}`, :math:`y` to the outcome on qubit :math:`q_{1}`, and :math:`z` to the outcome on qubit :math:`q_{0}`."
msgstr "et notons :math:`xyz` la chaîne de bits résultante. Rappelons que, dans la convention de nommage des qubits utilisée par Qiskit, :math:`x` correspond à l'état résultant du qubit :math:`q_{2}`, :math:`y` à l'état résultant du qubit :math:`q_{1}`, et :math:`z` à l'état résultant du qubit :math:`q_{0}`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:515
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Note: Cette représentation de la chaîne de bits place le bit le plus significatif (MSB) à gauche, et le bit le moins significatif (LSB) à droite. Il s'agit de l'ordre standard utilisé pour représenter des chaînes de bits. Nous représentons les qubits de la même façon (le qubit représentant le MSB est associé à l'index 0), c'est pourquoi Qiskit utilise un ordre de produit tensoriel non standard."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:521
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Rappelons que la probabilité d'obtenir le résultat :math:`xyz` est donnée par"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:523
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:525
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "ce qui assure que les probabilités d'obtenir 000 ou 111 à partir de l'état GHZ sont toutes les deux égales à 1/2."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:527
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Pour simuler un circuit qui inclut des mesures, nous avons besoin d'ajouter lesdites mesures au circuit précédent et d'utiliser un backend Aer différent."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:630
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Ce circuit ajoute un registre classique ainsi que trois mesures placées de telle sorte à faire correspondre la mesure de chaque qubit à son bit classique associé."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:632
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``run`` method, via the ``shots`` keyword."
msgstr "Pour simuler ce circuit, nous utilisons ``qasm_simulator`` de Qiskit Aer. Chaque exécution (\"tir\" ou \"shot\" en anglais) de ce circuit aboutira soit à une séquence 000, soit à 111. Afin d'obtenir une statistique de la distribution des résultats (par exemple, afin d'estimer :math:`\\mathrm{Pr}(000)`), nous devons répéter cette expérience plusieurs fois. Le nombre d'expériences, qui est aussi le nombre de fois où le circuit sera exécuté peut être spécifié dans la fonction ``run`` par le mot-clé ``shots``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:662
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Une fois que vous avez un objet résultat, vous pouvez obtenir le décompte des dits résultats (counts) par la fonction ``get_counts(circuit)``. Cela vous donne le résultat sous forme *d'agrégats* de chaînes binaires du circuit testé."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:708
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Environ 50% du temps, le résultat sera 000. Qiskit fournit également une fonction ``plot_histogram`` qui vous permet de visualiser les résultats."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:739
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``run`` method and see how the estimated probabilities change."
msgstr "Les probabilités estimées des résultats :math:`\\mathrm{Pr}(000)` et :math:`\\mathrm{Pr}(111) sont calculées en prenant les agrégats précédents et en les divisant par le nombres de \"tirs\" (le nombre de répétitions de l'exécution du circuit). Essayez par exemple de modifier la valeur du mot-clé ``shots`` dans la fonction ``run`` afin de voir la manière dont la probabilité estimée est affectée."

