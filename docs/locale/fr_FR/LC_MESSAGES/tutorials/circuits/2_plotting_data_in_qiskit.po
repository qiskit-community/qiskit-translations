msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-14 09:35+0000\n"
"PO-Revision-Date: 2020-07-20 09:58\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/2_plotting_data_in_qiskit.po\n"
"X-Crowdin-File-ID: 9116\n"
"Language: fr_FR\n"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:9
msgid "Qiskit Visualizations"
msgstr "Visualisations Qiskit"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:33
msgid "Plot histogram"
msgstr "Afficher l'histogramme"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:35
msgid "To visualize the data from a quantum circuit run on a real device or ``qasm_simulator`` we have made a simple function"
msgstr "Pour visualiser les données d'un circuit quantique exécuté sur un appareil réel ou ` ` qasm_simulateur ` ` nous avons fait une fonction simple"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:37
msgid "``plot_histogram(data)``"
msgstr "` ` plot_histogramme (données) ` `"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:39
msgid "As an example we make a 2-qubit Bell state"
msgstr "À titre d'exemple, nous faisons un état de Bell avec 2-qubit"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:112
msgid "Options when plotting a histogram"
msgstr "Options lors de la préparation d'un histogramme"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:114
msgid "The ``plot_histogram()`` has a few options to adjust the output graph. The first option is the ``legend`` kwarg. This is used to provide a label for the executions. It takes a list of strings use to label each execution's results. This is mostly useful when plotting multiple execution results in the same histogram. The ``sort`` kwarg is used to adjust the order the bars in the histogram are rendered. It can be set to either ascending order with ``asc`` or descending order with ``dsc``. The ``number_to_keep`` kwarg takes an integer for the number of terms to show, the rest are grouped together in a single bar called rest. You can adjust the color of the bars with the ``color`` kwarg which either takes a string or a list of strings for the colors to use for the bars for each execution. You can adjust whether labels are printed above the bars or not with the ``bar_labels`` kwarg. The last option available is the ``figsize`` kwarg which takes a tuple of the size in inches to make the output figure."
msgstr "` ` plot_histogram () ` ` a quelques options pour ajuster le graphique de sortie. La première option est la variable nommée présente (kwarg) ` ` legend ` `. Cette valeur est utilisée pour fournir un libellé pour les exécutions. Elle utilise une une liste de chaînes de caractères pour identifier les résultats de chaque exécution. Ceci est surtout utile lors du traçage de plusieurs résultats d'exécution dans le même histogramme. La variable nommée ` ` trier ` ` est utilisée pour ajuster l'ordre des barres dans l'histogramme. Elle peut être définie par ordre croissant avec ` ` asc ` ` ou par ordre décroissant avec ` ` dsc ` `. La variable nommée ` ` number_to_keep ` ` prend un entier pour le nombre de termes à afficher, les autres sont regroupés dans une seule barre appelé reste. Vous pouvez ajuster la couleur des barres avec la variable nommée ` ` couleur ` ` qui prend une chaîne de caractères ou une liste de chaînes de caractères pour les couleurs à utiliser pour les barres pour chaque exécution. Vous pouvez ajuster si les libellés sont imprimés au-dessus des barres ou non avec la variable ` ` bar_labels ` `. La dernière option disponible est la variable ` ` figsize ` ` qui prend un n-uplet de la taille en pouces pour créer le diagramme en sortie."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:172
msgid "Using the output from plot\\_histogram()"
msgstr "Utilisation de la sortie de plot\\_histogram ()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:174
msgid "When using the plot\\_histogram() function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object from ``plot_histogram()`` to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png``. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Lorsque vous utilisez la fonction plot\\_histogram (), elle renvoie un ` `matplotlib.Figure ` pour la visualisation. Les notebooks Jupyter comprennent ce type de reponse et en font la présentation pour nous dans ce tutoriel, mais en dehors de Jupyter, vous n'avez pas cette fonctionnalité automatiquement. Cependant, la classe ` `matplotlib.Figure ` a des méthodes natives pour l'affichage et la sauvegarde de la visualisation. Vous pouvez appeler ` ` .show () ` ` sur l'objet retourné de ` ` plot_histogram () ` ` pour ouvrir l'image dans une nouvelle fenêtre (en supposant que votre backend matplotlib configuré est interactif). Ou bien vous pouvez appeler ` `.savefig('out.png') ` ` pour sauvegarder le diagramme dans ` `out.png ` `. La méthode ` ` savefig () ` ` accepte un paramètre de chemin pour que vous puissiez ajuster l'emplacement et le nom de fichier où vous enregistrez la sortie."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:187
msgid "Plot State"
msgstr "Tracé de l'état"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:198
msgid "In many situations you want to see the state of a quantum computer. This could be for debugging. Here we assume you have this state (either from simulation or state tomography) and the goal is to visualize the quantum state. This requires exponential resources, so we advise to only view the state of small quantum systems. There are several functions for generating different types of visualization of a quantum state"
msgstr "Dans de nombreuses situations, vous voulez voir l'état de l'ordinateur quantique. Cela peut être pour le débogage. Nous supposons ici que vous avez cet état (obtenu par simulation ou tomographie d'état) et l'objectif est de visualiser l'état quantique. Cela nécessite des ressources exponentielles, donc nous conseillons de n'observer l'état que de petits systèmes quantiques. Il existe plusieurs fonctions permettant de générer différents types de visualisations d'un état quantique"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:208
msgid "A quantum state is either a state matrix :math:`\\rho` (Hermitian matrix) or statevector :math:`|\\psi\\rangle` (complex vector). The state matrix is related to the statevector by"
msgstr "Un état quantique est soit une matrice d'état :math:`\\rho ` (matrice hermitienne) ou un vecteur d'état :math:` | \\psi\\rangle ` (vecteur complexe). La matrice d'état est liée au vecteur d'état par"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:210
msgid "\\rho = |\\psi\\rangle\\langle \\psi|,"
msgstr "\\rho = | \\psi\\rangle\\langle \\psi |,"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:212
msgid "and is more general as it can represent mixed states (positive sum of statevectors)"
msgstr "et est plus général car il peut représenter des états mixtes (somme positive des vecteurs d'états)"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:214
msgid "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |."
msgstr "\\rho = \\sum_k p_k | \\psi_k\\rangle\\langle \\psi_k |."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:216
msgid "The visualizations generated by the functions are: - ``'plot_state_city'``: The standard view for quantum states where the real and imaginary (imag) parts of the state matrix are plotted like a city."
msgstr "Les visualisations générées par les fonctions sont:-` 'plot_state_city'` `: la vue standard des états quantiques où les parties réelles et imaginaires (imag) de la matrice d'état sont dessinés comme une ville."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:218
msgid "``'plot_state_qsphere'``: The Qiskit unique view of a quantum state where the amplitude and phase of the state vector are plotted in a spherical ball. The amplitude is the thickness of the arrow and the phase is the color. For mixed states it will show different ``'qsphere'`` for each component."
msgstr "` ` plot_state_qsphere'` `: la vue unique Qiskit d'un état quantique où l'amplitude et la phase du vecteur d'état sont tracées dans une boule sphérique. L'amplitude est l'épaisseur de la flèche et la phase est la couleur. Pour les états mixtes, il affiche différentes ` ` qsphere'` ` ` pour chaque composant."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:220
msgid "``'plot_state_paulivec'``: The representation of the state matrix using Pauli operators as the basis :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."
msgstr "` ` 'plot_state_paulivec'` ` `: la représentation de la matrice d'état à l'aide des opérateurs Pauli comme base :math:`\\rho = \\sum_ { q= 0 } ^ { d ^ 2-1 } p_jP_j/d `."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:222
msgid "``'plot_state_hinton'``: Same as ``'city'`` but where the size of the element represents the value of the matrix element."
msgstr "` ` plot_state_hinton'` `: Identique à ` ` 'city'` ` ` mais où la taille de l'élément représente la valeur de l'élément de matrice."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:224
msgid "``'plot_bloch_multivector'``: The projection of the quantum state onto the single qubit space and plotting on a bloch sphere."
msgstr "` ` plot_bloch_multivectoriel'` `: la projection de l'état quantique sur l'espace d'un qubit unique et présentée sur une sphère de bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:355
msgid "Here we see that there is no information about the quantum state in the single qubit space as all vectors are zero."
msgstr "Nous voyons ici qu'il n'y a pas d'informations sur l'état quantique dans l'espace d'un qubit unique car tous les vecteurs sont nulls."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:367
msgid "Options when using state plotting functions"
msgstr "Options lors de l'utilisation des fonctions de présentation de l''état"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:369
msgid "The various functions for plotting quantum states provide a number of options to adjust how the plots are rendered. Which options are available depends on the function being used."
msgstr "Les différentes fonctions de présentation des états quantiques fournissent plusieurs d'options pour ajuster la façon dont les tracés sont créés. Les options disponibles dépendent de la fonction utilisée."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:380
msgid "**plot\\_state\\_city()** options"
msgstr "** plot\\_state\\_city () * * options"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:382
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:416
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:449
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:496
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:685
msgid "**title** (str): a string that represents the plot title"
msgstr "** title** (str): chaîne représentant le titre du diagramme"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:383
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:417
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:450
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:483
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:497
msgid "**figsize** (tuple): figure size in inches (width, height)."
msgstr "** figsize** (n-uplet): taille du diagramme en pouces (largeur, hauteur)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:384
msgid "**color** (list): a list of len=2 giving colors for real and imaginary components of matrix elements."
msgstr "** color** (liste): une liste de longueur= 2 donnant des couleurs pour les composantes réelles et imaginaires des éléments de la matrice."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:414
msgid "**plot\\_state\\_hinton()** options"
msgstr "** plot\\_state\\_hinton () * * options"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:447
msgid "**plot\\_state\\_paulivec()** options"
msgstr "** plot\\_state\\_paulivec () * * options"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:451
msgid "**color** (list or str): color of the expectation value bars."
msgstr "**color** (liste ou str): couleur des barres de valeur attendues."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:481
msgid "**plot\\_state\\_qsphere()** options"
msgstr "** plot\\_state\\_qsphere () * * options"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:494
msgid "**plot\\_bloch\\_multivector()** options"
msgstr "** plot\\_bloch\\_multivecteur () * * options"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:528
msgid "Using the output from state plotting functions"
msgstr "Utilisation des paramètres retournés par les fonctionsde visualisation d'état"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:530
msgid "When using any of the state plotting functions it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Lors de l'utilisation des fonctions de visualisation d'état, elles retournent un ` `matplotlib.Figure ` pour la visualisation. Les notebooks Jupyter comprennent ce type de paramètre retourné et sont utilisés par ce tutoriel, mais en dehors de Jupyter, vous n'avez pas cette fonctionnalité automatiquement. Cependant, la classe ` `matplotlib.Figure ` a des méthodes pour l'affichage et la sauvegarde de la visualisation. Vous pouvez appeler ` ` .show () ` ` sur l'objet retourné pour ouvrir l'image dans une nouvelle fenêtre (en supposant que votre backend matplotlib configuré est interactif). Ou encore, vous pouvez appeler ` `.savefig('out.png') ` ` pour enregistrer le diagramme` `out.png ` ` dans le répertoire de travail en cours. La méthode ` ` savefig () ` ` accepte un chemin en paramètre afin que vous puissiez ajuster l'emplacement et le nom de fichier en sortie."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:543
msgid "Interactive State Plots for Jupyter Notebooks"
msgstr "Tracés d'état interactifs pour les notebooks Jupyter"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:545
msgid "Just like with ``plot_histogram()`` there is a second set of functions for each of the functions to plot the quantum state. These functions have the same name but with a prepended ``i``:"
msgstr "Comme pour ` ` plot_histogram () ` ` il y a un deuxième set de fonctions pour chacune des fonctions afin d'afficher tracer l'état quantique. Ces fonctions portent le même nom mais avec un préfixe ` ` i ` `:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:555
msgid "These functions are made using an externally hosted JS library for use in Jupyter notebooks. The interactive plot can only be used if you're running inside a Jupyter notebook and only if you have external connectivity to the host with the JS library. If you use these functions outside of a Jupyter notebook it will fail."
msgstr "Ces fonctions sont contenues dans une bibliothèque JS externe pour les notebooks Jupyter. Le tracé interactif ne peut être utilisé que si vous êtes à l'intérieur d'un bloc-notes Jupyter et uniquement si vous avez une connectivité avec l'hôte qui execute la bibliothèque JS. Si vous utilisez ces fonctions en dehors d'un bloc-notes Jupyter, cela ne fonctionnera pas."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:638
msgid "Plot Bloch Vector"
msgstr "Tracer le vecteur de Bloch"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:640
msgid "A standard way of plotting a quantum system is using the Bloch vector. This only works for a single qubit and takes as input the Bloch vector."
msgstr "Une façon standard d'afficher un système quantique est d'utiliser le vecteur de Bloch. Ceci ne fonctionne que pour un seul qubit et prend en paramètre d'entrée le vecteur de Bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:642
msgid "The Bloch vector is defined as :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, where :math:`X`, :math:`Y`, and :math:`Z` are the Pauli operators for a single qubit and :math:`\\rho` is the state matrix."
msgstr "Le vecteur de Bloch est défini comme :math:` [ x = \\mathrm{Tr}[ X \\rho ], y = \\mathrm{Tr}[ Y \\rho ], z = \\mathrm{Tr}[ Z \\rho ] ] `, où :math:` X `, :math:` Y `, et :math:` Z ` sont les opérateurs de Pauli pour un seul qubit et :math:`\\rho ` est sa matrice d'état."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:683
msgid "Options for plot\\_bloch\\_vector()"
msgstr "Options pour plot\\_bloch\\_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:686
msgid "**figsize** (tuple): Figure size in inches (width, height)."
msgstr "** figsize** (n-uplet): taille du diagramme en pouces (largeur, hauteur)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:717
msgid "Adjusting the output from plot\\_bloch\\_vector()"
msgstr "Ajuster le résultat de plot\\_bloch\\_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:719
msgid "When using the ``plot_bloch_vector`` function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Lors de l'utilisation de ``plot_bloch_vector``, la fonction renvoie un ` `matplotlib.Figure ` pour la visualisation. Les notebooks Jupyter comprennent ce type de paramètre retourné et sont utilisés par ce tutoriel, mais en dehors de Jupyter, vous n'avez pas cette fonctionnalité automatiquement. Cependant, la classe ` `matplotlib.Figure ` a des méthodes pour l'affichage et la sauvegarde de la visualisation. Vous pouvez appeler ` ` .show () ` ` sur l'objet retourné pour ouvrir l'image dans une nouvelle fenêtre (en supposant que votre backend matplotlib configuré est interactif). Ou encore, vous pouvez appeler ` `.savefig('out.png') ` ` pour enregistrer le diagramme` `out.png ` ` dans le répertoire de travail en cours. La méthode ` ` savefig () ` ` accepte un chemin en paramètre afin que vous puissiez ajuster l'emplacement et le nom de fichier en sortie."

