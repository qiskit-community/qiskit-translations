msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-08-14 19:09\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/circuits/01_circuit_basics.po\n"
"X-Crowdin-File-ID: 9498\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:10
msgid "This page was generated from `tutorials/circuits/01_circuit_basics.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/circuits/01_circuit_basics.ipynb`__."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:9
msgid "Circuit Basics"
msgstr "Principes de base des circuits"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. Qiskit provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Run**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Run** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Ici, nous vous présentons une vue d'ensemble de l'utilisation de Qiskit. Le package fondamental de Qiskit est Terra qui fournit les éléments de base nécessaires à la programmation des ordinateurs quantiques. L'unité fondamentale de Qiskit est le `circuit quantique <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Un workflow de base en utilisant Qiskit se compose de deux étapes : **Build** et **Execute**. **Build** vous permet de construire différents circuits quantiques qui représentent le problème que vous êtes en train de résoudre, et **Execute** qui vous permet de les exécuter sur différents backends. Après que les travaux ont été exécutés, les données sont collectées et traitées en fonction du résultat souhaité."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:36
msgid "Building the circuit"
msgstr "Construction du circuit"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:38
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "L'élément de base dont vous aurez besoin pour un premier programme est le QuantumCircuit (circuit quantique). Nous commençons par créer un ``QuantumCircuit`` constitué de 3 qubits."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:60
msgid "After you create the circuit with its registers, you can add gates (\"operations\") to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr "Après avoir créé le circuit avec ses registres, vous pouvez ajouter les portes (\"opérations\") pour manipuler les registres. En parcourant les tutoriels vous trouverez davantage de portes et de circuits ; ci-dessous un exemple de circuit quantique qui crée un état GHZ avec 3 qubits"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:62
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:64
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit 0, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A Controlled-NOT operation (:math:`C_{X}`) between qubit 0 and qubit 1. - A Controlled-NOT operation between qubit 0 and qubit 2."
msgstr "Pour créer un tel état, nous démarrons avec un registre quantique de 3 qubits. Par défaut, chaque qubit du registre est initialisé à :math:`|0\\rangle`. Pour créer l'état GHZ, on applique les portes suivantes: - Une porte Hadamard :math:`H` sur le qubit 0, qui le place dans un état de superposition :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - Une opération \"controlled-Not\" (NON-contrôlé ou C-not) (:math:`C_{X}`) entre le qubit 0 et le qubit 1. - Une opération \"controlled-Not\" (C-not) entre le qubit 0 et le qubit 2."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:66
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "Dans un calculateur quantique parfait, l'état produit en lançant ce circuit serait l'état GHZ ci-dessus."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:68
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr "Dans Qiskit, les opérations peuvent être ajoutées au circuit une par une, comme montré ci-dessous."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:122
msgid "Visualize Circuit"
msgstr "Visualisation du circuit"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:124
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Vous pouvez visualiser le circuit en utilisant Qiskit ``QuantumCircuit.draw()``, qui dessinera le circuit de la façon dont on le voit dans de nombreux ouvrages."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:154
msgid "In this circuit, the qubits are put in order, with qubit zero at the top and qubit two at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr "Dans le circuit, les qubits sont mis dans un ordre où le qubit 0 sera en haut et le qubit 2 en bas. Le circuit est lu de gauche à droite (ce qui signifie que les portes appliquées en premiers sont celles de gauche et ainsi de suite)."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:169
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Lorsqu'on représente l'état d'un système à plusieurs qubits, l'ordre des produits tensoriels utilisé dans Qiskit est différent de celui de la plupart des manuels de physique. Supposons qu'il y a :math:`n` qubits, et que le qubit :math:`j` est étiqueté comme :math:`Q_{j}`. Qiskit utilise un ordre dans lequel le qubit :math:` n^{ \\mathrm{th}} ` est sur le côté gauche du produit tensoriel, de sorte que les vecteurs de base sont marqués comme :math:` Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0 `."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:171
msgid "For example, if qubit zero is in state 0, qubit 1 is in state 0, and qubit 2 is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Par exemple, si le qubit zéro est dans l'état 0, le qubit 1 est dans l'état 0, le qubit 2 dans l'état 1, Qiskit représentera cet état par :math:`|100\\rangle`, tandis que de nombreux manuels de physiques l'auraient représenté par :math:`|001\\rangle`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:173
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit 0 being the control and qubit 1 being the target as"
msgstr "Cette différence d'affichage affecte la façon dont les opérations multi-qubits sont représentées en tant que matrices. Par exemple, Qiskit représente une opération Control-X (:math:`C_{X}`) avec un qubit 0 étant le qubit de contrôle et un qubit 1 qui est la cible par"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:175
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:191
msgid "Simulating circuits"
msgstr "Simulation des circuits"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:193
msgid "To simulate a circuit we use the quant_info module in Qiskit. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "Pour simuler un circuit, nous utilisons le module quant_info de Qiskit. Ce simulateur renvoie l'état quantique, qui est un vecteur complexe de dimension :math:`2^n`, où :math:`n` est le nombre de qubits (alors soyez prudent en utilisant ceci car il va rapidement devenir trop grand pour s'exécuter sur votre machine)."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:195
msgid "There are two stages to the simulator. The first is to set the input state and the second to evolve the state by the quantum circuit."
msgstr "Il y a deux étapes pour le simulateur. La premières consiste à définir l'état d'entrée et la seconde à faire évoluer cet état au travers du circuit quantique."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:225
#: ../../tutorials/circuits/01_circuit_basics.ipynb:255
msgid "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{\\sqrt{2}}  \\\\\n"
" \\end{bmatrix}\n"
"$$"
msgstr "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{ \\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{ \\sqrt{2}} \\\\\n"
" \\end{bmatrix}\n"
"$$"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:272
msgid "Qiskit also provides a visualization toolbox to allow you to view the state."
msgstr "Qiskit fournit aussi une boite à outil de visualisation qui permet d'afficher ces résultats."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:274
msgid "Below, we use the visualization function to plot the qsphere and a hinton representing the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "Ci-dessous, nous utilisons la fonction de visualisation pour afficher les points correspondants aux composantes réelles et imaginaires de la matrice densité :math:`\\rho`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:324
msgid "Unitary representation of a circuit"
msgstr "Représentation unitaire d'un circuit"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:335
msgid "Qiskit's quant_info module also has an operator method which can be used to make a unitary operator for the circuit. This calculates the :math:`2^n \\times 2^n` matrix representing the quantum circuit."
msgstr "Le module quant_info de Qiskit a également une méthode d'opérateur qui peut être utilisée pour faire un opérateur unitaire pour le circuit. Ceci calcule la matrice :math:`2^n \\times 2^n` représentant le circuit quantique."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:456
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:467
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Les simulateurs précédents sont utiles car ils fournissent une information sur l'état de sortie d'un circuit idéal et la représentation matricielle de ce circuit. Toutefois, une expérience réelle se termine par la mesure de chaque qubit (habituellement sur la ba se de calcul :math:`|0\\rangle, |1\\rangle`). Sans mesure, on ne peut pas récupérer d'information à propos de l'état. Mais la mesure provoque l'effrondrement du système quantique en un système de bits classiques."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:469
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Par exemple, supposons que nous fassions des mesures indépendantes sur chaque qubit de l'état GHZ à trois qubits"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:471
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:473
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit 2, :math:`y` to the outcome on qubit 1, and :math:`z` to the outcome on qubit 0."
msgstr "et notons :math:`xyz` la chaîne de bits résultante. Rappelons que, dans la convention de nommage des qubits utilisée par Qiskit, :math:`x` correspond à la sortie du qubit 2, :math:`y` à la sortie du qubit 1 et :math:`z` à la sortie du qubit 0."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:479
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Note: Cette représentation de la chaîne de bits place le bit le plus significatif (MSB) à gauche, et le bit le moins significatif (LSB) sur la droite. Il s'agit de l'ordre standard des bits binaires. Nous commandons les qubits de la même façon (le qubit représentant le MSB a l'index 0), c'est pourquoi Qiskit utilise un ordre de produit tensoriel non standard."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:485
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Rappelons que la probabilité d'obtenir un résultat :math:`xyz` est définie par"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:487
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:489
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "et ainsi les probabilités d'obtenir 000 ou 111 à partir de l'état GHZ sont toutes les deux 1/2."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:491
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Pour simuler un circuit qui inclut la mesure, nous avons besoin d'ajouter les mesures aux circuits précédents et d'utiliser un environnement Aer différent."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:533
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Ce circuit ajoute un registre classique, et 3 mesures qui sont utilisés pour faire correspondre la mesure de chaque qubit à son bit classique."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:535
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``execute`` function, via the ``shots`` keyword."
msgstr "Pour simuler ce circuit, nous utilisons ``qasm_simulator`` de Qiskit Aer. Chaque exécution (\"tir\" ou \"shot\" en anglais) de ce circuit aboutira soit à une séquence 000, soit à 111. Pour obtenir une statistique de la distribution des résultats (par exemple, estimer :math:`\\mathrm{Pr}(000)`), nous devrons exécuter le circuit plusieurs fois. Le nombre de fois où le circuit sera testé peut être spécifié dans la fonction ``execute`` par le mot-clé ``shots``."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:576
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Une fois que vous avez un objet résultat, vous pouvez obtenir le comptage (counts) par la fonction ``get_counts(circuit)``. Cela vous donne le résultat sous forme **d'agrégats** binaires du circuit testé."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:622
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Approximativement 50% du temps, le résultat sera 000. Qiskit fournit également une fonction ``plot_histogram`` qui vous permet de visualiser le résultat."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:653
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``execute`` function and see how the estimated probabilities change."
msgstr "Les probabilités estimées des résultats :math:`\\mathrm{Pr}(000)` et :math:`\\mathrm{Pr}(111) sont calculées en prenant l'agrégat comptage (counts) et en le divisant par le nombres de \"tirs\" (le nombre de répétitions de l'execution du circuit). Essayez de modifier la valeur du mot-clé ``shots`` dans la fonction ``execute`` et voyez comment cela affecte la probabilité estimée."

