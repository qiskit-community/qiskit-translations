msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-27 13:03+0000\n"
"PO-Revision-Date: 2023-10-27 13:18\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/06_building_pulse_schedules.po\n"
"X-Crowdin-File-ID: 9476\n"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/06_building_pulse_schedules.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/circuits_advanced/06_building_pulse_schedules.ipynb`__."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:9
msgid "Building Pulse Schedules"
msgstr "Construire des ordonnancements d'impulsions"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:11
msgid "Pulse gates define a low-level, exact representation for a circuit gate. A single operation can be implemented with a pulse program, which is comprised of multiple low-level instructions. To learn more about pulse gates, refer back to the documentation `here <05_pulse_gates.ipynb>`__. This page details how to create pulse programs."
msgstr "Les portes d'impulsions définissent une représentation exacte de bas niveau pour une porte d'un circuit. Une opération unique peut être implémentée avec un programme d'impulsions, qui comprend plusieurs instructions de bas niveau. Pour en savoir plus sur les entrées d'impulsions, reportez-vous à la documentation ` ici <05_pulse_gates.ipynb> ` __. Cette page explique comment créer des programmes d'impulsions."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:13
msgid "Note: For IBM devices, pulse programs are used as subroutines to describe gates. Previously, some devices accepted full programs in this format, but this is being sunset in December 2021. Other providers may still accept full programs in this format. Regardless of how the program is used, the syntax for building the program is the same. Read on to learn how!"
msgstr "Remarque : pour les ordinateurs d'IBM, les programmes d'impulsions sont utilisés comme sous-programmes pour décrire les portes. Auparavant, certains appareils acceptaient des programmes complets dans ce format, mais ce ne sera plus le cas après décembre 2021. D'autres fournisseurs peuvent encore accepter des programmes complets dans ce format. Quelle que soit la façon dont le programme est utilisé, la syntaxe de création du programme est la même. Lisez plus bas pour apprendre comment !"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:15
msgid "Pulse programs, which are called ``Schedule``\\ s, describe instruction sequences for the control electronics. We build ``Schedule``\\ s using the Pulse Builder. It's easy to initialize a schedule:"
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:67
msgid "You can see that there are no instructions yet. The next section of this page will explain each of the instructions you might add to a schedule, and the last section will describe various *alignment contexts*, which determine how instructions are placed in time relative to one another."
msgstr "Vous pouvez voir qu'il n'y a pas encore d'instruction. La section suivante de cette page explique chacune des instructions que vous pouvez ajouter à un planning, et la dernière section décrit les différents *contextes d'alignement*, qui déterminent comment les instructions sont placées dans le temps les unes par rapport aux autres."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:79
msgid "``Schedule`` Instructions"
msgstr "``Ordonnancer`` des Instructions"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:81
msgid "`delay(duration, channel) <#delay>`__"
msgstr "`delay(duration, channel)` <#delay>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:82
msgid "`play(pulse, channel) <#play>`__"
msgstr "`play(pulse, channel) <#play>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:83
msgid "`set_frequency(frequency, channel) <#set_frequency>`__"
msgstr "`set_frequency(frequency, channel) <#set_frequency>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:84
msgid "`shift_phase(phase, channel) <#shift_phase>`__"
msgstr "`shift_phase(phase, channel) <#shift_phase>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:85
msgid "`acquire(duration, channel, mem_slot, reg_slot) <#acquire>`__"
msgstr "`acquire(duration, channel, mem_slot, reg_slot) <#acquire>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:87
msgid "Each instruction type has its own set of operands. As you can see above, they each include at least one ``Channel`` to specify where the instruction will be applied."
msgstr "Chaque type d'instruction possède son propre ensemble d'opérandes. Comme vous pouvez le voir ci-dessus, ils incluent chacun au moins un ``Channel`` pour spécifier où l'instruction sera appliquée."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:89
msgid "**Channels** are labels for signal lines from the control hardware to the quantum chip."
msgstr "Les **Channels** (Canaux) sont des étiquettes pour les lignes de signal depuis le matériel de contrôle jusqu'à la puce quantique."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:91
msgid "``DriveChannel``\\ s are typically used for *driving* single qubit rotations,"
msgstr "``DriveChannel``\\ s sont généralement utilisés pour *contrôler* des rotations de qubits uniques,"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:92
msgid "``ControlChannel``\\ s are typically used for multi-qubit gates or additional drive lines for tunable qubits,"
msgstr "Les ``ControlChannel``\\ s sont généralement utilisés pour des portes multi-qubits ou les lignes de commande supplémentaires pour les qubits réglables,"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:93
msgid "``MeasureChannel``\\ s are specific to transmitting pulses which stimulate readout, and"
msgstr "``MeasureChannel``\\ s sont spécifiques à la transmission des impulsions qui stimulent la lecture, et"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:94
msgid "``AcquireChannel``\\ s are used to trigger digitizers which collect readout signals."
msgstr "``AcquireChannel``\\ s sont utilisés pour déclencher des numériseurs qui collectent des signaux de lecture."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:96
msgid "``DriveChannel``\\ s, ``ControlChannel``\\ s, and ``MeasureChannel``\\ s are all ``PulseChannel``\\ s; this means that they support *transmitting* pulses, whereas the ``AcquireChannel`` is a receive channel only and cannot play waveforms."
msgstr "``DriveChannel``\\ s, ``ControlChannel``\\ s, et ``MeasureChannel``\\ s sont tous dans la catégorie des ``PulseChannel``\\ s ; cela signifie qu'ils prennent en charge *les impulsions de transmission*, alors que ``AcquireChanne`` est un canal de réception seulement et ne peut pas générer de formes d'ondes."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:98
msgid "For the following examples, we will create one ``DriveChannel`` instance for each ``Instruction`` that accepts a ``PulseChannel``. Channels take one integer ``index`` argument. Except for ``ControlChannel``\\ s, the index maps trivially to the qubit label."
msgstr "Pour les exemples suivants, nous allons créer une instance ``DriveChannel`` pour chaque ``Instruction`` qui accepte un ``PulseChannel``. Les canaux prennent un argument entier ``index``. A l'exception de ``ControlChannel`` \\ s, l'index correspond trivialement à l'étiquette du qubit."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:121
msgid "The pulse ``Schedule`` is independent of the backend it runs on. However, we can build our program in a context that is aware of the target backend by supplying it to ``pulse.build``. When possible you should supply a backend. By using the channel accessors ``pulse.<type>_channel(<idx>)`` we can make sure we are only using available device resources."
msgstr "L'impulsion ``Schedule`` est indépendante du backend sur lequel elle s'exécute. Cependant, nous pouvons construire notre programme dans un contexte conscient du backend cible en le fournissant à ``pulse.build``. Dans la mesure du possible, vous devriez fournir un backend. En utilisant les accesseurs de canaux ``pulse.<type>_channel(<idx>)`` nous pouvons nous assurer que nous n'utilisons que les ressources disponibles de la machine."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:175
msgid "``delay``"
msgstr "``delay``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:177
msgid "One of the simplest instructions we can build is ``delay``. This is a blocking instruction that tells the control electronics to output no signal on the given channel for the duration specified. It is useful for controlling the timing of other instructions."
msgstr "L'une des instructions les plus simples que nous pouvons construire est ``delay``. Il s'agit d'une instruction de blocage qui indique à l'électronique de contrôle de ne générer aucun signal sur le canal donné, pour la durée spécifiée. Il est utile pour contrôler le ´´timing´´ des autres instructions."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:179
msgid "The duration here and elsewhere is in terms of the backend's cycle time (1 / sample rate), ``dt``. It must take an integer value."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:181
msgid "To add a ``delay`` instruction, we pass a duration and a channel, where ``channel`` can be any kind of channel, including ``AcquireChannel``. We use ``pulse.build`` to begin a Pulse Builder context. This automatically schedules our delay into the schedule ``delay_5dt``."
msgstr "Pour ajouter une instruction ``delay``, nous spécifions une durée et un canal, où ``channel`` peut être n'importe quel type de canal, y compris ``AcquireChannel``. Nous utilisons ``pulse.build`` pour commencer un contexte de générateur d'impulsions. Cela planifie automatiquement notre délai dans le planning ``delay_5dt``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:203
msgid "That's all there is to it. Any instruction added after this delay on the same channel will execute five timesteps later than it would have without this delay."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:206
msgid "``play``"
msgstr "``play``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:208
msgid "The ``play`` instruction is responsible for executing *pulses*. It's straightforward to add a play instruction:"
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:215
msgid "Let's clarify what the ``pulse`` argument is and explore a few different ways to build one."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:218
msgid "Pulses"
msgstr "Impulsions (``Pulses``)"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:220
msgid "A ``Pulse`` specifies an arbitrary pulse *envelope*. The modulation frequency and phase of the output waveform are controlled by the ``set_frequency`` and ``shift_phase`` instructions, which we will cover next."
msgstr "Un ``Pulse`` permet de spécifier une *enveloppe* arbitraire d'impulsion. La fréquence de modulation et la phase de la forme d'onde de sortie sont contrôlées par les instructions ``SetFrequency`` et ``ShiftPhase``, que nous couvrirons ensuite."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:222
msgid "The image below may provide some intuition for why they are specified separately. Think of the pulses which describe their envelopes as input to an arbitrary waveform generator (AWG), a common lab instrument -- this is depicted in the left image. Notice the limited sample rate discritizes the signal. The signal produced by the AWG may be mixed with a continuous sine wave generator. The frequency of its output is controlled by instructions to the sine wave generator; see the middle image. Finally, the signal sent to the qubit is demonstrated by the right side of the image below."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:225
msgid "**Note**: The hardware may be implemented in other ways, but if we keep the instructions separate, we avoid losing explicit information, such as the value of the modulation frequency."
msgstr "**Note** : Le matériel peut être implémenté par d'autres moyens, mais si nous gardons les instructions séparées, nous évitons de perdre des informations, comme la valeur de la fréquence de modulation."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:227
msgid "|alt text|"
msgstr "|alt text|"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:233
msgid "alt text"
msgstr "alt text"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:229
msgid "There are many methods available to us for building up pulses. Our ``library`` within Qiskit Pulse contains helpful methods for building ``Pulse``\\ s. Let's take for example a simple Gaussian pulse -- a pulse with its envelope described by a sampled Gaussian function. We arbitrarily choose an amplitude of 1, standard deviation :math:`\\sigma` of 10, and 128 sample points."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:231
msgid "**Note**: The amplitude norm is arbitrarily limited to ``1.0``. Each backend system may also impose further constraints -- for instance, a minimum pulse size of 64. These additional constraints, if available, would be provided through the ``BackendConfiguration`` which is described `here <08_gathering_system_information.ipynb#Configuration>`__."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:259
msgid "Parametric pulses"
msgstr "Impulsions paramétriques"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:261
msgid "Let's build our Gaussian pulse using the ``Gaussian`` parametric pulse. A parametric pulse sends the name of the function and its parameters to the backend, rather than every individual sample. Using parametric pulses makes the jobs you send to the backend much smaller. IBM Quantum backends limit the maximum job size that they accept, so parametric pulses may allow you to run larger programs."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:263
msgid "Other parametric pulses in the ``library`` include ``GaussianSquare``, ``Drag``, and ``Constant``."
msgstr "Les autres impulsions paramétriques de la librairie (``library``) incluent ``GaussianSquare``, ``Drag`` et ``Constant``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:265
msgid "**Note**: The backend is responsible for deciding exactly how to sample the parametric pulses. It is possible to draw parametric pulses, but the samples displayed are not guaranteed to be the same as those executed on the backend."
msgstr "** Note**: L'e système d'exécution (´´backend´´) est chargé de décider exactement comment échantillonner les impulsions paramétriques. Il est possible de dessiner des impulsions paramétriques, mais les échantillons affichés ne sont pas garantis d'être les mêmes que ceux exécutés sur le backend."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:298
msgid "Pulse waveforms described by samples"
msgstr "Les formes d'onde des impulsions décrites par les échantillons"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:300
msgid "A ``Waveform`` is a pulse signal specified as an array of time-ordered complex amplitudes, or *samples*. Each sample is played for one cycle, a timestep ``dt``, determined by the backend. If we want to know the real-time dynamics of our program, we need to know the value of ``dt``. The (zero-indexed) :math:`i^{th}` sample will play from time ``i*dt`` up to ``(i + 1)*dt``, modulated by the qubit frequency."
msgstr "Une forme d'impulsion (``Waveform``) est un signal défini par une liste de d'amplitudes complexes ordonnancées appelés *samples* (échantillons). Chaque *sample* est envoyé durant un temps de cycle ``dt``, determiné par le backend. Si nous voulons en savoir plus au sujet de la dynamique en temps réel de notre programme, il faut connaitre la valeur de ``dt``. L'échantillon :math:`i^{th}` (l'index commençant à 0) sera envoyé depuis l'instant ``i*dt`` jusqu'à l'instant ``(i + 1)*dt``, en modulation par la fréquence du qubit."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:337
msgid "Pulse library functions"
msgstr "Fonctions de la bibliothèque (``library``) d'impulsions"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:339
msgid "Our own pulse library has sampling methods to build a ``Waveform`` from common functions."
msgstr "Notre propre bibliothèque d'impulsions a des méthodes d'échantillonnage pour construire un ``Waveform`` à partir de fonctions communes."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:370
msgid "Regardless of which method you use to specify your ``pulse``, ``play`` is added to your schedule the same way:"
msgstr "Quelle que soit la méthode que vous utilisez pour spécifier votre impulsion (``pulse``), ``play`` est instanciée de la même manière :"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:402
msgid "You may also supply a complex list or array directly to ``play``"
msgstr "Vous pouvez également fournir une liste ou un tableau de complexes directement pour ``play``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:434
msgid "The ``play`` instruction gets its duration from its ``Pulse``: the duration of a parametrized pulse is an explicit argument, and the duration of a ``Waveform`` is the number of input samples."
msgstr "L'instruction ``play`` récupère sa durée depuis son ``Pulse`` : la durée d'une impulsion paramétrée est un argument explicite, et la durée d'un ``Waveform`` est le nombre d'échantillons d'entrée."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:437
msgid "``set_frequency``"
msgstr "``set_frequency``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:439
msgid "As explained previously, the output pulse waveform envelope is also modulated by a frequency and phase. Each channel has a `default frequency listed in the backend.defaults() <08_gathering_system_information.ipynb#Defaults>`__."
msgstr "Comme nous l'avons expliqué précédemment, l'enveloppe de l'impulsion de sortie est également modulée par une fréquence et une phase. Chaque canal a une `fréquence par défaut accessible par backend.defaults () <08_gathering_system_information.ipynb#Defaults>`__."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:441
msgid "The frequency of a channel can be updated at any time within a ``Schedule`` by the ``set_frequency`` instruction. It takes a float ``frequency`` and a ``PulseChannel`` ``channel`` as input. All pulses on a channel following a ``set_frequency`` instruction will be modulated by the given frequency until another ``set_frequency`` instruction is encountered or until the program ends."
msgstr "La fréquence d'un canal peut être mise à jour à tout moment dans un ``Schedule`` par l'instruction ``set_frequency``. Il prend une ``frequency`` flottante et un ``PulseChannel`` en entrée. Toutes les impulsions sur un canal suivant une instruction ``set_frequency`` seront modulées par la fréquence donnée jusqu'à ce qu'une autre instruction ``set_frequency`` soit rencontrée ou jusqu'à ce que le programme se termine."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:443
msgid "The instruction has an implicit duration of ``0``."
msgstr "L'instruction a une durée implicite de ``0``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:445
msgid "**Note**: The frequencies that can be requested are limited by the total bandwidth and the instantaneous bandwidth of each hardware channel. In the future, these will be reported by the ``backend``."
msgstr "**Remarque**: Les fréquences qui peuvent être demandées sont limitées par la bande passante totale et la bande passante instantanée de chaque canal matériel (``hardware``). A l'avenir, ces informations seront rapportées par le ``backend``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:468
msgid "``shift_phase``"
msgstr "``shift_phase``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:470
msgid "The ``shift_phase`` instruction will increase the phase of the frequency modulation by ``phase``. Like ``set_frequency``, this phase shift will affect all following instructions on the same channel until the program ends. To undo the affect of a ``shift_phase``, the negative ``phase`` can be passed to a new instruction."
msgstr "L'instruction ``shift_phase`` augmentera la phase de la modulation de fréquence d'une quantité correspondant à la valeur de ``phase``. Comme pour ``set_frequency``, ce décalage de phase affectera toutes les instructions suivantes sur le même canal jusqu'à la fin du programme. Pour annuler l'effet d'une ``shift_phase``, il faudra en refaire une avec la quantité opposé comme valeur de ``phase``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:472
msgid "Like ``set_frequency``, the instruction has an implicit duration of ``0``."
msgstr "Comme ``set_frequency``, l'instruction a une durée implicite de ``0``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:495
msgid "``acquire``"
msgstr "## ``acquire``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:497
msgid "The ``acquire`` instruction triggers data acquisition for readout. It takes a duration, an ``AcquireChannel`` which maps to the qubit being measured, and a ``MemorySlot`` or a ``RegisterSlot``. The ``MemorySlot`` is classical memory where the readout result will be stored. The ``RegisterSlot`` maps to a register in the control electronics which stores the readout result for fast feedback."
msgstr "L'instruction ``acquire`` déclenche l'acquisition de données pour effectuer une lecture. Il prend en argument une durée, un ``AcquireChannel`` qui correspond au qubit mesuré, et un ``MemorySlot`` ou un ``RegisterSlot``. Le ``MemorySlot`` est une mémoire classique où le résultat de lecture sera stocké. Le ``RegisterSlot`` correspond à un registre dans l'électronique de contrôle qui stocke le résultat de lecture pour un resultat rapide."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:499
msgid "The ``acquire`` instructions can also take custom ``Discriminator``\\ s and ``Kernel``\\ s as keyword arguments."
msgstr "Les instructions ``acquire`` peuvent également prendre des ``Discriminator``\\ s personnalisés et des ``Kernel``\\ s en tant qu'arguments de mot-clé."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:523
msgid "Now that we know how to add ``Schedule`` instructions, let's learn how to control exactly when they're played."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:526
msgid "Pulse Builder"
msgstr "Générateur d'impulsions"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:528
msgid "Here, we will go over the most important Pulse Builder features for learning how to build schedules. This is not exhaustive; for more details about what you can do using the Pulse Builder, check out the `Pulse API reference <https://qiskit.org/documentation/apidoc/pulse.html>`__."
msgstr "Ici, nous allons passer en revue les plus importantes fonctionnalités de Pulse Builder pour apprendre à construire des plannings. Ce n'est pas exhaustif et pour plus de détails sur ce que vous pouvez faire à l'aide de Pulse Builder, consultez la référence d'API `Pulse <https://qiskit.org/documentation/apidoc/pulse.html>` __."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:531
msgid "Alignment contexts"
msgstr "Contextes d'alignement"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:533
msgid "The builder has alignment contexts which influence how a schedule is built. Contexts can also be nested. Try them out, and use ``.draw()`` to see how the pulses are aligned."
msgstr "Le générateur comporte des contextes d'alignement qui influencent la manière dont un planning est généré. Les contextes peuvent également être imbriqués. Essayez-les et utilisez la méthode ``.draw ()`` pour voir comment les impulsions sont alignées."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:535
msgid "Regardless of the alignment context, the duration of the resulting schedule is as short as it can be while including every instruction and following the alignment rules. This still allows some degrees of freedom for scheduling instructions off the \"longest path\". The examples below illuminate this."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:538
msgid "``align_left``"
msgstr "``align_left``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:540
msgid "The builder has alignment contexts that influence how a schedule is built. The default is ``align_left``."
msgstr "Le \"Pulse Builder\" possède des contextes d'alignement qui influencent la façon dont un planning est construit. La valeur par défaut est ``align_left``."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:577
msgid "Notice how there is no scheduling freedom for the pulses on ``D1``. The second waveform begins immediately after the first. The pulse on ``D0`` can start at any time between ``t=0`` and ``t=100`` without changing the duration of the overall schedule. The ``align_left`` context sets the start time of this pulse to ``t=0``. You can think of this like left-justification of a text document."
msgstr "Remarquez qu'il n'y a pas de liberté de programmation pour les impulsions sur ``D1``. La seconde impulsion d'onde commence immédiatement après la première. L'impulsion sur ``D0`` peut commencer à tout moment entre ``t=0`` et ``t=100`` sans changer la durée de l'horaire global. Le contexte ``align_left`` définit l'heure de début de cette impulsion à ``t=0``. Vous pouvez y penser comme la justification à gauche d'un document texte."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:580
msgid "``align_right``"
msgstr "``align_right``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:582
msgid "Unsurprisingly, ``align_right`` does the opposite of ``align_left``. It will choose ``t=100`` in the above example to begin the gaussian pulse on ``D0``. Left and right are also sometimes called \"as soon as possible\" and \"as late as possible\" scheduling, respectively."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:620
msgid "``align_equispaced(duration)``"
msgstr "``align_equispaced(duration)``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:622
msgid "If the duration of a particular block is known, you can also use ``align_equispaced`` to insert equal duration delays between each instruction."
msgstr "Si la durée d'un bloc particulier est connue, vous pouvez également utiliser ``align_equispaced`` pour insérer des délais d'égale durée entre chaque instruction."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:660
msgid "``align_sequential``"
msgstr "``align_sequential``"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:662
msgid "This alignment context does not schedule instructions in parallel. Each instruction will begin at the end of the previously added instruction."
msgstr "Ce contexte d'alignement ne prévoit pas d'instructions en parallèle. Chaque instruction commence à la fin de l'instruction précédemment ajoutée."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:700
msgid "Phase and frequency offsets"
msgstr "Offsets de phase et de fréquence"

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:702
msgid "We can use the builder to help us temporarily offset the frequency or phase of our pulses on a channel."
msgstr "Nous pouvons utiliser le \"Pulse builder\" pour nous aider à compenser temporairement la fréquence ou la phase de nos impulsions sur un canal."

#: ../../tutorials/circuits_advanced/06_building_pulse_schedules.ipynb:738
msgid "We encourage you to visit the `Pulse API reference <https://qiskit.org/documentation/apidoc/pulse.html>`__ to learn more."
msgstr "Nous vous encourageons à consulter la référence pour l'API `Pulse <https://qiskit.org/documentation/apidoc/pulse.html>`__ pour en savoir plus."

