msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-19 12:13+0000\n"
"PO-Revision-Date: 2020-08-19 13:29\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.po\n"
"X-Crowdin-File-ID: 9128\n"
"Language: fr_FR\n"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb`__."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:9
msgid "Transpiler Passes and Pass Manager"
msgstr "Passes du transpileur et gestionnaire de passes"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:32
msgid "A central component of Qiskit Terra is the transpiler, which is designed for modularity and extensibility. The goal is to be able to easily write new circuit transformations (known as transpiler **passes**), and combine them with other existing passes. Which passes are chained together and in which order has a major effect on the final outcome. This pipeline is determined by a **pass manager**, which schedules the passes and also allows passes to communicate with each other by providing a shared space. In this way, the transpiler opens up the door for research into aggressive optimization of quantum circuits."
msgstr "Le transpileur est un composant central de Qiskit Terra, il est conçu pour être modulaire et extensible. L'objectif est d'être en mesure de créer de nouvelles transformations de circuit (appelées passes du transpileur), et de les combiner avec les autres passes existantes. La manière dont les passes sont combinées entre elles et l'ordre dans lequel elle sont appliquées a un effet déterminant sur le résultat final. C'est le pass manager (gestionnaire de passes), qui ordonnance les différentes passes et leur permet de communiquer ensemble au travers d'un espace de communication spécifique. Le transpileur ouvre ainsi la porte sur un champ de recherche vers une optimisation significative des circuits quantiques."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:35
msgid "In this notebook, we look at the built-in passes, how to use the pass manager, and develop a simple custom transpiler pass. In order to do the latter, we first need to introduce the internal representation of quantum circuits in Qiskit, in the form of a Directed Acyclic Graph, or **DAG**. Then, we illustrate a simple swap mapper pass, which transforms an input circuit to be compatible with a limited-connectivity quantum device."
msgstr "Dans ce notebook, nous examinons les passes pré-programmées, comment utiliser le gestionnaire de passes, et nous allons développer une passe personnalisée simple de transpileur. Pour le dernier point, nous avons besoin d'introduire préalablement la notion de représentation interne de circuit quantique dans Qiskit, sous la forme d'un Graphe Acyclique Directionnel GAD (en anglais DAG pour Direct Acyclic Graph). Ensuite nous prendrons l'exemple de la passe d'échanges simples, qui permet de transformer un circuit pour l'adapter à un appareil dont la connectivité entre les qubits est limitée."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:60
msgid "PassManager object"
msgstr "L'objet PassManager"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:62
msgid "Lets you specify the set of passes you want."
msgstr "Il permet de spécifier le nombre de passes désirées."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:117
msgid "All of Qiskit's transpiler passes are accessible from ``qiskit.transpiler.passes``."
msgstr "La liste des types de passes disponibles pour le transpileur de Qiskit peut être accédée à l'aide de ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:254
msgid "Different Variants of the Same Pass"
msgstr "Différentes variétés d'une même passe"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:256
msgid "There can be passes that do the same job, but in different ways. For example, the ``TrivialLayout``, ``DenseLayout`` and ``NoiseAdaptiveLayout`` all choose a layout (binding of virtual qubits to physical qubits), but use different algorithms and objectives. Similarly, the ``BasicSwap``, ``LookaheadSwap`` and ``StochasticSwap`` all insert swaps to make the circuit compatible with the coupling map. The modularity of the transpiler allows plug-and-play replacements for each pass."
msgstr "Il peut se trouver des passes qui font la même chose, mais de manière différente. Par exemple : ``TrivialLayout``, ``DenseLayout`` et ``NoiseAdaptiveLayout`` permettent toutes de choisir un layout (relation entre les qubits virtuels et les qubits physiques), mais elles utilisent des algorithmes différents pour des objectifs différents. De même ``BasicSwap``, ``LookaheadSwap`` et ``StochasticSwap`` ont toutes pour effet d'insérer des swap (échanges) pour rendre un circuit compatible avec la carte de couplage. Le caractère modulaire du transpileur permet de faire des substitutions de ces passes."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:258
msgid "Below, we show the swapper passes all applied to the same circuit, to transform it to match a linear chain topology. You can see differences in performance, where the ``StochasticSwap`` is clearly the best. However, this can vary depending on the input circuit."
msgstr "Ci-dessous nous montrons les passes de swap appliquées à un seul et même circuit pour le transformer en une topologie correspondant à une chaine linéaire.\n"
"On peut voir que la performance la meilleure est atteinte lorsque ``StochasticSwap`` est utilisée. Mais ceci peut varier en fonction de votre circuit."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:381
msgid "Preset Pass Managers"
msgstr "Gestionnaires de passes pré-configurées"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:383
msgid "Qiskit comes with several pre-defined pass managers, corresponding to various levels of optimization achieved through different pipelines of passes. Currently ``optimization_level`` 0 through 3 are supported; the higher the number, the more optimized it is, at the expense of more time. Choosing a good pass manager may take trial and error, as it depends heavily on the circuit being transpiled and the backend being targeted."
msgstr "Qiskit inclut plusieurs gestionnaires de passes prédéfinis qui correspondent à différents niveaux d'optimisation obtenus selon différents arrangement de passes. Actuellement les niveaux d'optimisation 0 à 3 sont implémentés. Le niveau le plus haut (3) correspond à l'optimisation la meilleure, mais le temps d'optimisation est également le plus élevé. Le choix du meilleur gestionnaire de passes peut-être fait à l'aide d'essais, tant l'optimisation dépend du circuit lui même et de la plateforme sur lequel il va être exécuté."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:385
msgid "Here we illustrate the different levels by looking at a state synthesis circuit. We initialize four qubits to an arbitrary state, and then try to optimize the circuit that achieves this."
msgstr "Nous illustrons ici les différents niveaux d'optimisation en regardant un circuit de synthèse d'état. Il s'agit d'initialiser quatre qubits dans un état arbitraire, et d'optimiser le circuit qui y parvient."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:387
msgid "``optimization_level=0``: just maps the circuit to the backend, with no explicit optimization (except whatever optimizations the mapper does)."
msgstr "``optimization_level=0``: fait correspondre le circuit à la carte de connection des qubits de la plateforme ciblée, sans optimisation explicite (sauf celles issues de la correspondance entre les qubits logiques et physiques afin de minimiser les swaps)."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:389
msgid "``optimization_level=1``: maps the circuit, but also does light-weight optimizations by collapsing adjacent gates."
msgstr "``optimization_level=1``: optimisation légère, en plus d'établir la correspondance décrite ci dessus, ce niveau ajoute un premier niveau d'optimisation par réduction des portes adjacentes lorsque c'est possible."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:391
msgid "``optimization_level=2``: medium-weight optimization, including a noise-adaptive layout and a gate-cancellation procedure based on gate commutation relationships."
msgstr "``optimization_level=2``: optimisation moyenne, qui ajoute un système d'adaptation au bruit ainsi qu'une procédure de réduction des portes en utilisant des relations de commutation."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:393
msgid "``optimization_level=3``: heavy-weight optimization, which in addition to previous steps, does resynthesis of two-qubit blocks of gates in the circuit."
msgstr "``optimization_level=3``: optimisation lourde, qui ajoute aux étapes précédentes la synthèse par blocs de portes sur deux qubits dans le circuit."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:604
msgid "Now map this to the 20-qubit Tokyo device, with different optimization levels:"
msgstr "A présent, voici ce que donnerait la transpilation sur la plateforme \"Tokyo\" de 20 qubit, avec les différents niveaux d'optimisation :"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:748
msgid "Introducing the DAG"
msgstr "Introduction au GAD (Graphe Acyclique Direct)"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:759
msgid "In Qiskit, we represent circuits internally using a Directed Acyclic Graph (DAG). The advantage of this representation over a pure list of gates (i.e., *netlist*) is that the flow of information between operations are explicit, making it easier for passes to make transformation decisions without changing the semantics of the circuit."
msgstr "Dans Qiskit, la représentation interne des circuit se fait en utilisant un Graphe Acyclique Direct (GAD). Par rapport à une liste de portes (netlist), cette représentation a l'avantage de rendre explicite le flot d'information entre les opérations, ce qui rend les décisions de transformation plus faciles pour les passes, sans changer la signification du circuit."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:761
msgid "Let's start by building a simple circuit, and examining its DAG."
msgstr "Commençons par construire un circuit simple, et examinons son GAD."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:800
msgid "In the DAG, there are three kinds of graph nodes: qubit/clbit input nodes (green), operation nodes (blue), and output nodes (red). Each edge indicates data flow (or dependency) between two nodes."
msgstr "Dans le GAD, il y a trois types de noeuds différents : les qubits/cbits (en vert), les opérations (en bleu) et les sorties (en rouge). Chaque arête indique le flot (ou la dépendance) entre deux noeuds.\n"
"(note: on utilise l'acronyme en anglais **dag** dans le code suivant)."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:833
msgid "Therefore, writing a transpiler pass means using Qiskit's DAGCircuit API to analyze or transform the circuit. Let's see some examples of this."
msgstr "Ainsi, l'écriture d'une passe de transpilation implique que l'on utilise l'API DAGCircuit de Qiskit afin d'analyser ou transformer le circuit. Voyons des exemples."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:844
msgid "**a. Get all op nodes in the DAG:**"
msgstr "**a. Obtenir les noeuds opérationnels du GAD :**"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:891
msgid "Each node is an instance of the ``DAGNode`` class. Let's examine the information stored in the second op node."
msgstr "Chaque noeud opérationnel est une instance de la classe of the ``DAGNode`` class. Examinons par exemple l'information contenue dans le second noeud opérationnel."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:944
msgid "**b. Add an operation to the back:**"
msgstr "**b. Ajouter une opération à la fin : **"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:976
msgid "**c. Add an operation to the front:**"
msgstr "**c. Ajouter une opération au début :**"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1008
msgid "**d. Substitute a node with a subcircuit:**"
msgstr "**d. Substituer un sous-circuit à un noeud :**"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1048
msgid "Finally, after all transformations are complete, we can convert back to a regular QuantumCircuit object. This is what the transpiler does! It takes a circuit, operates on it in DAG form, and outputs a transformed circuit."
msgstr "Finalement, après avoir effectué toutes ces transformations, on peut reconvertir le GAD en un objet de type QuantumCircuit. C'est ce que fait le transpileur ! Il prend un circuit, travaille dessus sous sa forme de GAD, et fournit comme résultat un circuit transformé."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1081
msgid "Implementing a BasicMapper Pass"
msgstr "Implémentation d'une passe BasicMapper"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1092
msgid "Now that we are familiar with the DAG, let's use it to write a transpiler pass. Here we will implement a basic pass for mapping an arbitrary circuit to a device with limited qubit connectivity. We call this the BasicMapper. This pass is included in Qiskit Terra as well."
msgstr "Maintenant que nous sommes familiers du principe du GAD, utilisons le pour construire une passe de transpilation. Ici nous allons implémenter une passe de base pour faire correspondre un circuit quelconque à une machine dont la connectivité entre les qubits est limitée. Ceci s'appelle le BasicMapper. Cette passe est également incluse dans Qiskit Terra."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1094
msgid "The first thing to do when writing a transpiler pass is to decide whether the pass class derives from a ``TransformationPass`` or ``AnalysisPass``. Transformation passes modify the circuit, while analysis passes only collect information about a circuit (to be used by other passes). Then, the ``run(dag)`` method is implemented, which does the main task. Finally, the pass is registered inside the ``qiskit.transpiler.passes`` module."
msgstr "Le premier choix à effectuer est de décider si le type de passe est du type TransformationPass ou du type AnalysisPass. Les passes de type transformation modifient le circuit, alors que les passes de type analyse ne font que collecter de l'information (qui pourra être utilisée par les autres passes). Puis la méthode run(dag) est appelée, elle exécute la tâche principale. Enfin la passe est enregistrée dans le module qiskit.transpiler.passes."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1096
msgid "This pass functions as follows: it traverses the DAG layer-by-layer (each layer is a group of operations that does not act on independent qubits, so in theory all operations in a layer can be done independently). For each operation, if it does not already meet the coupling map constraints, the pass identifies a swap path and inserts swaps to bring the two qubits close to each other."
msgstr "Cette passe fonctionne de la manière suivante : elle traverse le GAD (Graphe Acyclique Direct) couche après couche (chaque couche est un ensemble d'opérations qui n'ont pas d'action sur des qubits indépendants, donc théoriquement toutes les opérations d'une couche peuvent être exécutées indépendamment les unes des autres). Pour chacune des opérations, si elle ne correspond pas aux contraintes de la carte de couplage, la passe identifie une possibilité d'échange (swap) pour amener les qubits l'un à coté de l'autre."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1098
msgid "Follow the comments in the code for more details."
msgstr "Regardez les commentaires dans le code ci-dessous pour plus de détails."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1218
msgid "Let's test this pass on a small example circuit."
msgstr "Essayons cette passe sur un petit circuit."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1267
msgid "Now we construct a pass manager that contains our new pass. We pass the example circuit above to this pass manager, and obtain a new, transformed circuit."
msgstr "Maintenant nous construisons un gestionnaire de passes qui contient notre nouvelle passe. Nous lui fournissons le circuit example ci-dessus en paramètre pour obtenir un nouveau circuit après qu'il ait été transformé."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1355
msgid "Note that this pass only inserts the swaps necessary to make every two-qubit interaction conform to the device coupling map. It does not, for example, care about the direction of interactions, or the native gate set supported by the device. This is a design philosophy of Qiskit's transpiler: every pass performs a small, well-defined action, and the aggressive circuit optimization is achieved by the pass manager through combining multiple passes."
msgstr "Notons que cette passe ne fait que les échanges nécessaires pour que les opérations sur deux qubits soient possibles compte tenu de la carte de couplage des qubits. Par exemple cette passe ne tient pas compte de la direction des interactions entre les deux qubits, ni du jeu de portes natives. Ceci est conforme à la philosophie du développement du transpileur de Qiskit : chacune des passes effectue une action simple et bien définie, ensuite l'optimisation significative du circuit est obtenue par le gestionnaire de passes qui en combine plusieurs."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1367
msgid "Transpiler Logging"
msgstr "Journal du Transpileur"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1369
msgid "Due to the complexity of the internal operations that the transpiler is performing it's likely that you'll end up in a situation where you'd like to debug an issue or just understand more of what is happening inside the transpiler when you call it. To facilitate this the transpiler emits log messages as part of its normal operation. This logging uses the Python standard library ``logging`` module to emit the log messages. Python's standard logging was used because it allows Qiskit-Terra's logging to integrate in a standard way with other applications and libraries."
msgstr "Du fait de la complexité des opérations internes qui sont effectuées par le transpileur, il est probable que vous soyez confronté à une situation où vous souhaiterez corriger un problème ou simplement que vous souhaitiez mieux comprendre ce qu'il se passe lorsque vous invoquez le transpileur. Afin de faciliter cela, le transpileur écrit un journal de messages lors de son exécution normale. Ce journal est écrit à l'aide du module `logging` de la bibliothèque standard de Python. La journalisation standard de Python a été choisie car elle permet au module Terra de Qiskit de s'intégrer de manière naturelle avec d'autres bibliothèques ou applications."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1372
msgid "For a more thorough introduction to Python logging refer to the `official documentation <https://docs.python.org/3/library/logging.html>`__ and the tutorials and cookbook linked off of there."
msgstr "Pour une description plus précise de la journalisation de Python vous pouvez vous référer à la `documentation officielle<https://docs.python.org/3/library/logging.html>`__ et aux tutoriels et exemples que vous y trouverez."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1405
msgid "Configuring Python Standard Library Logging"
msgstr "Configuration de la bibliothèque standard de journalisation"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1407
msgid "By default Python Standard Logging only prints log messages at the ``WARNING``, ``ERROR``, or ``CRITICAL`` log levels. Since none of the logs emitted by the transpiler use these log levels (they're all informative) you need to configure logging."
msgstr "Par défaut la bibliothèque de journalisation standard de Python ne produit que les messages de niveau `WARNING`, `ERROR` ou `CRITICAL`. Dans la mesure où aucun des messages générés par le transpileur n'utilise ces niveaux (ils sont tous informatifs) il faut reconfigurer les paramètres de journalisation."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1409
msgid "The simplest way to do this is to just run:"
msgstr "La manière la plus simple d'y parvenir est d'executer :"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1432
msgid "The ``basicConfig()`` function (see the docs here: https://docs.python.org/3/library/logging.html#logging.basicConfig) configures a root handler and formatter. We also specify the `log level <https://docs.python.org/3/library/logging.html#levels>`__ to display with the ``level`` kwarg. Setting it to a level will also include and higher levels. For example, if you set it to ``'INFO'`` in addition to the ``INFO`` level this will also include the ``WARNING``, ``ERROR``, and ``CRITICAL`` log levels."
msgstr "La fonction basicConfig() (voir la documentation ici: https://docs.python.org/3/library/logging.html#logging.basicConfig) configure un capteur et un formateur de message. Nous spécifions également le `niveau de journal <https://docs.python.org/3/library/logging.html#levels>`__ à afficher avec l'argument de mot clef level. Le choix d'un niveau de journalisation implique la journalisation des niveaux supérieurs. Par exemple, si on règle le niveau de journalisation 'INFO', alors en plus de ce niveau on récupèrera les messages des niveaux supérieurs : WARNING, ERROR, et CRITICAL."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1434
msgid "Now the python environment in this notebook is configured to emit log messages to stderr when you run the transpiler. For example:"
msgstr "A présent, l'environnement Python de ce notebook est configuré de manière à émettre les messages de journalisation vers la sortie standard lorsque le transpileur est exécuté. Par exemple :"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1639
msgid "As you can clearly see here when calling ``transpile()`` it now prints 2 types of log messages. The first is at the ``INFO`` log level and come from the pass manager. These indicate each pass that was executed and how long that took. The second are at the ``DEBUG`` level and come from the StochasticSwap pass and describes the internal operation of that pass. It's useful for debugging issues in the pass's operation."
msgstr ""

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1651
msgid "Adjusting the log level for the transpiler"
msgstr "Réglage du niveau de journalisation du transpileur"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1653
msgid "The qiskit transpiler uses a single namespace ``qiskit.transpiler``, as used by ``logging.getLogger('qiskit.transpiler')``). This makes it very easy to adjust the log level for just the transpiler. For example if you only wish to see log messages at the INFO level or above you can run:"
msgstr "Le transpileur de Qiskit utilise un espace de nommage unique ``qiskit.transpiler``, utilisé par ``logging.getLogger('qiskit.transpiler')``. De ce fait il est très facile d'ajuster le niveau de journalisation pour le transpileur seulement. Par exemple si vous souhaitez voir les messages de niveau INFO et au dessus, vous pouvez utiliser le réglage suivant :"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1754
msgid "Setting up logging to deal with parallel execution"
msgstr "Réglage de la journalisation pour gérer l'exécution en parallèle"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1756
msgid "When running the transpiler with multiple circuits by default these circuits are transpiled in parallel. If you want to do this with logging enabled and be able to understand the output some additional steps are required."
msgstr "Lorsque l'on execute le transpileur avec plusieurs circuits, le réglage par défaut fait que la transpilation de ces circuits se fait en parallèle. Si vous faites ceci avec la journalisation activée, et que vous voulez pouvoir comprendre la sortie, il y a quelques étapes supplémentaires à accomplir."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:1758
msgid "If you were just to enable logging as above and then pass ``transpile()`` multiple circuits you'll get results that are difficult to decipher. For example:"
msgstr "Si vous ne faisiez qu'activer la journalisation comme ci-dessus et que vous envoyez plusieurs circuits à ``transpile()``, vous obtiendrez des messages difficiles à interpréter. Par exemple :"

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:2063
msgid "As you can see here we get log messages from all 3 circuits being transpiled together. There is no way to know which pass is part of which circuit's transpilation. Luckily Python logging provides tools to deal with this. The simplest one is to just change the `log formatter <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ so that includes additional information so we can associate a log message with the process it came from."
msgstr "Comme on peut le voir ici, nous obtenons des messages de journal des 3 circuits qui sont transpilés ensemble. Il n'y a pas de moyen de savoir de savoir à quel circuit correspond une passe. Par chance Python fournit des outils qui peuvent nous aider. \n"
"Le plus simple est de changer le `formateur du journal <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ de manière à inclure les informations supplémentaires permettant d'associer un message au processus dont il provient."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:2086
msgid "Then rerun the ``transpile()`` call and see the new log formatter."
msgstr "Vous pouvez alors recommencer l'execution de ``transpile()`` et voir le nouveau journal de messages."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:2387
msgid "Now the format for the log messages has been changed and it includes a process name for each of the transpilation processes so it's at least clear which log messages go together."
msgstr "A présent, le format des messages du journal a été modifié et il inclut le nom du process de transpilation qui l'émet, ainsi il est facile de voir quels sont les messages qui ont un lien entre eux."

#: ../../tutorials/circuits_advanced/4_transpiler_passes_and_passmanager.ipynb:2389
msgid "There are many different options for how you can configure, this example is pretty limited. Refer to the documentation for more examples and options to build more sophisticated use cases that suit your specific use case or preferences."
msgstr "Il y a de nombreuses manières de paramétrer le contenu du journal de messages. L'exemple précédent est assez limité, vous pouvez vous reporter à la documentation pour d'autres examples et options pour construire des configurations qui correspondent à vos préférences et aux cas d'usage que vous avez."

