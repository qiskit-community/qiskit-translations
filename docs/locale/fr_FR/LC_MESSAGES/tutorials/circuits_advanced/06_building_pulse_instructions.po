msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-12 21:20+0000\n"
"PO-Revision-Date: 2021-01-12 22:30\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/06_building_pulse_instructions.po\n"
"X-Crowdin-File-ID: 9364\n"
"Language: fr_FR\n"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/06_building_pulse_instructions.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/circuits_advanced/06_building_pulse_instructions.ipynb`__."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/circuits_advanced/06_building_pulse_instructions.ipynb>`_."
msgstr "Exécuter en mode interactif dans le `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/circuits_advanced/06_building_pulse_instructions.ipynb>`_."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:9
msgid "Building Pulse Instructions"
msgstr "Construire des instructions Pulse"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:11
msgid "Pulse programs, which are called ``Schedule``\\ s, describe instruction sequences for the control electronics."
msgstr "Les programmes Pulse, appelés ` ` Schedule ` ` \\ s, décrivent des séquences d'instructions pour l'électronique de contrôle."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:13
msgid "On this page, we will cover in depth these ``Instruction``\\ s available through Qiskit Pulse:"
msgstr "Sur cette page, nous allons couvrir en profondeur ces ``Instruction``\\ s disponibles via Qiskit Pulse :"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:15
msgid "```Delay(duration: int, channel)`` <#delay>`__"
msgstr "```Delay(duration: int, channel)`` <#delay>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:16
msgid "```Play(pulse, channel)`` <#play>`__"
msgstr "```Play(pulse, channel)`` <#play>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:17
msgid "```SetFrequency(frequency, channel)`` <#frequency>`__"
msgstr "```SetFrequency(frequency, channel)`` <#frequency>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:18
msgid "```ShiftPhase(phase, channel)`` <#phase>`__"
msgstr "```ShiftPhase(phase, channel)`` <#phase>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:19
msgid "```Acquire(duration, channel, mem_slot, reg_slot)`` <#acquire>`__"
msgstr "```Acquire(duration, channel, mem_slot, reg_slot)`` <#acquire>`__"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:21
msgid "Each instruction type has its own set of operands. As you can see above, they each include at least one ``Channel`` to specify where the instruction will be applied."
msgstr "Chaque type d'instruction possède son propre ensemble d'opérandes. Comme vous pouvez le voir ci-dessus, ils incluent chacun au moins un ` ` Channel ` ` pour spécifier où l'instruction sera appliquée."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:23
msgid "**Channels** are labels for signal lines from the control hardware to the quantum chip."
msgstr "** Les canaux ** (``Channels``) sont des étiquettes pour les lignes de signal depuis le matériel (`` hardware``) de contrôle jusqu'à la puce quantique."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:25
msgid "``DriveChannel``\\ s are typically used for *driving* single qubit rotations,"
msgstr "` ` DriveChannel ` ` \\ s sont généralement utilisés pour * conduire * des rotations de qubits uniques,"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:26
msgid "``ControlChannel``\\ s are typically used for multi-qubit gates or additional drive lines for tunable qubits,"
msgstr "Les ``ControlChannel``\\ s sont généralement utilisés pour des portes multi-qubits ou les lignes de commande supplémentaires pour les qubits réglables,"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:27
msgid "``MeasureChannel``\\ s are specific to transmitting pulses which stimulate readout, and"
msgstr "` ` MeseChannel ` ` \\ s sont spécifiques à la transmission des impulsions qui stimulent la lecture, et"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:28
msgid "``AcquireChannel``\\ s are used to trigger digitizers which collect readout signals."
msgstr "` ` AcquireChannel ` ` \\ s sont utilisés pour déclencher des numériseurs qui collectent des signaux de lecture."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:30
msgid "``DriveChannel``\\ s, ``ControlChannel``\\ s, and ``MeasureChannel``\\ s are all ``PulseChannel``\\ s; this means that they support *transmitting* pulses, whereas the ``AcquireChannel`` is a receive channel only and cannot play waveforms."
msgstr "` ` DriveChannel ` ` \\ s, ` ` ControlChannel ` ` \\ s, et ` ` MeasureChannel ` ` \\ s sont tous ` ` PulseChannel ` ` \\ s ; cela signifie qu'ils prennent en charge * les impulsions de transmission *, alors que ` ` AcquireChannel ` ` est un canal de réception seulement et ne peut pas générer de formes d'ondes."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:32
msgid "For the following examples, we will create one ``DriveChannel`` instance for each ``Instruction`` that accepts a ``PulseChannel``. Channels take one integer ``index`` argument. Except for ``ControlChannel``\\ s, the index maps trivially to the qubit label."
msgstr "Pour les exemples suivants, nous allons créer une instance ` ` DriveChannel ` ` pour chaque ` ` Instruction ` ` qui accepte un ` ` PulseChannel ` `. Les canaux prennent un argument d'entier ` ` index ` `. A l'exception de ` ` ControlChannel ` ` \\ s, l'index se mappe trivialement sur l'étiquette du qubit."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:55
msgid "## ``Delay``"
msgstr "## ``Delay``"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:57
msgid "One of the simplest instructions we can build is ``Delay``. This is a blocking instruction that tells the control electronics to output no signal on the given channel for the duration specified. It is useful for controlling the timing of other instructions."
msgstr "L'une des instructions les plus simples que nous pouvons construire est ` ` Delay ` `. Il s'agit d'une instruction de blocage qui indique à l'électronique de contrôle de ne générer aucun signal sur le canal donné, pour la durée spécifiée. Il est utile pour contrôler le minutage (´´timing´´) des autres instructions."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:59
msgid "The duration here and elsewhere is in terms of the backend’s cycle time (1 / sample rate), ``dt``."
msgstr "La durée ici et ailleurs est exprimée en termes de temps de cycles du backend (1 / taux d'échantillonnage), ``dt``."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:61
msgid "To build a ``Delay`` instruction, we pass the duration and channel:"
msgstr "Pour construire une instruction ` ` Delay ` `, nous transmettons la durée et le canal:"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:84
msgid "where ``channel`` can be any kind of channel, including ``AcquireChannel``."
msgstr "où ``channel`` peut être n'importe quel canal, y compris ``AcquireChannel``."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:86
msgid "That’s all there is to it. This instruction, ``delay_5dt``, is ready to be included in a ``Schedule``. Any instruction appended after ``delay_5dt`` on the same channel will execute five timesteps later than it would have without this delay."
msgstr "C'est tout ce qu'il y a à faire. Cette instruction, ``delay_5dt``, est prête à être incluse dans un ``Schedule``. Toute instruction ajoutée après ``delay_5dt`` sur le même canal exécutera cinq intervalles de temps plus tard qu'elle ne l'aurait fait sans ce délai."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:88
msgid "## ``Play``"
msgstr "## ``Play``"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:90
msgid "The ``Play`` instruction is responsible for executing *pulses*. It’s straightforward to build one:"
msgstr "L'instruction ``Play`` permet l'exécution des *impulsions* (pulses). Il est simple d'en construire une:"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:96
msgid "Let’s clarify what the ``pulse`` argument is and explore a few different ways to build one."
msgstr "Précisons ce qu'est l'argument de ``pulse`` et explorons quelques façons différentes de construire un."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:99
msgid "Pulses"
msgstr "Impulsions (``Pulses``)"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:101
msgid "A ``Pulse`` specifies an arbitrary pulse *envelope*. The modulation frequency and phase of the output waveform are controlled by the ``SetFrequency`` and ``ShiftPhase`` instructions, which we will cover next."
msgstr "Un ``Pulse`` spécifie une impulsion arbitraire *enveloppe*. La fréquence de modulation et la phase de la forme d'onde de sortie sont contrôlées par les instructions ``SetFrequency`` et ``ShiftPhase``, que nous couvrirons ensuite."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:103
msgid "The image below may provide some intuition for why they are specified separately. Think of the pulses which describe their envelopes as input to an arbitrary waveform generator (AWG), a common lab instrument – this is depicted in the left image. Notice the limited sample rate discritizes the signal. The signal produced by the AWG may be mixed with a continuous sine wave generator. The frequency of its output is controlled by instructions to the sine wave generator; see the middle image. Finally, the signal sent to the qubit is demonstrated by the right side of the image below."
msgstr "L'image ci-dessous peut fournir une certaine intuition pour la raison pour laquelle ils sont spécifiés séparément. Pensez aux impulsions qui décrivent leurs enveloppes comme entrées dans un générateur de forme d'onde arbitraire (AWG, Arbitrary Waveform Generator), un instrument de laboratoire commun -- ceci est représenté dans l'image de gauche. Remarquez que le taux d'échantillonnage limité rend le signal discret. Le signal produit par l'AWG peut être mélangé avec un générateur d'ondes sinusoïdales continue. La fréquence de sa sortie est contrôlée par des instructions au générateur d'onde sinusoïdale ; voir l'image du milieu. Enfin, le signal envoyé au qubit est montré sur le côté droit de l'image ci-dessous."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:106
msgid "**Note**: The hardware may be implemented in other ways, but if we keep the instructions separate, we avoid losing explicit information, such as the value of the modulation frequency."
msgstr "**Note** : Le matériel peut être implémenté par d'autres moyens, mais si nous gardons les instructions séparées, nous évitons de perdre des informations explicites, comme la valeur de la fréquence de modulation."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:108
msgid "|alt text|"
msgstr "|alt text|"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:110
msgid "There are many methods available to us for building up pulses. Our ``library`` within Qiskit Pulse contains helpful methods for building ``Pulse``\\ s. Let’s take for example a simple Gaussian pulse – a pulse with its envelope described by a sampled Gaussian function. We arbitrarily choose an amplitude of 1, standard deviation :math:`\\sigma` of 10, and 128 sample points."
msgstr "Il existe de nombreuses méthodes pour construire les impulsions. Notre ``bibliothèque`` dans Qiskit Pulse contient des méthodes utiles pour construire des `` Pulse`` \\ s. Prenons par exemple une simple impulsion gaussienne -- une impulsion dont l'enveloppe est décrite par une fonction gaussienne échantillonnée. Nous avons choisi arbitrairement une amplitude de 1, une déviation standard :math:`\\sigma` de 10, et 128 points d'échantillonnage."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:112
msgid "**Note**: The maximum amplitude allowed is ``1.0``. Most systems also have additional constraints on the minimum and maximum number of samples allowed in a pulse. These additional constraints, if available, would be provided through the ``BackendConfiguration`` which is described `here <09_gathering_system_information.ipynb#Configuration>`__."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:140
msgid "Parametric pulses"
msgstr "Impulsions paramétriques"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:142
msgid "Let’s build our Gaussian pulse using the ``Gaussian`` parametric pulse. A parametric pulse sends the name of the function and its parameters to the backend, rather than every individual sample. Using parametric pulses makes the jobs you send to the backend much smaller. IBM Quantum backends limit the maximum job size that they accept, so parametric pulses may allow you to run larger programs."
msgstr "Construisons notre impulsion Gaussienne en utilisant l'impulsion paramétrique ``Gaussian``. Une impulsion paramétrique envoie le nom de la fonction et de ses paramètres au système d'exécution (backend), plutôt qu'à chaque échantillon individuel. L'utilisation d'impulsions paramétriques rend les tâches que vous envoyez au backend beaucoup plus petites. IBM Quantum backends limitent la taille maximale de travail qu'ils acceptent, de sorte que les impulsions paramétriques peuvent vous permettre d'exécuter des programmes plus grands."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:144
msgid "Other parametric pulses in the ``library`` include ``GaussianSquare``, ``Drag``, and ``ConstantPulse``."
msgstr "Les autres impulsions paramétriques de la librairie (``library``) incluent ``GaussianSquare``, ``Drag`` et ``ConstantPulse``."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:146
msgid "**Note**: The backend is responsible for deciding exactly how to sample the parametric pulses. It is possible to draw parametric pulses, but the samples displayed are not guaranteed to be the same as those executed on the backend."
msgstr "** Note**: L'e système d'exécution (´´backend´´) est chargé de décider exactement comment échantillonner les impulsions paramétriques. Il est possible de dessiner des impulsions paramétriques, mais les échantillons affichés ne sont pas garantis d'être les mêmes que ceux exécutés sur le backend."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:179
msgid "**Pulse waveforms described by samples**"
msgstr "** Les formes d'onde des impulsions décrites par les échantillons * *"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:181
msgid "It is also possible to specify the waveform as an array of samples. We pass the samples to a ``Waveform``."
msgstr "Il est également possible de spécifier la forme d'onde (``Waveform``) comme une rangée (``array``) d'échantillons. Nous transmettons les échantillons à un ` ` Waveform` `."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:217
msgid "**Pulse library functions**"
msgstr "**Fonctions de la bibliothèque (``library``) d'impulsions**"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:219
msgid "Our own pulse library has sampling methods to build a ``Waveform`` from common functions."
msgstr "Notre propre bibliothèque d'impulsions a des méthodes d'échantillonnage pour construire un ` ` Waveform ` ` à partir de fonctions communes."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:251
msgid "External libraries"
msgstr "Librairies (Biblitothèques) externes"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:253
msgid "Alternatively, you can make use of an external library."
msgstr "Vous pouvez également utiliser une bibliothèque externe."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:287
msgid "Regardless of which method you use to specify your ``pulse``, ``Play`` is instantiated the same way:"
msgstr "Quelle que soit la méthode que vous utilisez pour spécifier votre impulsion (``pulse``), ``Play`` est instanciée de la même manière :"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:311
msgid "The ``Play`` instruction gets its duration from its ``Pulse``: the duration of a parametrized pulse is an explicit argument, and the duration of a ``Waveform`` is the number of input samples."
msgstr "L'instruction ``Play`` récupère sa durée depuis son ``Pulse`` : la durée d'une impulsion paramétrée est un argument explicite, et la durée d'un ``Waveform`` est le nombre d'échantillons d'entrée."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:313
msgid "## ``SetFrequency``"
msgstr "## ` ` SetFrequency ` `"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:315
msgid "As explained previously, the output pulse waveform envelope is also modulated by a frequency and phase. Each channel has a `default frequency listed in the ``backend.defaults()`` <09_gathering_system_information.ipynb#Defaults>`__."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:317
msgid "The frequency of a channel can be updated at any time within a ``Schedule`` by the ``SetFrequency`` instruction. It takes a float ``frequency`` and a ``PulseChannel`` ``channel`` as input. All pulses on a channel following a ``SetFrequency`` instruction will be modulated by the given frequency until another ``SetFrequency`` instruction is encountered or until the program ends."
msgstr "La fréquence d'un canal peut être mise à jour à tout moment dans un ``Schedule`` par l'instruction ``SetFrequency``. Il prend une ``frequency`` flottante et un ``PulseChannel`` en entrée. Toutes les impulsions sur un canal suivant une instruction ``SetFrequency`` seront modulées par la fréquence donnée jusqu'à ce qu'une autre instruction ``SetFrequency`` soit rencontrée ou jusqu'à ce que le programme se termine."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:319
msgid "The instruction has an implicit duration of ``0``."
msgstr "L'instruction a une durée implicite de ` ` 0 ` `."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:321
msgid "**Note**: The frequencies that can be requested are limited by the total bandwidth and the instantaneous bandwidth of each hardware channel. In the future, these will be reported by the ``backend``."
msgstr "** Remarque: Les fréquences qui peuvent être demandées sont limitées par la bande passante totale et la bande passante instantanée de chaque canal matériel (``hardware``). A l'avenir, ces informations seront rapportées par le ` ` backend ` `."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:344
msgid "## ``ShiftPhase``"
msgstr "## ``ShiftPhase``"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:346
msgid "The ``ShiftPhase`` instruction will increase the phase of the frequency modulation by ``phase``. Like ``SetFrequency``, this phase shift will affect all following instructions on the same channel until the program ends. To undo the affect of a ``ShiftPhase``, the negative ``phase`` can be passed to a new instruction."
msgstr "L'instruction ``ShiftPhase`` augmentera la phase de la modulation de fréquence par ``phase``. Comme ``SetFrequency``, ce décalage de phase affectera toutes les instructions suivantes sur le même canal jusqu'à la fin du programme. Pour annuler l'effet d'une ``ShiftPhase``, la ``phase`` négative peut être passée à une nouvelle instruction."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:348
msgid "Like ``SetFrequency``, the instruction has an implicit duration of ``0``."
msgstr "Comme ` ` SetFrequency ` `, l'instruction a une durée implicite de ` ` 0 ` `."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:372
msgid "``Acquire``"
msgstr "` ` Acquérir ` `"

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:374
msgid "The ``Acquire`` instruction triggers data acquisition for readout. It takes a duration, an ``AcquireChannel`` which maps to the qubit being measured, and a ``MemorySlot`` or a ``RegisterSlot``. The ``MemorySlot`` is classical memory where the readout result will be stored. The ``RegisterSlot`` maps to a register in the control electronics which stores the readout result for fast feedback."
msgstr "L'instruction ``Acquire`` déclenche l'acquisition de données pour readout. Il prend une durée, un ``AcquireChannel`` qui correspond au qubit mesuré, et un ``MemorySlot`` ou un ``RegisterSlot``. Le ``MemorySlot`` est une mémoire classique où le résultat de lecture sera stocké. Le ``RegisterSlot`` correspond à un registre dans l'électronique de contrôle qui stocke le résultat de lecture pour un feedback rapide."

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:376
msgid "``Acquire`` instructions can also take custom ``Discriminator``\\ s and ``Kernel``\\ s as keyword arguments. Read more about building measurements `here <08_adding_measurements.ipynb>`__."
msgstr ""

#: ../../tutorials/circuits_advanced/06_building_pulse_instructions.ipynb:399
msgid "Now that we know how to build instructions, let’s learn how to compose them into ``Schedule``\\ s on the `next page <07_building_pulse_schedules.ipynb>`__!"
msgstr ""

