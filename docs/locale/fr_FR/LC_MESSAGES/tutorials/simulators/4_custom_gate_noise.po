msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-08-14 19:05\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/simulators/4_custom_gate_noise.ipynb`__."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "Application du bruit aux portes unitaires personnalisées"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "Ce bloc-notes montre comment ajouter des portes unitaires personnalisées à un circuit quantique et les utiliser pour des simulations de bruit dans Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "Création d'opérateurs de matrice"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "Nous pouvons utiliser la classe ``Operator`` dans ``qiskit.quantum_info`` pour représenter arbitrairement des opérateurs de tableau. Si l'opérateur est unitaire, il peut être ajouté à un circuit quantique et utilisé pour la simulation dans Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "Créons deux opérateurs ci-dessous pour une porte CNOT et une porte iSWAP :"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "**Remarque :** La matrice est spécifiée par rapport au produit tensoriel :math:`U_{b}\\otimes U_{a}` pour les qubits spécifiés par la liste ``[a,b]``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "Utilisation d'opérateurs dans les circuits"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Montrons comment ceux-ci peuvent être utilisés dans un circuit. Nous allons considérer un exemple d'implémentation d'une porte CNOT décomposée en termes de portes à un seul qubit et de la porte iSWAP comme suit."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:186
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "Notez que nous avons attribué un *label* optionnel de ``\"iswap\"`` à l'unité lorsqu'il est inséré. Cela nous permet d'identifier cet unitaire dans un Qiskit Aer ``NoiseModel`` afin que nous puissions ajouter des erreurs à ces portes unitaires personnalisées dans les simulations de circuits bruités."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:197
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "Nous pouvons confirmer que ce circuit retourne la sortie correcte en utilisant la classe ``Operator`` en tant que simulateur pour le circuit :"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:256
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "Et pour confirmer que la sortie est correcte, on peut calculer la fidélité moyenne de la porte :"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:303
msgid "Creating a custom unitary in a noise model"
msgstr "Création d'une unité personnalisée dans un modèle de bruit"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:305
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "Le Qiskit Aer ``AerSimulator`` supporte la simulation d'opérateurs unitaires arbitraires directement comme spécifié par le ``\"unitary\"`` dans les portes de base."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:351
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "Cela nous permet d'ajouter des modèles de bruit à des unités arbitraires dans notre simulation lorsque nous les identifions en utilisant l'argument optionnel ``label`` de ``QuantumCircuit.unitary``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:353
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "Nous allons maintenant le faire en créant un ``NoiseModel`` qui inclut un canal d'erreur quantique sur notre portail iSWAP personnalisé. Pour notre exemple, nous allons créer une erreur 2-qubit composée de deux canaux d'amortissement d'amplitude simple avec des paramètres d'amortissement différents. Pour l'instant, nous supposons que toutes les autres instructions de circuit sont idéales."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:385
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "Notez que lorsque nous ajoutons une erreur à un label personnalisé tel que ``\"iswap\"``, le ``NoiseModel`` ne sait pas à quelle porte ce label est censé s'appliquer, donc nous devons ajouter manuellement la chaîne de porte désirée au modèle de bruit ``basis_gates``. Cela garantit que le compilateur se déplace vers les portes de base correctes pour la simulation du modèle de bruit. Cela peut être fait en utilisant la fonction ``NoiseModel.add_basis_gates`` :"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:431
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr "Par défaut, les portes de base d'un modèle de bruit sont ``['cx','id','u3']`` plus toutes les portes de base standard ``AerSimulator`` qui sont ajoutées au modèle de bruit."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:443
msgid "Simulating a custom unitary noise model"
msgstr "Simuler un modèle de bruit unitaire personnalisé"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:454
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr "Commençons par prendre notre circuit CX précédent et ajouter une porte Hadamard initiale et une mesure finale pour créer un circuit de préparation d'état Bell-que nous pouvons simuler sur le ``AerSimulator`` pour le cas idéal et bruyant:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:523
msgid "Ideal output"
msgstr "Sortie idéale"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:525
msgid "Let's first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "Voyons d'abord la sortie idéale, puisque cela génère un état de Bell, nous attendons deux pics pour 00 et 11."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:563
msgid "Noisy circuit execution"
msgstr "Exécution du circuit bruité"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:565
msgid "Finally, let's now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "Enfin, nous allons maintenant le simuler avec notre modèle de bruit personnalisé. Comme il y a une petite erreur d'amortissement d'amplitude sur les portes à deux qubits, nous nous attendons à de petits pics supplémentaires pour les probabilités de résultat 01 et 10."

