msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:23\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/1_aer_provider.po\n"
"X-Crowdin-File-ID: 9160\n"
"Language: fr_FR\n"

#: ../../tutorials/simulators/1_aer_provider.ipynb:10
msgid "This page was generated from `tutorials/simulators/1_aer_provider.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/simulators/1_aer_provider.ipynb`__."

#: ../../tutorials/simulators/1_aer_provider.ipynb:9
msgid "Simulators"
msgstr "Simulateurs"

#: ../../tutorials/simulators/1_aer_provider.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/simulators/1_aer_provider.ipynb:23
msgid "This notebook shows how to import the *Qiskit Aer* simulator backend and use it to run ideal (noise free) Qiskit Terra circuits."
msgstr "Ce bloc-notes montre comment importer le simulateur *Qiskit Aer* et l'utiliser pour exécuter les circuits Terra idéaux (sans bruit) Qiskit."

#: ../../tutorials/simulators/1_aer_provider.ipynb:51
msgid "The Aer Provider"
msgstr "Fournisseur Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:53
msgid "The ``Aer`` provider contains a variety of high performance simulator backends for a variety of simulation methods. The available backends on the current system can be viewed using ``Aer.backends``"
msgstr "Le fournisseur ``Aer`` contient une variété de plateformes de simulation à hautes performances fournissant différentes méthodes de simulation. Les plateformes disponibles sur le système utilisé peuvent être visualisées en utilisant ``Aer.backends``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:132
msgid "The Aer Simulator"
msgstr "Le simulateur Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:134
msgid "The main simulator backend of the Aer provider is the ``AerSimulator`` backend. A new simulator backend can be created using ``Aer.get_backend('aer_simulator')``."
msgstr "L'environnement principal du simulateur Aer est le ``AerSimulator``. Un nouvel environnement de simulateur peut être créé en utilisant ``Aer.get_backend('aer_simulator')``."

#: ../../tutorials/simulators/1_aer_provider.ipynb:155
msgid "The default behavior of the ``AerSimulator`` backend is to mimic the execution of an actual device. If a ``QuantumCircuit`` containing measurements is run it will return a count dictionary containing the final values of any classical registers in the circuit. The circuit may contain gates, measurements, resets, conditionals, and other custom simulator instructions that will be discussed in another notebook."
msgstr "Le comportement par défaut de l'environnement ``AerSimulator`` est d'imiter l'exécution d'un périphérique réel. Si un ``QuantumCircuit`` contenant des mesures est exécuté, il retournera un dictionnaire associant les valeurs finales des registres classiques dans le circuit au nombre de fois qu'elles ont été mesurées. Le circuit peut contenir des portes, des mesures, des réinitialisations, des conditions et d'autres instructions de simulateur personnalisées qui seront discutées dans un autre notebook."

#: ../../tutorials/simulators/1_aer_provider.ipynb:167
msgid "Simulating a quantum circuit"
msgstr "Simulation d'un circuit quantique"

#: ../../tutorials/simulators/1_aer_provider.ipynb:169
msgid "The basic operation runs a quantum circuit and returns a counts dictionary of measurement outcomes. Here we run a simple circuit that prepares a 2-qubit Bell-state :math:`\\left|\\psi\\right\\rangle = \\frac{1}{2}\\left(\\left|0,0\\right\\rangle + \\left|1,1 \\right\\rangle\\right)` and measures both qubits."
msgstr "L'opération de base exécute un circuit quantique et retourne un dictionnaire de comptage des résultats de mesure. Ici, nous exécutons un circuit simple qui prépare un état de Bell à 2 qubits :math:`\\left|\\psi\\right\\rangle = \\frac{1}{2}\\left(\\left|0,\\right\\rangle + \\left|1,1 \\right\\rangle\\right)` et mesure les deux qubits."

#: ../../tutorials/simulators/1_aer_provider.ipynb:213
msgid "Returning measurement outcomes for each shot"
msgstr "Renvoi des résultats de la mesure pour chaque tir"

#: ../../tutorials/simulators/1_aer_provider.ipynb:215
msgid "The ``QasmSimulator`` also supports returning a list of measurement outcomes for each individual shot. This is enabled by setting the keyword argument ``memory=True`` in the ``run``."
msgstr "Le ``QasmSimulator`` supporte également de retourner une liste de résultats de mesure pour chaque tir individuel. Ceci est activé en définissant le mot-clé argument ``memory=True`` dans le ``run``."

#: ../../tutorials/simulators/1_aer_provider.ipynb:263
msgid "Aer Simulator Options"
msgstr "Options du simulateur Aer"

#: ../../tutorials/simulators/1_aer_provider.ipynb:265
msgid "The ``AerSimulator`` backend supports a variety of configurable options which can be updated using the ``set_options`` method. See the ``AerSimulator`` API documentation for additional details."
msgstr "L'environnement ``AerSimulator`` supporte une variété d'options qui peuvent être coonfigurées en utilisant la méthode ``set_options``. Voir la documentation de l'API ``AerSimulator`` pour plus de détails."

#: ../../tutorials/simulators/1_aer_provider.ipynb:277
msgid "Simulation Method"
msgstr "Méthode de simulation"

#: ../../tutorials/simulators/1_aer_provider.ipynb:279
msgid "The ``AerSimulator`` supports a variety of simulation methods, each of which supports a different set of instructions. The method can be set manually using ``simulator.set_option(method=value)`` option, or a simulator backend with a preconfigured method can be obtained directly from the ``Aer`` provider using ``Aer.get_backend``."
msgstr "Le ``AerSimulator`` supporte une variété de méthodes de simulation, chacune d'entre elles supporte un ensemble d'instructions différent. La méthode peut être définie manuellement en utilisant ``simulator.set_option(method=value)`` ou un environnement de simulation avec une méthode préconfigurée peuvent être obtenus directement à partir du fournisseur de ``Aer`` en utilisant ``Aer.get_backend``."

#: ../../tutorials/simulators/1_aer_provider.ipynb:281
msgid "When simulating ideal circuits, changing the method between the exact simulation methods ``stabilizer``, ``statevector``, ``density_matrix`` and ``matrix_product_state`` should not change the simulation result (other than usual variations from sampling probabilities for measurement outcomes)"
msgstr "Lors de la simulation de circuits idéaux, changer la méthode entre les méthodes de simulation exactes ``stabilisateur``, ``statevector``, ``density_matrix`` et ``matrix_product_state`` ne doivent pas changer le résultat de la simulation (autres que les variations habituelles des probabilités d'échantillonnage pour les résultats de mesure)"

#: ../../tutorials/simulators/1_aer_provider.ipynb:338
msgid "Automatic Simulation Method"
msgstr "Méthode de simulation automatique"

#: ../../tutorials/simulators/1_aer_provider.ipynb:340
msgid "The default simulation method is ``automatic`` which will automatically select a one of the other simulation methods for each circuit based on the instructions in those circuits. A fixed simulation method can be specified by by adding the method name when getting the backend, or by setting the ``method`` option on the backend."
msgstr "La méthode de simulation par défaut est ``automatic`` qui sélectionnera automatiquement une des autres méthodes pour chaque circuit en fonction de leurs instructions. Une méthode de simulation fixe peut être spécifiée en ajoutant le nom de ladite méthode lors de la récupération de l'environnement, ou en définissant l'option ``method`` sur le backend."

#: ../../tutorials/simulators/1_aer_provider.ipynb:352
msgid "GPU Simulation"
msgstr "Simulation GPU"

#: ../../tutorials/simulators/1_aer_provider.ipynb:354
msgid "The ``statevector``, ``density_matrix`` and ``unitary`` simulators support running on a NVidia GPUs. For these methods the simulation device can also be manually set to CPU or GPU using ``simulator.set_options(device='GPU')`` backend option. If a GPU device is not available setting this option will raise an exception."
msgstr "Les simulateurs ``statevector``, ``density_matrix`` et ``unitary`` supportent l'exécution sur un GPU NVidia. Pour ces méthodes, le périphérique de simulation peut également être configuré manuellement sur CPU ou GPU à l'aide de l'option```simulator.set_options(device='GPU')``. Si un périphérique GPU n'est pas disponible, définir cette option déclenchera une exception."

#: ../../tutorials/simulators/1_aer_provider.ipynb:407
msgid "The ``Aer`` provider will also contain preconfigured GPU simulator backends if Qiskit Aer was installed with GPU support on a compatible system:"
msgstr "Le fournisseur ``Aer`` contiendra également des environnements de simulateurs GPU préconfigurés si Qiskit Aer a été installé avec le support GPU sur un système compatible :"

#: ../../tutorials/simulators/1_aer_provider.ipynb:409
msgid "``aer_simulator_statevector_gpu``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:410
msgid "``aer_simulator_density_matrix_gpu``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:411
msgid "``aer_simulator_unitary_gpu``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:413
msgid "*Note: The GPU version of Aer can be installed using ``pip install qiskit-aer-gpu``.*"
msgstr "*Note : La version GPU d'Aer peut être installée en utilisant ``pip install qiskit-aer-gpu``.*"

#: ../../tutorials/simulators/1_aer_provider.ipynb:425
msgid "Simulation Precision"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:427
msgid "One of the available simulator options allows setting the float precision for the ``statevector``, ``density_matrix`` ``unitary`` and ``superop`` methods. This is done using the ``set_precision=\"single\"`` or ``precision=\"double\"`` (default) option:"
msgstr "Une des options disponibles pour le simulateur permet de définir la précision des nombres décimaux pour les méthodes ``statevector``, ``density_matrix`` ``unitary`` et ``superop``. Ceci est fait en utilisant l'option ``set_precision=\"single\"`` ou ``precision=\"double\"`` (par défaut) :"

#: ../../tutorials/simulators/1_aer_provider.ipynb:478
msgid "Setting the simulation precision applies to both CPU and GPU simulation devices. Single precision will halve the required memory and may provide performance improvements on certain systems."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:490
msgid "Custom Simulator Instructions"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:502
msgid "Saving the simulator state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:504
msgid "The state of the simulator can be saved in a variety of formats using custom simulator instructions."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:507
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Circuit method"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:507
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Description"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:507
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Supported Methods"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:509
msgid "``save_state``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:509
msgid "Save the simulator state in the native format for the simulation method"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:509
msgid "All"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:511
msgid "``save_statevector``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:511
msgid "Save the simulator state as a statevector"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:511
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:513
msgid "``save_stabilizer``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:513
msgid "Save the simulator state as a Clifford stabilizer"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:513
#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "``\"automatic\"``, ``\"stabilizer\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:515
msgid "``save_density_matrix``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:515
msgid "Save the simulator state as a density matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:515
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:517
msgid "``save_matrix_product_state``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:517
msgid "Save the simulator state as a a matrix product state tensor"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:517
msgid "``\"automatic\"``, ``\"matrix_product_state\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:519
msgid "``save_unitary``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:519
msgid "Save the simulator state as unitary matrix of the run circuit"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:519
msgid "``\"automatic\"``, ``\"unitary\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:521
msgid "``save_superop``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:521
msgid "Save the simulator state as superoperator matrix of the run circuit"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:521
#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "``\"automatic\"``, ``\"superop\"``"
msgstr "``\"automatic\"``, ``\"superop\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:524
msgid "Note that these instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:536
msgid "Saving the final statevector"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:538
msgid "To save the final statevector of the simulation we can append the circuit with the ``save_statevector`` instruction. Note that this instruction should be applied *before* any measurements if we do not want to save the collapsed post-measurement state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:582
msgid "Saving the circuit unitary"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:584
msgid "To save the unitary matrix for a ``QuantumCircuit`` we can append the circuit with the ``save_unitary`` instruction. Note that this circuit cannot contain any measurements or resets since these instructions are not supported on for the ``\"unitary\"`` simulation method"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:654
msgid "Saving multiple states"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:656
msgid "We can also apply save instructions at multiple locations in a circuit. Note that when doing this we must provide a unique label for each instruction to retrieve them from the results"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:732
msgid "Setting the simulator to a custom state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:734
msgid "The ``AerSimulator`` allows setting a custom simulator state for several of its simulation methods using custom simulator instructions"
msgstr "``AerSimulator`` permet de définir un état de simulateur personnalisé pour plusieurs de ses méthodes de simulation à l'aide d'instructions de simulation personnalisées"

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "``set_statevector``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "Set the simulator state to the specified statevector"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "``set_stabilizer``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "Set the simulator state to the specified Clifford stabilizer"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "``set_density_matrix``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "Set the simulator state to the specified density matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "``\"automatic\"``, ``\"density_matrix\"``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "``set_unitary``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "Set the simulator state to the specified unitary matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "``\"automatic\"``, ``\"unitary\"``, ``\"superop\"``"
msgstr "``\"automatic\"``, ``\"unitary\"``, ``\"superop\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "``set_superop``"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "Set the simulator state to the specified superoperator matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:750
msgid "**Notes:** \\* These instructions must be applied to all qubits in a circuit, otherwise an exception will be raised. \\* The input state must also be a valid state (statevector, density matrix, unitary etc) otherwise an exception will be raised. \\* These instructions can be applied at any location in a circuit and will override the current state with the specified one. Any classical register values (e.g. from preceding measurements) will be unaffected \\* Set state instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:763
msgid "Setting a custom statevector"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:765
msgid "The ``set_statevector`` instruction can be used to set a custom ``Statevector`` state. The input statevector must be valid (:math:`|\\langle\\psi|\\psi\\rangle|=1`)"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:829
msgid "Using the initialize instruction"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:831
msgid "It is also possible to initialize the simulator to a custom statevector using the ``initialize`` instruction. Unlike the ``set_statevector`` instruction this instruction is also supported on real device backends by unrolling to reset and standard gate instructions."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:891
msgid "Setting a custom density matrix"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:893
msgid "The ``set_density_matrix`` instruction can be used to set a custom ``DensityMatrix`` state. The input density matrix must be valid (:math:`Tr[\\rho]=1, \\rho \\ge 0`)"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:972
msgid "Setting a custom stabilizer state"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:974
msgid "The ``set_stabilizer`` instruction can be used to set a custom ``Clifford`` stabilizer state. The input stabilizer must be a valid ``Clifford``."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:1035
msgid "Setting a custom unitary"
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:1037
msgid "The ``set_unitary`` instruction can be used to set a custom unitary ``Operator`` state. The input unitary matrix must be valid (:math:`U^\\dagger U=\\mathbb{1}`)"
msgstr ""

