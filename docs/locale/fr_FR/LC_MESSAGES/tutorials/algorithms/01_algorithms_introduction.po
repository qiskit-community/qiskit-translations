msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-06-28 18:30\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"
"Language: fr_FR\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Introduction aux algorithmes dans Qiskit"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr "Il s'agit d'une introduction aux algorithmes dans Qiskit pour fournir une vue d'ensemble de haut niveau et aider à comprendre les différents aspects fonctionnels pour commencer. D'autres didacticiels fourniront un matériel plus approfondi, sur des algorithmes donnés, et sur les façons de les utiliser, etc."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "Comment la bibliothèque d'algorithmes est-elle structurée ?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Linear Solvers`` for linear systems of equations problems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr "Qiskit fournit un certain nombre d'`Algorithmes <https://qiskit.org/documentation/apidoc/algorithms.html>`__ regroupés par catégorie en fonction de la tâche qu'ils peuvent accomplir. Par exemple ``Minimum Eigensolvers`` pour trouver la plus petite valeur propre d'un opérateur, par exemple l'énergie de base d'un Hamiltonien en chimie ou une solution à un problème d'optimisation lorsqu'il est exprimé en tant qu'Hamiltonien d'Ising. Il y a des ``Solveurs Linéaires`` pour les problèmes de système linéaire d'équations et des ``Estimateurs d'amplitude`` pour l'estimation de la valeur qui peut être utilisée par exemple dans les applications financières. L'ensemble complet des catégories peut être vu dans le lien de documentation des algorithmes ci-dessus."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr "Les algorithmes sont configurables et souvent une partie de la configuration sera sous la forme de blocs de construction plus petits, dont différentes instances peuvent être données. Par exemple l'algorithme ``VQE``, le Variational Quantum Eigensolver, prend une fonction d'onde d'essai sous la forme d'une instance de ``QuantumCircuit`` et un optimiseur classique."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let’s take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "Regardons un exemple pour construire une instance VQE. Ici, ``TwoLocal`` est la forme variationnelle (fonction d'essai d'onde), un circuit paramétré qui peut être varié, et ``SLSQP`` un optimiseur classique. Ceux-ci sont créées sous la forme d'instances séparées et passées à VQE quand elles sont construites. Essayer, par exemple, un optimiseur classique différent, ou une forme variationnelle revient simplement à créer l'instance voulue et à la passer au VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:58
msgid "Let’s draw the ansatz so we can see it’s a QuantumCircuit where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We’ll come back to the parameters later in a working example below."
msgstr "Nous allons dessiner l'ansatz afin de voir que c'est un QuantumCircuit où θ[0] à θ[7] seront les paramètres qui varieront afin que l'optimiseur VQE trouve la valeur propre minimale. Nous reviendrons plus tard sur les paramètres dans un exemple ci-dessous."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:124
msgid "But more is needed before we can run the algorithm so let’s get to that next."
msgstr "Mais il faut plus de choses avant de pouvoir exécuter l'algorithme, alors passons à la suivante."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:136
msgid "How to run an algorithm?"
msgstr "Comment exécuter un algorithme ?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:138
msgid "In order to run an algorithm we need to have backend, a simulator or real device, on which the circuits that comprise the algorithm can be run. So for example we can use the ``aer_simulator_statevector`` from the Aer provider."
msgstr "Pour exécuter un algorithme, nous devons avoir un arrière plan, un simulateur ou un appareil réel, sur lequel les circuits qui composent l'algorithme peuvent être exécutés. Ainsi, par exemple, nous pouvons utiliser le ``aer_simulator_statevector`` du fournisseur Aer."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:161
msgid "Now a backend on its own does not have information on how you might want to run the circuits etc. For example how many shots, do you want a noise model, even options around transpiling the circuits. For this Qiskit Terra has a `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ which is provided both the backend as well as various settings around the circuit processing and execution so for instance:"
msgstr "Maintenant, un backend seul ne dispose pas d'informations sur la façon dont vous pourriez vouloir exécuter les circuits, etc. Par exemple, combien de tirs, voulez-vous un modèle de bruit, même des options autour du transpileur pour les circuits. Pour cela Qiskit Terra a une `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>` __ qui est fournie à la fois avec le backend ainsi que divers réglages autour du circuit de traitement et d'exécution, par exemple:"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:185
msgid "Note: if you provide the backend directly then internally a QuantumInstance will be created from it, with default settings, so at all times the algorithms are working through a QuantumInstance."
msgstr "Note : si vous fournissez directement le backend, une instance QuantumInstance sera créée à partir de celui-ci, avec les paramètres par défaut, donc en tout temps les algorithmes fonctionnent à travers une QuantumInstance."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:187
msgid "So now we would be able to call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr "Nous pouvons maintenant appeler la méthode `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>` __. Cette méthode est l'interface de choix pour les modules d'application, tels que Nature et Optimisation, afin qu'ils puissent fonctionner de manière interchangeable avec n'importe quel autre algorithme de la catégorie."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:199
msgid "A complete working example"
msgstr "Voici un exemple complet"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:201
msgid "Let’s put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It’s a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr "Appliquons ce que nous avons appris précédemment et créons un exemple complet. VQE trouvera la valeur propre minimale, par exemple la valeur énergétique minimale d'un opérateur Hamilitonien, nous avons donc besoin d'un tel opérateur pour que VQE fonctionne. Un tel opérateur est fourni plus bas. Il a été créé à l'origine par le module d'application Nature comme Hamiltonien pour une molécule H2 à une distance interatomique de 0,735A. C'est la somme des termes de Pauli ci-dessous. N'en disons pas plus pour le moment car l'objectif est d'exécuter l'algorithme, mais de plus amples informations sur les opérateurs peuvent être trouvées dans d'autres tutoriels."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:229
msgid "So let’s build a VQE instance passing a backend using a QuantumInstance, to the constructor. Now VQE does have setters so the QuantumInstance can also be passed later."
msgstr "Alors construisons une instance VQE en passant un backend à l'aide d'une instance de QuantumInstance, au constructeur. Maintenant VQE a aussi des setters pour que l'instance de QuantumInstance puisse être transmis plus tard, après la création de l'instance VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:231
msgid "Note: In order that you can run this notebook and see the exact same output the random number generator used throughout algorithms in algorithms_globals, as well as the transpiler and simulator, via the QuantumInstance, are seeded. You do not have to do this but if want to be able to reproduce the exact same outcome each time then this is how it’s done."
msgstr "Note: Afin que vous puissiez exécuter ce bloc-notes et obtenir le même résultat, le générateur de nombres aléatoires utilisé dans les algorithmes dans algorithms_globals, ainsi que le transpileur et le simulateur, au travers de QuantumInstance, sont ensemencés (seedés). Il n'est pas indispensable de le faire, sauf si vous voulez pouvoir reproduire exactement le même résultat à chaque fois."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:233
msgid "So let’s run VQE and print the result object it returns."
msgstr "Lançons donc VQE et affichons l'objet résultat qu'il retourne."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:316
msgid "From the above result we can see it took the optimizer ``65`` evaluations of parameter values until it found the minimum eigenvalue of ``-1.85727`` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr "À partir du résultat ci-dessus, nous pouvons voir que l'optimiseur a nécessité ``65`` itérations avec changement des valeurs des paramètres jusqu'à ce qu'il trouve la valeur propre minimale de ``-1.85727`` qui est l'énergie de l'état fondamental électronique de la molécule H2 donnée. Les paramètres optimaux de l'ansatz peuvent également être vus et sont les valeurs qui étaient dans l'ansatz à la valeur minimale."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:328
msgid "Using VQE setting QuantumInstance after Construction"
msgstr "Utilisation de VQE en initialisant l'attribut QuantumInstance après la construction"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:330
msgid "To close off let’s also create a VQE instance without supplying the QuantumInstance. We later set it as long as by the time VQE runs it has a QuantumInstance to use."
msgstr "Pour finir, créons également une instance VQE sans fournir l'instance de QuantumInstance. Nous la fixerons plus tard, la seule condition étant que l'instance existe au moment où VQE s'exécute."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:413
msgid "As the identical seeding was used as the prior example the result can be seen to be the same."
msgstr "Comme un amorçage identique a été utilisé comme l'exemple précédent, le résultat peut être considéré comme le même."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:424
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "Ceci conclut cette introduction aux algorithmes dans Qiskit. Veuillez consulter les autres tutoriels d'algorithmes de cette série pour une couverture plus large et plus en profondeur des algorithmes."

