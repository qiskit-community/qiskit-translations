msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-04-24 10:22\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Introduction aux algorithmes dans Qiskit"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr "Il s'agit d'une introduction aux algorithmes dans Qiskit pour fournir une vue d'ensemble de haut niveau et aider à comprendre les différents aspects fonctionnels pour commencer. D'autres didacticiels fourniront un matériel plus approfondi, sur des algorithmes donnés, et sur les façons de les utiliser, etc."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "Comment la bibliothèque d'algorithmes est-elle structurée ?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Time Evolvers`` for the time evolution of quantum systems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr "Qiskit fournit un certain nombre d'`Algorithmes <https://qiskit.org/documentation/apidoc/algorithms.html>`__ regroupés par catégorie en fonction de la tâche qu'ils peuvent accomplir. Par exemple ``Minimum Eigensolvers`` pour trouver la plus petite valeur propre d'un opérateur, par exemple l'énergie de base d'un Hamiltonien en chimie ou une solution à un problème d'optimisation lorsqu'il est exprimé en tant qu'Hamiltonien d'Ising. Il y a des ``Solveurs Linéaires`` pour les problèmes de système linéaire d'équations et des ``Estimateurs d'amplitude`` pour l'estimation de la valeur qui peut être utilisée par exemple dans les applications financières. L'ensemble complet des catégories peut être vu dans le lien de documentation des algorithmes ci-dessus."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr "Les algorithmes sont configurables et souvent une partie de la configuration sera sous la forme de blocs de construction plus petits, dont différentes instances peuvent être données. Par exemple l'algorithme ``VQE``, le Variational Quantum Eigensolver, prend une fonction d'onde d'essai sous la forme d'une instance de ``QuantumCircuit`` et un optimiseur classique."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let's take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "Regardons un exemple pour construire une instance VQE. Ici, ``TwoLocal`` est la forme variationnelle (fonction d'essai d'onde), un circuit paramétré que l'on peut faire varier, et ``SLSQP`` un optimiseur classique. Ils sont créés sous la forme d'instances séparées et passées à VQE quand elles sont construits. Essayer, par exemple, un optimiseur classique différent, ou une forme variationnelle est simplement un cas de création d'une instance de celle que vous voulez et de le/la passer au VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:56
msgid "Let's draw the ansatz so we can see it's a ``QuantumCircuit`` where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We'll come back to the parameters later in a working example below."
msgstr "Nous allons dessiner l'ansatz afin de voir que c'est un ``QuantumCircuit`` où θ[0] à θ[7] seront les paramètres qui varieront afin que l'optimiseur VQE trouve la valeur propre minimale. Nous reviendrons plus tard sur les paramètres dans un exemple ci-dessous."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:86
msgid "But more is needed before we can run the algorithm so let's get to that next."
msgstr "Mais il faut plus de choses avant de pouvoir exécuter l'algorithme, alors passons à la suivante."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:98
msgid "How to run an algorithm?"
msgstr "Comment exécuter un algorithme ?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:100
msgid "Algorithms rely on the primitives to evaluate expectation values or sample circuits. The primitives can be based on a simulator or real device and can be used interchangeably in the algorithms, as they all implement the same interface."
msgstr "Les algorithmes s'appuient sur les primitives pour évaluer les valeurs de prévision ou les circuits d'échantillonnage. Les primitives peuvent être basées sur un simulateur ou un dispositif réel et peuvent être utilisées de façon interchangeable dans les algorithmes, car elles implémentent toutes la même interface."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:102
msgid "In the VQE, we have to evaluate expectation values, so for example we can use the ``qiskit.primitives.Estimator`` which is shipped with the default Qiskit Terra installation."
msgstr "Dans le VQE, nous devons évaluer les valeurs d'espérance, par exemple, nous pouvons utiliser le \"`qiskit.primitives.Estimator\" qui est livré avec l'installation Qiskit Terra par défaut."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:125
msgid "This estimator uses an exact, statevector simulation to evaluate the expectation values. We can also use a shot-based and noisy simulators or real backends instead. For more information of the simulators you can check out `Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_primitives.html>`__ and for the actual hardware `Qiskit IBM Runtime <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/>`__."
msgstr "Cet estimateur utilise une simulation exacte et vectorielle pour évaluer les valeurs de l'espérance. Nous pouvons également utiliser des simulateurs bruités ou de vrais backends à la place. Pour plus d'informations sur les simulateurs, vous pouvez consulter Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_primitives.html>` __ et les backends réels ` Qiskit IBM Runtime <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/>` __."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:127
msgid "With all the ingredients ready, we can now instantiate the VQE:"
msgstr "Ces ingrédients étant touts prêts, nous pouvons maintenant instancier le VQE:"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:150
msgid "Now we can call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.minimum_eigensolvers.VQE.compute_minimum_eigenvalue.html#qiskit.algorithms.minimum_eigensolvers.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr "Nous pouvons à présent appeler la méthode `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.minimum_eigensolvers.VQE.compute_minimum_eigenvalue.html#qiskit.algorithms.minimum_eigensolvers.VQE.compute_minimum_eigenvalue>`__. Cette méthode est l'interface de choix pour les modules d'application, tels que Nature et Optimisation, afin qu'ils puissent fonctionner de manière interchangeable avec n'importe quel autre algorithme dans leur catégorie."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:162
msgid "A complete working example"
msgstr "Voici un exemple complet"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:164
msgid "Let's put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It's a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr "Utilisons ce que nous avons appris ci-dessus et créons un exemple complet qui fonctionne. VQE trouvera la valeur propre minimale, i.e. La valeur énergétique minimale d'un opérateur Hamiltonien et donc nous avons besoin d'un tel opérateur pour que VQE fonctionne. Un tel opérateur est fourni ci-dessous. Il a été créé à l'origine par le module d'application Nature en tant que Hamiltonien pour une molécule H2 à une distance interatomique de 0,735A. C'est la somme des termes de Pauli ci-dessous, mais pour l'instant, je ne vais pas dire quoi que ce soit de plus à ce sujet puisque l'objectif est d'exécuter l'algorithme, mais de plus amples informations sur les opérateurs peuvent être trouvées dans d'autres tutoriels."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:194
msgid "So let's run VQE and print the result object it returns."
msgstr "Lançons donc VQE et affichons l'objet résultat qu'il retourne."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:291
msgid "From the above result we can see the number of cost function (=energy) evaluations the optimizer took until it found the minimum eigenvalue of :math:`\\approx -1.85727` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr "À partir du résultat ci-dessus, nous pouvons voir le nombre d'évaluations de la fonction de coût (=energie) que l'optimiseur a nécessitéavant de trouver la valeur propre minimale de :math:`\\approx -1.85727` qui est l'énergie de l'état fondamental électronique de la molécule H2 donnée. Les paramètres optimaux de l'ansatz peuvent également être vus et sont les valeurs qui étaient dans l'ansatz à la valeur minimale."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:303
msgid "Updating the primitive inside VQE"
msgstr "Mise à jour de la primitive dans VQE"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:305
msgid "To close off let's also change the estimator primitive inside the a VQE. Maybe you're satisfied with the simulation results and now want to use a shot-based simulator, or run on hardware!"
msgstr "Pour terminer nous allons aussi changer l'estimateur primitif à l'intérieur d'un VQE. Peut-être que vous êtes satisfait des résultats de la simulation et que vous voulez maintenant utiliser un émulateur ou exécuter sur du matériel !"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:307
msgid "In this example we're changing to a shot-based estimator, still using Qiskit Terra's reference primitive. However you could replace the primitive by e.g. Qiskit Aer's estimator (``qiskit_aer.primitives.Estimator``) or even a real backend (``qiskit_ibm_runtime.Estimator``)."
msgstr "Dans cet exemple, nous passons à un estimateur basé sur les tirs, toujours en utilisant la primitive de référence de Qiskit Terra. Cependant, vous pourriez remplacer la primitive par exemple l'estimateur Qiskit Aer(``qiskit_aer.primitives.Estimator``) ou même un réel backend (``qiskit_ibm_runtime.Estimator``)."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:309
msgid "For noisy loss functions, the SPSA optimizer typically performs well, so we also update the optimizer. See also the `noisy VQE tutorial <https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html>`__ for more details on shot-based and noisy simulations."
msgstr "Pour les fonctions de perte bruitées, l'optimiseur SPSA s'exécute généralement bien, de sorte que nous mettez également à jour l'optimiseur. Voir aussi le tutoriel \"VQE avec du bruit\" <https://qiskit.org/documentation/tutorials/algorithms/03_vqe_simulation_with_noise.html>` __ pour plus de détails sur les simulations par shot buitées."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:412
msgid "Note: We do not fix the random seed in the simulators here, so re-running gives slightly varying results."
msgstr "Note : Nous n'utilisons pas une graine (seed) fixée pour le générateur de nombre pseudo aléatoires, c'est pourquoi nous obtenons des résultats légèrement différents."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:423
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "Ceci conclut cette introduction aux algorithmes dans Qiskit. Veuillez consulter les autres tutoriels d'algorithmes de cette série pour une couverture plus large et plus en profondeur des algorithmes."

