msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-01 19:07+0000\n"
"PO-Revision-Date: 2022-11-01 19:28\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/08_factorizers.po\n"
"X-Crowdin-File-ID: 9508\n"
"Language: fr_FR\n"

#: ../../tutorials/algorithms/08_factorizers.ipynb:10
msgid "This page was generated from `tutorials/algorithms/08_factorizers.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/algorithms/08_factorizers.ipynb`__."

#: ../../tutorials/algorithms/08_factorizers.ipynb:9
msgid "Shor’s algorithms"
msgstr "Algorithme de Shor"

#: ../../tutorials/algorithms/08_factorizers.ipynb:11
msgid "Qiskit has an implementation of `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."
msgstr "Qiskit dispose d'un implémentation de l'algorithme de Shor `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."

#: ../../tutorials/algorithms/08_factorizers.ipynb:13
msgid "The preceding reference has detailed explanations and build-out of circuits whereas this notebook has examples with the pre-built algorithms in Qiskit that you can use for experimentation and education purposes."
msgstr "La référence précédente contient des explications détaillées et la construction de circuits tandis que le bloc-note contient des exemples d'algorihtmes prédéfinis dans Qiskit que vous pouvez utiliser à des fins d'expérimentation et d'apprentissage."

#: ../../tutorials/algorithms/08_factorizers.ipynb:39
msgid "Shor’s Factoring algorithm"
msgstr "L'algorithme de factorisation de Shor"

#: ../../tutorials/algorithms/08_factorizers.ipynb:41
msgid "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ is one of the most well-known quantum algorithms and finds the prime factors for input integer :math:`N` in polynomial time. The algorithm implementation in Qiskit is simply provided a target integer to be factored and run, as follows:"
msgstr "L'algorithme de factorisation de Shor <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ est l'un des algorithmes quantiques les plus connus et trouve les facteurs premiers pour les entiers :math:`N` en temps polynomial. L'implémentation de l'algorithme dans Qiskit fournit simplement un entier cible à factoriser et à éxecuter, comme suit :"

#: ../../tutorials/algorithms/08_factorizers.ipynb:91
msgid "Note: this implementation of Shor’s algorithm uses :math:`4n + 2` qubits, where :math:`n` is the number of bits representing the integer in binary. So in practice, for now, this implementation is restricted to factorizing small integers. Given the above value of N we compute :math:`4n +2` below and confirm the size from the actual circuit."
msgstr "Note: Cette implémentation de l'algorithme de Shor utilise :math:`4n + 2` qubits, où :math:`n` est le nombre de bits représentant l'entier en binaire. Donc en practique, pour l'instant, cette implémentaion se limite à la factorisation de petis entiers. Etant donné la valeur de N ci-dessus, nous calculons :math:`4n +2` ci-dessous et confirmons la taille à partir du circuit réel."

