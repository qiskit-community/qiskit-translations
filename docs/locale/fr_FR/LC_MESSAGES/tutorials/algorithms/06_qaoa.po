msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-02 10:43\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/06_qaoa.po\n"
"X-Crowdin-File-ID: 9454\n"
"Language: fr_FR\n"

#: ../../tutorials/algorithms/06_qaoa.ipynb:10
msgid "This page was generated from `tutorials/algorithms/06_qaoa.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/algorithms/06_qaoa.ipynb`__."

#: ../../tutorials/algorithms/06_qaoa.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/06_qaoa.ipynb>`_."
msgstr "Exécuter en mode interactif dans le ` IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/06_qaoa.ipynb>` _."

#: ../../tutorials/algorithms/06_qaoa.ipynb:9
msgid "Quantum Approximate Optimization Algorithm"
msgstr "Algorithme d'optimisation Approximé Quantum"

#: ../../tutorials/algorithms/06_qaoa.ipynb:11
msgid "Qiskit has an implementation of the Quantum Approximate Optimization Algorithm `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ and this notebook demonstrates using it for a graph partition problem."
msgstr "Qiskit dispose d'une implémentation de l'algorithme QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>` __ et ce bloc-notes démontre son utilisation pour un problème de partition graphique."

#: ../../tutorials/algorithms/06_qaoa.ipynb:13
msgid "While QAOA can be directly used it often more convenient to use it in conjunction with the Optimization module. See the Optimization tutorials for more information."
msgstr "Bien que QAOA puisse être utilisé directement, il est souvent plus pratique de l'utiliser conjointement avec le module d'optimisation. Pour plus d'informations, reportez-vous aux tutoriels d'optimisation."

#: ../../tutorials/algorithms/06_qaoa.ipynb:40
msgid "First we create a random graph and draw it so it can be seen."
msgstr "Tout d'abord, nous créons un graphique aléatoire et le dessinons pour qu'il puisse être vu."

#: ../../tutorials/algorithms/06_qaoa.ipynb:111
msgid "The brute-force method is as follows. Basically, we exhaustively try all the binary assignments. In each binary assignment, the entry of a vertex is either 0 (meaning the vertex is in the first partition) or 1 (meaning the vertex is in the second partition). We print the binary assignment that satisfies the definition of the graph partition and corresponds to the minimal number of crossing edges."
msgstr "La méthode brute-force est la suivante. En résumé, toutes les affectations binaires sont tentées. Dans chaque affectation binaire, l'entrée d'un sommet est soit 0 (ce qui signifie que le sommet est dans la première partition) soit 1 (ce qui signifie que le sommet est dans la deuxième partition). Nous imprimons l'assignation binaire qui satisfait à la définition de la partition graphique et qui correspond au nombre minimal de bords croisés."

#: ../../tutorials/algorithms/06_qaoa.ipynb:173
msgid "The graph partition problem can be converted to an Ising Hamiltonian. Qiskit has different capabilities in the Optimization module to do this. Here, since the goal is to show QAOA, the module is used without further explanation to create the operator. The paper `Ising formulations of many NP problems <https://arxiv.org/abs/1302.5843>`__ may be of interest if you would like to understand the technique further."
msgstr "Le problème de la partition graphique peut être converti en un Hamiltonien Ising. Qiskit dispose de différentes capacités dans le module d'optimisation pour ce faire. Ici, puisque l'objectif est de montrer QAOA, le module est utilisé sans explication supplémentaire pour créer l'opérateur. L'article `Ising formulations of many NP problems <https://arxiv.org/abs/1302.5843>`__ peut être intéressant si vous souhaitez mieux appréhender la technique."

#: ../../tutorials/algorithms/06_qaoa.ipynb:194
msgid "So lets use the QAOA algorithm to find the solution."
msgstr "Utilisons donc l'algorithme QAOA pour trouver la solution."

#: ../../tutorials/algorithms/06_qaoa.ipynb:252
msgid "The outcome can be seen to match to the value computed above by brute force. But we can also use the classical ``NumPyMinimumEigensolver`` to do the computation, which may be useful as a reference without doing things by brute force."
msgstr "Le résultat peut être considéré comme correspondant à la valeur calculée ci-dessus par la force brute. Mais nous pouvons aussi utiliser le classique ` ` NumPyMinimumEigensolver ` ` pour faire le calcul, ce qui peut être utile comme référence sans faire les choses par la force brute."

#: ../../tutorials/algorithms/06_qaoa.ipynb:301
msgid "It is also possible to use VQE as is shown below"
msgstr "Il est également possible d'utiliser VQE comme indiqué ci-dessous"

