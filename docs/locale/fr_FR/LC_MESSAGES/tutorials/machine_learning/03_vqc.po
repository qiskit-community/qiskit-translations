msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-02 10:44\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/03_vqc.po\n"
"X-Crowdin-File-ID: 9468\n"
"Language: fr_FR\n"

#: ../../tutorials/machine_learning/03_vqc.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/03_vqc.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/machine_learning/03_vqc.ipynb`__."

#: ../../tutorials/machine_learning/03_vqc.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."
msgstr "Exécuter en mode interactif dans le `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."

#: ../../tutorials/machine_learning/03_vqc.ipynb:9
msgid "Variational Quantum Classifier (VQC)"
msgstr "Classifieurs variationnels quantiques (VQC)"

#: ../../tutorials/machine_learning/03_vqc.ipynb:11
msgid "The QSVM notebook demonstrated a kernel based approach. This notebook shows a variational method using the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm."
msgstr "Le bloc-notes QSVM a démontré une approche basée sur un estimateur par noyau. Ce bloc-notes montre une méthode variationnelle utilisant l'algorithme `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__."

#: ../../tutorials/machine_learning/03_vqc.ipynb:13
msgid "For further information see also the following reference, as given in the QSVM notebook, that also describes this approach: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr "Pour plus d'informations, voir aussi la référence suivante, comme indiqué dans le cahier QSVM, qui décrit également cette approche : « Apprentissage supervisé avec des espaces de fonctionnalités améliorés quantiques », « arXiv: 1804. 1326 <https://arxiv.org/pdf/1804.11326.pdf>`__"

#: ../../tutorials/machine_learning/03_vqc.ipynb:44
msgid "As per the QSVM notebook again we will use the ad hoc dataset as described in the above referenced paper. From the dataset we take samples for use as training, testing and the final prediction (datapoints)."
msgstr "Comme pour le bloc-notes QSVM , nous utiliserons la base de données ad hoc telle que décrite dans le document mentionné ci-dessus. Nous échantillons cette base de données pour l’apprentissage, le test et les prédictions finales."

#: ../../tutorials/machine_learning/03_vqc.ipynb:105
msgid "With the dataset ready we can setup the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm to do a classification. We use the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ data encoding circuit from the Qiskit circuit library, like we did with QSVM. But this is a variational algorithm so we need a variational form, i.e. parameterized circuit, whose parameters can be varied by an optimizer when computing VQC’s cost function. For this we choose `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ from the Qiskit circuit library. As the qasm_simulator has shot noise we choose to use `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ which is designed to perform under noisy conditions."
msgstr "Avec le jeu de données prêt nous pouvons configurer l'algorithme `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>` __ pour effectuer une classification. Nous utilisons le circuit de codage de données `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>` __ de la bibliothèque de circuits de Qiskit, comme nous l'avons fait avec l'algorithme QSVM. Mais il s'agit d'un algorithme variationnel, de sorte que nous avons besoin d'une forme variationnelle, c'est-à-dire un circuit paramétré, dont les paramètres peuvent être variés par un optimiseur lors du calcul de la fonction de coût de VQC. Pour cela, nous choisissons `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>` __ de la bibliothèque de circuits de Qiskit. Comme le qasm_simulator est bruité à cause du nombre fini de répétitions (souvent 8192), nous choisissons d'utiliser `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>` __ qui est conçu pour fonctionner dans des conditions bruitées."

#: ../../tutorials/machine_learning/03_vqc.ipynb:108
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr "Ici, le simulateur ``qasm_simulator`` de BasicAer est utilisé avec 1024 mesures."

#: ../../tutorials/machine_learning/03_vqc.ipynb:174
msgid "Now VQC, as well as QSVM, have ``train``, ``test`` and ``predict`` methods. The ``run`` method, as used above, will call these in turn based on whatever data was supplied to the algorithm. But the methods called directly to say train a model and then do predict. Since the vqc instance has already been trained, lets predict another set of sample datapoints by directly calling ``predict``."
msgstr "VQC comme QSVM ont les méthodes ``train``, ``test`` et ``predict``. La méthode ``run``, telle qu'utilisée ci-dessus, les appellera à leur tour en fonction des données fournies à l'algorithme. Mais les méthodes peuvent être appelées directement pour, par exemple, entraîner un modèle puis effectuer une prédiction. Puisque l'instance VQC a déjà été entraînée, nous pouvoir prédire un autre ensemble de points de données en appelant directement ``predict``."

#: ../../tutorials/machine_learning/03_vqc.ipynb:228
msgid "Finally I will note that the Qiskit classifier algorithms can ``save_model`` after training and also ``load_model`` that had been previously saved."
msgstr "Enfin, il faut noter que les algorithmes de classification de Qiskit peuvent être sauvegardés après l'entraînement avec la méthode ``save_model`` et un modèle déjà entraîné et sauvegardé peut être chargé avec la méthode ``load_model``."

