msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:33\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/operators/02_gradients_framework.po\n"
"X-Crowdin-File-ID: 9410\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:10
msgid "This page was generated from `tutorials/operators/02_gradients_framework.ipynb`__."
msgstr "Cette page a été générée à partir de `tutorials/operators/02_gradients_framework.ipynb`__."

#: ../../tutorials/operators/02_gradients_framework.ipynb:9
msgid "Qiskit Gradient Framework"
msgstr "Le framework de gradient de Qiskit"

#: ../../tutorials/operators/02_gradients_framework.ipynb:11
msgid "The gradient framework enables the evaluation of quantum gradients as well as functions thereof. Besides standard first order gradients of expectation values of the form"
msgstr "Le framework de gradient permet d'évaluer des gradients quantiques ainsi que des fonctions qui en dépendent. En plus des gradients standards de premier ordre des valeurs d'espérance de la forme"

#: ../../tutorials/operators/02_gradients_framework.ipynb:13
msgid "\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle\n\n"
msgstr "\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:15
msgid "The gradient framework also supports the evaluation of second order gradients (Hessians), and the Quantum Fisher Information (QFI) of quantum states :math:`|\\psi\\left(\\theta\\right)\\rangle`."
msgstr "Le framework de gradient permet également l'évaluation des gradients du second ordre (Hessiens) ainsi que la Quantum Fisher Information (QFI) d'états quantiques :math:`|\\psi\\left(\\theta\\right)\\rangle`."

#: ../../tutorials/operators/02_gradients_framework.ipynb:26
msgid "|gradient_framework.png|"
msgstr "|gradient_framework.png|"

#: ../../tutorials/operators/02_gradients_framework.ipynb:28
msgid "gradient_framework.png"
msgstr "gradient_framework.png"

#: ../../tutorials/operators/02_gradients_framework.ipynb:40
msgid "Imports"
msgstr "Imports"

#: ../../tutorials/operators/02_gradients_framework.ipynb:99
msgid "First Order Gradients"
msgstr "Gradients de premier ordre"

#: ../../tutorials/operators/02_gradients_framework.ipynb:101
msgid "Given a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`, and observable :math:`\\hat{O}\\left(\\omega\\right)=\\sum_{i}\\omega_i\\hat{O}_i`, we want to compute..."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:113
msgid "Gradients w.r.t. Measurement Operator Parameters"
msgstr "Gradients relatifs aux paramètres de l'opérateur de mesure"

#: ../../tutorials/operators/02_gradients_framework.ipynb:115
msgid "Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e."
msgstr "Le gradient d'une espérance relativement à un coefficient de l'observable :math:`\\hat{O}(\\omega)`, c'est à dire."

#: ../../tutorials/operators/02_gradients_framework.ipynb:117
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega_i} = \\langle\\psi\\left(\\theta\\right)|\\hat{O}_i\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega_i} = \\langle\\psi\\left(\\theta\\right)|\\hat{O}_i\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:128
msgid "First of all, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "Tout d'abord, nous définissons un état quantique :math:`|\\psi\\left (\\theta\\right)\\rangle` et un Hamiltonien :math:`H` agissant comme un observable. Ensuite, l'état et l'Hamiltonien sont intégrés dans un objet définissant la valeur de l'espérance"

#: ../../tutorials/operators/02_gradients_framework.ipynb:130
#: ../../tutorials/operators/02_gradients_framework.ipynb:1672
msgid "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:250
msgid "We construct a list of the parameters for which we aim to evaluate the gradient. Now, this list and the expectation value operator are used to generate the operator which represents the gradient."
msgstr "Nous construisons une liste des paramètres pour lesquels nous cherchons à évaluer le gradient. Cette liste et la valeur de l'espérance de l'opérateur sont utilisés pour créer l'opérateur qui représente le gradient."

#: ../../tutorials/operators/02_gradients_framework.ipynb:540
msgid "All that is left to do is to assign values to the parameters and to evaluate the gradient operators."
msgstr "Il ne reste alors plus qu'à attribuer des valeurs aux paramètres et à calculer le gradient associé."

#: ../../tutorials/operators/02_gradients_framework.ipynb:588
msgid "Gradients w.r.t. State Parameters"
msgstr "Gradients relatifs aux paramètres de l'état quantique"

#: ../../tutorials/operators/02_gradients_framework.ipynb:590
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e.\\"
msgstr "Gradient d'une espérance relativement à un état paramétré :math:`|\\psi\\left(\\theta\\right)\\rangle`, i.e.\\"

#: ../../tutorials/operators/02_gradients_framework.ipynb:592
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:594
msgid "respectively of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e."
msgstr "relativement à des probabilités d'échantillonnage d'un paramètre d'un état :math:`|\\psi\\left(\\theta\\right)\\rangle`, c'est-à-dire"

#: ../../tutorials/operators/02_gradients_framework.ipynb:596
msgid "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:598
msgid "A gradient w.r.t. a state parameter may be evaluated with different methods. Each method has advantages and disadvantages."
msgstr "Un gradient relatif à un paramètre d'état quantique peut être évalué de différentes manières, chacune ayant ses avantages et inconvénients."

#: ../../tutorials/operators/02_gradients_framework.ipynb:712
msgid "Parameter Shift Gradients"
msgstr "Calcul par décalage de paramètre"

#: ../../tutorials/operators/02_gradients_framework.ipynb:714
msgid "Given a Hermitian operator :math:`g` with two unique eigenvalues :math:`\\pm r` which acts as generator for a parameterized quantum gate"
msgstr "Étant donné un Hermitien :math:`g` ayant deux valeurs propres uniques :math:`\\pm r` qui génère une porte quantique paramétrée"

#: ../../tutorials/operators/02_gradients_framework.ipynb:716
msgid "G(\\theta)= e^{-i\\theta g}.\n\n"
msgstr "G(\\theta)= e^{-i\\theta g}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:718
msgid "Then, quantum gradients can be computed by using eigenvalue :math:`r` dependent shifts to parameters. All `standard, parameterized Qiskit gates <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>`__ can be shifted with :math:`\\pi/2`, i.e.,"
msgstr "Les gradients quantiques peuvent être calculés par décalage des paramètres dépendant de la valeur propre :math:`r`. Toutes les `portes quantique paramétrées \"standard\" de Qiskit <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>` __ peuvent être décalées d'un angle :math:`\\pi/2`, c'est-à-dire,"

#: ../../tutorials/operators/02_gradients_framework.ipynb:720
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:722
#: ../../tutorials/operators/02_gradients_framework.ipynb:1249
msgid "Probability gradients are computed equivalently."
msgstr "Les gradients utilisant une distribution de probabilités peuvent être calculés de manière similaire."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1014
msgid "Linear Combination of Unitaries Gradients"
msgstr "Combinaison linéaire de gradients de matrices unitaires"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1016
msgid "Unitaries can be written as :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}`, where :math:`M\\left(\\omega\\right)` denotes a parameterized Hermitian matrix. Further, Hermitian matrices can be decomposed into weighted sums of Pauli terms, i.e., :math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` with :math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` and :math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` for :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` acting on the :math:`j^{\\text{th}}` qubit. Thus, the gradients of :math:`U_k\\left(\\omega_k\\right)` are given by :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"
msgstr "Toute matrice unitaire peut être écrite comme :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}`, où :math:`M\\left(\\omega\\right)` est une matrice Hermitienne paramétrée. De plus, les matrices Hermitiennes peuvent elles-mêmes être décomposées en une somme pondérée de matrices de Pauli, c'est-à-dire :math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` où :math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` et :math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` pour :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` et agissant sur le :math:`j^{\\text{\\`eme}}` qubit. Ainsi, les gradients de :math:`U_k\\left(\\omega_k\\right)` sont donnés par :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1021
msgid "Combining this observation with a circuit structure presented in `Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ allows us to compute the gradient with the evaluation of a single quantum circuit."
msgstr "Combiner cette observation avec une structure de circuit présentée dans `Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ permet de calculer le gradient par l'évaluation d'un seul circuit quantique."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1243
msgid "Finite Difference Gradients"
msgstr "Calcul des gradients par différences finies"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1245
msgid "Unlike the other methods, finite difference gradients are numerical estimations rather than analytical values. This implementation employs a central difference approach with :math:`\\epsilon \\ll 1`"
msgstr "Contrairement aux autres méthodes, le calcul de gradients par différences finies permet d'obtenir des estimations numériques plutôt que des expressions analytiques. L'implémentation suivante adopte une approche par différence centrale avec :math:`\\epsilon \\ll 1`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1247
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} \\approx \\frac{1}{2\\epsilon} \\left(\\langle\\psi\\left(\\theta+\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\epsilon\\right)\\rangle - \\partial\\langle\\psi\\left(\\theta-\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\epsilon\\right)\\rangle\\right).\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} \\approx \\frac{1}{2\\epsilon} \\left(\\langle\\psi\\left(\\theta+\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\epsilon\\right)\\rangle - \\partial\\langle\\psi\\left(\\theta-\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\epsilon\\right)\\rangle\\right).\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1543
msgid "Natural Gradient"
msgstr "Gradient naturel"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1545
msgid "A special type of first order gradient is the natural gradient which has proven itself useful in classical machine learning and is already being studied in the quantum context. This quantity represents a gradient that is 'rescaled' with the inverse `Quantum Fisher Information matrix <#Quantum-Fisher-Information-(QFI)>`__ (QFI)"
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:1547
msgid "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1558
msgid "Instead of inverting the QFI, one can also use a least-square solver with or without regularization to solve"
msgstr "Plutôt que d'inverser la QFI, il est aussi possible d'utiliser un solveur des moindres carrés avec ou sans régularisation pour résoudre"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1560
msgid "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1562
msgid "The implementation supports ridge and lasso regularization with automatic search for a good parameter using `L-curve corner search <https://arxiv.org/pdf/1608.04571.pdf>`__ as well as two types of perturbations of the diagonal elements of the QFI."
msgstr "Cette implémentation prend en charge les régularisations d'ordre 1 (Lasso) et d'ordre 2 (Ridge) avec une recherche automatisée d'un hyperparamètre convenable par `«L-curve corner search» <https://arxiv.org/pdf/1608.04571.pdf>`__ ainsi que deux types de perturbations des éléments diagonaux de la QFI."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1564
msgid "The natural gradient can be used instead of the standard gradient with any gradient-based optimizer and/or ODE solver."
msgstr "La gradient naturel peut être utilisé en lieu et place du gradient standard avec tout optimiseur basé sur les gradients et/ou avec tout solveur d'équations différentielles ordinaires."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1647
msgid "Hessians (Second Order Gradients)"
msgstr "Hessiens (Gradients de second ordre)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1649
msgid "Four types of second order gradients are supported by the gradient framework."
msgstr "Quatre types de gradients de second ordre sont pris en charge par le framework de gradient."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1651
msgid "Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega^2}`"
msgstr "Les gradients d'une espérance par rapport à un coefficient de l'observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1652
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"
msgstr "Les gradients d'une espérance par rapport à un paramètre d'un état quantique :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, c'est-à-dire :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1653
msgid "Gradient of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. :math:`\\frac{\\partial^2 p_i}{\\partial\\theta^2} = \\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"
msgstr "Les gradients de probabilités d'échantillonnage par rapport à un paramètre d'un état quantique :math:`|\\psi\\left(\\theta\\right)\\rangle`, c'est-à-dire :math:`\\frac{\\partial^2 p_i}{\\partial\\theta^2} = \\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1654
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter and a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta\\partial\\omega}`"
msgstr "Les gradients d'une espérance par rapport à un paramètre d'un état quantique :math:`|\\psi\\left(\\theta\\right)\\rangle` et à un coefficient de l'observable :math:`\\hat{O}\\left(\\omega\\right)`, c'est-à-dire :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta\\partial\\omega}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1656
msgid "In the following examples are given for the first two Hessian types. The remaining Hessians are evaluated analogously."
msgstr "Dans la suite, les exemples traiteront des deux premiers types d'Hessien. Les deux autres peuvent être calculés de manière analogue."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1668
msgid "Hessians w.r.t. Measurement Operator Parameters"
msgstr "Hessiens relatifs aux paramètres d'un observable"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1670
msgid "Again, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "Nous définissons une fois de plus un état quantique :math:`|\\psi\\left(\\theta\\right)\\rangle` et un observable Hamiltonien :math:`H`. L'état quantique et l'Hamiltonien sont alors intégrés dans un objet définissant la valeur de l'espérance"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1741
msgid "Next, we can choose the parameters for which we want to compute second order gradients. - Given a tuple, the ``Hessian`` will evaluate the second order gradient for the two parameters. - Given a list, the ``Hessian`` will evaluate the second order gradient for all possible combinations of tuples of these parameters."
msgstr "Maintenant, il nous est possible de choisir les paramètres pour lesquels nous souhaitons calculer les Hessiens. - Étant donné un tuple, la classe ``Hessian`` va calculer l'Hessien pour les deux paramètres de ce tuple. - Étant donné une liste, la classe ``Hessian`` va calculer l'Hessien pour toutes les combinaisons possibles de tuples de ces paramètres."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1743
msgid "After binding parameter values to the parameters, the Hessian can be evaluated."
msgstr "Après avoir assigné des valeurs aux paramètres, l'Hessien peut être calculé."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1832
msgid "Hessians w.r.t. State Parameters"
msgstr "Hessiens relatifs aux paramètres d'états quantiques"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2007
msgid "Quantum Fisher Information (QFI)"
msgstr "Quantum Fisher Information (QFI)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2009
msgid "The Quantum Fisher Information is a metric tensor which is representative for the representation capacity of a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`."
msgstr "La Quantum Fisher Information est un tenseur métrique permettant d'évaluer la capacité de représentation d'un état quantique paramétré :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` pour un état initial :math:`|\\psi\\rangle` et une Ansatz paramétrée :math:`V\\left(\\theta\\right)`."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2011
msgid "The entries of the QFI for a pure state reads"
msgstr "Les coefficients de la QFI pour un état pur sont donnés par"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2013
msgid "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"
msgstr "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2025
msgid "Circuit QFIs"
msgstr "Circuits associés à une QFI"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2027
msgid "The evaluation of the QFI corresponding to a quantum state that is generated by a parameterized quantum circuit can be conducted in different ways."
msgstr "L'évaluation de la QFI associée à un état quantique généré par un circuit quantique paramétré peut être réalisée de différentes manières."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2030
msgid "Linear Combination Full QFI"
msgstr "Calcul complet de la QFI par combinaison linéaire"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2032
msgid "To compute the full QFI, we use a working qubit as well as intercepting controlled gates. See e.g. `Variational ansatz-based quantum simulation of imaginary time evolution <https://www.nature.com/articles/s41534-019-0187-2>`__."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:2129
msgid "Block-diagonal and Diagonal Approximation"
msgstr "Approximations diagonale et diagonale par blocs"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2131
msgid "A block-diagonal resp. diagonal approximation of the QFI can be computed without additional working qubits. This implementation requires the unrolling into Pauli rotations and unparameterized Gates."
msgstr "Une approximation diagonale ou diagonale par blocs de la QFI peut être calculée sans utiliser de qubits de travail supplémentaires. Cette implémentation requiert de calculer la décomposition en rotations de Pauli et en portes quantiques non-paramétrées."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2241
msgid "Application Example: VQE with gradient-based optimization"
msgstr "Exemple d'application: VQE avec optimisation par gradient"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2253
msgid "Additional Imports"
msgstr "Imports supplémentaires"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2308
msgid "The Gradient Framework can also be used for a gradient-based ``VQE``. First, the Hamiltonian and wavefunction ansatz are initialized."
msgstr "Le framework de gradient peut également être utilisé par une instance de ``VQE`` utilisant un gradient pour son optimisation. Tout d'abord, l'Hamiltonien et la fonction d'onde sont initialisés."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2388
msgid "Now, we can choose whether the ``VQE`` should use a ``Gradient`` or ``NaturalGradient``, define a ``QuantumInstance`` to execute the quantum circuits and run the algorithm."
msgstr "Il nous est maintenant possible de définir une ``QuantumInstance`` sur laquelle ``VQE`` s'exécutera ainsi que choisir si l'instance de ``VQE`` doit utiliser un ``Gradient`` ou un ``NaturalGradient``."

