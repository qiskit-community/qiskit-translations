msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-09 12:18+0000\n"
"PO-Revision-Date: 2020-08-17 15:25\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/development_strategy.po\n"
"X-Crowdin-File-ID: 7206\n"
"Language: fr_FR\n"

#: ../../development_strategy.rst:2
msgid "Development Strategy"
msgstr "Stratégie de développement"

#: ../../development_strategy.rst:5
msgid "Roadmap"
msgstr "Feuille de route"

#: ../../development_strategy.rst:7
msgid "We are going to look out 12 months to establish a set of goals we want to work towards. When planning, we typically look at potential work from the perspective of the elements."
msgstr "Voici un ensemble d'objectifs sur lesquels nous avons travaillé. Nous avons choisi une approche par modules principaux de Qiskit (les \"éléments\")."

#: ../../development_strategy.rst:12
msgid "Qiskit Terra"
msgstr "Qiskit Terra"

#: ../../development_strategy.rst:14
msgid "In 2018 we worked on formalizing the backends and user flow in Qiskit Terra. The basic idea is as follows: the user designs a quantum circuit and then, through a set of transpiler passes, rewrites the circuit to run on different backends with different optimizations. We also introduced the concept of a *provider*, whose role is to supply backends for the user to run quantum circuits on. The provider API we have defined at version one supplies a set of schemas to verify that the provider and its backends are Terra-compatible."
msgstr "Au cours de l'année 2018, nous avons formalisé la notion de plate-forme d'execution (\"backend\"), et de flux d'execution dans ce module Terra. Le principe a été le suivant : l'utilisateur commence par construire un circuit, qui est ensuite re-écrit au gré d'un ensemble d'itérations du transpileur, pour\n"
"pouvoir être exécuté sur les différentes plate-formes d'exécution. Le concept de *provider* (fournisseur) a été introduit, son rôle est de mettre à disposition des utilisateurs les plateformes pour executer les circuits quantiques. L'API *provider* qui a été implémentée permet d'utiliser un \n"
"ensemble de conditions pour vérifier qu'un fournisseur et ses plateformes sont compatibles avec le module Terra."

#: ../../development_strategy.rst:22
msgid "In 2019, we have many extensions planned. These include:"
msgstr "Pour l'année 2019, voici les améliorations que nous avions prévu d'apporter, entre autres :"

#: ../../development_strategy.rst:24
msgid "**Add passes to the transpiler.** The goal here is to be more efficient in circuit depth as well as adding passes that find approximate circuits and resource estimations."
msgstr "**Ajouter des itérations au transpileur.** L'objectif recherché est une meilleure efficacité du point de vue de la profondeur du circuit obtenu, ainsi que d'utiliser les itérations pour trouver des circuits approchés et estimer les resources nécessaires."

#: ../../development_strategy.rst:27
msgid "**Introduce a circuit foundry and circuit API.** This has the goal of making sure that a user can easily build complex circuits from operations. Some of these include adding controls and power to operations, and inserting unitary matrices directly."
msgstr "**Introduire une fabrique de circuit et une API pour les construire.** Ceci a pour but de faciliter la construction de circuits complexes. Parmi les fonctionnalités de l'API, il y a un meilleur contrôle et plus de possibilités au niveau des opérateurs, ainsi que la possibilité d'insérer directement une\n"
"matrice unitaire."

#: ../../development_strategy.rst:31
msgid "**Provide an API for OpenPulse.** Now that OpenPulse is defined, and the IBM Quantum provider can accept it, we plan to build out the pulse features. These will include a scheduler and tools for building experiments out of pulses. Also included will be tools for mapping between experiments with gates (QASM) to experiments with pulses."
msgstr "**Fournir une API pour OpenPulse.** Lorsque que OpenPulse a été défini, et que le fournisseur de services IBM Quantum a pu le gérer, les fonctionnalités liées aux attributs des impulsions micro-ondes ont été construites. Elles incluent un système d'ordonnancement et les outils permettant de construire des programmes à partir de suites d'impulsions micro-ondes. Elles incluent également les outils\n"
"pour faire correspondre les programmes à des portes quantiques (dans QASM) lorsque l'on travaille avec les impulsions."

#: ../../development_strategy.rst:37
msgid "Qiskit Aer"
msgstr "Qiskit Aer"

#: ../../development_strategy.rst:39
msgid "The first release of Qiskit Aer was made available at the end of 2018. It included C++ implementations of QASM, statevector, and unitary simulators. These are the core to Qiskit Aer, and replace the simulators that existed in Terra. The QASM simulator includes a customizable general (Kraus) noise model, and all simulators include CPU parallelization through the OpenMP library."
msgstr "La première version de Qiskit Aer a été rendue disponible à la fin 2018. Elle incluait une implémentation de QASM en C++, le simulateur vecteurs d'états, et les simulateurs de matrices unitaires. Ces fonctionnalités constituent le coeur de Qiskit Aer, et remplacent les simulateurs que l'on trouvait précédemment dans Terra. Le simulateur QSAM contient un modèle de bruit général et configurable (Kraus), et tous les simulateurs utilisent la mise en parallèle des CPU au travers de la\n"
"bibliothèque OpenMP."

#: ../../development_strategy.rst:45
msgid "In 2019, Aer will be extended in many ways:"
msgstr "En 2019, Aer doit être amélioré de plusieurs manières:"

#: ../../development_strategy.rst:47
msgid "**Optimize simulators.** We are going to start profiling the simulators and work on making them faster. This will include automatic settings for backend configuration and OpenMP parallelization configuration based on the input Qobj and available hardware."
msgstr "**Optimisation des simulateurs.** Nous allons étudier leurs caractéristiques de performances et travailler à les rendre plus rapides. Cela passera par des paramétrages automatiques pour la configuration des plateformes d'execution ainsi que par l'utilisation de la parallèlisation de OpenMP en fonction de l'entrée Qobj et des matériels disponibles."

#: ../../development_strategy.rst:50
msgid "**Develop additional simulator backends.** We will include several approximate simulator backends that are more efficient for specific subclasses of circuits, such as the T-gate simulator, which works on Clifford and T gates (with low T-depth), and a stabilizer simulator,  which works just on Clifford gates."
msgstr "**Développement de plateformes de simulation additionnelles.** Nous ajouterons plusieurs plateformes de simulation qui seront plus efficaces pour des classes spécifiques de circuits, comme par exemple le simulateur de porte T, qui fonctionne sur les portes de Clifford et les portes T (avec une faible profondeur T), ainsi q'un simulateur stabilisateur qui fonctionne seulement sur les portes de\n"
"Clifford."

#: ../../development_strategy.rst:54
msgid "**Add noise approximation tools.** We plan to add noise approximation tools to mapping general (Kraus) noise models to approximate noise model that may be implemented on an approximate backends (for example only mixed Clifford and reset errors in the noise model)."
msgstr "**Ajout d'outils d'approximation de bruit.** Nous planifions d'ajouter des outils d'approximation de bruit pour faire correspondre les modèles généraux de bruit (Krause) à des modèles de bruit qui pourront être implémentés sur des plateformes (comme par exemple un modèle de bruit avec seulement un mélange d'erreurs de Clifford et de remise à zéro)."

#: ../../development_strategy.rst:59
msgid "Qiskit Ignis"
msgstr "Qiskit Ignis"

#: ../../development_strategy.rst:61
msgid "This year, we are going to release the first version of Qiskit Ignis. The goal of Ignis is to be a set of tools for characterization of errors, improving gates, and enhancing computation in the presence of noise. Examples of these tools include optimal control, dynamical decoupling, and error mitigation."
msgstr "Cette année il est prévu de mettre en ligne la première version de Qiskit Ignis. Le but d'Ignis est d'être un ensemble d'outils permettant de caractériser les erreurs, d'améliorer les gates et de faire progresser les capacités de calcul en présence de bruit. Il s'agira par exemple d'outils comme le contrôle optimal, le découplage dynamique et la mitigation d'erreurs."

#: ../../development_strategy.rst:67
msgid "In 2019, Ignis will include tools for:"
msgstr "En 2019, Ignis inclura des outils pour :"

#: ../../development_strategy.rst:69
msgid "quantum state/process tomography"
msgstr "la tomographie d'états et de processus"

#: ../../development_strategy.rst:71
msgid "randomized benchmarking over different groups"
msgstr "la comparaison randomisée sur différents groupes"

#: ../../development_strategy.rst:73
msgid "optimal control (e.g., pulse shaping)"
msgstr "le contrôle optimal (mise en forme d'impulsion micro-onde)"

#: ../../development_strategy.rst:75
msgid "dynamical decoupling"
msgstr "le découplage dynamique"

#: ../../development_strategy.rst:77
msgid "circuit randomization"
msgstr "la randomisation de circuits"

#: ../../development_strategy.rst:79
msgid "error mitigation (to improve results for quantum chemistry experiments)"
msgstr "la mitigation des erreurs (afin d'améliorer les résultats sur des calculs\n"
"quantique dans le domaine de la chimie)"

#: ../../development_strategy.rst:82
msgid "Qiskit Aqua"
msgstr "Qiskit Aqua"

#: ../../development_strategy.rst:84
msgid "Aqua is an open-source library of quantum algorithms and applications, introduced in June 2018. As a library of quantum algorithms, Aqua comes with a rich set of quantum algorithms of general applicability—such as VQE, QAOA, Grover's Search, Amplitude Estimation and Phase Estimation—and domain-specific algorithms-such as the Support Vector Machine (SVM) Quantum Kernel and Variational algorithms, suitable for supervised learning.  In addition, Aqua includes algorithm-supporting components, such as optimizers, variational forms, oracles, Quantum Fourier Transforms, feature maps, multiclass classification extension algorithms, uncertainty problems, and random distributions. As a framework for quantum applications, Aqua provides support for Chemistry (released separately as the Qiskit Chemistry component), as well as Artificial Intelligence (AI), Optimization and Finance.  Aqua is extensible across multiple domains, and has been designed and structured as a framework that allows researchers to contribute their own implementations of new algorithms and algorithm-supporting components."
msgstr "Aqua est une bibliothèque open-source d'algorithmes et d'applications quantique introduite en 2018. En tant que telle elle contient un vaste ensemble d'algorithmes d'usage général (tels que VQE, QAOA, recherche de Grover, estimation d'amplitude, estimation de phase), ansi que des algorithmes spécifiques par domaines tels que des SVM (Support Vector Machine), Quantum Kernel, et algorithmes variationnels qui se prêtent bien à l'apprentissage machine supervisé. De plus, Aqua contient des composants pour supporter les autres algorithmes, comme des optimiseurs, des formes variationnelles, des oracles, des transformées de Fourrier quantiques, des répartitions de caractéristiques, des algorithmes d'extension de classification à plusieurs classes, des problèmes d'incertitudes, et des distributions aléatoires. En tant qu'environnement logiciel pour les applications quantiques, Aqua fournit du support pour le domaine de la Chimie (lui même fourni fourni dans Qiskit sous la forme d'un composant \"Qiskit Chemistry\"), ou ceux de l'IA (Intelligence Artificielle), l'optimisation ou la finance. Aqua est extensible à de nombreux\n"
"domaines, et à été conçu et structuré comme un environnement supportant les chercheurs dans leur implémentation de nouveau algorithmes ou de composants."

#: ../../development_strategy.rst:98
msgid "Over the course of 2019, we are planning to enrich Aqua as follows:"
msgstr "Au cours de l'année 2019 il est prévu d'enrichir Aqua de la manière suivante :"

#: ../../development_strategy.rst:100
msgid "We will include several new quantum algorithms, such as Deutsch-Jozsa, Simon's, Bernstein-Vazirani, and Harrow, Hassidim, and Lloyd (HHL)."
msgstr "Nous ajouterons de nombreux nouveaux algorithmes tels que Deutsch-Josza,\n"
"Simon, Bernstein-Vazirani, et Harrow Hassidim and Lloyd (HHL)."

#: ../../development_strategy.rst:103
msgid "We will improve the performance of quantum algorithms on top of both simulators and real hardware."
msgstr "Nous améliorerons la performance des algorithmes quantiques à la fois sur les simulateurs et sur les vraies machines."

#: ../../development_strategy.rst:105
msgid "We will provide better support for execution on real quantum hardware."
msgstr "Nous apporterons un meilleur support à l'execution sur les machines réelles."

#: ../../development_strategy.rst:106
msgid "We will increase the set of problems supported by the AI, Optimization and Finance applications of Aqua."
msgstr "Nous augmenterons l'ensemble des problèmes supportés par les applications de Aqua dans les domaines de l'IA, de l'optimisation et des finances."

#: ../../development_strategy.rst:110
msgid "Summary"
msgstr "En résumé"

#: ../../development_strategy.rst:112
msgid "These are examples of just some of the work we will be focusing on in the next 12 months. We will continuously adapt the plan based on feedback. Please follow along and let us know what you think!"
msgstr "Ce sont des exemples d'une partie du travail sur lequel nous allons nous concentrer durant les 12 prochains mois. Ce plan sera ajusté en permanence en fonction des retours es utilisateurs. Continuez à nous suivre et à nous faire savoir ce que vous en pensez !"

#: ../../development_strategy.rst:119
msgid "Versioning"
msgstr "Gestion des Versions"

#: ../../development_strategy.rst:121
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has it's own releases and versions some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Le projet Qiskit est constitué de plusieurs éléments couvrant différentes fonctionnalités. Chacun des éléments a son utilité et peut être utilisé de manière indépendante, mais pour faciliter les choses nous fournissons une source et un meta-package servant de point d'entrée et permettant d'installer tous les\n"
"éléments en une seule fois. Il s'agit de simplifier le processus d'installation et d'offrir une interface unique aux utilisateurs. Cependant dans la mesure ou chacun des éléments a ses propres versions, il faut apporter un minimum d'attention lorsque l'on gère les différentes versions de chacun des éléments. Ce document souligne les lignes directrices à observer pour gérer les différentes versions des éléments, et le meta-package."

#: ../../development_strategy.rst:131
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "Pour la suite de ce guide, la nomenclature standard de la gestion de version sémantique est la suivante ``Majeure.Mineure.Correctif`` pour référencer les différentes composantes du numéro de version. Par exemple si le numéro de version est ``0.7.1``, alors la version majeure est ``0``, la version mineure est ``7``, et le niveau de correctif est ``1``."

#: ../../development_strategy.rst:138
msgid "Meta-package Version"
msgstr "Version du Meta-package"

#: ../../development_strategy.rst:140
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "La version du meta-package de Qiskit est une valeur indépendante qui est déterminée par les versions de chacun des éléments qui le constituent. A chaque fois que la mise mise à jour d'un élément est publiée (ou qu'un élément est ajouté), la définition du contenu du méta-package sera mise à jour et sa version sera changée. Les calendriers de mise à jours seront coordonnés pour s'assurer que les publications du méta-package sont consistantes avec les mise à jour des éléments."

#: ../../development_strategy.rst:148
msgid "Adding New Elements"
msgstr "Ajout de nouveaux éléments"

#: ../../development_strategy.rst:150
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "Lorsqu'un élément de Qiskit est mis à jour ou ajouté et qu'il modifie les dépendances,\n"
"nous augmentons la version **Mineure** du meta-package."

#: ../../development_strategy.rst:153
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and it's version is ``0.7.4``. Then we release a new element ``qiskit-ignis`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "Par exemple supposons que le meta-package suit deux éléments ``qiskit-aer``et ``qiskit-terra`` et que sa version est ``0.7.4``. Puis nous publions le nouvel élément ``qiskit-ignis`` que nous voulons aussi suivre dans le meta-package, alors nous passons la version du meta-package à ``0.8.0``."

#: ../../development_strategy.rst:161
msgid "Patch Version Increases"
msgstr "Incrément des version de correction"

#: ../../development_strategy.rst:163
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release we need also bump the requirement in the setup.py and then increase the patch version of the meta-package."
msgstr "Lorsqu'un élément de Qiskit déjà suivi dans le méta-package fait l'objet d'une modification pour corriger des problèmes, alors les exigences doivent apparaître dans le fichier setup.py et cela va incrémenter la version du méta-package."

#: ../../development_strategy.rst:168
msgid "For example, if the meta-package is tracking 3 elements ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, and ``qiskit-ignis==0.1.4`` with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase it's patch version and release, becoming ``0.9.7``."
msgstr "Par exemple, supposons que le méta-package suit 3 éléments ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, et ``qiskit-ignis==0.1.4`` à la version ``0.9.6``. Lorsque qu'une correction sera apportée à qiskit-terra pour corriger un problème, ce dernier passera à la version ``0.8.2``, le méta-package sera également incrémenté et son niveau deviendra ``0.9.7``."

#: ../../development_strategy.rst:174
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "De plus, il peut arriver de manière occasionnelle qu'il soit nécéssaire de changer le méta-package lui même pour corriger des problèmes. Quand cette situation survient nous changeons sa version pour pouvoir la différencier de celle qui a des problèmes même si les niveaux des composants n'ont pas changé. Les anciens niveaux ne sont pas supprimés de pypi, il suffit de recharger la nouvelle version."

#: ../../development_strategy.rst:183
msgid "Minor Version Increases"
msgstr "Incrément des version Mineures"

#: ../../development_strategy.rst:185
msgid "Besides adding a new element to the meta-package the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "En plus du cas ou un élément est ajouté au méta-package, son niveau de version mineure doit être incrémenté lorsque que l'un de ses composants a une augmentation de version mineure."

#: ../../development_strategy.rst:189
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "Par exemple supposons que le meta-package suit les 2 éléments ``qiskit-terra==0.7.0`` et ``qiskit-aer==0.1.1``, et que sa version courante est ``0.7.5``. Lorsque la version de ``qiskit-aer`` passe à ``0.2.0`` alors la version du méta-package va devoir passer à ``0.8.0``."

#: ../../development_strategy.rst:196
msgid "Major Version Increases"
msgstr "Incrément des version majeures"

#: ../../development_strategy.rst:198
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now all the elements still have a major version number component of ``0`` and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1`` then the meta-package version should not increase the major version."
msgstr "La version majeure est gérée de manière un peu différente des autres composantes constituant la gestion des version, lesquelles sont modifiées selon les changement de version des composants. La version majeure n'est changée que lors d'un changement de version de tous les composants (du moins avant la version 1.0.0). Actuellement tous les composants on un niveau de majeur ``0``et tant qu'ils ne seront pas tous marqués comme ayant atteint une version stable (donc a une version majeure ``>=1``) alors le méta-package ne peut pas passer à la version majeure suivante."

#: ../../development_strategy.rst:206
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr ""

#: ../../development_strategy.rst:211
msgid "Qiskit Element Requirement Tracking"
msgstr ""

#: ../../development_strategy.rst:213
msgid "While not strictly related to the meta-package and Qiskit versioning how we track the element versions in the meta-package's requirements list is important. Each element listed in the setup.py should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr ""

#: ../../development_strategy.rst:225
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr ""

#: ../../development_strategy.rst:228
msgid "It is also worth pointing out that the order we install the elements is critically important too. ``pip`` does not have a real dependency solver which means the installation order matters. So if there are overlapping requirements versions between elements or dependencies between elements we need to ensure that the order in the requirements list installs everything as expected. If the order needs to be change for some install time incompatibility it should be noted clearly."
msgstr ""

#: ../../development_strategy.rst:238
msgid "Module Status"
msgstr ""

#: ../../development_strategy.rst:240
msgid "Qiskit is developing so fast that is it is hard to keep all different parts of the API supported for various versions. We do our best and we use the rule that for one minor version update, for example 0.6 to 0.7, we will keep the API working with a deprecated warning. Please don’t ignore these warnings. Sometimes there are cases in which this can’t be done and for these in the release history we will outline these in great details."
msgstr ""

#: ../../development_strategy.rst:248
msgid "This being said as we work towards Qiskit 1.0 there are some modules that have become stable and the table below is our attempt to label them"
msgstr ""

#: ../../development_strategy.rst:254
msgid "Modules"
msgstr ""

#: ../../development_strategy.rst:257
msgid "Name"
msgstr ""

#: ../../development_strategy.rst:257
msgid "status"
msgstr ""

#: ../../development_strategy.rst:257
msgid "Note"
msgstr ""

#: ../../development_strategy.rst:259
msgid "assembler"
msgstr ""

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:295 ../../development_strategy.rst:297
#: ../../development_strategy.rst:299
msgid "stable"
msgstr ""

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:295 ../../development_strategy.rst:299
msgid "completed in version 0.9"
msgstr ""

#: ../../development_strategy.rst:261
msgid "circuit"
msgstr ""

#: ../../development_strategy.rst:261 ../../development_strategy.rst:265
#: ../../development_strategy.rst:279 ../../development_strategy.rst:285
#: ../../development_strategy.rst:291 ../../development_strategy.rst:293
msgid "unstable"
msgstr ""

#: ../../development_strategy.rst:263
msgid "compiler"
msgstr ""

#: ../../development_strategy.rst:265
msgid "converters"
msgstr ""

#: ../../development_strategy.rst:267
msgid "dagcircuit"
msgstr ""

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
#: ../../development_strategy.rst:281 ../../development_strategy.rst:283
#: ../../development_strategy.rst:287
msgid "remove"
msgstr ""

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
msgid "will be part of circuits"
msgstr ""

#: ../../development_strategy.rst:269
msgid "extensions"
msgstr ""

#: ../../development_strategy.rst:271 ../../development_strategy.rst:275
msgid "ignis.characterization"
msgstr ""

#: ../../development_strategy.rst:273
msgid "ignis.mitigation"
msgstr ""

#: ../../development_strategy.rst:277
msgid "providers"
msgstr ""

#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:297
msgid "completed in version 0.7"
msgstr ""

#: ../../development_strategy.rst:279
msgid "pulse"
msgstr ""

#: ../../development_strategy.rst:281
msgid "qasm"
msgstr ""

#: ../../development_strategy.rst:281
msgid "passer location to be determined"
msgstr ""

#: ../../development_strategy.rst:283
msgid "qobj"
msgstr ""

#: ../../development_strategy.rst:283 ../../development_strategy.rst:287
msgid "moved into the provider"
msgstr ""

#: ../../development_strategy.rst:285
msgid "quantum_info"
msgstr ""

#: ../../development_strategy.rst:287
msgid "result"
msgstr ""

#: ../../development_strategy.rst:289
msgid "schemas"
msgstr ""

#: ../../development_strategy.rst:291
msgid "tests"
msgstr ""

#: ../../development_strategy.rst:293
msgid "tools"
msgstr ""

#: ../../development_strategy.rst:293
msgid "various elements to be removed"
msgstr ""

#: ../../development_strategy.rst:295
msgid "transpiler"
msgstr ""

#: ../../development_strategy.rst:297
msgid "validation"
msgstr ""

#: ../../development_strategy.rst:299
msgid "visualization"
msgstr ""

#: ../../development_strategy.rst:303 ../../development_strategy.rst:339
msgid "Providers"
msgstr "Providers (fournisseurs de service)"

#: ../../development_strategy.rst:305
msgid "There are three providers that come with the default installation of Qiskit"
msgstr ""

#: ../../development_strategy.rst:308
msgid "Basic Aer Provider"
msgstr ""

#: ../../development_strategy.rst:310
msgid "This provider simulates ideal quantum circuits and has three backends. As Aer becomes more stable and can work on any operating system this provider will be removed."
msgstr "Ce provider simule des circuits quantiques idéaux et dispose de trois environnements\n"
"d'exécution (backends). Au fur et à mesure que Aer deviendra plus stable et pourra s'exécuter\n"
"sur différents systèmes d'exploitations, ce provider sera supprimé."

#: ../../development_strategy.rst:315
msgid "Aer Provider"
msgstr ""

#: ../../development_strategy.rst:317
msgid "This is a more advance simulator that is written in C++. It runs faster than Basic Aer and also allows you to add noise to your circuits. This allow you to explore what happens to your circuits for realistic models of the experiments and design experiments that might be more resilient to the noise in today’s quantum computers."
msgstr "Il s'agit d'un simulateur avancé, écrit en C++. Il est plus performant que Basic Aer et permet en outre d'ajouter du bruit dans vos circuits. Ceci permet d'étudier ce qu'il se passe pour vos circuits lorsqu'ils sont soumis à des modèles de bruit réalistes et ainsi de les rendre plus résilients aux erreurs dans les ordinateurs quantiques dont nous disposons aujourd'hui."

#: ../../development_strategy.rst:324
msgid "IBM Quantum Provider"
msgstr ""

#: ../../development_strategy.rst:326
msgid "This provider gives you access to real experiments. You will need an IBM Quantum Experience account to use it.  It also has an online HPC simulator that can be used. It is a hosted version of the Aer Provider."
msgstr ""

#: ../../development_strategy.rst:332
msgid "Community Extensions"
msgstr ""

#: ../../development_strategy.rst:334
msgid "Qiskit has been designed with modularity in mind. It is extensible in many different ways; on the page, we highlight the ways in which the Qiskit community has engaged with Qiskit and developed extensions and packages on top of it."
msgstr ""

#: ../../development_strategy.rst:341
msgid "The Qiskit base provider is an entity that provides access to a group of different backends (for example, backends available through IBM Quantum). It interacts with those backends to do many things: find out which ones are available, retrieve an instance of a particular backend, get backend properties and configurations, and handling running and working with jobs."
msgstr ""

#: ../../development_strategy.rst:348
msgid "Additional providers"
msgstr ""

#: ../../development_strategy.rst:350
msgid "**Decision diagram-based quantum simulator**"
msgstr ""

#: ../../development_strategy.rst
msgid "- **Organization:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"
msgstr "**Organisation:** Johannes Kepler University, Linz, Austria (Alwin Zulehner et Robert Wille)"

#: ../../development_strategy.rst
msgid "- **Description:** A local provider which allows Qiskit to use decision diagram-based quantum simulation"
msgstr ""

#: ../../development_strategy.rst
msgid "- **Qiskit Version:** 0.7"
msgstr ""

#: ../../development_strategy.rst
msgid "- **More info:**  `Webpage at JKU <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>`__"
msgstr ""

#: ../../development_strategy.rst:361
msgid "**Quantum Inspire**"
msgstr ""

#: ../../development_strategy.rst
msgid "- **Organization:** QuTech-Delft"
msgstr "- **Organisation:** QuTech-Delft"

#: ../../development_strategy.rst
msgid "- **Description:** A provider for the Quantum Inspire backend"
msgstr ""

#: ../../development_strategy.rst
msgid "- **More info:** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `GitHub <https://github.com/QuTech-Delft/quantuminspire>`__."
msgstr ""

#: ../../development_strategy.rst:371
msgid "Transpiler"
msgstr "Transpileur"

#: ../../development_strategy.rst:373
msgid "Circuit optimization is at the heart of making quantum computing feasible on actual hardware. A central component of Qiskit is the transpiler, which is a framework for manipulating quantum circuits according to certain transformations (known as transpiler passes). The transpiler enables users to create customized sets of passes, orchestrated by a pass manager, to transform the circuit according to the rules specified by the passes. In addition, the transpiler architecture is designed for modularity and extensibility, enabling Qiskit users to write their own passes, use them in the pass manager, and combine them with existing passes. In this way, the transpiler architecture opens up the door for research into aggressive optimization of quantum circuits."
msgstr ""

#: ../../development_strategy.rst:385
msgid "Additional passes"
msgstr ""

#: ../../development_strategy.rst:387
msgid "**t|ket〉 optimization & routing pass**"
msgstr ""

#: ../../development_strategy.rst
msgid "- **Organization:** Cambridge Quantum Computing"
msgstr ""

#: ../../development_strategy.rst
msgid "- **Description:** Transpiler pass for circuit optimization and mapping to backend using CQC's t|ket〉compiler."
msgstr ""

#: ../../development_strategy.rst
msgid "- **More info:** `Tutorial Notebook <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `GitHub <https://github.com/CQCL/pytket>`__."
msgstr ""

#: ../../development_strategy.rst:397
msgid "Tools"
msgstr ""

#: ../../development_strategy.rst:399
msgid "Extending Qiskit with new tools and functionality is an important part of building a community. These tools can be new visualizations, slack integration, Jupyter extensions and much more."
msgstr "L'extension de Qiskit avec de nouveaux outils et fonctionnalités est une pièce majeure dans la construction d'une communauté. Ces outils peuvent être de nouvelles méthodes de visualisation, une intégration avec slack, des extensions de Juypter et bien d'autres choses."

#: ../../development_strategy.rst:404
msgid "Additional Tools"
msgstr ""

#: ../../development_strategy.rst:405
msgid "**OpenControls library**"
msgstr "**Bibliothèque OpenControls**"

#: ../../development_strategy.rst
msgid "- **Organization:** Q-CTRL"
msgstr "- **Organisation:** Q-CTRL"

#: ../../development_strategy.rst
msgid "- **Description:** Library of quantum control pulses derived from the open literature."
msgstr ""

#: ../../development_strategy.rst
msgid "- **More info:**  `GitHub <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL website <https://q-ctrl.com/products/open-controls/>`__"
msgstr ""

