msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-01-22 14:06\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9418\n"
"Language: fr_FR\n"

#: ../../qc_intro.rst:9
msgid "Quantum computing in a nutshell"
msgstr "Le calcul quantique en bref"

#: ../../qc_intro.rst:11
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, and optimization; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "L'informatique quantique représente un nouveau paradigme dans le calcul qui utilise les principes fondamentaux de la mécanique quantique pour effectuer les calculs.  Si vous lisez ceci, vous avez sans aucun doute entendu que la promesse du calcul quantique réside dans la possibilité de réaliser efficacement un certain nombre de de tâches telles que la factorisation en nombres premiers , la simulation quantique et certains problème d'optimisation; des calculs qui dont la taille dépasse les capacités des plus grands d'ordinateurs classiques."

#: ../../qc_intro.rst:18
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`superposition <qc-intro-superposition>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "La puissance de l'informatique quantique repose sur deux pierres angulaires de la mécanique quantique, à savoir la :ref:`superposition d'état <qc-intro-superposition>` et :ref:`l'intrication <qc-intro-entanglement>` qui mettent en évidence certains aspects de la dualité onde-particule. Qiskit est un environnement de développement (SDK) permettant de réaliser des calculs quantiques qui utilisent ces principes de mécanique quantique en utilisant le langage des :ref:`circuits quantiques <qc-intro-circuits>`. Ces circuits sont constitués de portes quantiques, d'instructions et de logique de contrôle classique, et ils permettent d'exprimer des algorithmes et des applications complexes pour être exécutés sur un ordinateur quantique.  A la base, Qiskit est un moteur quantique de construction, d'optimisation et d'exécution. Les algorithmes et les applications qui sont construites par dessus tirent parti des circuits quantiques, souvent de concert avec les ressources informatiques classiques, pour résoudre des problèmes d'optimisation, de chimie quantique, de physique, d'apprentissage automatique et de finance.  Dans ce qui suit, nous donnons un bref aperçu de l'informatique quantique et de la façon dont Qiskit est utilisé à chaque étape.  Les lecteurs intéressés sont orientés vers des documents plus détaillés afin d'obtenir de plus amples renseignements."

#: ../../qc_intro.rst:37
msgid "Superposition"
msgstr "Superposition"

#: ../../qc_intro.rst:39
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as **superpositions** (or superposition states) and allow for representing, and processing, exponentially many logical states simultaneously."
msgstr "Comme un ordinateur classique, un ordinateur quantique fonctionne avec des bits.  Cependant, alors que les bits classiques ne peuvent être trouvés que dans les états 0 et 1, un bit quantique, ou un qubit, peut représenter les valeurs 0 et 1, ou des combinaisons linéaires des deux. Ces combinaisons linéaires sont connues sous le nom de **superpositions** (ou états de superposition) et permettent de représenter et de traiter de façon exponentielle de nombreux états logiques simultanément."

#: ../../qc_intro.rst:45
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing the principle of superposition along with interference to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "Pour voir comment cette ressource est utilisée dans le calcul quantique, nous nous tournons d'abord vers un analogue classique: l'annulation du bruit. L'annulation du bruit, comme on le trouve dans les écouteurs annulant le bruit ambiant par exemple, est réalisée en employant le principe de superposition avec l'interférence pour réduire l'amplitude du bruit non désiré en générant un ton de même fréquence et amplitude, mais déphasé d'une valeur de :math:`\\pi` (ou tout autre entier impair de :math:`\\pi`)."

#: ../../qc_intro.rst:56
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "Annulation approximative d'un signal sonore par un ton d'amplitude presque égale et décalé par une phase de :math:`\\sim \\pi`."

#: ../../qc_intro.rst:59
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unincumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "Comme indiqué ci-dessus, lorsque la différence de phase est proche d'un multiple impair de :math:`\\pi`, la superposition des deux ondes entraîne une interférence, et une sortie qui est significativement réduite par rapport à l'original. Le résultat est le signal d'intérêt non encombré par le bruit. Bien que ce traitement soit effectué par des circuits numériques, l'amplitude et la phase sont des variables continues qui ne peuvent jamais être parfaitement appariés, ce qui entraîne une correction incomplète."

#: ../../qc_intro.rst:66
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "Un calcul général sur un ordinateur quantique procède de la même manière que l'annulation du bruit. Pour commencer, on prépare une superposition de tous les états de calcul possibles. Ceci est ensuite utilisé comme entrée dans un  :ref:`circuit quantique <qc-intro-circuits>` qui interfère sélectivement les composantes de la superposition selon un algorithme prescrit. Ce qui reste après l'annulation des amplitudes et des phases relatives de l'état d'entrée est la solution au calcul effectué par le circuit quantique."

#: ../../qc_intro.rst:76
msgid "Quantum computation as an interference generation process."
msgstr "Calcul quantique en tant que processus de génération d'interférence."

#: ../../qc_intro.rst:81
msgid "Entanglement"
msgstr "Intrication"

#: ../../qc_intro.rst:83
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr "Le deuxième principe de la mécanique quantique que le calcul quantique peut utiliser est le phénomène d'**intrication**.  L'intrication fait référence à des états de plus d'un qubit (ou particules en général) dans lesquels l'état combiné des qubits contient plus d'informations que les qubits ne le font indépendamment. La très grande majorité des états quantiques multiqubits sont intriqués et représentent une ressource précieuse.  Par exemple, les états intriqués entre les qubits peuvent être utilisés pour la téléportation quantique, où un état intriqué partagé de deux qubits peut être manipulé pour transférer des informations d'un qubit à un autre, quelle que soit la proximité physique relative des qubits. Les états intriqués, en tant qu'états naturels des systèmes quantiques, sont également importants dans des disciplines telles que la chimie quantique et la simulation quantique où la ou les solutions prennent souvent la forme d'états multiqubit intriqués.  On peut aussi utiliser des états quantiques très intriqués de plusieurs qubits pour, par exemple, générer des nombres aléatoires certifiés. Il y a même un `module Qiskit <https://qiskit-rng.readthedocs.io/en/latest/>`_ pour faire cela !"

#: ../../qc_intro.rst:101
msgid "Quantum circuits"
msgstr "Circuits quantiques"

#: ../../qc_intro.rst:103
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "Les algorithmes et les applications qui utilisent les principes de la mécanique quantique peuvent être écrits facilement et efficacement dans la langue des **circuits quantiques**. Un circuit quantique est une routine de calcul consistant en des opérations quantiques cohérentes sur des données quantiques, telles que celles qui sont détenues en qubits, et des calculs classiques en temps réel. Chaque ligne horizontale ou fil dans un circuit représente un qubit, avec l'extrémité gauche du fil étant les données quantiques initiales, et la droite étant les données quantiques finales générées par le calcul du circuit quantique. Les opérations sur les qubits peuvent être placées sur ces fils et sont représentées par des boîtes."

#: ../../qc_intro.rst:115
msgid "Quantum state teleportation circuit revisited."
msgstr "Le circuit de téléportation d'état quantique revisité."

#: ../../qc_intro.rst:117
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`superposition <qc-intro-superposition>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "Les circuits quantiques permettent à un ordinateur quantique d'utiliser des informations classiques et de produire une solution classique, en utilisant des principes quantiques tels que :ref:`superposition <qc-intro-superposition>` et :ref:`intrication <qc-intro-entanglement>` pour effectuer le calcul."

#: ../../qc_intro.rst:122
msgid "A typical quantum algorithm workflow consists of:"
msgstr "Un algorithme quantique typique consiste en :"

#: ../../qc_intro.rst:124
msgid "The problem we want to solve,"
msgstr "Le problème que nous voulons résoudre,"

#: ../../qc_intro.rst:125
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "Un algorithme classique qui génère une description d'un circuit quantique,"

#: ../../qc_intro.rst:126
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "Le circuit quantique qui doit être exécuté sur du matériel quantique,"

#: ../../qc_intro.rst:127
msgid "And the output classical solution to the problem that it produces."
msgstr "Et la solution classique de sortie au problème qu'elle produit."

#: ../../qc_intro.rst:129
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamand (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate non-classical superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit ot another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract enough information about a qubit's state, including the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr "Les portes quantiques forment les opérations primitives sur les données quantiques. Les portes quantiques représentent des transformations réversibles préservant les données quantiques stockées en qubits. Ces transformations \"unitaires\" représentent la mécanique quantique qui est au coeur d'un circuit quantique. Certaines portes telles que :math:`X` (également écrite comme :math:`\\oplus`) et :math:`CX` ont des analogues classiques tels que les opérations bit-flip et :math:`XOR` respectivement, mais ce n'est pas toujours le cas. La porte Hadamard (:math:`H`) et les rotations paramétrées :math:`rX(\\theta)` et :math:`rY(\\theta)`, génèrent des états de superposition non classiques, tandis que les portes telles que :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, et :math:`T` produisent des phases qui peuvent être utilisées pour des interférences. Les portes à deux bits comme la porte :math:`CX` sont utilisées pour générer une intrication entre les paires de qubits, ou pour \"expulser\" la phase d'un qubit veers un autre. Contrairement aux portes, des opérations comme \"la mesure\", représenté par le symbole d'un compteur dans une boîte avec une ligne se connectant à un fil \"cible\", ont pour but d'extraire suffisamment d'informations à propos de l'état d'un qubit, y compris la phase, pour être capable de le représenter comme un bit classique et d'écrire ce bit classique sur le fil cible (souvent un fil entièrement classique dans un dispositif de lecture). C'est la façon typique de passer les informations des données quantiques vers un appareil classique. Notez qu'avec seulement :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, et des portes de mesure, qui constitue un ensemble de portes universel, nous pouvons construire n’importe quel circuit quantique, y compris ceux qui calculent efficacement la dynamique de n’importe quel système physique dans la nature."

#: ../../qc_intro.rst:148
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr "Certaines charges de travail contiennent une séquence étendue de circuits quantiques entrelacés de calculs classiques, par exemple des algorithmes quantiques variationnels exécutent des circuits quantiques dans une boucle d'optimisation. Pour ces charges de travail, la performance du système augmente considérablement si les circuits quantiques sont paramétrés, et les transitions entre l'exécution du circuit et le calcul classique non courant sont rendues efficaces. Par conséquent, nous définissons **le calcul proche du temps réel** pour faire référence à des calculs avec des algorithmes qui font une utilisation répétée de circuits quantiques avec du matériel développé pour accélérer le temps de calcul. En temps quasi-réel, le calcul classique se produit sur une échelle deque la cohérence du calcul quantique. Contrairement au Contraste ceci avec **calcul en temps réel**, où le calcul classique se produit dans le temps de décohérence de l'appareil quantique."

#: ../../qc_intro.rst:159
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit. With only a few lines of code, is it possible to construct complex circuits like the one above"
msgstr "La construction de circuits quantiques complexes avec un effort minimal est au cœur de Qiskit. Avec seulement quelques lignes de code, est-il possible de construire des circuits complexes comme celui ci-dessus"

#: ../../qc_intro.rst:185
msgid "that support a rich feature set of operations, and can be passed to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators."
msgstr "qui prennent en charge un ensemble de fonctionnalités riches et peuvent être passés à une gamme :ref:`d'ordinateurs quantiques <qc-intro-computers>` ou de simulateurs classiques."

#: ../../qc_intro.rst:191
msgid "Quantum computers"
msgstr "Ordinateurs quantiques"

#: ../../qc_intro.rst:197
msgid "A view inside the IBM Quantum System One."
msgstr "Une vue à l'intérieur du système Quantum IBM One."

#: ../../qc_intro.rst:199
msgid "Quantum computers that are programmed using quantum circuits are called **gate-based quantum computers**. Such systems can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr "Les ordinateurs quantiques programmés à l'aide de circuits quantiques sont appelés **calculateurs quantiques à portes**. De tels systèmes peuvent être construits à partir de n'importe quelle technologie quantique qui permet de définir des éléments de qubits, et de mettre en œuvre des opérations de portes simples et multiqubits avec une haute fidélité. À l'heure actuelle, les architectures basées sur les circuits supraconducteurs, les ions piégés, les quantum-dots à semi-conducteurs, les photons et les atomes neutres sont activement développées, et beaucoup sont accessibles aux utilisateurs sur Internet. Qiskit est agnostique par rapport à l'architecture sous-jacente d'un système quantique donné, et peut compiler un circuit quantique pour correspondre à la topologie à la porte d'entrée d'un appareil quantique, cartographier les instructions du circuit dans l'ensemble de porte native de l'appareil, et optimiser le circuit quantique qui en résulte pour une fidélité accrue."

#: ../../qc_intro.rst:210
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr "Comme dans le cas de l'exemple d'annulation du bruit ci-dessus, l'amplitude et la phase des qubits sont des degrés de liberté continus sur lesquels les opérations ne peuvent jamais être effectuées exactement. Ces erreurs de portes, ainsi que le bruit de l'environnement dans lequel réside un ordinateur quantique, peuvent conspirer à ruiner un calcul s'ils ne sont pas pris en compte dans le processus de compilation, et peuvent nécessiter des procédures d'atténuation supplémentaires afin d'obtenir une sortie de haute fidélité sur les systèmes quantiques actuels sensibles au bruit. Qiskit est capable de prendre en compte une large gamme de mesures d'étalonnage des dispositifs (voir figure ci-dessous) dans sa stratégie de compilation, et peut sélectionner un ensemble optimal de qubits sur lequel exécuter un circuit quantique donné. De plus, Qiskit héberge une collection de techniques d'atténuation du bruit pour l'extraction d'une représentation fidèle d'une sortie de circuits quantiques."

#: ../../qc_intro.rst:224
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "Topologie et taux d'erreur pour le système IBM Quantum *ibmq_manhattan*."

#: ../../qc_intro.rst:228
msgid "Where to go from here"
msgstr "A présent où aller ?"

#: ../../qc_intro.rst:230
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr "Nous espérons avoir donné au lecteur un aperçu de ce que le calcul quantique a à offrir et l'envie d'aller plus loin. Dans ce cas, il y a plusieurs ressources qui peuvent vous intéresser :"

#: ../../qc_intro.rst:234
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`Getting started with Qiskit <getting_started.html>`_ - Démarrer avec Qiskit."

#: ../../qc_intro.rst:236
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_: une introduction progressive et basée sur la physique quantique écrite par certains des fondateurs du calcul quantique et qui utilise le composeur interactif de circuits quantiques."

#: ../../qc_intro.rst:240
msgid "`Qiskit textbook <https://qiskit.org/textbook>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr "`Qiskit textbook <https://qiskit.org/textbook>`_ : Un supplément de cours universitaire de pour les algorithmes et calculs quantiques basé sur Qiskit."

