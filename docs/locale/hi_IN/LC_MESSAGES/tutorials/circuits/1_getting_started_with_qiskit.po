msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 18:47+0000\n"
"PO-Revision-Date: 2021-07-13 19:42\n"
"Last-Translator: \n"
"Language-Team: Hindi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: hi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/1_getting_started_with_qiskit.po\n"
"X-Crowdin-File-ID: 9114\n"
"Language: hi_IN\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:9
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:89
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:135
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:284
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:320
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:372
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:450
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:522
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:556
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:591
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:664
msgid "{"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:611
msgid "\"cells\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:4
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:28
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:55
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:105
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:144
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:151
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:169
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:184
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:209
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:236
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:262
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:294
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:330
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:337
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:387
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:394
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:470
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:502
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:532
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:566
msgid "\"cell_type\": \"markdown\", \"metadata\": {}, \"source\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:7
msgid "\"# Getting Started with Qiskit\\n\", \"\\n\", \"Here, we provide an overview of working with Qiskit.  The fundamental package of Qiskit is Terra that provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the [quantum circuit](https://en.wikipedia.org/wiki/Quantum_circuit). A basic workflow using Qiskit consists of two stages: **Build** and **Execute**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Execute** that allows you to run them on different backends.  After the jobs have been run, the data is collected and postprocessed depending on the desired output.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:10
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:25
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:37
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:52
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:70
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:86
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:102
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:111
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:124
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:132
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:141
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:148
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:166
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:181
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:188
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:206
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:218
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:233
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:245
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:259
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:267
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:285
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:291
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:300
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:317
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:327
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:334
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:341
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:373
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:384
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:391
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:416
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:447
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:467
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:476
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:499
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:506
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:523
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:529
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:536
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:553
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:563
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:570
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:589
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:601
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:611
msgid "]"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:11
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:26
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:38
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:53
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:71
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:103
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:112
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:142
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:149
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:167
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:182
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:189
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:207
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:219
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:234
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:246
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:260
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:268
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:292
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:301
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:328
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:335
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:342
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:385
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:392
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:417
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:468
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:477
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:500
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:507
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:530
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:537
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:564
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:571
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:593
msgid "}, {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:13
msgid "\"cell_type\": \"code\", \"execution_count\": 1, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:17
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:44
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:77
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:118
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:195
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:225
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:252
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:274
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:307
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:348
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:423
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:483
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:513
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:543
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:577
msgid "\"ExecuteTime\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:17
msgid "\"end_time\": \"2019-08-10T11:37:44.387267Z\", \"start_time\": \"2019-08-10T11:37:41.934365Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:19
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:46
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:79
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:91
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:137
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:197
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:227
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:254
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:276
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:286
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:309
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:322
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:350
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:374
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:425
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:452
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:485
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:515
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:524
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:545
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:558
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:579
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:605
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:612
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:652
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:662
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:666
msgid "}"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:20
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:47
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:198
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:228
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:255
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:486
msgid "}, \"outputs\": [], \"source\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:23
msgid "\"import numpy as np\\n\", \"from qiskit import *\\n\","
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:31
msgid "\"## Circuit Basics <a name='basics'></a>\\n\", \"\\n\", \"\\n\", \"### Building the circuit\\n\", \"\\n\", \"The basic element needed for your first program is the QuantumCircuit.  We begin by creating a `QuantumCircuit` comprised of three qubits.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:40
msgid "\"cell_type\": \"code\", \"execution_count\": 2, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:44
msgid "\"end_time\": \"2019-08-10T11:37:44.392806Z\", \"start_time\": \"2019-08-10T11:37:44.389673Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:50
msgid "\"# Create a Quantum Circuit acting on a quantum register of three qubits\\n\", \"circ = QuantumCircuit(3)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:58
msgid "\"After you create the circuit with its registers, you can add gates (\\\"operations\\\") to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state\\n\", \"\\n\", \"$$|\\\\psi\\\\rangle = \\\\left(|000\\\\rangle+|111\\\\rangle\\\\right)/\\\\sqrt{2}.$$\\n\", \"\\n\", \"To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to $|0\\\\rangle$. To make the GHZ state, we apply the following gates:\\n\", \"- A Hadamard gate $H$ on qubit 0, which puts it into the superposition state $\\\\left(|0\\\\rangle+|1\\\\rangle\\\\right)/\\\\sqrt{2}$.\\n\", \"- A controlled-Not operation ($C_{X}$) between qubit 0 and qubit 1.\\n\", \"- A controlled-Not operation between qubit 0 and qubit 2.\\n\", \"\\n\", \"On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above.\\n\", \"\\n\", \"In Qiskit, operations can be added to the circuit one by one, as shown below.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:73
msgid "\"cell_type\": \"code\", \"execution_count\": 3, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:77
msgid "\"end_time\": \"2019-08-10T11:37:44.401502Z\", \"start_time\": \"2019-08-10T11:37:44.395545Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:80
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:125
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:277
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:310
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:351
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:426
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:516
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:546
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:580
msgid "}, \"outputs\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:85
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:131
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:316
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:446
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:552
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:588
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:600
msgid "\"data\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:84
msgid "\"text/plain\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:85
msgid "\"<qiskit.circuit.instructionset.InstructionSet at 0x2452282f708>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:87
msgid "}, \"execution_count\": 3, \"metadata\": {}, \"output_type\": \"execute_result\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:92
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:138
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:287
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:323
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:375
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:453
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:525
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:559
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:606
msgid "], \"source\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:94
msgid "\"# Add a H gate on qubit 0, putting this qubit in superposition.\\n\", \"circ.h(0)\\n\", \"# Add a CX (CNOT) gate on control qubit 0 and target qubit 1, putting\\n\", \"# the qubits in a Bell state.\\n\", \"circ.cx(0, 1)\\n\", \"# Add a CX (CNOT) gate on control qubit 0 and target qubit 2, putting\\n\", \"# the qubits in a GHZ state.\\n\", \"circ.cx(0, 2)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:108
msgid "\"## Visualize Circuit <a name='visualize'></a>\\n\", \"\\n\", \"You can visualize your circuit using Qiskit `QuantumCircuit.draw()`, which plots the circuit in the form found in many textbooks.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:114
msgid "\"cell_type\": \"code\", \"execution_count\": 28, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:118
msgid "\"end_time\": \"2019-08-10T11:37:44.762773Z\", \"start_time\": \"2019-08-10T11:37:44.403727Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:120
msgid "}, \"scrolled\": true, \"tags\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:123
msgid "\"nbsphinx-thumbnail\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:129
msgid "\"image/png\": \"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\\n\", \"text/plain\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:131
msgid "\"<Figure size 358.792x204.68 with 1 Axes>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:133
msgid "}, \"execution_count\": 28, \"metadata\": {}, \"output_type\": \"execute_result\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:140
msgid "\"circ.draw('mpl')\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:147
msgid "\"In this circuit, the qubits are put in order, with qubit zero at the top and qubit two at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left).\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:154
msgid "\"<div class=\\\"alert alert-block alert-info\\\">\\n\", \"\\n\", \"\\n\", \"When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are $n$ qubits, and qubit $j$ is labeled as $Q_{j}$. Qiskit uses an ordering in which the $n^{\\\\mathrm{th}}$ qubit is on the <em><strong>left</strong></em> side of the tensor product, so that the basis vectors are labeled as  $Q_{n-1}\\\\otimes \\\\cdots  \\\\otimes  Q_1\\\\otimes Q_0$.\\n\", \"\\n\", \"For example, if qubit zero is in state 0, qubit 1 is in state 0, and qubit 2 is in state 1, Qiskit would represent this state as $|100\\\\rangle$, whereas many physics textbooks would represent it as $|001\\\\rangle$.\\n\", \"\\n\", \"This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X ($C_{X}$) operation with qubit 0 being the control and qubit 1 being the target as\\n\", \"\\n\", \"$$C_X = \\\\begin{pmatrix} 1 & 0 & 0 & 0 \\\\\\\\  0 & 0 & 0 & 1 \\\\\\\\ 0 & 0 & 1 & 0 \\\\\\\\ 0 & 1 & 0 & 0 \\\\\\\\\\\\end{pmatrix}.$$\\n\", \"\\n\", \"</div>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:172
msgid "\"## Simulating circuits using Qiskit Aer <a name='simulation'></a>\\n\", \"\\n\", \"Qiskit Aer is our package for simulating quantum circuits. It provides many different backends for doing a simulation. There is also a basic, Python only, implementation called `BasicAer` in Terra that can be used as a drop-in replacement for `Aer` in the examples below.\\n\", \"\\n\", \"### Statevector backend\\n\", \"\\n\", \"The most common backend in Qiskit Aer is the `statevector_simulator`. This simulator returns the quantum \\n\", \"state, which is a complex vector of dimensions $2^n$, where $n$ is the number of qubits \\n\", \"(so be careful using this as it will quickly get too large to run on your machine).\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:187
msgid "\"To run the above circuit using the statevector simulator, first you need to import Aer and then set the backend to `statevector_simulator`.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:191
msgid "\"cell_type\": \"code\", \"execution_count\": 5, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:195
msgid "\"end_time\": \"2019-08-10T11:37:44.768493Z\", \"start_time\": \"2019-08-10T11:37:44.765280Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:201
msgid "\"# Import Aer\\n\", \"from qiskit import Aer\\n\", \"\\n\", \"# Run the quantum circuit on a statevector simulator backend\\n\", \"backend = Aer.get_backend('statevector_simulator')\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:212
msgid "\"Now that we have chosen the backend, it's time to compile and run the quantum circuit. In Qiskit we provide the `execute` function for this. ``execute`` returns a ``job`` object that encapsulates information about the job submitted to the backend.\\n\", \"\\n\", \"\\n\", \"<div class=\\\"alert alert-block alert-info\\\">\\n\", \"<b>Tip:</b> You can obtain the above parameters in Jupyter. Simply place the text cursor on a function and press Shift+Tab.\\n\", \"</div>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:221
msgid "\"cell_type\": \"code\", \"execution_count\": 6, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:225
msgid "\"end_time\": \"2019-08-10T11:37:44.799134Z\", \"start_time\": \"2019-08-10T11:37:44.770995Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:231
msgid "\"# Create a Quantum Program for execution \\n\", \"job = execute(circ, backend)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:239
msgid "\"When you run a program, a job object is made that has the following two useful methods: \\n\", \"`job.status()` and `job.result()`, which return the status of the job and a result object, respectively.\\n\", \"\\n\", \"<div class=\\\"alert alert-block alert-info\\\">\\n\", \"<b>Note:</b> Jobs run asynchronously, but when the result method is called, it switches to synchronous and waits for it to finish before moving on to another task.\\n\", \"</div>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:248
msgid "\"cell_type\": \"code\", \"execution_count\": 7, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:252
msgid "\"end_time\": \"2019-08-10T11:37:44.804647Z\", \"start_time\": \"2019-08-10T11:37:44.801681Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:258
msgid "\"result = job.result()\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:265
msgid "\"The results object contains the data and Qiskit provides the method \\n\", \"`result.get_statevector(circ)` to return the state vector for the quantum circuit.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:270
msgid "\"cell_type\": \"code\", \"execution_count\": 8, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:274
msgid "\"end_time\": \"2019-08-10T11:37:44.814182Z\", \"start_time\": \"2019-08-10T11:37:44.808905Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:280
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:354
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:519
msgid "\"name\": \"stdout\", \"output_type\": \"stream\", \"text\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:283
msgid "\"[0.707+0.j 0.   +0.j 0.   +0.j 0.   +0.j 0.   +0.j 0.   +0.j 0.   +0.j\\n\", \" 0.707+0.j]\\n\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:289
msgid "\"outputstate = result.get_statevector(circ, decimals=3)\\n\", \"print(outputstate)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:297
msgid "\"Qiskit also provides a visualization toolbox to allow you to view these results.\\n\", \"\\n\", \"Below, we use the visualization function to plot the real and imaginary components of the state density matrix $\\\\rho$.\\n\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:303
msgid "\"cell_type\": \"code\", \"execution_count\": 9, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:307
msgid "\"end_time\": \"2019-08-10T11:37:45.605645Z\", \"start_time\": \"2019-08-10T11:37:44.817291Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:314
msgid "\"image/png\": \"\\n\", \"text/plain\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:316
msgid "\"<Figure size 1080x360 with 2 Axes>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:318
msgid "}, \"execution_count\": 9, \"metadata\": {}, \"output_type\": \"execute_result\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:325
msgid "\"from qiskit.visualization import plot_state_city\\n\", \"plot_state_city(outputstate)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:333
msgid "\"### Unitary backend\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:340
msgid "\"Qiskit Aer also includes a `unitary_simulator` that works _provided all the elements in the circuit are unitary operations_. This backend calculates the $2^n \\\\times 2^n$ matrix representing the gates in the quantum circuit. \""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:344
msgid "\"cell_type\": \"code\", \"execution_count\": 10, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:348
msgid "\"end_time\": \"2019-08-10T11:37:45.626148Z\", \"start_time\": \"2019-08-10T11:37:45.607840Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:357
msgid "\"[[ 0.707+0.j  0.707-0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j\\n\", \"   0.   +0.j  0.   +0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j\\n\", \"   0.707+0.j -0.707+0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.707+0.j  0.707-0.j  0.   +0.j  0.   +0.j\\n\", \"   0.   +0.j  0.   +0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.707+0.j -0.707+0.j\\n\", \"   0.   +0.j  0.   +0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.707+0.j  0.707-0.j\\n\", \"   0.   +0.j  0.   +0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.707+0.j -0.707+0.j  0.   +0.j  0.   +0.j\\n\", \"   0.   +0.j  0.   +0.j]\\n\", \" [ 0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j\\n\", \"   0.707+0.j  0.707-0.j]\\n\", \" [ 0.707+0.j -0.707+0.j  0.   +0.j  0.   +0.j  0.   +0.j  0.   +0.j\\n\", \"   0.   +0.j  0.   +0.j]]\\n\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:377
msgid "\"# Run the quantum circuit on a unitary simulator backend\\n\", \"backend = Aer.get_backend('unitary_simulator')\\n\", \"job = execute(circ, backend)\\n\", \"result = job.result()\\n\", \"\\n\", \"# Show the results\\n\", \"print(result.get_unitary(circ, decimals=3))\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:390
msgid "\"### OpenQASM backend\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:397
msgid "\"The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by _measuring_ each qubit (usually in the computational $|0\\\\rangle, |1\\\\rangle$ basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits. \\n\", \"\\n\", \"For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state\\n\", \"\\n\", \"$$|\\\\psi\\\\rangle = (|000\\\\rangle +|111\\\\rangle)/\\\\sqrt{2},$$\\n\", \"\\n\", \"and let $xyz$ denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, $x$ would correspond to the outcome on qubit 2, $y$ to the outcome on qubit 1, and $z$ to the outcome on qubit 0. \\n\", \"\\n\", \"<div class=\\\"alert alert-block alert-info\\\">\\n\", \"<b>Note:</b> This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order.\\n\", \"</div>\\n\", \"\\n\", \"Recall the probability of obtaining outcome $xyz$ is given by\\n\", \"\\n\", \"$$\\\\mathrm{Pr}(xyz) = |\\\\langle xyz | \\\\psi \\\\rangle |^{2}$$\\n\", \"\\n\", \"and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2.\\n\", \"\\n\", \"To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:419
msgid "\"cell_type\": \"code\", \"execution_count\": 11, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:423
msgid "\"end_time\": \"2019-08-10T11:37:45.840681Z\", \"start_time\": \"2019-08-10T11:37:45.627937Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:442
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:584
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:596
msgid "\"text/html\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:431
msgid "\"<pre style=\\\"word-wrap: normal;white-space: pre;background: #fff0;line-height: 1.1;font-family: &quot;Courier New&quot;,Courier,monospace\\\">        ┌───┐           ░ ┌─┐      \\n\", \"q_0: |0>┤ H ├──■────■───░─┤M├──────\\n\", \"        └───┘┌─┴─┐  │   ░ └╥┘┌─┐   \\n\", \"q_1: |0>─────┤ X ├──┼───░──╫─┤M├───\\n\", \"             └───┘┌─┴─┐ ░  ║ └╥┘┌─┐\\n\", \"q_2: |0>──────────┤ X ├─░──╫──╫─┤M├\\n\", \"                  └───┘ ░  ║  ║ └╥┘\\n\", \" c_0: 0 ═══════════════════╩══╬══╬═\\n\", \"                              ║  ║ \\n\", \" c_1: 0 ══════════════════════╩══╬═\\n\", \"                                 ║ \\n\", \" c_2: 0 ═════════════════════════╩═\\n\", \"                                   </pre>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:444
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:586
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:598
msgid "], \"text/plain\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:446
msgid "\"<qiskit.visualization.text.TextDrawing at 0x24522e135c8>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:448
msgid "}, \"execution_count\": 11, \"metadata\": {}, \"output_type\": \"execute_result\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:455
msgid "\"# Create a Quantum Circuit\\n\", \"meas = QuantumCircuit(3, 3)\\n\", \"meas.barrier(range(3))\\n\", \"# map the quantum measurement to the classical bits\\n\", \"meas.measure(range(3), range(3))\\n\", \"\\n\", \"# The Qiskit circuit object supports composition using\\n\", \"# the addition operator.\\n\", \"qc = circ + meas\\n\", \"\\n\", \"#drawing the circuit\\n\", \"qc.draw()\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:473
msgid "\"This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits. \\n\", \"\\n\", \"To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate $\\\\mathrm{Pr}(000)$), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``execute`` function, via the ``shots`` keyword.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:479
msgid "\"cell_type\": \"code\", \"execution_count\": 12, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:483
msgid "\"end_time\": \"2019-08-10T11:37:45.868074Z\", \"start_time\": \"2019-08-10T11:37:45.842666Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:489
msgid "\"# Use Aer's qasm_simulator\\n\", \"backend_sim = Aer.get_backend('qasm_simulator')\\n\", \"\\n\", \"# Execute the circuit on the qasm simulator.\\n\", \"# We've set the number of repeats of the circuit\\n\", \"# to be 1024, which is the default.\\n\", \"job_sim = execute(qc, backend_sim, shots=1024)\\n\", \"\\n\", \"# Grab the results from the job.\\n\", \"result_sim = job_sim.result()\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:505
msgid "\"Once you have a result object, you can access the counts via the function `get_counts(circuit)`. This gives you the _aggregated_ binary outcomes of the circuit you submitted.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:509
msgid "\"cell_type\": \"code\", \"execution_count\": 13, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:513
msgid "\"end_time\": \"2019-08-10T11:37:45.873600Z\", \"start_time\": \"2019-08-10T11:37:45.869929Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:522
msgid "\"{'000': 510, '111': 514}\\n\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:527
msgid "\"counts = result_sim.get_counts(qc)\\n\", \"print(counts)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:535
msgid "\"Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function `plot_histogram`, which allows you to view the outcomes. \""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:539
msgid "\"cell_type\": \"code\", \"execution_count\": 14, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:543
msgid "\"end_time\": \"2019-08-10T11:37:45.991815Z\", \"start_time\": \"2019-08-10T11:37:45.875518Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:550
msgid "\"image/png\": \"\\n\", \"text/plain\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:552
msgid "\"<Figure size 504x360 with 1 Axes>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:554
msgid "}, \"execution_count\": 14, \"metadata\": {}, \"output_type\": \"execute_result\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:561
msgid "\"from qiskit.visualization import plot_histogram\\n\", \"plot_histogram(counts)\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:569
msgid "\"The estimated outcome probabilities $\\\\mathrm{Pr}(000)$ and  $\\\\mathrm{Pr}(111)$ are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``execute`` function and see how the estimated probabilities change.\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:573
msgid "\"cell_type\": \"code\", \"execution_count\": 32, \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:577
msgid "\"end_time\": \"2019-08-10T11:38:18.277518Z\", \"start_time\": \"2019-08-10T11:38:18.224481Z\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:585
msgid "\"<h3>Version Information</h3><table><tr><th>Qiskit Software</th><th>Version</th></tr><tr><td>Qiskit</td><td>0.14.0</td></tr><tr><td>Terra</td><td>0.11.0</td></tr><tr><td>Aer</td><td>0.3.4</td></tr><tr><td>Ignis</td><td>0.2.0</td></tr><tr><td>Aqua</td><td>0.6.1</td></tr><tr><td>IBM Q Provider</td><td>0.4.4</td></tr><tr><th>System information</th></tr><tr><td>Python</td><td>3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]</td></tr><tr><td>OS</td><td>Windows</td></tr><tr><td>CPUs</td><td>2</td></tr><tr><td>Memory (Gb)</td><td>7.9987335205078125</td></tr><tr><td colspan='2'>Tue Dec 10 15:25:10 2019 Eastern Standard Time</td></tr></table>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:588
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:600
msgid "\"<IPython.core.display.HTML object>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:590
#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:602
msgid "}, \"metadata\": {}, \"output_type\": \"display_data\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:597
msgid "\"<div style='width: 100%; background-color:#d5d9e0;padding-left: 10px; padding-bottom: 10px; padding-right: 10px; padding-top: 5px'><h3>This code is a part of Qiskit</h3><p>&copy; Copyright IBM 2017, 2019.</p><p>This code is licensed under the Apache License, Version 2.0. You may<br>obtain a copy of this license in the LICENSE.txt file in the root directory<br> of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.<p>Any modifications or derivative works of this code must retain this<br>copyright notice, and modified files need to carry a notice indicating<br>that they have been altered from the originals.</p></div>\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:608
msgid "\"import qiskit.tools.jupyter\\n\", \"%qiskit_version_table\\n\", \"%qiskit_copyright\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:613
msgid "], \"metadata\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:615
msgid "\"anaconda-cloud\": {}, \"celltoolbar\": \"Tags\", \"kernelspec\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:618
msgid "\"display_name\": \"Python 3\", \"language\": \"python\", \"name\": \"python3\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:621
msgid "}, \"language_info\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:624
msgid "\"codemirror_mode\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:624
msgid "\"name\": \"ipython\", \"version\": 3"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:626
msgid "}, \"file_extension\": \".py\", \"mimetype\": \"text/x-python\", \"name\": \"python\", \"nbconvert_exporter\": \"python\", \"pygments_lexer\": \"ipython3\", \"version\": \"3.7.3\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:633
msgid "}, \"varInspector\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:637
msgid "\"cols\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:636
msgid "\"lenName\": 16, \"lenType\": 16, \"lenVar\": 40"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:639
msgid "}, \"kernels_config\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:644
msgid "\"python\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:642
msgid "\"delete_cmd_postfix\": \"\", \"delete_cmd_prefix\": \"del \", \"library\": \"var_list.py\", \"varRefreshCmd\": \"print(var_dic_list())\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:646
msgid "}, \"r\": {"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:648
msgid "\"delete_cmd_postfix\": \") \", \"delete_cmd_prefix\": \"rm(\", \"library\": \"var_list.r\", \"varRefreshCmd\": \"cat(var_dic_list()) \""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:653
msgid "}, \"types_to_exclude\": ["
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:655
msgid "\"module\", \"function\", \"builtin_function_or_method\", \"instance\", \"_Feature\""
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:660
msgid "], \"window_display\": false"
msgstr ""

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:663
msgid "}, \"nbformat\": 4, \"nbformat_minor\": 1"
msgstr ""

