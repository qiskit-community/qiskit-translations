msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:25\n"
"Last-Translator: \n"
"Language-Team: Greek\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: el\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/5_quantum_volume.po\n"
"X-Crowdin-File-ID: 9140\n"
"Language: el_GR\n"

#: ../../tutorials/noise/5_quantum_volume.ipynb:10
msgid "This page was generated from `tutorials/noise/5_quantum_volume.ipynb`__."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:9
#: ../../tutorials/noise/5_quantum_volume.ipynb:864
msgid "Quantum Volume"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:12
msgid "Introduction"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:14
msgid "**Quantum Volume (QV)** is a method to verify device performance and a metric to quantify the computational power of a quantum device. The method is based on the paper “Validating quantum computers using randomized model circuits” (https://arxiv.org/abs/1811.12926)."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:16
msgid "This notebook gives an example for how to use the ``ignis.verification.quantum_volume`` module. This particular example shows how to run up to depth 6 quantum volume circuits and will run them using the noisy Aer simulator."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:49
msgid "Select the Parameters of the QV Run"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:51
msgid "In this example we have 6 qubits Q0,Q1,Q3,Q5,Q7,Q10. We are going to look at subsets up to the full set."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:75
msgid "Generate QV sequences"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:77
msgid "We generate the quantum volume sequences. We start with a small example (so it doesn’t take too long to run)."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:109
msgid "As an example, we print the circuit corresponding to the first QV sequence. Note that the ideal circuits are run on the first n qubits (where n is the number of qubits in the subset)."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:346
msgid "Simulate the ideal circuits"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:357
msgid "The quantum volume method requires that we know the ideal output for each circuit, so use the statevector simulator in Aer to get the ideal result."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:554
msgid "Next, load the ideal results into a quantum volume fitter:"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:577
msgid "Define the noise model"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:588
msgid "We define a noise model for the simulator. To simulate decay, we add depolarizing error probabilities to the CNOT and U gates."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:616
msgid "Execute on Aer simulator"
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:618
msgid "We can execute the QV sequences either using a Qiskit Aer Simulator (with some noise model) or using an IBMQ provider, and obtain a list of results, ``result_list``."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:815
msgid "Load the experimental data into the fitter. The data will keep accumulating if this is re-run (unless the fitter is re-instantiated)."
msgstr ""

#: ../../tutorials/noise/5_quantum_volume.ipynb:866
msgid "List statistics for each depth. For each depth list if the depth was successful or not and with what confidence interval. For a depth to be successful the confidence interval must be > 97.5%."
msgstr ""

