msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-21 23:44\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: bn_BN\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "এই পৃষ্ঠাটি `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__ -থেকে বানানো হয়েছে।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "এয়ার (Aer) সিমুলেটরে ত্রুটি-যুক্ত ভি.কিউ.ই"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "এই নোটবুকটিতে দেখানো হয়েছে যে কিভাবে একটি নির্দিষ্ট ত্রুটি (noise) নকশার(simulation) জন্যে `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` ব্যবহার করে একটি সিমুলেশন চালানো যায়। নানান প্রকৃতির ত্রুটি (noise) এর ফলাফল দেখতে এর সাহায্য নেওয়া যেতে পারে। Aer দ্বারা আপনারা নিজের মনের মতন noise মডেল বানাতে পারেন অথবা একটি আসল কোয়ান্টাম যন্ত্রের বৈশিষ্টের ত্রুটি (noise) মডেল বানাতে পারো। যেহেতু এই নোটবুক এর মূল উদ্দেশ্য ত্রুটিযুক্ত ভি কিউ ই( VQE)-র পরিচালনা করে দেখানো তাই দ্বিতীয় পদ্ধতিটি ব্যবহার করা রয়েছে এখানে।."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/documentation/apidoc/ignis.html>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "`Qiskit Ignis <https://qiskit.org/documentation/apidoc/ignis.html>`___ একটি নয়েসি সিমুলেশন বা একটি বাস্তব কোয়ান্টাম ডিভাইসে চলার সময় পরিমাপ ত্রুটি প্রশমিত করার সমাধান প্রদান করে। এই সমাধানটি ``QuantumInstance`` মডিউল দ্বারা লিভারেজ করা হয়েছে যা এটি ব্যবহার করে যে কোনও অ্যালগরিদমকে স্বয়ংক্রিয়ভাবে পরিমাপের দূষণ বা ত্রুটি প্রশমন প্রয়োগ করতে দেয়।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "Qiskit Aer নয়েজ মডেল সম্পর্কে আরও তথ্য অনলাইনে পাওয়া যাবে `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__,, এছাড়াও `building noise models <../simulators/3_building_noise_models.ipynb>`__ এর জন্য টিউটোরিয়াল আছে ।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "কিসকিট ইগনিসে পরিমাপ ত্রুটি প্রশমনের আরও তথ্য পাওয়া যাবে `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>` __ এর টিউটোরিয়ালে।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit."
msgstr "VQE দিয়ে এখানে ত্রুটিপূর্ণ সিমুলেশন দেখানো হবে, হ্যামিল্টোনিয়ানের ন্যূনতম (গ্রাউন্ড স্টেট ) শক্তি খুঁজে পাওয়া যাবে, কিন্তু কৌশলটি কিস্কিটের যেকোনো কোয়ান্টাম অ্যালোগরিদমের ক্ষেত্রে প্রযোজ্য।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Nature, for an H2 molecule, so we can quickly create an Operator."
msgstr "সুতরাং VQE এর জন্য আমাদের ইনপুট হিসাবে একটি কিউবিট অপারেটর প্রয়োজন। এখানে, আবার, আমরা একটি H2 অণুর জন্য Qiskit নেচার দ্বারা গণনা করা পাউলির একটি সেট নেবে, যাতে আমরা দ্রুত একটি অপারেটর তৈরি করতে পারি।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:99
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "যেহেতু উপরের সমস্যাটি এখনও ক্লাসিকভাবে সহজেই ট্র্যাক্টেবল আমরা একটি তথ্যসূত্র (রেফারেন্স) মান গণনা করতে NumPyMinimumEigensolver ব্যবহার করতে পারি যাতে আমরা পরে ফলাফলগুলির তুলনা করতে পারি।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:147
msgid "Performance *without* noise"
msgstr " * ত্রুটি(নয়েস) * ছাড়া কর্মক্ষমতা (পারফরমেন্স)"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:149
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "প্রথমে ফলাফল দেখার জন্য আমরা নয়েজ অ্যাড না করেই সিমুলাটরে একে একবার চালাব। আমি ব্যাকএন্ড এবং QuantumInstance বানিয়ে নিয়েছি, যা ব্যাকএন্ড এর সাথে সাথে বিভিন্ন রান টাইম উপাদান ধরে রাখে। কাজেই যখন আমরা নয়েজযুক্ত ধাপে যাই তখন এভাবে তুলনা করাটা সহজ হয়ে যায়। সুতরাং এখানে নয়েজ বা অন্যকিছু কমানোর কোনই চেষ্টা করা হয়নি যাতে পরের ভি কিউ ই (VQE) সেটাপ এবং চালানো হুবহু একই হয়।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:213
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "আমরা উপরের শক্তির মানগুলো অভিসারের (convergence) সময় সংরক্ষন করেছি, ফলস্বরূপ কি হয়েছে তা আমরা নিম্নোক্ত গ্রাফে দেখতে পাই।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:272
msgid "Performance *with* noise"
msgstr "নয়েজ *সহ* কর্মক্ষমতা"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:274
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr "এখন আমরা নয়েজ যোগ করব। এখানে আমরা আসল ডিভাইস থেকে Aer এর জন্য একটি নয়েজ মডেল তৈরি করব। আপনি চাইলে কাস্টম নয়েজ মডেল তৈরি করে নিতে পারেন কিন্তু সেটা এই নোটবুকের আলোচলনার বাইরে চলে যাবে। যারা এটা করতে চান তাদের জন্য Aer নয়েজ মডেলের বিস্তারিত তথ্যসম্বলিত লিংক উপরে দেওায় আছে। "

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:276
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "প্রথমে আমাদের একটি আসল ব্যাকএন্ড ডিভাইস নিতে হবে তারপর এর ``configuration`` এবং ``properties`` থেকে আমরা ডিভাইসটি খাপ খাওাতে একটি coupling_map এবং নয়েজ মডেল বানিয়ে নিতে পারব। আমরা যখন সিমুলেটরকে সব ম্যাপের প্রাথমিক অবস্থা দিয়ে দিব তখন এটা কিভাবে coupling map বসাতে হয় সেটাও দেখাবে। বি: দ্র: আমরা যদি চাই তাহলে ভ্যারিয়েশনাল অবস্থার জন্য coupling map কে এন্ট্যাঙ্গেলমেন্ট ম্যাপ হিসেবে ব্যবহার করতে পারব।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:278
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:406
msgid "Note: simulation with noise will take longer than without noise."
msgstr "বি: দ্র:  নয়েজমুক্ত সিমুলেশনের চেয়ে নয়েজযুক্ত সিমুলেশন বেশি সময় নেবে।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:280
msgid "Terra Mock Backends:"
msgstr "টেরা মক ব্যাকএন্ডসমূহ (Terra Mock Backends):"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:282
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "আমরা Qiskit Terra তে সংরক্ষিত ডেটা ব্যবহার করে একটা IBM কোয়ান্টাম ডিভাইসের আসল নয়েজ ডেটাকে কাজে লাগাবো। বিশেষ করে এই টিউটোরিয়ালে আমরা ``ibmq_vigo`` ডিভাইসটি ব্যবহার করব।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:402
msgid "Performance *with* noise and measurement error mitigation"
msgstr "নয়েজ *সহ* কর্মক্ষমতা এবং হিসবনিকাশের ত্রূটি লঘুকরন (measurement error mitigation)"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:404
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "এখন আমরা পরিমাপ ত্রুটি দূরীকরণ এর পদ্ধতি যোগ করব যা হিসাবনিকাশের সম্ভাব্যতা বাড়িয়ে দেবে। এখানে হিসাবনিকাশের ত্রুটি কমাতে আমরা ``CompleteMeasFitter`` বাছাই করেছি। গতানুগতিকভাবেই ক্যালিব্রেশন ম্যাট্রিক্সটি প্রতি ৩০ মিনিট অন্তর নিজে নিজে রিফ্রেশ হয়ে নেবে।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:496
msgid "Lets bring the results together here for a summary."
msgstr "এবার সব ফলাফলগুলোকে একসাথে নিয়ে একটি সারমর্ম দেয়া যাক।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:498
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "আমরা প্রথাগত (ক্লাসিক্যাল) ধারাক্রম (অ্যালোগরিদম) ব্যবহার করে একটি তথ্যসূত্র (রেফারেন্স) মান বের করেছিলাম এবং পরবরতিতে qasm সিমুলেটর এ ভি কিউ ই (VQE) চালাতে অগ্রসর হয়েছিলাম। যখন সিমুলেশনটি প্রাথমিক অবস্থায় ছিল (নয়েজমুক্ত) তখন স্যাম্পলিং এর কারনে তথাকথিত শট-ত্রুটি (shot-noise) ছিল - যত বেশী স্যাম্পল নেওয়া হয় শটের সংখ্যা বাড়ালে শট-ত্রুটি তত কমে যায়, কিন্তু শটগুলো তো প্রাথমিকভাবে ১০২৪ এ বসানো ছিল যেটার জন্য আমরা ফলাফলে সামান্য বিচ্যুতি দেখতে পাই।"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:500
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "তারপর আমরা একটি আসল ডিভাইস থেকে সরানো মডেল ব্যবহার করে নয়েজ যোগ করেছি এবং ফলাফল যে প্রভাবিত হতে পারে তা দেখেছি। সর্বোপরি আমরা পরিমাপ দূষণ বা ত্রুটিনিরসন (মিটিগেশন) যোগ করেছি, যা এবার ফলাফলগুলকে কিউবিট পরিমাপের ক্লাসিকাল যন্ত্রপাতিতে গোলমালের প্রভাব কমানোর প্রচেষ্টায় সমন্বয়সাধন করে।"

