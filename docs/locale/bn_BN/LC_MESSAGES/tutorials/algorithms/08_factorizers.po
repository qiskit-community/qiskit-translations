msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-17 13:53+0000\n"
"PO-Revision-Date: 2022-06-17 15:02\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/08_factorizers.po\n"
"X-Crowdin-File-ID: 9508\n"
"Language: bn_BN\n"

#: ../../tutorials/algorithms/08_factorizers.ipynb:10
msgid "This page was generated from `tutorials/algorithms/08_factorizers.ipynb`__."
msgstr "এই পৃষ্ঠাটি `tutorials/algorithms/08_factorizers.ipynb`__ -থেকে নেয়া হয়েছে।"

#: ../../tutorials/algorithms/08_factorizers.ipynb:9
msgid "Shor’s algorithms"
msgstr "Shor এর অ্যালোগরিদম"

#: ../../tutorials/algorithms/08_factorizers.ipynb:11
msgid "Qiskit has an implementation of `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."
msgstr "Qiskit এ `Shor’s অ্যালগরদিম এর প্রতিপাদন আছে <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."

#: ../../tutorials/algorithms/08_factorizers.ipynb:13
msgid "The preceding reference has detailed explanations and build-out of circuits whereas this notebook has examples with the pre-built algorithms in Qiskit that you can use for experimentation and education purposes."
msgstr "এর আগের তথ্যসূত্রগুলিতে বিস্তারিত ব্যাখ্যা এবং বর্তনীর গঠনপ্রণালী আছে, যেখানে এই নোটবুকে Qiskit এর আগের তৈরী করা অ্যালগোরিথমগুলি আছে, যেগুলো আপনি পরীক্ষামূলক কাজে এবং শিক্ষাক্ষেত্রের প্র​য়োজনে ব্যবহার করতে পারেন।"

#: ../../tutorials/algorithms/08_factorizers.ipynb:39
msgid "Shor’s Factoring algorithm"
msgstr "Shor এর উৎপাদকীকরন অ্যালগোরিথম"

#: ../../tutorials/algorithms/08_factorizers.ipynb:41
msgid "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ is one of the most well-known quantum algorithms and finds the prime factors for input integer :math:`N` in polynomial time. The algorithm implementation in Qiskit is simply provided a target integer to be factored and run, as follows:"
msgstr "একটি সর্বাধিক পরিচিত কোয়ান্টাম অ্যালগরিদমগুলোর মধ্যে Shor এর ফ্যাক্টরিং অ্যাল্গরিদম <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ . হল একটি এবং এটি বহুপদী\n"
"সময়ে (polynomial time) :math:`N` এর মৌলিক উৎপাদকগুলি খুজে বের করে। Qiskit এ একটি টার্গেট ইন্টেজার নিয়ে উৎপাদকে বিশ্লেষণ করে যেভাবে অ্যালগরিদমটির প্রতিপাদন করা হয় তা নিম্নরূপ:"

#: ../../tutorials/algorithms/08_factorizers.ipynb:91
msgid "Note: this implementation of Shor’s algorithm uses :math:`4n + 2` qubits, where :math:`n` is the number of bits representing the integer in binary. So in practice, for now, this implementation is restricted to factorizing small integers. Given the above value of N we compute :math:`4n +2` below and confirm the size from the actual circuit."
msgstr "\n"
"বি:দ্র: Shor এর অ্যালগোরিদমের প্রতিপাদনে  :math:`4n + 2` গুলো কিউবিট ব্যাবহার করা হয়, যেখানে :math:`n` হল বাইনারিতে ইন্তেজারের বিটের সংখ্যা। তাই, চর্চার খাতিরে এখন এই প্রতিপাদনটি শুধু ছোট ইন্টেজারগুলোর উৎপাদক বের করতে সীমিত করা হল। N এর আলোচ্য মান বিবেচনা করে আমরা নিম্নে  :math:`4n +2` এর সমাধান করি এবং আসল বর্তনীর আকার নিশ্চিত করি।"

