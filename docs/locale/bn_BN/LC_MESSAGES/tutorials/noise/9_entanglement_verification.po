msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-13 18:47+0000\n"
"PO-Revision-Date: 2021-12-04 13:58\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/9_entanglement_verification.po\n"
"X-Crowdin-File-ID: 9380\n"
"Language: bn_BN\n"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:10
msgid "This page was generated from `tutorials/noise/9_entanglement_verification.ipynb`__."
msgstr "এই পৃষ্ঠাটি `tutorials/noise/9_entanglement_verification.ipynb`__-থেকে বানানো হয়েছে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:9
msgid "Entanglement Verification"
msgstr "এনট্যাঙ্গেলমেন্ট এর প্রতিপাদন"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:12
msgid "Introduction to the GHZ state"
msgstr "GHZ (জি এইচ জেড) অবস্থার ভূমিকা"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:14
msgid "**The Greenberger-Horne-Zeilinger (GHZ)** State is a :math:`n`-qubit entangled state best defined by the following state vector:"
msgstr "**গ্রীনবেরগের-হর্ন-জেলিংয়ের (জি এইচ জেড )** অবস্থা হলো একটি :math:`n`-কিউবিট বিজড়িত (এনট্যাঙ্গেল) অবস্থা যেটিকে এই অবস্থা নির্ণায়ক দিকরাশি (স্টেট ভেক্টর) দিয়ে দেখানো যেতে পারে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:16
msgid "|{\\rm GHZ} \\rangle = \\frac{|0 \\rangle ^{\\otimes n} + |1 \\rangle ^{\\otimes n}}{\\sqrt{2}} , n > 2\n\n"
msgstr ""

#: ../../tutorials/noise/9_entanglement_verification.ipynb:18
msgid "Characterization of the GHZ state is very useful in assessing multi-qubit interactions, whose robustness is key to developing large scale quantum computers."
msgstr "বড় পরিমানে কোয়ান্টাম কম্পিউটারসমূহ বিকাশের মূল চাবিকাঠি হলো বহুকিউবিট মিথস্ক্রিয়ার বলিষ্ঠতা । এই মিথস্ক্রিয়া অধিগত করতে গেলে জি এইচ জেড অবস্থার চরিত্রায়ণ (ক্যারেক্টারাইজেশন) দরকার।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:21
msgid "Characterizing a quantum state"
msgstr "কোয়ান্টাম অবস্থার (স্টেট) চরিত্রাঙ্কন"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:23
msgid "Any mixed quantum state can be identified by a density matrix, defined as :math:`\\rho = \\sum_{i} p_i |\\psi_{i} \\rangle \\langle \\psi_{i}|`, where :math:`|\\psi_{i} \\rangle` are the pure quantum states forming the mixture and :math:`0 < p_i \\le 1`, :math:`\\sum_{i} p_i = 1` are the classical probabilities to be in state :math:`|\\psi_{i} \\rangle`. We denote the pure density matrix of an ideal GHZ State by :math:`\\rho_{p} \\equiv |{\\rm GHZ} \\rangle \\langle {\\rm GHZ}|`. We want to see how close this matrix is to the density matrix of a GHZ State as produced in an experiment, :math:`\\rho_{T}`. One method to quantify this similarity is to calculate the fidelity between the states, :math:`F(\\rho_{p},\\rho_{T})`"
msgstr "যেকোনো মিশ্র কোয়ান্টাম অবস্থা একটি ঘনত্ব ম্যাট্রিক্স দ্বারা চিহ্নিত করা যেতে পারে, যা :math:`\\rho = \\sum_{i} p_i |\\psi_{i} \\rangle \\langle \\psi_{i}|`, হিসাবে সংজ্ঞায়িত করা হয়, যেখানে বিশুদ্ধ কোয়ান্টাম অবস্থা :math:`|\\psi_{i} \\rangle` মিশ্রণ তৈরি করেএবং আমরা :math:`0 < p_i \\le 1`, :math:`\\sum_{i} p_i = 1` ধ্রুপদী (ক্লাসিক্যাল) সম্ভাব্যতা কি অবস্থায় থাকতে হবে :math:`|\\psi_{i} \\rangle` । :math:`\\rho_{p} \\equiv |{\\rm GHZ} \\rangle \\langle {\\rm GHZ}|` দ্বারা একটি আদর্শ GHZ রাজ্যের বিশুদ্ধ ঘনত্বের ম্যাট্রিক্সকে নির্দেশ করি। আমরা দেখতে চাই যে এই ম্যাট্রিক্সটি GHZ রাজ্যের ঘনত্ব ম্যাট্রিক্সের কতটা কাছাকাছি একটি পরীক্ষায় উৎপাদিত হয়েছে, :math:`\\rho_{T}` । এই সাদৃশ্য পরিমাপ করার একটি পদ্ধতি হল রাজ্যের মধ্যে বিশ্বস্ততা গণনা করা, :math:`F(\\rho_{p},\\rho_{T})` ।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:26
msgid "F = \\Big[ Tr \\sqrt{\\sqrt{\\rho_{p}}\\rho_{T}\\sqrt{\\rho_{p}}} \\Big] ^{2}\n\n"
msgstr ""

#: ../../tutorials/noise/9_entanglement_verification.ipynb:28
msgid "The aim of this tutorial is two-fold: we will explore ways in which we can characterize the GHZ state, and ways in which we can use Ignis’ error mitigation tools to increase readout fidelity, regardless of characterization method"
msgstr "এই পাঠসমূহ দ্বারা আমরা দুটো জিনিস পরখ করতে চাই। প্রথমত, জি এইচ জেড স্থিতির চরিত্রায়ন কতভাবে করা সম্ভব। এবং, দ্বিতীয়ত, সেই চরিত্রায়ণ (ক্যারেক্টারাইজেশন) পদ্ধতি নির্বিশেষে কিভাবে আমরা ইগ্নিস -এর ত্রুটি দূরীকরণ যন্ত্রগুলির সাহায্যে রিডআউট বিশ্বস্ততা বাড়াতে পারি।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:30
msgid "Before we go further, let us import everything we will need from basic Qiskit:"
msgstr "এগোনোর আগে মূল Qiskit থেকে আমাদের যাকিছু লাগতে পারে তা আমরা এখানে ইম্পোর্ট বা আনীত করে নেবো।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:62
msgid "The next two functions are from ignis. The first is for the general error mitigation technique, and the second is specifically for quantum tomography"
msgstr "পরের দুটো অন্বয় (ফাংশন) ইগ্নিস থেকে নেওয়া। প্রথমটি সাধারণ ত্রুটি দূরীকরণ পদ্ধতির জন্যে এবং দ্বিতীয়টি বিশেষভাবে কোয়ান্টাম টমোগ্রাফির জন্যে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:85
msgid "The following import from the ``entanglement`` package contains information needed to create, parallelize and analyze GHZ State circuits"
msgstr "GHZ স্টেট সার্কিটগুলি তৈরি, সমান্তরাল এবং বিশ্লেষণের জন্য প্রয়োজনীয় তথ্য ``entanglement`` প্যাকেজ থেকে নিম্নলিখিত গুলি আমদানি করে"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:109
msgid "Preparing a GHZ State"
msgstr "জি এইচ জেড অবস্থা (স্টেট) তৈরি করা"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:111
msgid "Let us first go over how to prepare a GHZ State:"
msgstr "কিভাবে জি এইচ জেড অবস্থা (স্টেট) আমরা তৈরি করতে পারি সেটা আমরা প্রথমে দেখবো:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:113
msgid "Say we have a system of :math:`n` qubits, all prepared in the :math:`|0\\rangle` state:"
msgstr "ধরো আমাদের কাছে :math:`|0\\rangle` অবস্থার (স্টেট) :math:`n` -টি কিউবিট সম্পন্ন একটা সিস্টেম আছে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:115
msgid "|\\psi \\rangle = |00...0\\rangle\n\n"
msgstr ""

#: ../../tutorials/noise/9_entanglement_verification.ipynb:117
msgid "We apply a Hadamard gate to the first qubit: :math:`|0\\rangle \\longrightarrow \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle)`. Our state now looks like:"
msgstr "প্রথম কিউবিট এর ওপরে আমরা হ্যাডামার্ড যুক্তিবর্তনী লাগলে পাই: :math:`|0\\rangle \\longrightarrow \\frac{1}{\\sqrt{2}}(|0\\rangle + |1\\rangle)` । এখুন এই পর্যায়ে আছি আমরা:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:119
msgid "|\\psi \\rangle = \\frac{|00...0\\rangle + |10...0\\rangle}{\\sqrt{2}}\n\n"
msgstr ""

#: ../../tutorials/noise/9_entanglement_verification.ipynb:121
msgid "Applying on this state a sequence of :math:`n-1` CNOT gate between the :math:`n^{th}` and :math:`(n+1)^{th}` qubits for :math:`n = 0 \\ldots n-1` leaves the :math:`n+1` qubit at :math:`|0\\rangle` if the :math:`n^{th}` is in :math:`|0\\rangle`, and at :math:`|1\\rangle` if the :math:`n^{th}` is in :math:`|1\\rangle`, thus creating the GHZ State:"
msgstr "এই অবস্থায় যদি :math:`n^{th}` :math:`|0\\rangle` এ থেকে তাহলে :math:`n^{th}` থেকে :math:`(n+1)^{th}` কিউবিটগুলিতে (এখানে :math:`n = 0 \\ldots n-1`) :math:`n-1` -টা CNOT গেট এর ক্রম প্রয়োগ করলে :math:`n+1` -তম কিউবিট টা :math:`|0\\rangle` এ পরিনত হবে। যদি :math:`n^{th}` টা :math:`|1\\rangle` এ থাকে তবে :math:`n^{th}` :math:`|1\\rangle` এ থাকবে। এইভাবে জি এইচ জেড স্থিতি তৈরি হয়ে যায়:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:123
msgid "|GHZ \\rangle = \\frac{|00...0\\rangle + |11...1\\rangle}{\\sqrt{2}} \\equiv \\frac{|0 \\rangle ^{\\otimes n} + |1 \\rangle ^{\\otimes n}}{\\sqrt{2}}\n\n"
msgstr ""

#: ../../tutorials/noise/9_entanglement_verification.ipynb:125
msgid "The following function creates this “linear” circuit that can measure the GHZ state:"
msgstr "নিম্নলিখিত ফাংশনটি এই \"রৈখিক\" সার্কিট তৈরি করে যা কিনা জি এইচ জেড অবস্থা (স্টেট) পরিমাপ করতে পারে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:202
msgid "Characterization, Part I"
msgstr "চরিত্রায়ণ (ক্যারেক্টারাইজেশন), অধ্যায় ১"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:205
msgid "Multiple Quantum Coherence (MQC)"
msgstr "একাধিক কোয়ান্টাম সমদশা (কোহেরেন্স) (এম. কিউ. সি)"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:207
msgid "Multiple Quantum Coherence (MQC) works by taking the preliminary preparation of an :math:`n` qubit GHZ State, and rotating each of the qubit states around the z axis by a phase :math:`\\phi`. After that, we apply a X gate, i.e., a :math:`\\pi` pulse around the x axis. Then, we apply the inverse of the operations we originally applied to get the GHZ state. In an ideal situation the final state is :math:`|\\psi \\rangle = \\frac{|0 \\rangle ^{\\otimes n} + e^{i n \\phi}|1 \\rangle ^{\\otimes n}}{\\sqrt{2}}`. We can ideally observe the phase collected by projecting :math:`|\\psi \\rangle` onto the state :math:`|0 \\rangle ^{\\otimes n}`. This technique is reminiscent of an echo sequence, and has been shown to substantially improve the fidelity during readout."
msgstr "একাধিক কোয়ান্টাম সমদশা (কোহেরেন্স) (এম.কিউ.সি) একটি প্রাথমিক GHZ অবস্থাতে থাকা :math:`n` কিউবিট নিয়ে প্রত্যেক কিউবিটকে z-অক্ষ বরাবর :math:`\\phi` দশায় ঘুরিয়ে দেয়। এর পর আমরা একটি X গেট (অর্থাৎ x-অক্ষ বরাবর :math:`\\pi` পালস) প্রয়োগ করি। তার পর GHZ অবস্থাতে আসার বিপরীত অপারেশন গুলো সঞ্চালন করি। একটি আদর্শ পরিস্থিতিতে :math:`|\\psi \\rangle = \\frac{|0 \\rangle ^{\\otimes n} + e^{i n \\phi}|1 \\rangle ^{\\otimes n}}{\\sqrt{2}}` -এই স্থিতি পেয়ে থাকি আমরা। :math:`|\\psi \\rangle`কে :math:`|0 \\rangle ^{\\otimes n}` অবস্থাতে তে প্রয়োগ করে আমরা দশা নির্ণয় করতে পারি। এই কৌশলটি প্রতিধ্বনির অনুক্রমের স্মরণীয় এবং এটি দিয়ে রিডআউট চলাকালীন বিশ্বস্ততার যথেষ্ট উন্নতি দেখা যায়।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:210
msgid "The function below creates a linear MQC circuit. As with every circuit from here on, you can change the ``full_measurement`` argument to toggle between full measurement of all qubits or measurement of only the control qubit. Full measurement yields the most accurate results, but for more than 7 qubits, it is recommended to set it to false, and observe only the oscillations between the ``'0'`` and ``'1'`` states."
msgstr "নীচের অন্বয়টি (ফাংশন) একটি রৈখিক এমকিউসি বর্তনী (সার্কিট) তৈরি করে। এখান থেকে প্রতিটি বর্তনী (সার্কিট) আপনি ``full_measurement`` আর্গুমেন্ট ব্যবহার করে সমস্ত কিউবিট গুলির সম্পূর্ণ পরিমাপ বা শুধুমাত্র নিয়ন্ত্রণ কিউবিট পরিমাপের মধ্যে টগল করতে পারেন। সম্পূর্ণ পরিমাপ সবচেয়ে সুনির্দিষ্ট ফলাফল দেয়, তবে ৭টির বেশি কিউবিটের জন্য এটি এটিকে false হিসাবে সেট করার পরামর্শ দেওয়া হয় এবং কেবল ``'0'`` এবং ``'1'`` -এর মধ্যে দোলনগুলি পর্যবেক্ষণ করা উচিত।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:285
msgid "After running experiments on this MQC circuit, we can pick a state to observe oscillations as we sweep :math:`\\phi` from :math:`0` to :math:`2 \\pi`. Our signal in theory should follow :math:`S(\\phi) = \\frac{1}{2}(1+\\cos(n \\phi))`. We then perform a Discrete Fourier Transform (DFT: :math:`I_{v}=(1/N)|\\sum_{\\phi}e^{iv\\phi}S(\\phi)`) to extract the Fidelity of the state, defined by the bounds :math:`2\\sqrt{I_{n}} \\leq F \\leq \\sqrt{I_{0}/2}+ \\sqrt{I_{n}}`; if desired, an actual value for the fidelity can be obtained: :math:`F = \\frac{1}{2}(P_{00...0}+P_{11...1})+\\sqrt{I_{n}})` (arXiv:1905.05720)."
msgstr "এই এমকিউসি সার্কিটের উপর পরীক্ষা-নিরীক্ষার পরে, আমরা :math:`\\phi` কে :math:`0` থেকে :math:`2 \\pi` পর্যন্ত ঠেলে দেয়ার সাথে সাথে দোলনগুলি পর্যবেক্ষণ করার জন্য একটি স্টেট বাছাই করতে পারি। তাত্বিকভাবে আমাদের সিগন্যালটির :math:`S(\\phi) = \\frac{1}{2}(1+cos(n \\phi))` কে অনুসরণ করা উচিত। আমরা তারপরে অবস্থার (স্টেট) বিশ্বস্ততা বের করতে একটি ডিস্ক্রিট ফোরিয়ার ট্রান্সফর্ম (ডিএফটি: :math:`I_{v}=(1/N)|\\Sigma_{\\phi}e^{iv\\phi}S(\\phi)`) হিসেব করি , যা :math:`2\\sqrt{I_{n}} \\leq F \\leq \\sqrt{I_{0}/2}+ \\sqrt{I_{n}}`; সীমানা দ্বারা সংজ্ঞায়িত; তবে ফিডেলিটির জন্য একটি আসল মান পাওয়া যেতে পারে : :math:`F = \\frac{1}{2}(P_{00...0}+P_{11...1})+\\sqrt{I_{n}})` (arXiv:1905.05720)."

#: ../../tutorials/noise/9_entanglement_verification.ipynb:298
msgid "Parity Oscillations"
msgstr "প্যারিটি দোলন (অসিলেশন)"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:300
msgid "The next method we use to characterize the GHZ state is parity oscillations. After preparing a GHZ state, we apply a combination of rotations about the x and y axes to create various superposition states as a function of :math:`\\phi`: :math:`U(\\phi) = \\otimes_{j}^{N} e^{i\\frac{\\pi}{4}(\\cos(\\phi)\\sigma_{x}^{j}+\\sin(\\phi)\\sigma_{y}^{j})}`. We then measure the expectation value :math:`\\langle \\otimes_{j}^{N} \\sigma_{z}^{j} \\rangle_{\\phi}` as a function of :math:`\\phi`, which in theory should lead to parity oscillations between 1 and -1."
msgstr "GHZ অবস্থা (স্টেট) চিহ্নিত করার জন্য আমরা পরবর্তী যে পদ্ধতিটি ব্যবহার করি তা হল প্যারিটি দোলন (অসিলেশন)। একটি GHZ অবস্থা (স্টেট) প্রস্তুত করার পর আমরা x এবং y অক্ষের উপর ঘূর্ণনের সংমিশ্রণ প্রয়োগ করি যাতে :math:`\\phi`: :math:`U(\\phi) = \\otimes_{j}^{N} e^{i\\frac{\\pi}{4}(\\cos(\\phi)\\sigma_{x}^{j}+\\sin(\\phi)\\sigma_{y}^{j})}` -এর অন্বয় (ফাংশন) হিসাবে বিভিন্ন সুপারপজিশন অবস্থা তৈরি হয়। আমরা তারপর প্রত্যাশা মান :math:`\\langle \\otimes_{j}^{N} \\sigma_{z}^{j} \\rangle_{\\phi}`, :math:`\\phi` এর অন্বয় (ফাংশন) হিসেবে পরিমাপ করি যা তাত্ত্বিকভাবে 1 এবং -1 এর মধ্যে প্যারিটি দোলন (অসিলেশন) পরিচালিত করা উচিত।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:303
msgid "The following function generates a circuit which is the Parity Oscillation equivalent of the MQC circuit given above"
msgstr "নীচের ফাংশনটি একটি বর্তনী (সার্কিট) তৈরি করে যা উপরের এমকিউসি বর্তনীর (সার্কিট) প্যারিটি দোলনের (অসিলেশন) সমতুল্য"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:352
msgid "We can obtain fidelity for parity oscillations :math:`S_{\\phi}` from :math:`F = \\frac{1}{2}(P_{00...0}+P_{11...1}+C)`, where :math:`C`, the coherence is defined as :math:`2\\sqrt{I_{n}}`, following the same convention for the DFT as with the MQC method."
msgstr "আমরা :math:`F = \\frac{1}{2}(P_{00...0}+P_{11...1}+C)` থেকে প্যারিটি অসিলেশন (দোলন) :math:`S_{\\phi}`এর জন্য বিশ্বস্ততা অর্জন করতে পারি, যেখানে যেখানে ডিএফটি এর জন্য এমকিউসি এর মতন নিয়ম অনুসরণ করে সমদশা (কোহেরেন্স) :math:`C`কে সংজ্ঞায়িত করা হয় :math:`2\\sqrt{I_{n}}` হিসেবে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:364
msgid "Tomography"
msgstr "টমোগ্রাফি"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:366
msgid "Tomography measures the density matrix by producing many nominally identical states and measuring the state instances in different bases. The ideal result of a GHZ state is four equal density matrix elements at the 4 corners of the tensor-product basis, with all other elements vanishing. Although the fidelity can be readily calculated by this method, the method is slow (requires exponential number of measurements in n), and takes prohibitively long times if n is larger than 7 or so. Nevertheless, we will show below how to perform this method as it is relevant for small numbers of qubits."
msgstr "টমোগ্রাফি অনেক নামমাত্র অভিন্ন অবস্থা (স্টেট) উৎপাদন করে এবং বিভিন্ন ভিত্তিতে (বেসিস) মানের উদাহরণগুলি পরিমাপ করে ঘনত্বের ম্যাট্রিক্স পরিমাপ করে। একটি জি এহচ জেড অবস্থার (স্টেট) আদর্শ ফলাফল হল টেনসর-গুনফল ভিত্তিতে চারটি কোণে চারটি সমান ঘনত্বের ম্যাট্রিক্স উপাদান থাকা, যেখানে অন্য সমস্ত উপাদান অদৃশ্য হয়ে যায়। যদিও এই পদ্ধতি দ্বারা বিশ্বস্ততা সহজেই গণনা করা যায়, তবুও পদ্ধতিটি ধীর গতিতে (n সংখ্যার জন্য সূচকীয় হিসাবের প্রয়োজন), এবং n এর মান ৭ বা তার বেশি হলে এটি অসম্ভব বেশি সময় নেয়। আমরা এই পদ্ধতিটি কীভাবে সম্পাদন করব তা নীচে দেখাব কারণ এটি অল্প সংখ্যক কিউবিটের জন্য প্রাসঙ্গিক।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:379
msgid "Parallelizing circuits"
msgstr "বর্তনী (সার্কিট) সমান্তরাল করা"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:381
msgid "The above “linear” circuits are good to perform simulations, but what do we do when we use real devices, where the system can have an arbitrary topology and various errors? We are specifically targeting real hardware here, not just Aer simulation. One technique to reduce real-hardware effects is to parallelize the CNOT gates and thus create a shorter-depth circuit. This can be hugely beneficial efficiency wise, and fidelity wise. The class ``BConfig`` from the module ``parallelize`` does exactly this."
msgstr "উপরের \"রৈখিক\" বর্তনী (সার্কিট) সিমুলেশনের জন্য ভাল, তবে আমরা যখন সত্যিকারের ডিভাইসগুলি ব্যবহার করি, যেখানে সিস্টেমে যথেচ্ছ টপোলজি এবং তাতে বিভিন্ন ত্রুটি থাকতে পারে। আমরা এখানে এয়ার সিমুলেশন নয়, বিশেষত আসল হার্ডওয়্যারটিকে লক্ষ্য করছি। আসল হার্ডওয়্যার এর প্রভাবগুলি হ্রাস করার একটি কৌশল হ'ল CNOT যুক্তিবর্তনীসমূহ (গেইট) সমান্তরাল করা এবং এভাবে একটি অল্প-গভীরতার সার্কিট তৈরি করা। দক্ষতা এবং বিশ্বস্ততার হিসেবে এটি অত্যন্ত উপকারী হতে পারে। মডিউল ``parallelize`` থেকে ``BConfig`` শ্রেণিটি ঠিক এই কাজটি করে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:384
msgid "First we must configure the optimal backend we want to use. We will consider a simulation backend, ``'ibmq_qasm_simulator'``, disguised as a real device, ``'ibmq_16_melbourne'`` by using a the mock backend ``'FakeMelbourne'``"
msgstr "প্রথমে আমরা যেমনটি চাই তেমন সেরা অনুকূল একটি ব্যাকএন্ড সাজাতে হবে। আমরা ``'ibmq_qasm_simulator'`` একটি সিমুলেশন ব্যাকএন্ড বিবেচনা করব যা একটি নকল ব্যাকএন্ড ``'FakeMelbourne'`` ব্যবহার করে বাস্তব ডিভাইস ``'ibmq_16_melbourne'`` এর ছদ্মবেশ নেয়।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:408
msgid "Using the ``noise`` module, we can now define a noise model from ``'ibmq_16_melbourne'`` to “assign” to ``'ibmq_qasm_simulator'``."
msgstr "``noise`` মডিউল ব্যবহারের মাধ্যমে আমরা এখন `'ibmq_16_melbourne'`` থেকে একটি দূষণ (নয়েজ) নকশা সংজ্ঞায়িত করতে পারি যাতে তাকে ``'ibmq_qasm_simulator'``-এ নিয়োগ করা যায় ।."

#: ../../tutorials/noise/9_entanglement_verification.ipynb:431
msgid "And there we have it. From now on, in the tutorial, when using a real device, not a simulation, just take out every mention and assignment of ``noise_model`` and ``coupling_map``, and assign the real device to ``backend``. The simulator used from now on is no substitute for running a real device."
msgstr "তো হয়েই গেলো । এখন থেকে, পাঠে (টিউটোরিয়াল) কোনও সিমুলেশন নয়, আসল ডিভাইসটি ব্যবহার করার সময়, ``noise_model`` আর ``coupling_map`` এর প্রতিটি উল্লেখ এবং কাজ বাদ দিয়ে দিন এবং আসল ডিভাইসটিকে ``backend`` এ নিয়োগ করুন। এখন থেকে যে সিমুলেটর ব্যবহার হবে তা আসল ডিভাইসের কোন বিকল্প হতে পারেনা।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:442
msgid "``BConfig`` lays the blueprint for creating parallelized circuits. Let us initialize an object taking in the real device we just defined, and name it ``protocirc``. All of our experiments will use it:"
msgstr "``BConfig`` সমান্তরাল সার্কিট তৈরি করার নীলনকশাটি প্রদান করে। আসুন আমাদের সুনির্দিষ্টভাবে সংজ্ঞায়িত বাস্তব ডিভাইসের সাথে একটি অবজেক্টকে সংজ্ঞায়িত করি এবং এর নাম রাখি ``protocirc``। আমাদের সমস্ত পরীক্ষাগুলি এটি ব্যবহার করবে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:464
msgid "Error Mitigation"
msgstr "ত্রুটি দূরীকরণ"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:466
msgid "Qiskit Ignis provides very accurate tools to take raw data and return calibrated data. This is done by getting the raw data, in the form of a vector :math:`v_{raw}` and getting a calibration matrix :math:`A`. The output is then the solution to the optimization problem: :math:`argmin_{v_{cal}} ||Av_{cal}-v_{raw}||^{2}`"
msgstr "Qiskit ইগ্নিস প্রাথমিক ডেটা নিতে এবং ক্যালিব্রেটেড ডেটা ফেরত দেওয়ার জন্য খুব সঠিক সরঞ্জাম সরবরাহ করে। এটি একটি ভেক্টর :math:`v_{raw}` আকারে প্রাথমিক তথ্য এবং এবং একটি ক্রমাঙ্কন ম্যাট্রিক্স :math:`A` নেয়। অনুকূলায়ন (অপ্টিমাইজেশন) সমস্যাসমূহর সমাধান হল আউটপুট :math:`argmin_{v_{cal}} ||Av_{cal}-v_{raw}||^{2}`"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:478
msgid "Experiment Time"
msgstr "পরীক্ষণের সময়"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:481
msgid "Preliminary Steps"
msgstr "প্রাথমিক ধাপসমূহ"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:483
msgid "The probabilities of measuring :math:`|0\\rangle ^{\\otimes n}` and :math:`|1\\rangle^{\\otimes n}` in the GHZ state are important in calculating fidelity. For this, we need to run the following test"
msgstr "বিশ্বস্ততার গণনা করার জন্য জিএইচজেড অবস্থার (স্টেট) মধ্যে :math:`|0\\rangle ^{\\otimes n}` এবং :math:`|1\\rangle^{\\otimes n}` পরিমাপের সম্ভাবনাগুলি গুরুত্বপূর্ণ। এই জন্য, আমাদের নিম্নলিখিত পরীক্ষা চালানো প্রয়োজন"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:494
msgid "We begin by defining standard execution parameters:"
msgstr "প্রমান কার্যসম্পাদনের পরামিতিগুলো সংজ্ঞায়িত করার মাধ্যমে আমরা শুরু করি:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:844
msgid "Now with error mitigation:"
msgstr "ত্রুটি দূরীকরণের ব্যাপারে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:974
msgid "We will load these values in a dictionary for assessing fidelity later on:"
msgstr "ফিডেলিটি মূল্যায়নের জন্য আমরা এই মানসমূহকে একটি ডিকশনারিতে লোড করে নেবো :"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:996
msgid "Part 1 : MQC"
msgstr "প্রথম অধ্যায় : এম. কিউ. সি(MQC)"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:998
msgid "We now retrieve a parallelized MQC circuit for the n qubit device"
msgstr "এবার আমরা n সংখক কিউবিট যন্ত্রের জন্যে একটি সমান্তরাল এম. কিউ. সি বর্তনী (সার্কিট) পুনরুদ্ধার করি।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1056
msgid "We now execute the MQC experiment:"
msgstr "আমরা এখন এমকিউসি পরীক্ষাটি চালাবো:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1099
msgid "Now we will plot the amount of counts measured for :math:`|0 \\rangle ^{\\otimes n}` as a function of phase. It is important to note that when using a parametrized circuit like the one here, the method ``get_counts()`` accepts an **index** and not a **circuit**. In any other type of experiment, ``get_counts()`` accepts a **circuit**."
msgstr "এখন আমরা দশা অন্বয় (ফাংশন) :math:`|0 \\rangle ^{\\otimes n}` -এর পরিমাপ করা গণনার পরিমাণ হিসাব করব। এটা মনে রাখা গুরুত্বপূর্ণ যে যখন এখানকার মতো একটি পর্যামিতিসহ বর্তনী (সার্কিট) ব্যবহার করব যা ``get_counts()`` পদ্ধতি ব্যবহার করে এবং **circuit** না নিয়ে তার **index** কে নেয়। অন্য কোন ধরনের পরীক্ষায় ``get_counts()`` একটি **circuit** কে নেবে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1130
msgid "Now we get started on error mitigation. We create an identical quantum register and use complete_meas_cal from Ignis, to create circuits for calibrated measurements to be executed, and a calibration matrix."
msgstr "এখন আমরা ত্রুটি প্রশমনের কাজ শুরু করব। আমরা একটি অভিন্ন কোয়ান্টাম রেজিস্ট্রার তৈরি করব এবং ক্রমাঙ্কিত পরিমাপকে নির্বাহের জন্য বর্তনী (সার্কিট) তৈরি করতে ও একটি ক্রমাঙ্কন ম্যাট্রিক্স তৈরি করতে ইগ্নিস থেকে complete_meas_cal ব্যবহার করি।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1196
msgid "Finally, we have our error mitigated results:"
msgstr "অবশেষে, আমাদের ত্রুটি প্রশমিত ফলাফল পেলাম:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1217
msgid "We can see how the error mitigated results yield a far greater fidelity than the raw data"
msgstr "আমরা দেখতে পাচ্ছি যে ত্রুটি প্রশমিত ফলাফলগুলি অপরিমার্জিত তথ্যর ( ডেটা) চেয়ে অনেক বেশি বিশ্বস্ততা অর্জন করে"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1332
msgid "We now plot the DFT and compare the heights of the peaks to give bounds for the fidelity"
msgstr "বিশ্বস্ততার সীমানা দেওয়ার জন্য আমরা এখন ডিএফটি লেখচিত্র প্লট করি এবং শিখরের উচ্চতাগুলি তুলনা করি"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1343
msgid "Statistical bootstrapping has found that the error on these measurements is at most 1.5% (arXiv 1905.05720), so these result fall within error bounds, despite the fidelity being slightly higher than the upper bound, and show how error mitigation dramatically increases fidelity"
msgstr "পরিসংখ্যানগত বুটস্ট্র্যাপিং থেকে জানা যায় যে এই পরিমাপের ত্রুটি সর্বাধিক ১.৫% (arXiv 1905.05720) হয়, সুতরাং ফলাফল উপরের গণ্ডির চেয়ে সামান্য বেশি হওয়া সত্ত্বেও ত্রুটি সীমার মধ্যে পড়ে এবং দেখায় ত্রুটি দূরীকরণের ফলে কীভাবে নাটকীয়ভাবে বিশ্বস্ততা বাড়ে"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1355
msgid "Part 2: Parity Oscillation"
msgstr "দ্বিতীয় অধ্যায়: প্যারিটি দোলন (অসিলেশন)"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1357
msgid "We now retrieve a parallelized Parity Oscillation circuit for the n qubit device, and run experiments in the same fashion as we did in MQC."
msgstr "আমরা এখন n কিউবিট ডিভাইসটির জন্য একটি সমান্তরাল প্যারিটি দোলন (অসিলেশন) বর্তনী (সার্কিট) পুনরুদ্ধার করি এবং এমকিউসিতে আমরা যেমন করেছিলাম তেমনভাবেই পরীক্ষা চালাই।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1448
msgid "Now we construct the :math:`\\otimes _{j}^{N} \\sigma_z^{j}` matrix for instruction, although this is already taken into account in the following method, ``entanglement.analysis.composite_pauli_z_expvalue()``:"
msgstr "এখন আমরা নির্দেশের জন্য :math:`\\otimes _{j}^{N} \\sigma_z^{j}` ম্যাট্রিক্সটি নির্মাণ করি, যদিও এটি ইতিমধ্যে নিম্নলিখিত পদ্ধতিতে বিবেচনা করা হয়েছে,  ``entanglement.analysis.composite_pauli_z_expvalue()``:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1471
msgid "Now we want to make sure that our list of counts is correctly ordered so that it coincides with the states of the :math:`\\otimes _{j}^{N} \\sigma_z^{j}`, so that calculating :math:`\\langle \\otimes _{j}^{N} \\sigma_z^{j} \\rangle` will be as simple as taking the dot product of this ordered list with the diagonal of :math:`\\otimes _{j}^{N} \\sigma_z^{j}`. The ``composite_pauli_z_expvalue`` function does just that; it takes a circuit and appropriately orders the state vector counts. We can plot this dot product as a function of :math:`\\phi` to observe parity oscillations."
msgstr "এখন আমরা নিশ্চিত করতে চাই যে আমাদের গণনার তালিকা সঠিকভাবে ক্রমে আছে যাতে এটি :math:`\\otimes _{j}^{N} \\sigma_z^{j}` অবস্থার (স্টেট) সাথে মিলে যায়, যাতে :math:`\\langle \\otimes _{j}^{N} \\sigma_z^{j} \\rangle` গণনা এই তালিকার সাথে :math:`\\otimes _{j}^{N} \\sigma_z^{j}` -এর কর্ণর ডট প্রোডাক্ট করলেই হবে। ``composite_pauli_z_expvalue`` ফাংশন ঠিক তাই করে; এটি একটি বর্তনী (সার্কিট) নেয় এবং যথাযথভাবে স্টেটের ভেক্টর গণনার ক্রমান্বিত করে। আমরা এই ডট গুনফল একটি অন্বয় (ফাংশন) :math:`\\phi` হিসাবে বিবেচনা করতে পারি যা প্যারিটি দোলন (অসিলেশন) পর্যবেক্ষণ করতে সাহায্য করে।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1522
msgid "Now for standard error mitigation:"
msgstr "এখন প্রমান ত্রুটি দূরীকরণের জন্য:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1617
msgid "We can see how error mitigation dramatically improves our measurement (much more so in PO than in MQC). Let us quantify this using the same DFT method we used in MQC, and calculating the actual fidelities:"
msgstr "আমরা দেখতে পাচ্ছি যে ত্রুটি দূরীকরণ কীভাবে নাটকীয়ভাবে আমাদের পরিমাপকে উন্নত করে (এমকিউসির চেয়ে পিওতে আরও বেশি)। আসুন আমরা এমকিউসি-তে ব্যবহৃত একই ডিএফটি পদ্ধতিটি ব্যবহার করে একে পরিমাপ করি এবং প্রকৃত বিশ্বস্ততা গণনা করি:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1695
msgid "As we see, the raw fidelity is much lower than what is achieved with MQC, but the error mitigated result is about the same."
msgstr "আমরা দেখতে পাই যে, এমকিউসি-র মাধ্যমে প্রাপ্ত বিশ্বস্ততার তুলনায় প্রাথমিক বিশ্বস্ততা অনেকটাই কম, তবে ত্রুটি প্রশমিত ফলাফলটি প্রায় একই রকম।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1707
msgid "Part 3: Tomography"
msgstr "তৃতীয় অধ্যায়: টমোগ্রাফি"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1709
msgid "The first step in this experiment to just pass a simple GHZ state with *no* measurements. Also, the circuit cannot be transpiled; the ``transpiled`` argument in the ``getGHZChecker()`` method can be turned on and off as is shown"
msgstr "এই পরীক্ষার প্রথম পদক্ষেপটি হল, পরিমাপ *ছাড়াই* কেবল একটি সাধারণ GHZ অবস্থা (স্টেট) সরবরাহ করা। এছাড়াও, সার্কিটটি স্থানান্তরিত করা যায় না; এবং ``getGHZChecker()`` পদ্ধতির ``transpiled`` আর্গুমেন্টটি দেখানো উপায়ে অন এবং অফ করা যায়।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1744
msgid "We now pass a simulated backend from ``Aer`` to get theoretical statevector counts"
msgstr "তাত্ত্বিক অবস্থা দিকরাশি (ভেক্টর) গণনা পেতে আমরা এখন ``এয়ার`` থেকে পাওয়া একটি সিমুলেটেড ব্যাকএন্ড পাস করি"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1787
msgid "This following code runs tomography experiments on the circuit we defined first, which is then compared to the theoretical statevector to generate a density matrix"
msgstr "নিম্নোক্ত কোডটি আমাদের শুরুতে সংজ্ঞায়িত বর্তনীতে (সার্কিট) টোমোগ্রাফি পরীক্ষা চালায় যাকে পরে ঘনত্বের ম্যাট্রিক্স উৎপন্ন করার জন্য তাত্ত্বিক অবস্থা দিকরাশির (ভেক্টর) সাথে তুলনা করা হয়"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1839
msgid "From here we can get the fidelity, although this method is not as fool proof as the one we will get to eventually:"
msgstr "এখান থেকে আমরা বিশ্বস্ততা পেতে পারি, যদিও এই পদ্ধতিটি শেষ পর্যন্ত আমরা যে পদ্ধতিতে যাবো তার মতো বুদ্ধিমান নয়:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1860
msgid "…And now for error mitigation…"
msgstr "…এবং এখন ত্রুটি প্রশমনের জন্য…"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1938
msgid "Now, using ``qiskit.visualization``, we can plot the raw density matrix, real, and imaginary parts being on separate plots,…"
msgstr "এখন, ``qiskit.visualization`` ব্যবহার করে আমরা অপরিমার্জিত ঘনত্বের ম্যাট্রিক্স লেখচিত্র আঁকতে পারি, যেখানে বাস্তব এবং কাল্পনিক অংশগুলি পৃথক লেখে থাকবে…"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:1977
msgid "And also the error mitigated density matrix,…"
msgstr "এবং ত্রুটি প্রশমিত ঘনত্ব ম্যাট্রিক্স,…"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2016
msgid "The actual density matrices can be obtained using the ``fit()`` method. Once we have the density matrix, we can compute the fidelity, which is nothing but half the sum of the four corners of the density matrix; the following method helps us:"
msgstr "প্রকৃত ঘনত্ব ম্যাট্রিকগুলি ``fit()`` পদ্ধতি ব্যবহার করে পাওয়া যায়। ঘনত্ব ম্যাট্রিক্স পাবার পর আমরা বিশ্বস্ততা গণনা করতে পারি, যা ঘনত্ব ম্যাট্রিক্সের চারটি কোণার যোগফলের অর্ধেক ব্যতীত কিছুই নয়; নিম্নলিখিত পদ্ধতিটি আমাদের সহায়তা করে:"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2090
msgid "As we see, the raw fidelity is much lower than what is achieved with either MQC or Parity Oscillations, but the error mitigated result is about the same."
msgstr "সুতরাং অপরিমার্জিত বিশ্বস্ততা মান, এম.কিউ.সি বা প্যারিটি দোলন (অসিলেশন) দ্বারা পাওয়া বিশ্বস্ততা মানের চেয়ে অনেক কম (যদিও ত্রুটি প্রশমিত ফলাফল প্রায় একই)।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2092
msgid "**A note on tomography**"
msgstr "**টমোগ্রাফির ওপরে টীকা**"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2094
msgid "Do not perform quantum tomography with >5 qubits"
msgstr "৫টা কিউবিট এর বেশি তে কোয়ান্টাম টমোগ্রাফি করে দেখা উচিত নয়।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2106
msgid "Conclusion"
msgstr "উপসংহার"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2108
msgid "In conclusion, we see that without error mitigation, MQC is the superior method for characterizing the GHZ state. However, with error mitigation, all methods can, at least for a small number of qubits, achieve a much greater fidelity, and all near the same value. To get more accurate results, aside from using a real device, it is worth increasing the number of shots four to eight-fold. It may be worth comparing how the parallelized circuits used in this notebook perform fidelity-wise versus linearized circuits."
msgstr "সর্বোপরি আমরা লক্ষ্য করি যে ত্রুটি দূরীকরণ না ব্যবহার করলে এম. কিউ. সি হলো GHZ অবস্থা (স্টেট) চরিত্রয়নের জন্যে সেরা পদ্ধতি। কিন্তু কম সংখক কিউবিট এর জন্যে ত্রুটি দূরীকরণ ব্যবহার করলে প্রায় সব পদ্ধতির একই মানের কাছে অনেক বেশি বিশ্বস্ত এবং তাদের মানগুলো কাছাকাছি। আসল যন্ত্র এবং শটসমূহ এর সংখ্যা বাড়িয়ে আরো সঠিক ফলাফল পাওয়া সম্ভব। বিশ্বস্ততার নিরিখে এই নোটবুকের সমান্তরাল বর্তনী (সার্কিট) এবং রৈখিক বর্তনীর (সার্কিট) তুলনা লক্ষণীয়।"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2121
msgid "External collaborators"
msgstr "বাহ্যিক সহযোগী"

#: ../../tutorials/noise/9_entanglement_verification.ipynb:2123
msgid "Rohith Karur"
msgstr "Rohith Karur"

