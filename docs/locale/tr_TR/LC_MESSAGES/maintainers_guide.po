msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-22 18:21+0000\n"
"PO-Revision-Date: 2023-05-22 18:46\n"
"Last-Translator: \n"
"Language: tr\n"
"Language-Team: Turkish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/maintainers_guide.po\n"
"X-Crowdin-File-ID: 9838\n"

#: ../../maintainers_guide.rst:4
msgid "Maintainers Guide"
msgstr "Sürdürücü Kılavuzu"

#: ../../maintainers_guide.rst:6
msgid "This document defines a *maintainer* as a contributor with merge privileges. The information detailed here is mostly related to Qiskit releases and other internal processes."
msgstr "Bu belge bir *sürdürücü*yü birleştirme ayrıcalıklarına sahip bir katkıda bulunan olarak tanımlar. Burada ayrıntıları verilen bilgiler çoğunlukla Qiskit sürümleri ve diğer dahili süreçlerle ilgilidir."

#: ../../maintainers_guide.rst:12
msgid "Stable Branch Policy"
msgstr "Kararlı Dallanma Politikası"

#: ../../maintainers_guide.rst:14
msgid "The stable branch is intended to be a safe source of fixes for high-impact bugs and security issues that have been fixed on master since a release. When reviewing a stable branch PR, we must balance the risk of any given patch with the value that it will provide to users of the stable branch. Only a limited class of changes are appropriate for inclusion on the stable branch. A large, risky patch for a major issue might make sense, as might a trivial fix for a fairly obscure error-handling case. A number of factors must be weighed when considering a change:"
msgstr "Kararlı dallanmada yüksek etkili hatalara ve yayınlandığından beri temel üzerinde düzeltilen güvenlik sorunlarına uygun güvenli bir onarımlar kaynağı olması istenir. Bir kararlı dal PR'ini görüntülediğimizde, kararlı dalların kullanıcılarına yarar sağlayacak değerle birlikte her verilen yamanın riskini dengelemeliyiz. Sadece sınırlı bir değişiklikler sınıfının kararlı dallanmaya alınması uygundur. Büyük bir sorun için büyük riskli bir yama, belli belirsiz bir hata için ufak bir onarımın uygulanması mantıklı olabilir. Bir değişikliğe karar verirken bir dizi etken dikkate alınmalıdır:"

#: ../../maintainers_guide.rst:24
msgid "The risk of regression: even the tiniest changes carry some risk of breaking something, and we really want to avoid regressions on the stable branch."
msgstr "Gerileme riski: en zayıf değişiklikler bile bir şeyleri biraz bozma riski taşır ve biz kararlı dalda gerilemeden gerçekten kaçınmak isteriz."

#: ../../maintainers_guide.rst:27
msgid "The user visibility benefit: are we fixing something that users might actually notice, and if so, how important is it?"
msgstr "Kullanıcı görünürlük yararı: onardığımız şeyler aslında kullanıcıların farkına varabildiği şeyler mi, öyle olsa bile ne kadar önemli?"

#: ../../maintainers_guide.rst:29
msgid "How self-contained the fix is: if it fixes a significant issue but also refactors a lot of code, it's probably worth thinking about what a less risky fix might look like."
msgstr "Onarım ne kadar kendi kendine yeterli: eğer belirli bir sorunu onarıyor fakat bütün kodu yeniden etkiliyorsa, daha az riskli bir onarımın nasıl olacağı üzerinde düşünmeye muhtemelen değer."

#: ../../maintainers_guide.rst:32
msgid "Whether the fix is already on master: a change must be a backport of a change already merged onto master, unless the change simply does not make sense on master."
msgstr "Düzeltme zaten ana kodlarda olsun ya da olmasın: değişiklik basitçe ana kodlar üzerinde bir anlam ifade etmediği sürece, bir değişiklik ana birimle zaten birleştirilmiş olan bir değişikliğin önceki versiyonuna taşınmalıdır."

#: ../../maintainers_guide.rst:39
msgid "Backporting procedure:"
msgstr "Backport(Eski versiyona güncel özellik taşıma) prosedürü:"

#: ../../maintainers_guide.rst:41
msgid "When backporting a patch from master to stable, we want to keep a reference to the change on master. When you create the branch for the stable PR, use::"
msgstr "Bir yamayı master'dan kararlı eski sürüme eklerken, master'daki değişikliğe dair bir referans tutmak istiyoruz. Kararlı PR (Pull Request) için dallanma oluşturduğunuzda, şunu kullanın::"

#: ../../maintainers_guide.rst:47
msgid "However, this only works for small self-contained patches from master. If you need to backport a subset of a larger commit (from a squashed PR, for example) from master, do this manually. In these cases, add::"
msgstr ""

#: ../../maintainers_guide.rst:53
msgid "so that we can track the source of the change subset, even if a strict cherry-pick doesn\\'t make sense."
msgstr "böylece, sıkı bir cımbızlama mantıklı olmasa bile, değişiklik alt kümesinin kaynağını takip edebiliriz."

#: ../../maintainers_guide.rst:56
msgid "If the patch you're proposing will not cherry-pick cleanly, you can help by resolving the conflicts yourself and proposing the resulting patch. Please keep Conflicts lines in the commit message to help review of the stable patch."
msgstr "Önerdiğiniz yama temiz bir şekilde cımbızlanmazsa, çakışmaları kendiniz çözerek ve ortaya çıkan yamayı önererek yardımcı olabilirsiniz. Kararlı yamanın incelenmesine yardımcı olmak için lütfen Çakışma satırlarını değişiklik mesajında tutun."

#: ../../maintainers_guide.rst:64
msgid "Backport labels"
msgstr "Backport etiketleri"

#: ../../maintainers_guide.rst:66
msgid "Bugs or PRs tagged with ``stable backport potential`` are bugs that apply to the stable release too and may be suitable for backporting once a fix lands in master. Once the backport has been proposed, the tag should be removed."
msgstr ""

#: ../../maintainers_guide.rst:71
msgid "Include ``[Stable]`` in the title of the PR against the stable branch, as a sign that setting the target branch as stable was not a mistake. Also, reference to the PR number in master that you are porting."
msgstr "Hedef dalın kararlı olarak ayarlanmasının bir hata olmadığını gösteren bir işaret olarak kararlı dalda PR başlığına ``[Stable]`` ekleyin. Ayrıca, taşıdığınız master'daki PR numarasını referans alın."

#: ../../maintainers_guide.rst:80
msgid "Qiskit Versioning"
msgstr "Qiskit Sürüm Oluşturma"

#: ../../maintainers_guide.rst:82
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has its own releases and versions, some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Qiskit projesi, her biri farklı işlevler yerine getiren birçok ögeden oluşur. Her biri bağımsız olarak işlevsel ve kendi başlarına kullanılabilir olan bu ögeleri tek bir seferde kurmak için tek bir giriş noktası sağlayacak bu depoyu ve meta-paketi sağlıyoruz. Bu şekilde dağıtmak kurulum sürecini kolaylaştırıp son kullanıcılara birleşik bir arayüz sağlasa da her Qiskit ögesi kendi sürümüne sahip olduğu için farklı depolar ile çalışırken dikkatli olmak gerekir. Bu belge, farklı Qiskit öğelerinin ve meta-paketin sürüm ve dağıtımlarıyla çalışırken uyulması gereken kuralları özetlemektedir."

#: ../../maintainers_guide.rst:92
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr ""

#: ../../maintainers_guide.rst:99
msgid "Meta-package Version"
msgstr "Meta-paket Sürümü"

#: ../../maintainers_guide.rst:101
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "Qiskit meta paketi sürümü izlenmekte olan ögelerin her birinin sürümleri tarafından belirlenen bağımsız bir değerdir. İzlenen bir bileşene bir sürümü her gönderdiğimizde (veya bir öge eklediğimizde), meta paket gereksinimleri ve sürümün güncellenmesi ve yeni bir sürümün yayınlanması gerekir. Meta paket sürümlerinin, öge sürümleriyle uyumlu olmasını sağlamak için zamanlama, ögelerin yayınlanmasıyla koordine edilmelidir. Meta paket sürümlerinin, öge sürümleriyle uyumlu olmasını sağlamak için zamanlama, ögelerin sürümleriyle koordine edilmelidir."

#: ../../maintainers_guide.rst:109
msgid "Adding New Tracked Elements"
msgstr "Yeni İzlenen Öğeler Ekleme"

#: ../../maintainers_guide.rst:111
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "Meta paket gereksinimlerine yeni bir Qiskit ögesi eklenirken, meta paketin **Minor** sürümünü artırmamız gerekiyor."

#: ../../maintainers_guide.rst:114
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and its version is ``0.7.4``. Then we release a new element ``qiskit-new`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "Örneğin, meta paket, 2 ögeyi ``qiskit-aer`` ve ``qiskit-terra`` izliyorsa sürümü ``0.7.4``sürüm olur. Daha sonra, meta-pakete dahil etmeyi planladığımız yeni bir öğeyi ``qiskit-new`` yayınladık. Meta paketine yeni ögeyi eklediğimizde sürümünü ``0.8.0``'a yükselttik."

#: ../../maintainers_guide.rst:122
msgid "Patch Version Increases"
msgstr "Yama Sürümü Yükseltilmesi"

#: ../../maintainers_guide.rst:124
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release, we need also bump the requirement in the ``setup.py`` and then increase the patch version of the meta-package."
msgstr "Halihazırda meta paketi tarafından izlenen herhangi bir Qiskit ögesi, bir sürümdeki hataları düzeltmek için bir yama sürümü yayınladığında, ``setup.py``'deki gereksinimi de karşılamamız ve ardından meta paketinin yama sürümünü yükseltmemiz gerekir."

#: ../../maintainers_guide.rst:129
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.8.1`` and ``qiskit-aer==0.2.1``, with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase its patch version and release, becoming ``0.9.7``."
msgstr "Örneğin, meta-paketi yürürlükteki ``0.9.6`` sürümü ile 2 ögeyi izliyorsa ``qiskit-terra==0.8.1`` ve ``qiskit-aer==0.2.1``. Qiskit-terra, bir hatasını düzeltmek için yeni bir yama sürümü yayınladığında, ``0.8.2`` meta paketinin yama sürümünü de yükseltmesi ve ``0.9.7`` olması gerekir."

#: ../../maintainers_guide.rst:135
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "Ek olarak, meta paketin kendisinde ara sıra yeni sürümler yayınlayarak düzeltilmesi gereken paketleme veya başka hatalar olabilir. Bunlarla karşılaşıldığında, bozuk sürümden ayırt etmek için yama sürümünü artırmalıyız. Herhangi bir durumda bozuk veya eski sürümleri pypi'den **silmeyin**, bunun yerine yama sürümünü artırın ve yeni bir sürüm yükleyin."

#: ../../maintainers_guide.rst:143
msgid "Minor Version Increases"
msgstr "Alt Sürüm Yükseltmesi"

#: ../../maintainers_guide.rst:145
msgid "Besides when adding a new element to the meta-package, the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "Bunun yanısıra meta pakete yeni bir öğe eklerken, izlenen bir öğede küçük bir sürüm artırıldığında, meta paketin alt sürümü de artırılmalıdır."

#: ../../maintainers_guide.rst:149
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "Örneğin, meta paket ``qiskit-terra==0.7.0`` ve ``qiskit-aer==0.1.1`` 2 öğesini izliyorsa ve mevcut sürüm ``0.7.5`` ise. ``qiskit-aer`` öğesi ``0.2.0`` yayınladığında, meta paket sürümünü yeni sürüme karşılık gelecek şekilde ``0.8.0`` olacak şekilde artırmamız gerekir."

#: ../../maintainers_guide.rst:155
msgid "Major Version Increases"
msgstr "Ana Sürüm Yükseltmesi"

#: ../../maintainers_guide.rst:157
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now, all the elements still have a major version number component of ``0``, and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1``, then the meta-package version should not increase the major version."
msgstr "Ana sürüm, diğer sürüm numarası bileşenlerinden farklıdır. Her izlenen öğeyle kilit adımında güncellenen diğer sürüm numarası bileşenlerinin aksine, ana sürüm yalnızca tüm izlenen sürümler arttırıldığında (en azından ``1.0.0``dan önce) yükseltilir. Şu anda tüm öğelerin hala ana sürüm numarası bileşeni meta depodaki izlenen her öğe, ana sürümü ``>=1`` olacak şekilde arttırarak kararlı olarak işaretlenene kadar ``0``'dır ve ardından meta-paket sürümü, ana sürümü artırmamalıdır."

#: ../../maintainers_guide.rst:165
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr ""

#: ../../maintainers_guide.rst:169
msgid "Optional Extras"
msgstr "Opsiyonel Ekstralar"

#: ../../maintainers_guide.rst:171
msgid "In addition to the tracked elements, there are additional packages built on top of Qiskit which are developed in tandem with Qiskit, for example, the application repositories like qiskit-optimization. For convienence these packages are tracked by the Qiskit metapackage as optional extras that can be installed with Qiskit. Releases of these optional downstream projects do not trigger a metapackage release as they are unpinned and do not affect the metapackage version. If there is a compatibility issue between Qiskit and these downstream optional dependencies and the minimum version needs to be adjusted in a standalone release, this will only be done as a patch version release as it's a packaging bugfix."
msgstr "İzlenen öğelere ek olarak, Qiskit ile birlikte geliştirilen, örneğin qiskit optimizasyonu gibi uygulama havuzları gibi Qiskit'in üzerine inşa edilmiş ek paketler vardır. Kolaylık sağlamak için bu paketler, Qiskit ile kurulabilen isteğe bağlı ekstralar olarak Qiskit meta paketi tarafından izlenir. Bu isteğe bağlı aşağı akış projelerinin yayınları, sabitlenmedikleri ve meta paket sürümünü etkilemediği için bir meta paket versiyonunu etkilemez. Qiskit ve bu aşağı yönlü isteğe bağlı bağımlılıklar arasında bir uyumluluk sorunu varsa ve minimum sürümün bağımsız bir sürümde ayarlanması gerekiyorsa, bu bir paketleme hatası düzeltmesi olduğu için yalnızca yama sürümü olarak yapılacaktır."

#: ../../maintainers_guide.rst:183
msgid "Qiskit Element Requirement Tracking"
msgstr "Qiskit Öğe Gereksinimi Takibi"

#: ../../maintainers_guide.rst:185
msgid "While not strictly related to the meta-package and Qiskit versioning, how we track the element versions in the meta-package's requirements list is important. Each element listed in the ``setup.py`` should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "Meta paket ve Qiskit versiyonlama ile kesinlikle ilgili olmasa da, meta paketin gereksinimler listesindeki öğelerin versiyonlarını nasıl takip ettiğimiz önemlidir. ``setup.py`` içinde listelenen her öğe tek bir sürüme sabitlenmelidir. Bu, Qiskit'in her sürümünün, izlenen her öğe için yalnızca tek bir sürüm yüklemesi gerektiği anlamına gelir. Örneğin, herhangi bir noktadaki gereksinimler listesi şöyle görünmelidir::"

#: ../../maintainers_guide.rst:197
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "Bu, hata ayıklamaya yardımcı olur, ancak aynı zamanda birden çok öğedeki sürümlerin izlenmesini daha şeffaf hale getirir."

#: ../../maintainers_guide.rst:201
msgid "Documentation Structure"
msgstr "Dokümantasyon Yapısı"

#: ../../maintainers_guide.rst:203
msgid "The way documentation is structured in Qiskit is to push as much of the actual documentation into the docstrings as possible. This makes it easier for additions and corrections to be made during development, because the majority of the documentation lives near the code being changed. There are three levels in the normal documentation structure in Terra:"
msgstr "Qiskit'te belgenin yapılandırılma şekli, asıl belgenin mümkün olduğunca belge dizgisine aktarılmasıdır. Bu, belgelerin çoğu değiştirilen kodun yanında bulunduğu için geliştirme sürecinde ekleme ve düzeltmeler yapılmasını kolaylaştırır. Terra'nın normal belge yapısında üç seviye vardır:"

#: ../../maintainers_guide.rst:231
msgid "The ``.rst`` files in the ``docs/apidocs``"
msgstr "``docs/apidocs`` içindeki ``.rst`` dosyaları"

#: ../../maintainers_guide.rst:210
msgid "These files are used to tell Sphinx which modules to include in the rendered documentation. This contains two pieces of information: an `internal reference <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#reference-names>`__ or `cross reference <https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#ref-role>`__ to the module, which can be used for internal links inside the documentation, and an `automodule directive <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ used to parse the module docstrings from a specified import path. For example, the ``dagcircuit.rst`` file contains::"
msgstr ""

#: ../../maintainers_guide.rst:228
msgid "The only ``.rst`` file outside of this is ``qiskit.rst``, which contains the table of contents. If you're adding a new ``.rst`` file for a new module's documentation, make sure to add it to the `toctree <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents>`__ in that file."
msgstr ""

#: ../../maintainers_guide.rst:283
msgid "The module-level docstring"
msgstr ""

#: ../../maintainers_guide.rst:234
msgid "This docstring is at the module level for the module specified in the ``automodule`` directive in the rst file. If the module specified is a directory/namespace, the docstring should be specified in the ``__init__.py`` file for that directory. This module-level docstring contains more details about the module being documented. The normal structure to this docstring is to outline all the classes and functions of the public API that are contained in that module. This is typically done using the `autosummary directive <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>`__ (or `autodoc directives <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ directly if the module is simple, such as in the case of ``qiskit.execute``). The autosummary directive is used to autodoc a list of different Python elements (classes, functions, etc.) directly without having to manually call out the autodoc directives for each one. The module-level docstring is where to provide a high-level overview of what functionality the module provides. This is normally done by grouping the different components of the public API together into multiple subsections."
msgstr ""

#: ../../maintainers_guide.rst:251
msgid "For example, as in the previous dagcircuit module example, the contents of the module docstring for ``qiskit/dagcircuit/__init__.py`` would be::"
msgstr ""

#: ../../maintainers_guide.rst:282
msgid "This is just an example and the actual module docstring for the dagcircuit module might diverge from this."
msgstr ""

#: ../../maintainers_guide.rst:300
msgid "The actual docstring for the elements listed in the module docstring"
msgstr ""

#: ../../maintainers_guide.rst:286
msgid "You should strive to document thoroughly all the public interfaces exposed using examples when necessary. For docstrings, `Google Python Style Docstrings <https://google.github.io/styleguide/pyguide.html?showone=Comments#38-comments-and-docstrings>`__ are used. This is parsed using the `napoleon sphinx extension <https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html>`__. The `napoleon documentation <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__ contains a good example of how docstrings should be formatted."
msgstr ""

#: ../../maintainers_guide.rst:295
msgid "You can use any Sphinx directive or rst formatting in a docstring as it makes sense. For example, one common extension used is the ``jupyter-execute`` directive, which is used to execute a code block in Jupyter and display both the code and output. This is particularly useful for visualizations."
msgstr ""

#: ../../maintainers_guide.rst:303
msgid "Documentation Integration"
msgstr "Dokümantasyon Entegrasyonu"

#: ../../maintainers_guide.rst:305
msgid "The hosted documentation at https://qiskit.org/documentation/ covers the entire Qiskit project; Terra is just one component of that. As such, the documentation builds for the hosted version are built by the Qiskit meta-package repository https://github.com/Qiskit/qiskit. When commits are merged to that repo, the output of Sphinx builds are uploaded to the qiskit.org website. Those Sphinx builds are configured to pull in the documentation from the version of the Qiskit elements installed by the meta-package at that point. For example, if the meta-package version is currently 0.13.0, then that will copy the documentation from Terra's 0.10.0 release. When the meta-package's requirements are bumped, then it will start pulling documentation from the new version. This means that fixes for incorrect API documentation will need to be included in a new release. Documentation fixes are valid backports for a stable patch release per the stable branch policy (see :ref:`stable_branch_policy`)."
msgstr "https://qiskit.org/documentation/ adresinde bulunan belgelendirmeler Qiskit Projesi'nin tamamını kapsar; Terra sadece bunun bir bileşenidir. Bunun gibi, barındırılan sürüm için belgelendirme yapıları Qiskit meta-paket deposu https://github.com/Qiskit/qiskit tarafından yapılır. Yapılan değişiklikler bu depoya eklendiğinde Sphinx derlemeleri çıktısı qiskit.org web sayfasına yüklenir. Bu Sphinx derlemeleri o noktadaki meta-paket tarafından yüklenen Qiskit öğelerinin sürümünden dokümantasyona çekilmesi için yapılandırılmıştır. Örneğin, meta-paket sürümü şu anda 0.13.0 ise, o zaman bu Terra'nın 0.10.0 sürümünden belgelendirmeyi kopyalanacaktır. Meta-paketin gereksinimleri yerine getirildiğinde, belgelendirmeyi yeni sürümünden çekmeye başlayacaktır. Bu doğru olmayan API belgelendirmesinin düzeltmelerinin yeni bir sürüme dahil edilmesi gerekeceği anlamına gelir. Belgelendirme düzeltmeleri, her kararlı dallanma politikası başına kararlı yama sürümü için geçerli backportlar (yeni özellikleri eski versiyona taşıma) şeklindedir (aşağıdaki bölüme bakınız)."

#: ../../maintainers_guide.rst:319
msgid "During the build process, the contents of each element's ``docs/apidocs/`` are recursively copied into a shared copy of ``doc/apidocs/`` in the meta-package repository along with all the other elements. This means that what is in the root of docs/apidocs on each element at a release will end up on the root of https://qiskit.org/documentation/apidoc/."
msgstr ""

