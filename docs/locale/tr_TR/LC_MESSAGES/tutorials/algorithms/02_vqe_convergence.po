msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-01 19:07+0000\n"
"PO-Revision-Date: 2022-11-01 19:44\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_convergence.po\n"
"X-Crowdin-File-ID: 9446\n"
"Language: tr_TR\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr "Bu sayfa `tutorials/algorithms/02_vqe_convergence.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr "VQE yakınsamasını izleme"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid "Variational algorithms in Qiskit, like `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ and `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, provide the option for a user to give a callback method that can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "Qiskit'te `VQE <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQE.html>`__ ve `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ gibi değişimsel algoritmalar, bir kullanıcıya, algoritma çalışırken ve minimuma yaklaşırken optimizasyon ilerlemesini izlemek için kullanılabilecek bir geri arama yöntemi verme seçeneği sağlar. Geri çağırma, optimize edici tarafından her bir fonksiyonel değerlendirme için çağrılır ve mevcut optimizasyon değerini, değerlendirme sayısını, mevcut optimizasyon parametrelerini vb. sağlar. Belirli bir optimize ediciye bağlı olarak, bunun optimize edicinin her yinelemesi (adımı) olmayabileceğini unutmayın, bu nedenle örneğin, optimize edici sonlu bir farka dayalı gradyan hesaplamak için maliyet işlevini çağırıyorsa, bunu geri arama yoluyla gözlemlenebilir."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid "This notebook demonstrates using Qiskit’s VQE algorithm to plot graphs of the convergence path to ground state energy with a selected set of optimizers."
msgstr "Bu not defteri, seçilmiş bir dizi optimize edici ile temel durum enerjisine yakınsama yolunun grafiklerini çizmek için Qiskit’in VQE algoritmasını kullanmayı gösteriyor."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:43
msgid "First we create a qubit operator for VQE. Here we will use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Nature for an H2 molecule."
msgstr "İlk önce VQE için bir kübit operatörü oluşturuyoruz. Burada, bir Hidrojen molekülü için orijinal olarak Qiskit Nature tarafından hesaplanan, algoritmalara girişte kullanılan operatörün aynısını kullanacağız."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:68
msgid "We will show the callback usage below over a set of optimizers for comparison. The minimum energy of the H2 Hamiltonian can be found quite easily so we are able to set maxiters to a small value"
msgstr "Aşağıda, karşılaştırma için bir dizi optimize ediciler üzerinde geri arama kullanımını göstereceğiz. H2 Hamiltonyen'in minimum enerjisi gayet kolay bulunabilir, böylece maksiteri küçük bir değere ayarlayabiliriz"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:133
msgid "Now from the callback data we stored we can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr "Şimdi depoladığımız geri arama verilerinden, her bir eniyileştiricinin yaptığı her nesnel fonksiyondaki enerji değerini çizebiliriz. Gradyan hesaplaması için sonlu bir fark metodu kullanan en iyileştiricinin bir dizi değerlendirmeye uygun bir degrade oluşturmak için yakın noktaların değerini hesapladığı çizime benzer karakteristik adımları vardır (farkı buradaki grafiğin ölçeğinde görülemeyen çok benzer değerlere sahip noktalara yakın)."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:168
msgid "Finally since the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value for the solution. We can now plot the difference from the resultant exact solution as the energy converges with VQE towards the minimum value which should be that exact classical solution."
msgstr "Son olarak, yukarıdaki sorun klasik olarak hala kolayca izlenebilir olduğu için çözüme uygun bir referans değeri hesaplamak için NumPyMinimumEigensolver kullanabiliriz. Şimdi, enerji VQE ile tam olarak klasik çözüm olması gereken minimum değere doğru yakınsarken ortaya çıkan kesin çözümden farkı çizebiliriz."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:242
msgid "Using Gradient framework"
msgstr "Gradyan yapısını kullanma"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:244
msgid "Qiskit now has a Gradient framework as part of the Opflow capability. With the gradient computed for the optimizer we now see just the optimization steps themselves."
msgstr "Qiskit artık Opflow yeteneğinin bir parçası olarak bir Gradient çerçevesine sahiptir. Optimize edici için hesaplanan gradyan ile artık sadece optimizasyon adımlarını görüyoruz."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:330
msgid "Monitoring via the logging"
msgstr "Günlük tutma yoluyla izleme"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:332
msgid "Much of the code is instrumented with `Python logging <https://docs.python.org/3/library/logging.html>`__ statements. The logging is configurable to adjust level of logging etc. Here we set the logging level to ``INFO``"
msgstr "Kodun çoğu `Python logging <https://docs.python.org/3/library/logging.html>`__ ifadeleriyle donatılmıştır. Günlüğe kaydetme, günlüğe kaydetme düzeyi vb. ayarlamak için yapılandırılabilir. Burada günlük düzeyini ``INFO`` olarak ayarlıyoruz."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:355
msgid "and at INFO level logging VQE will include information on the evaluations, as below."
msgstr "ve INFO düzeyinde VQE günlük kaydı, değerlendirmelere ilişkin bilgileri aşağıdaki gibi içerecektir."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:357
msgid "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"
msgstr "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Enerji değerlendirmesi geri döndü  [-1.07392554] - 116.41884 (ms), değerlendirme sayısı: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Enerji değerlendirmesi geri döndü [-1.43698938] - 4.05884 (ms), değerlendirme sayısı: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Enerji değerlendirmesi döndürüldü [-1.74596698] - 7.40194 (ms), değerlendirme sayısı: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Enerji geri döndürüldü [-1.75399268] - 6.61016 (ms), değerlendirme sayısı: 4"

