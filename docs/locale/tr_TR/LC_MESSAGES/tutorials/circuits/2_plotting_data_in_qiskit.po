msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 15:01+0000\n"
"PO-Revision-Date: 2020-11-12 15:36\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/2_plotting_data_in_qiskit.po\n"
"X-Crowdin-File-ID: 9116\n"
"Language: tr_TR\n"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."
msgstr "Bu sayfa `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/circuits/2_plotting_data_in_qiskit.ipynb>`_."
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:9
msgid "Qiskit Visualizations"
msgstr "Qiskit Görselleştirmeleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:33
msgid "Plot histogram"
msgstr "Histogram çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:35
msgid "To visualize the data from a quantum circuit run on a real device or ``qasm_simulator`` we have made a simple function"
msgstr "Gerçek bir cihaz veya ``qasm_simulator`` üzerinde çalışan bir kuantum devresinden gelen verileri görselleştirmek için basit bir fonksiyon oluşturduk"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:37
msgid "``plot_histogram(data)``"
msgstr "``plot_histogram(veri)``"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:39
msgid "As an example we make a 2-qubit Bell state"
msgstr "Örnek olarak 2-kübitlik Bell durumu oluşturuyoruz"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:112
msgid "Options when plotting a histogram"
msgstr "Histogram çizerken kullanılabilecek seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:114
msgid "The ``plot_histogram()`` has a few options to adjust the output graph. The first option is the ``legend`` kwarg. This is used to provide a label for the executions. It takes a list of strings use to label each execution's results. This is mostly useful when plotting multiple execution results in the same histogram. The ``sort`` kwarg is used to adjust the order the bars in the histogram are rendered. It can be set to either ascending order with ``asc`` or descending order with ``dsc``. The ``number_to_keep`` kwarg takes an integer for the number of terms to show, the rest are grouped together in a single bar called rest. You can adjust the color of the bars with the ``color`` kwarg which either takes a string or a list of strings for the colors to use for the bars for each execution. You can adjust whether labels are printed above the bars or not with the ``bar_labels`` kwarg. The last option available is the ``figsize`` kwarg which takes a tuple of the size in inches to make the output figure."
msgstr "``plot_histogram()`` çıktı grafiğini ayarlamak için birkaç seçeneğe sahiptir. İlk seçenek ``legend`` anahtar kelime argümanıdır. Bu, yürütmeler için bir etiket sağlamak için kullanılır. Her yürütmenin sonuçlarını etiketlemek için kullanılan dizelerin bir listesini alır. Bu çoğunlukla aynı histogramda birden fazla yürütme sonucu çizilirken kullanışlıdır. ``sort`` anahtar kelime argümanı, histogramdaki çubukların oluşturulma sırasını ayarlamak için kullanılır. ``asc`` ile artan veya ``dsc`` ile azalan sırada ayarlanabilir. ``number_to_keep`` anahtar kelime argümanı, gösterilecek terimlerin sayısı için bir tamsayı alır, diğerleri kalan olarak adlandırılan tek bir çubukta gruplanır. Çubukların rengini, her bir yürütme için çubuklar için kullanılacak renklerin bir dizesini veya dizelerin listesini alan ``color`` anahtar kelime argümanı ile ayarlayabilirsiniz. Etiketlerin çubukların üzerine yazdırılıp yazdırılmayacağını ``bar_labels`` anahtar kelime argümanı ile ayarlayabilirsiniz. Mevcut son seçenek, çıkış rakamını oluşturmak için inç cinsinden bir veri grubu olarak alan ``figsize`` anahtar kelime argümanıdır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:172
msgid "Using the output from plot\\_histogram()"
msgstr "plot\\_histogram() işlevinin çıktısını kullanma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:174
msgid "When using the plot\\_histogram() function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object from ``plot_histogram()`` to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png``. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:187
msgid "Plot State"
msgstr "Hal Çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:198
msgid "In many situations you want to see the state of a quantum computer. This could be for debugging. Here we assume you have this state (either from simulation or state tomography) and the goal is to visualize the quantum state. This requires exponential resources, so we advise to only view the state of small quantum systems. There are several functions for generating different types of visualization of a quantum state"
msgstr "Birçok durumda bir kuantum bilgisayarın durumunu görmek istersiniz. Bu hata ayıklama için olabilir. Burada bu duruma sahip olduğunuzu(simülasyon veya durum tomografisi) ve hedefin kuantum durumunu görselleştirmek olduğunu varsayıyoruz. Bu, üstel kaynaklar gerektirir, bu nedenle sadece küçük kuantum sistemlerinin durumunu görüntülemenizi öneririz. Bir kuantum durumun farklı görselleştirme türlerini oluşturmak için çeşitli işlevler vardır"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:208
msgid "A quantum state is either a state matrix :math:`\\rho` (Hermitian matrix) or statevector :math:`|\\psi\\rangle` (complex vector). The state matrix is related to the statevector by"
msgstr "Kuantum durumu ya bir durum matrisidir :math:`\\rho` (Hermisyen matris) ya da durum vektörüdür :math:`|\\psi\\rangle` (karmaşık vektör). Durum matrisi, durum vektörü ile şu şekilde ilişkilidir"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:210
msgid "\\rho = |\\psi\\rangle\\langle \\psi|,\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:212
msgid "and is more general as it can represent mixed states (positive sum of statevectors)"
msgstr "ve karışık (mixed) durumları (durum vektörlerinin pozitif toplamları) temsil edebileceğinden dolayı daha geneldir"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:214
msgid "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |.\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:216
msgid "The visualizations generated by the functions are:"
msgstr "İşlevler tarafından oluşturulan görselleştirmeler şunlardır:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:218
msgid "``'plot_state_city'``: The standard view for quantum states where the real and imaginary (imag) parts of the state matrix are plotted like a city."
msgstr "``'plot_state_city'``: Durum matrisinin gerçek ve sanal (imag) kısımlarının şehir gibi çizildiği kuantum durumlar için standart görünüm."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:220
msgid "``'plot_state_qsphere'``: The Qiskit unique view of a quantum state where the amplitude and phase of the state vector are plotted in a spherical ball. The amplitude is the thickness of the arrow and the phase is the color. For mixed states it will show different ``'qsphere'`` for each component."
msgstr "``'plot_state_qsphere'``: Durum vektörünün genliğinin ve fazının küresel bir top içinde çizildiği Qiskit kuantum durumun eşsiz görünümü. Genlik, okun kalınlığıdır ve faz renktir. Karışık durumlar için, her bileşen için farklı ``qsphere`` gösterecektir."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:222
msgid "``'plot_state_paulivec'``: The representation of the state matrix using Pauli operators as the basis :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."
msgstr "``'plot_state_paulivec'``: temel olarak Pauli operatörlerini kullanarak durum matrisinin temsili :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:224
msgid "``'plot_state_hinton'``: Same as ``'city'`` but where the size of the element represents the value of the matrix element."
msgstr "``'plot_state_hinton'``: ``city`` ile aynı, ancak öğenin boyutu matris öğesinin değerini temsil eder."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:226
msgid "``'plot_bloch_multivector'``: The projection of the quantum state onto the single qubit space and plotting on a bloch sphere."
msgstr "``'plot_bloch_multivector``: Kuantum durumunun tek kübitlik alana izdüşümü ve bir bloch küresine çizimi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:357
msgid "Here we see that there is no information about the quantum state in the single qubit space as all vectors are zero."
msgstr "Burada, tüm vektörler sıfır olduğu için tek kübit uzayında kuantum durumu hakkında hiçbir bilgi olmadığını görüyoruz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:369
msgid "Options when using state plotting functions"
msgstr "Durum çizme işlevlerini kullanırken seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:371
msgid "The various functions for plotting quantum states provide a number of options to adjust how the plots are rendered. Which options are available depends on the function being used."
msgstr "Kuantum durumlarını çizmeye yönelik çeşitli işlevler, grafiklerin nasıl oluşturulacağını ayarlamak için bir dizi seçenek sunar. Hangi seçeneklerin kullanılabileceği kullanılan işleve bağlıdır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:382
msgid "**plot\\_state\\_city()** options"
msgstr "**plot\\_state\\_city()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:384
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:418
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:451
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:498
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:687
msgid "**title** (str): a string that represents the plot title"
msgstr "**title** (str): çizim başlığını temsil eden bir dize"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:385
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:419
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:452
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:485
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:499
msgid "**figsize** (tuple): figure size in inches (width, height)."
msgstr "**figsize** (tuple): inç cinsinden şekil boyutu (genişlik, yükseklik)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:386
msgid "**color** (list): a list of len=2 giving colors for real and imaginary components of matrix elements."
msgstr "**color** (liste): matris elemanların gerçek ve sanal bileşenleri için renk veren bir len=2 listesi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:416
msgid "**plot\\_state\\_hinton()** options"
msgstr "**plot\\_state\\_hinton()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:449
msgid "**plot\\_state\\_paulivec()** options"
msgstr "**plot\\_state\\_paulivec()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:453
msgid "**color** (list or str): color of the expectation value bars."
msgstr "**color** (liste veya str): beklenti değeri çubuklarının rengi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:483
msgid "**plot\\_state\\_qsphere()** options"
msgstr "**plot\\_state\\_qsphere()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:496
msgid "**plot\\_bloch\\_multivector()** options"
msgstr "**plot\\_bloch\\_multivector()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:530
msgid "Using the output from state plotting functions"
msgstr "Durum çizim fonksiyonlarından elde edilen çıktıyı kullanma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:532
msgid "When using any of the state plotting functions it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Durum çizim işlevlerinden herhangi birini kullanırken, görüntülenen görselleştirme için bir ``matplotlib.Figure`` döndürür. Jupyter not defteri bu dönüş türünü anlıyor ve bu eğitimde bizim için oluşturuyor, ancak Jupyter dışında çalışırken bu özelliğe otomatik olarak sahip değilsiniz. Bununla birlikte, ``matplotlib.Figure`` sınıfı yerel olarak görselleştirmeyi görüntüleme ve kaydetme yöntemlerine sahiptir. Görüntüyü yeni bir pencerede açmak için döndürülen nesnede ``.show()`` öğesini çağırabilirsiniz (yapılandırılmış matplotlib arka ucunuzun etkileşimli olduğu varsayılarak). Veya alternatif olarak, figürü geçerli çalışma dizinindeki ``out.png`` konumuna kaydetmek için ``.savefig('out.png')`` 'yi çağırabilirsiniz. ``savefig()`` yöntemi, çıktıyı kaydettiğiniz konumu ve dosya adını ayarlayabilmenizi sağlar."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:545
msgid "Interactive State Plots for Jupyter Notebooks"
msgstr "Jupyter Not Defteri için Etkileşimli Durum Grafikleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:547
msgid "Just like with ``plot_histogram()`` there is a second set of functions for each of the functions to plot the quantum state. These functions have the same name but with a prepended ``i``:"
msgstr "Tıpkı ``plot_histogram()`` gibi, kuantum durumunu çizmek için her bir işlev için ikinci bir işlev kümesi vardır. Bu işlevler aynı ada sahiptir, ancak başına bir ``i`` eklidir:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:557
msgid "These functions are made using an externally hosted JS library for use in Jupyter notebooks. The interactive plot can only be used if you're running inside a Jupyter notebook and only if you have external connectivity to the host with the JS library. If you use these functions outside of a Jupyter notebook it will fail."
msgstr "Bu işlevler Jupyter not defterinde kullanılmak üzere harici olarak barındırılan bir JS kütüphanesi kullanılarak yapılır. Etkileşimli çizim yalnızca bir Jupyter not defteri içinde çalışıyorsanız ve yalnızca JS kütüphanesi ile ana bilgisayara harici bağlantınız varsa kullanılabilir. Bu işlevleri bir Jupyter not defteri dışında kullanırsanız başarısız olur."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:640
msgid "Plot Bloch Vector"
msgstr "Bloch Vektörü Çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:642
msgid "A standard way of plotting a quantum system is using the Bloch vector. This only works for a single qubit and takes as input the Bloch vector."
msgstr "Bir kuantum sistemi çizmenin standart bir yolu Bloch vektörünü kullanmaktır. Bu sadece tek bir kübit için çalışır ve Bloch vektörünü girdisi olarak alır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:644
msgid "The Bloch vector is defined as :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, where :math:`X`, :math:`Y`, and :math:`Z` are the Pauli operators for a single qubit and :math:`\\rho` is the state matrix."
msgstr "Bloch vektörü şu şekilde tanımlanır :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, burada :math:`X`, :math:`Y`, ve :math:`Z` tek bir kübit için Pauli operatörleridir ve :math:`\\rho` durum matrisidir."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:685
msgid "Options for plot\\_bloch\\_vector()"
msgstr "plot\\_Bloch\\_vector() için seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:688
msgid "**figsize** (tuple): Figure size in inches (width, height)."
msgstr "**figsize** (tuple): İnç olarak şekil boyutu (genişlik, yükseklik)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:719
msgid "Adjusting the output from plot\\_bloch\\_vector()"
msgstr "plot\\_bloch\\_vector() 'den çıktıyı ayarlama"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:721
msgid "When using the ``plot_bloch_vector`` function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "``plot_bloch_vector`` işlevini kullanırken, görüntülenen görselleştirme için bir ``matplotlib.Figure`` döndürür. Jupyter not defteri bu dönüş türünü anlıyor ve bu eğitimde bizim için oluşturuyor, ancak Jupyter dışında çalışırken bu özelliğe otomatik olarak sahip değilsiniz. Bununla birlikte, ``matplotlib.Figure`` sınıfı yerel olarak görselleştirmeyi görüntüleme ve kaydetme yöntemlerine sahiptir. Görüntüyü yeni bir pencerede açmak için döndürülen nesnede ``.show()`` öğesini çağırabilirsiniz (yapılandırılmış matplotlib arka ucunuzun etkileşimli olduğu varsayılarak). Veya alternatif olarak, figürü geçerli çalışma dizinindeki ``out.png`` konumuna kaydetmek için ``.savefig('out.png')`` 'yi çağırabilirsiniz. ``savefig()`` yöntemi, çıktıyı kaydettiğiniz konumu ve dosya adını ayarlayabilmenizi sağlar."

