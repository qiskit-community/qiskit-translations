msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 21:04+0000\n"
"PO-Revision-Date: 2023-03-02 21:38\n"
"Last-Translator: \n"
"Language: tr\n"
"Language-Team: Turkish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/2_plotting_data_in_qiskit.po\n"
"X-Crowdin-File-ID: 9116\n"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."
msgstr "Bu sayfa `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:9
msgid "Qiskit Visualizations"
msgstr "Qiskit Görselleştirmeleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:32
msgid "Plot Histogram"
msgstr "Histogram Çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:34
msgid "To visualize the data from a quantum circuit run on a real device or ``qasm_simulator`` we have made a simple function"
msgstr "Gerçek bir cihaz veya ``qasm_simulator`` üzerinde çalışan bir kuantum devresinden gelen verileri görselleştirmek için basit bir fonksiyon oluşturduk"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:36
msgid "``plot_histogram(data)``"
msgstr "``plot_histogram(data)``"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:38
msgid "As an example we make a 2-qubit Bell state"
msgstr "Örnek olarak 2-kübitlik Bell durumu oluşturuyoruz"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:116
msgid "Options when plotting a histogram"
msgstr "Histogram çizerken kullanılabilecek seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:118
msgid "The ``plot_histogram()`` has a few options to adjust the output graph. The first option is the ``legend`` kwarg. This is used to provide a label for the executions. It takes a list of strings use to label each execution’s results. This is mostly useful when plotting multiple execution results in the same histogram. The ``sort`` kwarg is used to adjust the order the bars in the histogram are rendered. It can be set to either ascending order with ``asc`` or descending order with ``desc``. The ``number_to_keep`` kwarg takes an integer for the number of terms to show, the rest are grouped together in a single bar called rest. You can adjust the color of the bars with the ``color`` kwarg which either takes a string or a list of strings for the colors to use for the bars for each execution. You can adjust whether labels are printed above the bars or not with the ``bar_labels`` kwarg. The last option available is the ``figsize`` kwarg which takes a tuple of the size in inches to make the output figure."
msgstr "``plot_histogram()`` fonksiyonu, çıktı grafiğini ayarlamak için birkaç seçeneğe sahiptir. Birinci seçenek ``legend`` anahtar kelime argümanıdır. Bu yürütmeler için bir etiket sağlamak hedefiyle kullanılır. Her bir yürütmenin sonucunu etiketlemek için bir karakter dizisi listesi alır. Bu çoğunlukla aynı histogram içerisinde birden fazla yürütme işlemini çizerken kullanışlıdır. ``sort`` anahtar kelime argümanı, histogramdaki çubukların işlenme sırasını ayarlamak için kullanılır. ``asc`` ile artan sıralamaya ya da ``dsc`` ile azalan sıralamaya ayarlanabilir. ``number_to_keep`` anahtar kelime argümanı, gösterilecek terimlerin sayısı için bir tam sayı(integer) alır, geri kalanlar rest adı verilen tek bir çubukta gruplanır. Çubukların rengini, her bir yürütmede çubuklar için kullanılacak renkler için bir string veya bir string listesi alan ``color`` anahtar kelime argümanı ile ayarlayabilirsiniz. Etiketlerin çubuların üzerinde ya da ``bar_labels`` anahtar kelime argümanı ile birlikte yazılıp yazılamayacağını ayarlayabilirsiniz. Son seçenek, çıktı figürünü oluşturmak için inç cinsinden boyutta bir tuple alan ``figsize`` anahtar kelime argümanıdır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:176
msgid "Using the output from plot_histogram()"
msgstr "plot_histogram() dan çıktının kullanımı"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:178
msgid "When using the plot_histogram() function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object from ``plot_histogram()`` to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png``. The ``savefig()`` method takes a path so you can adjust the location and filename where you’re saving the output."
msgstr "plot_histogram() fonksiyonunu kullandığınız zaman işlenmiş görselleştirme için ``matplotlib.Figure`` ü döndürür. Jupyter not defteri bu eğitselde bu dönüş türünü anlar ve bizim için işler ancak Jupyter dışında çalıştırdığınızda bu özelliğe otomatik olarak sahip olmazsınız. Bununla birlikte, ``matplotlib.Figure`` sınıfı doğal olarak görselleştirmeyi hem oynatmak hem de kaydetmek için yöntemlere sahiptir. Görseli yeni bir pencerede açmak için(yapılandırılmış matplotlib backendinizin etkileşimli olduğunu varsayarak) ``plot_histogram()`` dan döndürülen nesne üzerinde ``.show()`` yöntemini çağırabilirsiniz. Ya da alternatif bir şekilde görseli ``out.png`` ye kaydetmek için ``.savefig('out.png')`` i çağırabilirsiniz. The ``savefig()`` yöntemi bir yol oluşturur böylece çıktıyı kaydettiğiniz yerde konum ve dosya adını sağlayabilirsiniz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:191
msgid "Plot State"
msgstr "Durum Çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:202
msgid "In many situations you want to see the state of a quantum computer. This could be for debugging. Here we assume you have this state (either from simulation or state tomography) and the goal is to visualize the quantum state. This requires exponential resources, so we advise to only view the state of small quantum systems. There are several functions for generating different types of visualization of a quantum state"
msgstr "Birçok durumda bir kuantum bilgisayarın durumunu görmek istersiniz. Bu hata ayıklama için olabilir. Burada bu duruma sahip olduğunuzu(simülasyon veya durum tomografisi) ve hedefin kuantum durumunu görselleştirmek olduğunu varsayıyoruz. Bu, üstel kaynaklar gerektirir, bu nedenle sadece küçük kuantum sistemlerinin durumunu görüntülemenizi öneririz. Bir kuantum durumun farklı görselleştirme türlerini oluşturmak için çeşitli işlevler vardır"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:212
msgid "A quantum state is either a state matrix :math:`\\rho` (Hermitian matrix) or statevector :math:`|\\psi\\rangle` (complex vector). The state matrix is related to the statevector by"
msgstr "Kuantum durumu ya bir durum matrisidir :math:`\\rho` (Hermisyen matris) ya da durum vektörüdür :math:`|\\psi\\rangle` (karmaşık vektör). Durum matrisi, durum vektörü ile şu şekilde ilişkilidir"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:214
msgid "\\rho = |\\psi\\rangle\\langle \\psi|,\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:216
msgid "and is more general as it can represent mixed states (positive sum of statevectors)"
msgstr "ve karışık durumları (durum vektörlerinin pozitif toplamları) temsil edebileceğinden dolayı daha geneldir"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:218
msgid "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |.\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:220
msgid "The visualizations generated by the functions are:"
msgstr "Fonksiyonlar tarafından oluşturulan görselleştirmeler şunlardır:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:222
msgid "``'plot_state_city'``: The standard view for quantum states where the real and imaginary (imag) parts of the state matrix are plotted like a city."
msgstr "``'plot_state_city'``: Durum matrisinin gerçek ve sanal (imag) kısımlarının şehir gibi çizildiği kuantum durumlar için standart görünüm."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:224
msgid "``'plot_state_qsphere'``: The Qiskit unique view of a quantum state where the amplitude and phase of the state vector are plotted in a spherical ball. The amplitude is the thickness of the arrow and the phase is the color. For mixed states it will show different ``'qsphere'`` for each component."
msgstr "``'plot_state_qsphere'``: Durum vektörünün genliğinin ve fazının küresel bir top içinde çizildiği Qiskit kuantum durumun eşsiz görünümü. Genlik, okun kalınlığıdır ve faz renktir. Karışık durumlar için, her bileşen için farklı ``qsphere`` gösterecektir."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:226
msgid "``'plot_state_paulivec'``: The representation of the state matrix using Pauli operators as the basis :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."
msgstr "``'plot_state_paulivec'``: temel olarak Pauli operatörlerini kullanarak durum matrisinin temsili :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:228
msgid "``'plot_state_hinton'``: Same as ``'city'`` but where the size of the element represents the value of the matrix element."
msgstr "``'plot_state_hinton'``: ``city`` ile aynı, ancak öğenin boyutu matris öğesinin değerini temsil eder."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:230
msgid "``'plot_bloch_multivector'``: The projection of the quantum state onto the single qubit space and plotting on a bloch sphere."
msgstr "``'plot_bloch_multivector``: Kuantum durumunun tek kübitlik alana izdüşümü ve bir bloch küresine çizimi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:361
msgid "Here we see that there is no information about the quantum state in the single qubit space as all vectors are zero."
msgstr "Burada, tüm vektörler sıfır olduğu için tek kübit uzayında kuantum durumu hakkında hiçbir bilgi olmadığını görüyoruz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:373
msgid "Options when using state plotting functions"
msgstr "Durum çizme fonksiyonlarını kullanırken seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:375
msgid "The various functions for plotting quantum states provide a number of options to adjust how the plots are rendered. Which options are available depends on the function being used."
msgstr "Kuantum durumlarını çizmeye yönelik çeşitli fonksiyonlar, grafiklerin nasıl oluşturulacağını ayarlamak için bir dizi seçenek sunar. Hangi seçeneklerin kullanılabileceği kullanılan fonksiyonlara bağlıdır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:386
msgid "**plot_state_city()** options"
msgstr "**plot_state_city()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:388
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:422
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:455
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:502
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:596
msgid "**title** (str): a string that represents the plot title"
msgstr "**title** (str): çizim başlığını temsil eden bir dize"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:389
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:423
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:456
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:489
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:503
msgid "**figsize** (tuple): figure size in inches (width, height)."
msgstr "**figsize** (tuple): inç cinsinden şekil boyutu (genişlik, yükseklik)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:390
msgid "**color** (list): a list of len=2 giving colors for real and imaginary components of matrix elements."
msgstr "**color** (liste): matris elemanların gerçek ve sanal bileşenleri için renk veren bir len=2 listesi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:420
msgid "**plot_state_hinton()** options"
msgstr "**plot_state_hinton()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:453
msgid "**plot_state_paulivec()** options"
msgstr "**plot_state_paulivec()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:457
msgid "**color** (list or str): color of the expectation value bars."
msgstr "**color** (liste veya str): beklenti değeri çubuklarının rengi."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:487
msgid "**plot_state_qsphere()** options"
msgstr "**plot_state_qsphere()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:500
msgid "**plot_bloch_multivector()** options"
msgstr "**plot_bloch_multivector()** seçenekleri"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:534
msgid "Using the output from state plotting functions"
msgstr "Durum çizim fonksiyonlarından elde edilen çıktıyı kullanma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:536
msgid "When using any of the state plotting functions it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you’re saving the output."
msgstr "Durum çizim fonksiyonlarından herhangi birini kullanırken işlenen görselleştirme için bir ``matplotlib.Figure`` döndürür. Jupyter not defterleri bu dönüş türünü anlar ve bizim için bu eğitselde işler ancak Jupyter dışında çalıştırdığınızda bu özelliğe otomatik olarak sahip olmazsınız. Bununla birlikte, ``matplotlib.Figure`` sınıfı doğal olarak görselleştirmeyi hem görüntülemek hem de kaydetmek için yöntemlere sahiptir. Yeni bir pencerede resmi açmak için(yapılandırılmış matplotlib backendinizin etkileşimli olduğu varsayılarak) döndürülen nesnede ``.show()`` fonksiyonunu çağırmalısınız. Ya da alternatif olarak şu an çalışan dizinde ``out.png`` dosyasına figürü kaydetmek için ``.savefig('out.png')`` komutunu çağırabilirsiniz. ``savefig()`` metodu bir yol oluşturur böylece çıktıyı kaydettiğiniz konumu ve dosya adını ayarlayabilirsiniz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:549
msgid "Plot Bloch Vector"
msgstr "Bloch Vektörü Çizimi"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:551
msgid "A standard way of plotting a quantum system is using the Bloch vector. This only works for a single qubit and takes as input the Bloch vector."
msgstr "Bir kuantum sistemi çizmenin standart bir yolu Bloch vektörünü kullanmaktır. Bu sadece tek bir kübit için çalışır ve Bloch vektörünü girdisi olarak alır."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:553
msgid "The Bloch vector is defined as :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, where :math:`X`, :math:`Y`, and :math:`Z` are the Pauli operators for a single qubit and :math:`\\rho` is the state matrix."
msgstr "Bloch vektörü şu şekilde tanımlanır :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, burada :math:`X`, :math:`Y`, ve :math:`Z` tek bir kübit için Pauli operatörleridir ve :math:`\\rho` durum matrisidir."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:594
msgid "Options for plot_bloch_vector()"
msgstr "plot_bloch_vector() için seçenekler"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:597
msgid "**figsize** (tuple): Figure size in inches (width, height)."
msgstr "**figsize** (tuple): İnç olarak şekil boyutu (genişlik, yükseklik)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:628
msgid "Adjusting the output from plot_bloch_vector()"
msgstr "plot_bloch_vector() fonksiyonundan çıktıyı ayarlama"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:630
msgid "When using the ``plot_bloch_vector`` function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you’re saving the output."
msgstr "``plot_bloch_vector`` fonksiyonu kullanıldığı zaman fonksiyon, işlenmiş görselleştirme için bir ``matplotlib.Figure`` döndürür. Jupyter not defteri bu dönüş türünü anlar ve bizim için bu eğitselde onu işler ancak Jupyter'in dışında çalışırken bu özelliğe otomatik olarak sahip olmazsınız. Bununla birlikte, ``matplotlib.Figure`` sınıfı doğal olarak görselleştirmeyi hem görüntülemek hem de kaydetmek için yöntemlere sahiptir. Yeni bir pencerede resmi açmak için(yapılandırılmış matplotlib backendinizin etkileşimli olduğu varsayılarak) döndürülen nesnede ``.show()`` fonksiyonunu çağırmalısınız. Ya da alternatif olarak şu an çalışan dizinde ``out.png`` dosyasına figürü kaydetmek için ``.savefig('out.png')`` komutunu çağırabilirsiniz. ``savefig()`` metodu bir yol oluşturur böylece çıktıyı kaydettiğiniz konumu ve dosya adını ayarlayabilirsiniz."

