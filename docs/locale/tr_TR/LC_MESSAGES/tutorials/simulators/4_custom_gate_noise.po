msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-17 13:53+0000\n"
"PO-Revision-Date: 2022-06-17 14:48\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"
"Language: tr_TR\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "Bu sayfa `tutorials/simulators/4_custom_gate_noise.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "Özel üniter kapılara gürültü uygulanması"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "Giriş"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "Bu not defteri, bir kuantum devresine özel üniter kapıların nasıl ekleneceğini ve bunların Qiskit Aer'de gürültü simülasyonları için nasıl kullanılacağını gösterir."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "Matris operatörleri oluşturma"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "Rastgele matris operatörlerini temsil etmek için ``qiskit.quantum_info`` içindeki ``Operator`` sınıfını kullanabiliriz. Eğer operatör üniter ise, bir kuantum devresine eklenebilir ve Qiskit Aer'de simülasyon için kullanılabilir."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "Bir CNOT geçidi ve bir iSWAP geçidi için aşağıda iki operatör oluşturalım:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "**Not:** Matris ``[a, b]`` listesinde belirtilen kübitler için :math:`U_{b}\\otimes U_{a}` tensör çarpımına göre belirtilir."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "Devrelerde operatörlerin kullanılması"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Haydi bunların bir devrede nasıl kullanılabileceğini gösterelim. Tek kübitli kapılar ve iSWAP kapısı açısından ayrıştırılmış bir CNOT kapısının uygulanışının bir örneğini aşağıdaki gibi ele alacağız."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:186
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "Eklendiğinde üniteye ``\"iswap\"``ın isteğe bağlı bir *etiket* atadığımızı unutmayın. Bu bir Qiskit Aer ``NoiseModel`` içinde bu üniteyi tanımlamamıza izin verir böylece gürültülü devre simülasyonlarında bu özel üniter kapılara hatalar ekleyebiliriz."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:197
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "Devre için bir simulatör olarak ``Operator``sınıfını kullanarak bu devrenin doğru çıktıyı döndürdüğünü onaylayabiliriz:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:256
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "Ve çıktının doğru olduğunu onaylamak için ortalama kapının aslına uygunluğunu hesaplayabiliriz:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:303
msgid "Creating a custom unitary in a noise model"
msgstr "Gürültü modelinde özel bir üniter oluşturma"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:305
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "Qiskit Aer ``AerSimulator`, temel kapılarda ``\"unitary\"`` tarafından belirtildiği gibi doğrudan rastgele üniter operatörlerin simülasyonunu destekler."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:351
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "Bu, ``QuantumCircuit.unitary``nin isteğe bağlı ``label`` argümanını kullanarak onları tanımladığımızda, simülasyonumuzdaki rastgele ünitelere gürültü modelleri eklememize izin verir."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:353
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "Şimdi bunu, özel iSWAP geçidimizde bir kuantum hata kanalı içeren bir ``NoiseModel`` oluşturarak yapacağız. Örneğimiz için, farklı sönümleme parametrelerine sahip iki adet tek kübit genlikli sönümleme kanalından oluşan 2 kübitlik bir hata oluşturacağız. Şimdilik diğer tüm devre talimatlarının ideal olduğunu varsayacağız."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:385
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "``\"iswap\"`` gibi özel bir etikete bir hata eklediğimizde, ``NoiseModel`` bu etiketin hangi geçite uygulanacağını bilmediğini unutmayın, bu nedenle istenen geçit dizesini ``basis_gates`` gürültü modeline manuel olarak eklememiz gerekir. Bu, derleyicinin gürültü modeli simülasyonu için doğru temel geçitlere açılmasını sağlar. Bu, ``NoiseModel.add_basis_gates`` işlevi kullanılarak yapılabilir:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:431
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr "Varsayılan olarak bir gürültü modelinin temel geçitleri ``['cx','id','u3']`` artı gürültü modeline eklenen herhangi bir standart ``AerSimulator`` temel geçitleridir."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:443
msgid "Simulating a custom unitary noise model"
msgstr "Özel bir üniter gürültü modelini simüle etme"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:454
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr "İlk olarak önceki CX devremizi alalım ve hem ideal hem de gürültülü durum için ``AerSimulator`` üzerinde simüle edebileceğimiz bir Bell-durumu hazırlık devresi oluşturmak için bir başlangıç Hadamard geçidi ve son ölçümü ekleyelim:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:523
msgid "Ideal output"
msgstr "İdeal çıktı"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:525
msgid "Let’s first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "Önce ideal çıktıyı görelim. Bu bir Bell-durumu oluşturduğundan 00 ve 11 için iki tepe noktası bekliyoruz."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:563
msgid "Noisy circuit execution"
msgstr "Gürültülü devre yürütme"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:565
msgid "Finally, let’s now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "Son olarak, şimdi özel gürültü modelimiz ile simüle edelim. İki kübitlik kapılarda küçük bir genlik sönümleme hatası olduğundan, 01 ve 10 sonuç olasılıkları için küçük ek tepeler bekliyoruz."

