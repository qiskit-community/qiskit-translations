msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-01 19:07+0000\n"
"PO-Revision-Date: 2022-11-01 19:44\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/7_matrix_product_state_method.po\n"
"X-Crowdin-File-ID: 9172\n"
"Language: tr_TR\n"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:10
msgid "This page was generated from `tutorials/simulators/7_matrix_product_state_method.ipynb`__."
msgstr "Bu sayfa `tutorials/simulators/7_matrix_product_state_method.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:9
#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:26
msgid "Matrix product state simulation method"
msgstr "Matris çarpım durumu simülasyon yöntemi"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Simulation methods"
msgstr "Simülasyon yöntemleri"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:14
msgid "The ``AerSimulator`` has several simulation methods including ``statevector``, ``stabilizer``, ``extended_stabilizer`` and ``matrix_product_state``. Each of these determines the internal representation of the quantum circuit and the algorithms used to process the quantum operations. They each have advantages and disadvantages, and choosing the best method is a matter of investigation. In this tutorial, we focus on the ``matrix product state simulation method``."
msgstr "``AerSimulator``; ``statevector``, ``stabilizer``, ``extended_stabilizer`` ve ``matrix_product_state`` gibi birçok simülasyon yöntemi içerir. Bunların her biri, kuantum devresinin iç temsilini ve kuantum işlemlerinin işlenmesinde kullanılan algoritmaları belirler. Her birinin avantajları ve dezavantajları vardır. En iyi yöntemi bulmak ise araştırma meselesidir. Bu eğitsel bölümde ``matrix product state simulation method`` konusuna odaklanacağız."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:28
msgid "This simulation method is based on the concept of ``matrix product states``. This structure was initially proposed in the paper *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. There are additional papers that describe the structure in more detail, for example *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."
msgstr "Bu simülasyon yöntemi ``matrix product states`` kavramına dayanır. Bu yapı ilk olarak Vidal tarafından yazılan *Az dolaşık kuantum hesaplamalarının verimli klasik simülasyonu* (https://arxiv.org/abs/quant-ph/0301063) makalesinde ortaya atılmıştır. Yapıyı daha detaylı açıklayan ek makaleler bulunmaktadır, örneğin Schollwoeck tarafından yazılan *Matris çarpım durumu çağında yoğunluk matrisi renormalizasyon grubu* (https://arxiv.org/abs/1008.3477) makalesi."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:39
msgid "A pure quantum state is usually described as a state vector, by the expression :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."
msgstr "Saf bir kuantum durumu, genellikle, :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle` ifadesiyle bir durum vektörü olarak tanımlanır."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:41
msgid "The state vector representation implies an exponential size representation, regardless of the actual circuit. Every quantum gate operating on this representation requires exponential time and memory."
msgstr "Durum vektörü gösterimi, esas devreye bakılmaksızın, üstel bir büyüklük gösterimini işaret eder. Bu gösterimin üzerine işleyen her kuantum kapısı, üstel zaman ve bellek gerektirir."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:43
msgid "The matrix product state (MPS) representation offers a local representation, in the form: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, such that all the information contained in the :math:`c_{i_1 \\ldots i_n}`, can be generated out of the MPS representation."
msgstr "Matris çarpım durumu (MPS) gösterimi, yerel bir gösterim sunar ve bu gösterimin biçimi şöyledir: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, öyle ki :math:`c_{i_1 \\ldots i_n}` ifadesinde bulunan bütün bilgiler Matris çarpım durumu gösteriminden oluşturulabilir."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:54
msgid "Every :math:`\\Gamma^{[i]}` is a tensor of complex numbers that represents qubit :math:`i`. Every :math:`\\lambda^{[i]}` is a matrix of real numbers that is used to normalize the amplitudes of qubits :math:`i` and :math:`i+1`. Single-qubit gates operate only on the relevant tensor."
msgstr "Her :math:`\\Gamma^{[i]}`, :math:`i` kübitini temsil eden karmaşık sayıların tensörüdür. Her :math:`\\lambda^{[i]}`, :math:`i` and :math:`i+1` kübitlerinin genliklerinin normalize edilmesinde kullanılan ve gerçek sayılardan oluşan bir matristir."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:56
msgid "Two-qubit gates operate on consecutive qubits :math:`i` and :math:`i+1`. This involves a tensor-contract operation over :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` and :math:`\\lambda^{[i+1]}`, that creates a single tensor. We apply the gate to this tensor, and then decompose back to the original structure. This operation may increase the size of the respective tensors. Gates that involve two qubits that are not consecutive, require a series of swap gates to bring the two qubits next to each other and then the reverse swaps."
msgstr "İki-kübit kapıları ardışık olan :math:`i` and :math:`i+1` kübitleri üzerine işler. Bu, :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` ve :math:`\\lambda^{[i+1]}` üzerinde, tek bir tensör oluşturan bir tensör kasılması işlemi içerir. Kapıyı bu tensöre uygular, ardından asıl yapıya geri döneriz. Bu işlem ilgili tensörlerin boyutlarını artırabilir. Ardışık olmayan iki kübit içeren kapılar, bu iki kübiti yan yana getirebilmek için bir dizi takas (swap) kapısı gerektirir ve sonra bu takas işlemlerini ters çevirir."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:59
msgid "In the worst case, the tensors may grow exponentially. However, the size of the overall structure remains ‘small’ for circuits that do not have ‘many’ two-qubit gates. This allows much more efficient operations in circuits with relatively ‘low’ entanglement. Characterizing when to use this method over other methods is a subject of current research."
msgstr "En kötü ihtimalle, tensörler üstel olarak büyüyebilir. Ancak, toplam yapının büyüklüğü, 'çok' iki-kübit kapısı içermeyen devreler için 'küçük' olmaya devam eder. Bu, devrelerde görece 'düşük' dolanıklık ile çok daha verimli işlem sağlar. Bu yöntemin hangi durumlarda diğer yöntemlere tercih edileceğinin ayırt edilmesi, güncel araştırmaların bir konusudur."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:71
msgid "Using the matrix product state simulation method"
msgstr "Matris çarpım durumu simülasyon yönteminin kullanılması"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:73
msgid "The matrix product state simulation method is invoked in the ``AerSimulator`` by setting the simulation method. Other than that, all operations are controlled by the ``AerSimulator`` itself, as in the following example:"
msgstr "Simülasyon yöntemi ayarlanarak ``AerSimulator``'daki matris çarpım durumu simülasyon metodu çağrılır. Bunun dışında, aşağıdaki örnekte olduğu gibi, tüm işlemler ``AerSimulator`` tarafından kontrol edilir:"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:138
msgid "To see the internal state vector of the circuit we can use the ``save_statevector`` instruction. To return the full internal MPS structure we can also use the ``save_matrix_product_state`` instruction."
msgstr "Devrenin iç durum vektörünü görmek için ``save_statevector`` talimatını kullanabiliriz. Tam iç MPS (matris çarpım durumu) yapısını döndürmek için ``save_matrix_product_state`` talimatını da kullanabiliriz."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:220
msgid "Running circuits using the matrix product state simulation method can be fast, relative to other methods. However, if we generate the state vector during the execution, then the conversion to state vector is, of course, exponential in memory and time, and therefore we don’t benefit from using this method. We can benefit if we only do operations that don’t require printing the full state vector. For example, if we run a circuit and then take measurement. The circuit below has 200 qubits. We create an ``EPR state`` involving all these qubits. Although this state is highly entangled, it is handled well by the matrix product state method, because there are effectively only two states."
msgstr "Devreleri matris çarpım durumu simülasyon yöntemini kullanarak çalıştırmak, diğer yöntemlere kıyasla hızlı olabilir. Ancak, durum vektörünü yürütme esnasında oluşturursak durum vektörüne dönüşüm, şüphesiz, bellekte ve zamanda üstel olacaktır. Bu yüzden, bu yöntemi kullanmaktan fayda sağlamıyoruz. Eğer sadece tam durum vektörünü yazdırması gerekmeyen işlemler yaparsak fayda sağlayabiliriz. Örneğin, bir devreyi çalıştırır ve sonra ölçüm yaparsak. Aşağıdaki devrede 200 kübit bulunuyor. Tüm bu kübitleri içerek bir ``EPR state`` oluşturuyoruz. Bu durumun büyük ölçüde dolanık olmasına rağmen, matris çarpım durumu yöntemi ile iyi ele alınabilmektedir çünkü burada sadece iki verimli durum bulunur."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:223
msgid "We can handle more qubits than this, but execution may take a few minutes. Try running a similar circuit with 500 qubits! Or maybe even 1000 (you can get a cup of coffee while waiting)."
msgstr "Bundan daha fazla kübiti işleyebiliriz, ancak bunu yürütmek birkaç dakika sürebilir. 500 kübit ile benzer bir devre çalıştırmayı deneyin! Ya da belki 1000 (beklerken bir fincan kahve alabilirsiniz)."

