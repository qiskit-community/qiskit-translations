msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-27 13:03+0000\n"
"PO-Revision-Date: 2023-10-27 13:34\n"
"Last-Translator: \n"
"Language: tr\n"
"Language-Team: Turkish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/03_advanced_circuit_visualization.po\n"
"X-Crowdin-File-ID: 9126\n"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb`__."
msgstr "Bu sayfa `tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb`__ adresinden oluşturulmuştur."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:9
msgid "Visualizing a Quantum Circuit"
msgstr "Bir Kuantum Devresini Görselleştirme"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:31
msgid "Drawing a Quantum Circuit"
msgstr "Bir Kuantum Devresi Çizme"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:33
msgid "When building a quantum circuit, it often helps to draw the circuit. This is supported natively by a ``QuantumCircuit`` object. You can either call ``print()`` on the circuit, or call the ``draw()`` method on the object. This will render a `ASCII art version <https://en.wikipedia.org/wiki/ASCII_art>`__ of the circuit diagram."
msgstr "Bir kuantum devresi oluşturulurken genellikle devreyi çizmeye yardımcı olur. Bu, bir ``QuantumCircuit`` objesi tarafından doğal olarak desteklenir. Devrede ``print()`` çağırabilir ya da objedeki ``draw()`` yöntemini çağırabilirsiniz. Bu, devre diyagramının bir `ASCII art version <https://en.wikipedia.org/wiki/ASCII_art>`__ (ASCII sanat sürümünü) görselleştirecektir."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:199
msgid "Alternative Renderers for Circuits"
msgstr "Devreler İçin Alternatif Görselleştiriciler"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:201
msgid "A text output is useful for quickly seeing the output while developing a circuit, but it doesn't provide the most flexibility in its output. There are two alternative output renderers for the quantum circuit. One uses `matplotlib <https://matplotlib.org/>`__, and the other uses `LaTeX <https://www.latex-project.org/>`__, which leverages the `qcircuit package <https://github.com/CQuIC/qcircuit>`__. These can be specified by using ``mpl`` and ``latex`` values for the ``output`` kwarg on the draw() method."
msgstr ""

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:234
msgid "Controlling output from circuit.draw()"
msgstr "circuit.draw() içinden çıkışın denetlenmesi"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:236
msgid "By default, the ``draw()`` method returns the rendered image as an object and does not output anything. The exact class returned depends on the output specified: ``'text'`` (the default) returns a ``TextDrawer`` object, ``'mpl'`` returns a ``matplotlib.Figure`` object, and ``latex`` returns a ``PIL.Image`` object. Having the return types enables modifying or directly interacting with the rendered output from the drawers. Jupyter notebooks understand these return types and render them for us in this tutorial, but when running outside of Jupyter, you do not have this feature automatically. However, the ``draw()`` method has optional arguments to display or save the output. When specified, the ``filename`` kwarg takes a path to which it saves the rendered output. Alternatively, if you're using the ``mpl`` or ``latex`` outputs, you can leverage the ``interactive`` kwarg to open the image in a new window (this will not always work from within a notebook but will be demonstrated anyway)."
msgstr ""

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:249
msgid "Customizing the output"
msgstr "Çıktıyı özelleştirme"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:251
msgid "Depending on the output, there are also options to customize the circuit diagram rendered by the circuit."
msgstr "Çıktıya bağlı olarak, devre tarafından oluşturulan devre şemasını özelleştirme seçenekleri de vardır."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:254
msgid "Disable Plot Barriers and Reversing Bit Order"
msgstr "Çizim Bariyerlerini ve Bit Sırasını Terslemeyi Devre Dışı Bırakma"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:256
msgid "The first two options are shared among all three backends. They allow you to configure both the bit orders and whether or not you draw barriers. These can be set by the ``reverse_bits`` kwarg and ``plot_barriers`` kwarg, respectively. The examples below will work with any output backend; ``mpl`` is used here for brevity."
msgstr "İlk iki seçenek üç backend arasında paylaşılır. Hem bit sıralarını hem de bariyer çizip çizmediğinizi yapılandırmanıza izin verir. Bunlar sırasıyla ``reverse_bits`` kwarg ve ``plot_barriers`` kwarg tarafından ayarlanabilmektedir. Aşağıdaki örnekler herhangi bir çıktı backendiyle çalışacaktır; ``latex`` burada kısalık amacıyla kullanılmıştır."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:380
msgid "Backend-specific customizations"
msgstr "Arkayüzeye özgü özelleştirmeler"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:382
msgid "Some available customizing options are specific to a backend. The ``line_length`` kwarg for the ``text`` backend can be used to set a maximum width for the output. When a diagram is wider than the maximum, it will wrap the diagram below. The ``mpl`` backend has the ``style`` kwarg, which is used to customize the output. The ``scale`` option is used by the ``mpl`` and ``latex`` backends to scale the size of the output image with a multiplicative adjustment factor. The ``style`` kwarg takes in a ``dict`` with multiple options, providing a high level of flexibility for changing colors, changing rendered text for different types of gates, different line styles, etc. Available options are:"
msgstr "Mevcut bazı özelleştirme seçenekleri bir backende özgüdür. ``text`` backendi için ``line_length`` kwargı (anahtar kelime argümanı), çıktı için maksimum genişlik ayarlamak üzere kullanılabilir. Bir diyagram maksimumdan daha geniş olduğunda, aşağıdaki diyagramı sarar. ``mpl`` backendinde, çıktıyı özelleştirmek için kullanılan ``style`` kwargı bulunur. ``scale`` seçeneği, ``mpl`` ve `` latex`` tarafından, çıktı görüntüsünün boyutunu çarpımsal bir ayarlama faktörü ile ölçeklendirmek için kullanılır. ``style`` kwargı, renkleri değiştirmek için yüksek seviyeli esneklik sağlamak, farklı tipte kapılar için işlenmiş metni değiştirmek, farklı çizgi stilleri vb. için çok sayıda seçeneğe sahip bir ``dict`` alır. Mevcut seçenekler şunlardır:"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:385
msgid "**textcolor** (str): The color code to use for text. Defaults to ``'#000000'``"
msgstr "**metin rengi** (str): Metin için kullanılacak renk kodu. Varsayılan değeri ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:387
msgid "**subtextcolor** (str): The color code to use for subtext. Defaults to ``'#000000'``"
msgstr "**alt metin rengi** (str): Alt metin için kullanılacak renk kodu. Varsayılan değeri ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:389
msgid "**linecolor** (str): The color code to use for lines. Defaults to ``'#000000'``"
msgstr "**çizgi rengi** (str): Çizgiler için kullanılacak renk kodu. Varsayılan değeri ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:391
msgid "**creglinecolor** (str): The color code to use for classical register lines ``'#778899'``"
msgstr "**creglinecolor** (str): Klasik yazmaç çizgileri için kullanılacak renk kodu ``'#778899'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:393
msgid "**gatetextcolor** (str): The color code to use for gate text ``'#000000'``"
msgstr "**kapı metin rengi** (str): Kapı metni için kullanılacak renk kodu ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:395
msgid "**gatefacecolor** (str): The color code to use for gates. Defaults to ``'#ffffff'``"
msgstr "**gatefacecolor** (str): Kapılar için kullanılacak renk kodu. Varsayılan değeri ``'#ffffff'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:397
msgid "**barrierfacecolor** (str): The color code to use for barriers. Defaults to ``'#bdbdbd'``"
msgstr "**barrierfacecolor** (str): Bariyerler için kullanılacak renk kodu. Varsayılan değeri ``'#bdbdbd'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:399
msgid "**backgroundcolor** (str): The color code to use for the background. Defaults to ``'#ffffff'``"
msgstr "**backgroundcolor** (str): Arka plan için kullanılacak renk kodu. Varsayılan değeri ``'#ffffff'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:401
msgid "**fontsize** (int): The font size to use for text. Defaults to 13"
msgstr "**fontsize** (inç): Metin için kullanılacak yazı tipi boyutu. Varsayılan değer 13'tür"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:403
msgid "**subfontsize** (int): The font size to use for subtext. Defaults to 8"
msgstr "**subfontsize** (int): Alt metin için kullanılacak yazı tipi boyutu. Varsayılan değer 8"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:405
msgid "**displaytext** (dict): A dictionary of the text to use for each element type in the output visualization. The default values are:"
msgstr "**displaytext** (dict): Çıktı görselleştirmesinde her bir öğe türü için kullanılacak metnin sözlüğü. Varsayılan değerler:"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:427
msgid "You must specify all the necessary values if using this. There is no provision for an incomplete dict passed in."
msgstr "Bunu kullanıyorsanız, gerekli tüm değerleri belirtmeniz gerekir. İletilen eksik bir dict için herhangi bir önlem yoktur."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:429
msgid "**displaycolor** (dict): The color codes to use for each circuit element. By default, all values default to the value of ``gatefacecolor`` and the keys are the same as ``displaytext``. Also, just like ``displaytext``, there is no provision for an incomplete dict passed in."
msgstr "**displaycolor** (dict): Her devre elemanı için kullanılacak renk kodları. Aksi belirtilmediği takdirde, tüm değerler varsayılan olarak ``gatefacecolor`` değerine ayarlanır ve tuşlar ``displaytext`` ile aynıdır. Ayrıca, tıpkı ``displaytext`` gibi, eksik bir dict için herhangi bir hüküm yoktur."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:431
msgid "**latexdrawerstyle** (bool): When set to True, enable LaTeX mode, which will draw gates like the ``latex`` output modes."
msgstr "**latexdrawerstyle** (bool): True olarak ayarlandığında, ``latex`` çıkış modları gibi kapı çizecek LaTeX modunu etkinleştirir."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:433
msgid "**usepiformat** (bool): When set to True, use radians for output."
msgstr "**usepiformat** (bool): True olarak ayarlandığında, çıktı için radyan kullanır."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:435
msgid "**fold** (int): The number of circuit elements at which to fold the circuit. Defaults to 20"
msgstr "**fold** (int): Devrenin katlanacağı devre elemanlarının sayısı. Varsayılan değer 20"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:437
msgid "**cregbundle** (bool): If set True, bundle classical registers."
msgstr "**cregbundle** (bool): True olarak ayarlanırsa, klasik yazmaçları gruplar."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:439
msgid "**showindex** (bool): If set True, draw an index."
msgstr "**showindex** (bool): True olarak ayarlanırsa, bir dizin çizer."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:441
msgid "**compress** (bool): If set True, draw a compressed circuit."
msgstr "**compress** (bool): True olarak ayarlanırsa, sıkıştırılmış bir devre çizer."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:443
msgid "**figwidth** (int): The maximum width (in inches) for the output figure."
msgstr "**figwidth** (int): Çıktı figürü için maksimum genişlik (inç cinsinden)."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:445
msgid "**dpi** (int): The DPI to use for the output image. Defaults to 150."
msgstr "**dpi** (int): Çıktı görüntüsü için kullanılacak DPI. Varsayılan değer 150'dir."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:447
msgid "**creglinestyle** (str): The style of line to use for classical registers. Choices are ``'solid'``, ``'doublet'``, or any valid matplotlib ``linestyle`` kwarg value. Defaults to ``doublet``."
msgstr "**creglinestyle** (str): Klasik yazmaçlar için kullanılacak çizgi stili. Seçenekler ``'solid'``, ``'doublet'``, veya herhangi bir geçerli matplotlib ``linestyle`` kwarg değeridir. Varsayılan olarak ``doublet``."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:631
msgid "circuit_drawer() as function"
msgstr "fonksiyon olarak circuit_drawer()"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:633
msgid "If you have an application where you prefer to draw a circuit with a self-contained function instead of as a method of a circuit object, you can directly use the ``circuit_drawer()`` function, which is part of the public stable interface from ``qiskit.tools.visualization``. The function behaves identically to the ``circuit.draw()`` method, except that it takes in a circuit object as required argument."
msgstr "Bir devre nesnesinin metodu yerine bağımsız bir işleve sahip bir devre çizmeyi tercih ettiğiniz bir uygulamanız varsa, doğrudan ``qiskit.tools.visualization``'dan genel kaarlı arabirimin bir parçası olan ``circuit_drawer()`` işlevini kullanabilirsiniz. İşlev, bağımsız değişken olarak bir devre nesnesini alması dışında, ``circuit.draw ()`` metoduyla aynı şekilde davranır."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:639
msgid "Note: In Qiskit Terra <= 0.7, the default behavior for the circuit_drawer() function is to use the latex output backend, and in 0.6.x that includes a fallback to mpl if latex fails for any reason. Starting with release > 0.7, the default changes to the text output."
msgstr "Not: Qiskit Terra <= 0.7 içerisinde, circuit_drawer() fonksiyonu için varsayılan davranış lateks çıktı backendini kullanmaktır ve 0.6.x içerisinde, lateks herhangi bir nedenle başarısız olursa mpl'ye geri döndüren bir yedek içerir. 0.7 sürümünden büyük bir sürümle başlayarak varsayılan, metin çıktısına değişir."

