msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:51\n"
"Last-Translator: \n"
"Language: tr\n"
"Language-Team: Turkish\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "Başlarken"

#: ../../getting_started.rst:10
msgid "Installation"
msgstr "Kurulum"

#: ../../getting_started.rst:12
msgid "Let's get started using Qiskit!  The first thing to do is choose how you're going to run and install the packages.  There are three main ways to do this:"
msgstr "Hadi Qiskit'i kullanmaya başlayalım! Yapılacak ilk şey, paketleri nasıl çalıştıracağını ve nasıl kuracağını seçmek. Bunu yapmak için üç ana yol vardır:"

#: ../../getting_started.rst
msgid "Start locally"
msgstr "Yerel olarak başlat"

#: ../../getting_started.rst:19
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "Qiskit, Python 3.7 veya daha üst sürümleri desteklemektedir. Fakat, hem Python hem de Qiskit devamlı evrilen ekosistemler olduğu için herhangi birinin yeni sürümünün çıkması durumunda uyumluluk problemleri ortaya çıkabilir."

#: ../../getting_started.rst:23
msgid "You will need to `download Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ on your local system to get started. `Jupyter <https://jupyter.org/install>`__ is recommended for interacting with Qiskit."
msgstr "Başlamak için yerel sisteminize `Python <https://wiki.python.org/moin/BeginnersGuide/Download>'__ indirmeniz gerekecek. Qiskit ile etkileşim için `Jupyter <https://jupyter.org/install>`__ önerilir."

#: ../../getting_started.rst:27
msgid "We recommend using `Python virtual environments <https://docs.python.org/3.10/tutorial/venv.html>`__ to cleanly separate Qiskit from other applications and improve your experience."
msgstr "Qiskit'i diğer uygulamalardan net bir şekilde ayırabilmek ve deneyiminizi geliştirmek için `Python sanal ortamlarını <https://docs.python.org/3.10/tutorial/venv.html>`__ kullanmanızı tavsiye ederiz."

#: ../../getting_started.rst:30
msgid "Create a minimal environment with only Python installed in it."
msgstr "Yalnızca üzerinde Python kurulu olan minimal bir ortam oluşturun."

#: ../../getting_started.rst:36
msgid "Activate your new environment."
msgstr "Yeni ortamınızı etkinleştirin."

#: ../../getting_started.rst:43
msgid "Note: if you are using Windows, use the following commands in PowerShell."
msgstr "Not: Windows işletim sistemi kullanıyorsanız, PowerShell'de aşağıdaki komutları kullanın."

#: ../../getting_started.rst:51
msgid "Next, install the Qiskit package."
msgstr "Daha sonra, Qiskit paketini kurun."

#: ../../getting_started.rst:57
msgid "If the packages were installed correctly, you can run ``pip list`` to see the active packages in your virtual environment."
msgstr "Paketler doğru kurulmuşsa sanal ortamınızdaki aktif paketleri görmek için ``pip list``'i çalıştırabilirsiniz."

#: ../../getting_started.rst:60
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr "Görselleştirme işlevini veya Jupyter not defterlerini kullanmayı planlıyorsanız, ek ``görselleştirme`` desteği ile Qiskit'i kurmanız önerilir:"

#: ../../getting_started.rst:67
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr "Bir zsh kullanıcısıysanız (bu, macOS'un daha yeni sürümlerinde varsayılan kabuktur), tırnak işaretleri arasına ``qiskit[visualization]`` eklemeniz gerekeceğini belirtmekte fayda var:"

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr "Bulut üzerinde başlatma"

#: ../../getting_started.rst:76
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr "Aşağıdaki bulut sağlayıcılarının ortamlarında, önceden kurulmuş Qiskit bulunmaktadır:"

#: ../../getting_started.rst
msgid "Install from source"
msgstr "Kaynaktan kurulum"

#: ../../getting_started.rst:92
msgid "Installing Qiskit from source allows you to access the current development version, instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr ""

#: ../../getting_started.rst:97
msgid "Begin by making a new virtual environment and activating it:"
msgstr ""

#: ../../getting_started.rst:104
msgid "Installing from source requires that you have the Rust compiler on your system. To install the Rust compiler the recommended path is to use rustup, which is a cross-platform Rust installer. To use rustup you can go to:"
msgstr "Kaynaktan kurulum yapılması, sisteminizde Rust derleyicisine sahip olmanızı gerektirir. Rust derleyicisini kurmak için önerilen yol, çapraz platform Rust kuruluş programı olan rustup kullanılmasıdır. Rustup kullanmak için şu adresi kullanabilirsiniz:"

#: ../../getting_started.rst:108
msgid "https://rustup.rs/"
msgstr "https://rustup.rs/"

#: ../../getting_started.rst:110
msgid "which will provide instructions for how to install rust on your platform. Besides rustup there are `other installation methods <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ available too."
msgstr "bu da platformunuza rust nasıl kurulacağı ile ilgili talimatları sağlayacak. Ayrıca, Rustup'ın yanında `diğer kurulum yöntemleri <https://forge.rust-lang.org/infra/other-installation-methods.html>` __ de mevcuttur."

#: ../../getting_started.rst:114
msgid "Once the Rust compiler is installed, you are ready to install Qiskit."
msgstr ""

#: ../../getting_started.rst:116
msgid "Clone the Qiskit repository."
msgstr ""

#: ../../getting_started.rst:122
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr "Depoyu klonlamak ``qiskit-terra`` adında yerel bir klasör oluşturur."

#: ../../getting_started.rst:128
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "Test veya hata tarama kontrolleri yapmak istiyorsanız, geliştirici gereksinimlerini yükleyin."

#: ../../getting_started.rst:134
msgid "Install ``qiskit-terra``."
msgstr "``qiskit-terra``'yı yükleyin."

#: ../../getting_started.rst:140
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "Eğer düzenlenebilir modda kurmak istiyorsanız, yani projede yapılan kod değişikliklerinin uygulanması için yeniden yükleme gerekmiyorsa, bu işlemi şununla yapabilirsiniz:"

#: ../../getting_started.rst:147
msgid "Installing in editable mode will build the compiled extensions in debug mode without optimizations. This will affect the runtime performance of the compiled code. If you'd like to use editable mode and build the compiled code in release with optimizations enabled you can run:"
msgstr "Düzenlenebilir modda kurulum, derlenen uzantıları optimizasyon olmaksızın hata ayıklama modunda oluşturur. Bu, derlenmiş kodun çalışma zamanı performansını etkiler. Düzenlenebilir modu kullanmak ve sürümdeki derlenmiş kodu optimizasyonlar etkinken oluşturmak istiyorsanız şunları çalıştırabilirsiniz:"

#: ../../getting_started.rst:156
msgid "after you run pip and that will rebuild the binary in release mode. If you are working on Rust code in Qiskit you will need to rebuild the extension code every time you make a local change. ``pip install -e .`` will only build the Rust extension when it's called, so any local changes you make to the Rust code after running pip will not be reflected in the installed package unless you rebuild the extension. You can leverage the above ``build_rust`` command to do this (with or without ``--release`` based on whether you want to build in debug mode or release mode)."
msgstr "pip'i çalıştırdıktan sonra bu, ikiliyi yayın modunda yeniden derleyecektir. Qiskit'te Rust kodu üzerinde çalışıyorsanız, her yerel değişiklik yaptığınızda uzantı kodunu yeniden derlemeniz gerekir. ``pip install -e .`` Rust uzantısını yalnızca çağrıldığında oluşturur, bu nedenle pip'i çalıştırdıktan sonra Rust kodunda yaptığınız herhangi bir yerel değişiklik, uzantıyı yeniden derlemediğiniz sürece kurulu pakete yansıtılmaz. Bunu yapmak için yukarıdaki ``build_rust`` komutundan yararlanabilirsiniz (debug modunda mı yoksa yayın modunda mı derlemek istediğinize bağlı olarak ``--release`` ile veya olmadan)."

#: ../../getting_started.rst:165
msgid "You can then run the code examples after installing Qiskit. You can run the example with the following command."
msgstr ""

#: ../../getting_started.rst:175
msgid "Platform Support"
msgstr "Platform Desteği"

#: ../../getting_started.rst:177
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit mümkün olduğu kadar çok platformu desteklemeye çalışır, ancak mevcut test kaynaklarındaki sınırlamalar ve platform kullanılabilirliği nedeniyle tüm platformlar desteklenemez. Qiskit için platform desteği, her katman için farklı destek seviyeleri ile 3 seviyeye ayrılmıştır. Bunların dışındaki platformlar için, Qiskit muhtemelen hala kurulabilir, ancak test edilmedi ve Qiskit'i (ve muhtemelen Qiskit'in bağımlılıklarını) kaynaktan derlemeniz gerekecek."

#: ../../getting_started.rst:184
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "Ek olarak, Qiskit yalnızca CPython'u destekler. Diğer Python yorumlayıcılarıyla çalıştırma şu anda desteklenmemektedir."

#: ../../getting_started.rst:188
msgid "Tier 1"
msgstr "Seviye 1"

#: ../../getting_started.rst:190
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "Seviye 1 destekli platformlar, önerilen herhangi bir değişikliğin doğru şekilde çalışacağından emin olmak için geliştirme süreçlerinin bir parçası olarak tamamen test edilmiş üst yapılardır. Önceden derlenmiş ikili dosyalar, yayın sürecinin bir parçası olarak oluşturulur, test edilir ve PyPI'ya yayınlanır. Tüm bağımlılıklar bu platformlarda mevcut olduğundan, bu platformların yalnızca işleyen bir Python ortamıyla kurulabilmesi beklenir."

#: ../../getting_started.rst:196
msgid "Tier 1 platforms are currently:"
msgstr "Seviye 1 platformları şu anda:"

#: ../../getting_started.rst:198
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)."
msgstr "Linux x86_64 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)."

#: ../../getting_started.rst:201
msgid "macOS x86_64 (10.9 or newer)"
msgstr "macOS x86_64 (10.9 veya daha yenisi)"

#: ../../getting_started.rst:202
msgid "Windows 64 bit"
msgstr "Windows 64 bit"

#: ../../getting_started.rst:205
msgid "Tier 2"
msgstr "Seviye 2"

#: ../../getting_started.rst:207
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "Seviye 2 platformları, geliştirme sürecinin bir parçası olarak test edilmeyen üst yapılardır. Ancak, önceden derlenmiş ikili dosyalar, yayın sürecinin bir parçası olarak oluşturulur, test edilir ve PyPI'ya yayınlanır ve bu paketlerin yalnızca işleyen bir Python ortamıyla yüklenmesi beklenebilir."

#: ../../getting_started.rst:212
msgid "Tier 2 platforms are currently:"
msgstr "Seviye 2 platformları şu anda:"

#: ../../getting_started.rst:214
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Python < 3.10 için Linux i686 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)"

#: ../../getting_started.rst:217
msgid "Windows 32 bit for Python < 3.10"
msgstr "Python < 3.10 için Windows 32 bit"

#: ../../getting_started.rst:218
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)"

#: ../../getting_started.rst:223
msgid "Tier 3"
msgstr "Seviye 3"

#: ../../getting_started.rst:225
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "Seviye 3 platformları, geliştirme sürecinin bir parçası olarak test edilmeyen üst yapılardır. Önceden derlenmiş ikili dosyalar, hiçbir test yapılmadan yayın sürecinin bir parçası olarak oluşturulur ve PyPI'ya yayınlanır. Yalnızca işleyen bir Python ortamıyla yüklenemeyebilirler ve yükleme işleminin bir parçası olarak kaynaktan bağımlılıklar oluşturmak için bir C/C++ derleyicisi veya ek programlar gerektirebilir. Bu platformlar için destek daha arka plandadır."

#: ../../getting_started.rst:232
msgid "Tier 3 platforms are currently:"
msgstr "Seviye 3 platformları şu anda:"

#: ../../getting_started.rst:234
msgid "Linux ppc64le (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux ppc64le (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)"

#: ../../getting_started.rst:237
msgid "Linux s390x (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux s390x (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)"

#: ../../getting_started.rst:240
msgid "macOS arm64 (10.15 or newer)"
msgstr "macOS arm64 (10.15 veya daha yenisi)"

#: ../../getting_started.rst:241
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Python >= 3.10 için Linux i686 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ paketleme özellikleri ile uyumlu dağıtımlar)"

#: ../../getting_started.rst:244
msgid "Windows 32 bit for Python >= 3.10"
msgstr "Python >= 3.10 için Windows 32 bit"

#: ../../getting_started.rst:247
msgid "Ready to get going?..."
msgstr "Başlamaya hazır mısınız?..."

