msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-25 14:33+0000\n"
"PO-Revision-Date: 2022-05-25 15:15\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9542\n"
"Language: tr_TR\n"

#: ../../qc_intro.rst:10
msgid "Quantum computing in a nutshell"
msgstr "Özetle kuantum hesaplama"

#: ../../qc_intro.rst:12
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, search, optimization, and algebraic programs such as machine learning; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "Kuantum hesaplama, hesaplama işlemlerini gerçekleştirmek için kuantum mekaniğin temel prensiplerini kullanan hesaplamada yeni bir paradigmayı temsil eder. Eğer bunu okuyorsanız, şüphesiz çarpanlara ayırma, kuantum simülasyon, arama, optimizasyon ve makine öğrenmesi gibi cebirsel programlar; en büyük klasik bilgisayarların bile kapasitelerinin ötesinde hesaplamalar, gibi bir takım görevleri verimli bir şekilde yürütme ihtimalinin altında yatan kuantum hesaplama sözünü duymuşsunuzdur."

#: ../../qc_intro.rst:20
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "Kuantum hesaplamanın gücü, kuantum mekaniğinin iki temel taşı sırasıyla kuantum hesaplamanın dalga ve parçacık yönlerini vurgulayan girişim :ref:`interference <qc-intro-interference>` ve dolanıklık :ref:`entanglement <qc-intro-entanglement>` yatar. Qiskit, kuantum devrelerinin :ref:`quantum circuits <qc-intro-circuits>` dilini kullanarak kuantum mekaniğinin prensiplerinden faydalanan kuantum hesaplamaları yürütmek için bir SDK (yazılım geliştirme kiti) 'dir. Kuantum kapıları, talimatlar ve klasik kontrol mantığından oluşan kuantum devreleri, karmaşık algoritmaların ve uygulamaların bir kuantum bilgisayarda yürütülebilecek soyut bir şekilde ifade edilmesini sağlar. Özünde, Qiskit bir kuantum devre yapım, optimizasyon ve yürütme makinesidir. Ek algoritma ve uygulama katmanları, optimizasyon, kuantum kimyası, fizik, makine öğrenimi ve finanstaki sorunları çözmek için genellikle klasik hesaplama kaynaklarıyla uyumlu olarak kuantum devrelerinden yararlanır. Akabinde, kuantum hesaplamaya çok kısa bir genel bakış ve Qiskit'in her adımda nasıl kullanıldığını veriyoruz. Konuyla ilgilenen okuyucular, daha fazla bilgi için derinlemesine işlenen ek materyallere yönlenebilir."

#: ../../qc_intro.rst:39
msgid "Interference"
msgstr "Girişim"

#: ../../qc_intro.rst:41
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as superpositions (or superposition states)."
msgstr "Klasik bir bilgisayar gibi bir kuantum bilgisayar bitler üzerinde çalışır. Ancak, klasik bitler sadece 0 ve 1 durumlarında bulunabilirken bir kuantum bit ya da kübit 0 ve 1 değerlerini ya da ikisinin lineer kombinasyonlarını temsil edebilir. Bu lineer kombinasyonlar süperpozisyonlar (ya da süperpozisyon durumları) olarak bilinir."

#: ../../qc_intro.rst:46
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing superposition and the principle of **interference** to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "Bu kaynağın kuantum hesaplamada nasıl kullanıldığını anlamak için ilk önce klasik bir analoğa dönüyoruz: gürültü engelleme. Gürültü engelleme, örneğin gürültü önleyici kulaklıklarda yapıldığı gibi, yaklaşık olarak aynı frekans ve genlikte fakat  :math:`\\pi` ( ya da :math:`\\pi` nin herhangi bir tam tek sayısı) değeri faz dışı bir ton üreterek istenmeyen sesin genliğini azaltma girişimiyle birlikte süperpozisyon ve **girişim** ilkesi kullanılarak yürütülür."

#: ../../qc_intro.rst:57
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "Bir gürültü sinyalinin yaklaşık olarak eşit genlikte bir tonla iptal edilmesi ve :math:`\\sim \\pi fazıyla dengelenmesi."

#: ../../qc_intro.rst:60
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unencumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "Yukarıda gösterildiği gibi, faz farkı :math:`\\pi` nin tek katına yaklaştığında, iki dalganın süperpozisyonu girişimle ve orijinale kıyasla önemli ölçüde azalmış bir çıktı ile sonuçlanır. Sonuç, gürültüden etkilenmemiş ilgili sinyaldir. Bu işlem dijital devreler tarafından yapılmasına rağmen genlik ve faz, asla mükemmel bir şekilde eşleştirilemeyecek, eksik düzeltmeyle sonuçlanan sürekli değişkenlerdir."

#: ../../qc_intro.rst:67
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "Bir kuantum bilgisayar üzerinde genel bir hesaplama, gürültü engelleme ile hemen hemen aynı şekilde elde edilir. Başlamak için, bütün olası hesaplama durumlarının süperpozisyonu hazırlanır. Bu daha sonra, öngörülen algoritmaya göre süperpozisyonun bileşenlerine seçici olarak müdahele eden bir :ref:`quantum circuit <qc-intro-circuits>` için girdi olarak kullanılır. Girdi durumunun göreli genlik ve fazlarını engelledikten sonra geriye kalan kuantum devresi tarafından gerçekleştirilen hesaplamanın çözümüdür."

#: ../../qc_intro.rst:77
msgid "Quantum computation as an interference generation process."
msgstr "Bir girişim oluşturma süreci olarak kuantum hesaplama."

#: ../../qc_intro.rst:82
msgid "Entanglement"
msgstr "Dolanıklık"

#: ../../qc_intro.rst:84
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr "Kuantum hesaplamanın kullandığı kuantum mekaniğinin ikinci ilkesi **dolanıklık** olgusudur. Dolanıklık, kübitlerin bağımsız olarak içerdiğinden daha fazla bilgi içerebilen birleşik durumdaki kübitlerde, birden fazla kübitlik (veya genel olarak parçacıklar) durumları ifade eder. Çok-kübitli kuantum durumlarının çok büyük çoğunluğu dolanıktır ve değerli bir kaynağı temsil eder. Örneğin, kübitlerin göreli fiziksel yakınlığına bağlı olmadan bir kübitten diğerine bilgi iletmesi için ayarlanabilen paylaşılan dolanık iki kübitin olduğu yerde, kübitler arasındaki dolanık durumlar kuantum ışınlanma için kullanılabilir. Kuantum sistemlerin doğal durumları gibi dolanık durumlar, sonuçların genellikle çok-kübitli dolanık durum formunda olduğu kuantum simülasyon ve kuantum kimya gibi disiplinlerde de önemlidir. Örneğin onaylanmış rasgele sayılar üretmek için çok-kübitli yüksek dolanıklık kuantum durumları kullanılabilir. Bunu yapabilmek için bir Qiskit paketi bile var `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_  !"

#: ../../qc_intro.rst:102
msgid "Quantum circuits"
msgstr "Kuantum devreleri"

#: ../../qc_intro.rst:104
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "Kuantum mekanik kaynaklarını kullanan algoritmalar ve uygulamalar kolayca ve verimli bir şekilde **kuantum devreleri** nin dilinde yazılabilir. Bir kuantum devresi, kübitlerde tutulanlar gibi kuantum verileri üzerindeki eşevreli kuantum işlemlerini ve eş zamanlı gerçek zamanlı klasik hesaplamaları içeren bir hesaplama rutinidir. Bir devredeki her yatay çizgi ya da kablo bir kübiti, telin sol ucu başlangıç kuantum verisini ve sağ ucu kuantum devrenin hesaplamasıyla üretilen son kuantum verisini temsil eder. Kübitlerle ilişkili işlemler bu kablolara yerleştirilebilir ve kutularla temsil edilir."

#: ../../qc_intro.rst:116
msgid "Quantum state teleportation circuit revisited."
msgstr "Kuantum durum ışınlanma devresinin yeniden ele alınması."

#: ../../qc_intro.rst:118
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "Kuantum devreleri, bir kuantum bilgisayarın klasik bilgiyi almasına ve klasik bir çözüm üretmesine olanak tanır ve hesaplamayı gerçekleştirmek için :ref:`interference <qc-intro-interference>` ve :ref:`entanglement <qc-intro-entanglement>` gibi kuantum ilkelerinden yararlanır."

#: ../../qc_intro.rst:123
msgid "A typical quantum algorithm workflow consists of:"
msgstr "Tipik bir kuantum algoritması iş akışı şunlardan oluşur:"

#: ../../qc_intro.rst:125
msgid "The problem we want to solve,"
msgstr "Çözmek istediğimiz problem,"

#: ../../qc_intro.rst:126
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "Bir kuantum devresinin tanımını yapan klasik bir algoritma,"

#: ../../qc_intro.rst:127
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "Kuantum donanımı üzerinde çalıştırılması gereken kuantum devresi,"

#: ../../qc_intro.rst:128
msgid "And the output classical solution to the problem that it produces."
msgstr "Ve üretilen soruna klasik çözümün çıkışı."

#: ../../qc_intro.rst:130
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamard (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit to another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract partial information about a qubit's state, often losing the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr ""

#: ../../qc_intro.rst:149
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr "Bazı iş yükleri genişleştirilmiş bir dizi kuantum devresi ve klasik hesaplama içerir, örneğin değişimsel kuantum algoritmaları optimizasyon döngüsü içerisinde kuantum devreleri yürütür. Bu iş yükleri için eğer kuantum devreleri parametrelendirilmiş ve devre yürütme ve güncel olmayan klasik hesaplama arasındaki geçişler verimli yapılmışsa sistem performansı oldukça artar. Dolayısıyla, hesaplama süresini hızlandırılmak için geliştirilmiş donanımla kuantum devrelerini tekrar tekrar kullanan algoritmalarla hesaplamaları ifade etmek için **yakın zamanlı hesaplama** sını tanımlıyoruz. Yakın zamanlı hesaplamada, klasik hesaplama kuantum hesaplamasının eş fazlılık durumundan daha uzun bir zaman ölçeğinde gerçekleşir. Bunu kuantum cihazının eşevresizlik zamanı içerisinde gerçekleşen klasik hesaplamanın olduğu **gerçek zamanlı hesaplama** ile karşılaştırın."

#: ../../qc_intro.rst:160
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit, that support a rich feature set of operations, and can be passed to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators. With only a few lines of code, it is possible to construct complex circuits like the one above."
msgstr ""

#: ../../qc_intro.rst:191
msgid "Quantum computers"
msgstr "Kuantum bilgisayarlar"

#: ../../qc_intro.rst:197
msgid "A view inside the IBM Quantum System One."
msgstr "IBM Quantum System One'ın içinden bir görünüm."

#: ../../qc_intro.rst:199
msgid "Quantum computers which are programmed using quantum circuits can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr "Kuantum devreleri kullanılarak programlanan kuantum bilgisayarları kübit ögelerinin tanımlanmasına imkan sağlayan, tek ve çok kübitli kapı işlemlerini yüksek doğrulukla uygulayabilen herhangi bir kuantum teknolojisi ile üretilebilir. Şu anda, süper iletken devreleri, tuzaklanmış iyonları, yarı iletken kuantum noktalarını, fotonları ve nötr atomları temel alan mimariler aktif olarak geliştirilmektedir ve birçoğuna internet üzerinden kullanıcılar tarafından erişilebilir. Qiskit, belirli bir kuantum sisteminin temel mimarisine göre agnostiktir ve bir kuantum cihazının dolanıklaştırma kapısı topolojisine uyacak bir kuantum devresi derleyebilir, devre talimatlarını cihazın yerel kapı setine eşleyebilir ve ortaya çıkan kuantum devresini gelişmiş doğruluk için optimize edebilir."

#: ../../qc_intro.rst:209
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr "Yukarıdaki gürültü giderme örneğinde olduğu gibi, kübitlerin genliği ve fazı, işlemlerin asla tam olarak yapılamayacağı sürekli serbestlik dereceleridir. Bu kapı hataları, kuantum bilgisayarların bulunduğu ortamdan gelen gürültüyle birlikte, derleme sürecinde hesaba katılmazsa hesaplamayı bozmak için gizlice anlaşabilir ve gürültüye duyarlı kuantum sistemlerinde yüksek doğruluklu bir çıktı elde etmek için ek azaltma işlemleri gerekebilir. Qiskit, derleme stratejisinde çok çeşitli cihaz kalibrasyon ölçümlerini (aşağıdaki şekle bakın) hesaba katabilir ve belirli bir kuantum devresini çalıştırmak için en uygun kübit kümesini seçebilir. Ek olarak, Qiskit bir kuantum devreleri çıktısının aslına uygun bir temsilini çıkarmak için bir dizi gürültü azaltma tekniğine ev sahipliği yapıyor."

#: ../../qc_intro.rst:223
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "IBM Quantum *ibmq_manhattan* sistemi için topoloji ve hata oranları."

#: ../../qc_intro.rst:227
msgid "Where to go from here"
msgstr "Buradan nereye gidilir"

#: ../../qc_intro.rst:229
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr "Umarız okuyucuya kuantum hesaplamanın neler sunabileceğine dair bir tat vermişizdir ve siz daha fazlası için açsınızdır. Eğer öyleyse, ilginizi çekebilecek birkaç kaynak var:"

#: ../../qc_intro.rst:233
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`Getting started with Qiskit <getting_started.html>`_ - Doğrudan Qiskit'e dalın."

#: ../../qc_intro.rst:235
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : Etkileşimli devre oluşturucuyu kullanan kuantum hesaplamanın bazı kurucuları tarafından yazılmış, fizik temelli hafif bir giriş."

#: ../../qc_intro.rst:239
msgid "`Qiskit textbook <https://qiskit.org/textbook>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr "`Qiskit textbook <https://qiskit.org/textbook>`_ : Qiskit'e dayalı bir üniversite kuantum algoritmaları/hesaplama kursu eki."

