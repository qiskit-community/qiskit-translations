msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-25 20:32\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"
"Language: ru_RU\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "Начало работы"

#: ../../getting_started.rst:8
msgid "Installation"
msgstr "Инструкция по установке"

#: ../../getting_started.rst
msgid "Start locally"
msgstr "Запустить локально"

#: ../../getting_started.rst:12
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "Qiskit поддерживает Python 3.7 или новее. Тем не менее, Python и Qiskit развиваются независимо друг от друга, что может привести к проблемам с совместимостью при обновлении одной из данных экосистем."

#: ../../getting_started.rst:16
msgid "We recommend installing `Anaconda <https://www.anaconda.com/download/>`__, a cross-platform Python distribution for scientific computing. Jupyter, included in Anaconda, is recommended for interacting with Qiskit."
msgstr "Мы рекомендуем установить `Anaconda <https://www.anaconda.com/download/>` __ - межплатформенный дистрибутив Python, включающий набор популярных библиотек для научных вычислений. Программа Jupyter, включённая в Anaconda, рекомендуется для взаимодействия с Qiskit."

#: ../../getting_started.rst:20
msgid "We recommend using Python virtual environments to cleanly separate Qiskit from other applications and improve your experience."
msgstr "Мы рекомендуем использовать виртуальные среды Python для четкого разграничения Qiskit от других приложений."

#: ../../getting_started.rst:23
msgid "The simplest way to use environments is by using the ``conda`` command, included with Anaconda. A Conda environment allows you to specify a specific version of Python and set of libraries. Open a terminal window in the directory where you want to work."
msgstr "Самый простой способ взаимодействия со средой - это использовать команду ``conda``, включенную в Anaconda. Окружение Conda позволяет указать конкретную версию Python и набор библиотек. Откройте окно терминала в папке, в которой Вы хотите работать."

#: ../../getting_started.rst:28
msgid "It is preferred that you use the Anaconda prompt installed with Anaconda. All you have to do is create a virtual environment inside Anaconda and activate the environment. These commands can be run in the Anaconda prompt irrespective of Windows or Linux machine."
msgstr "Рекомендуется использовать терминал Anaconda, установленный вместе с Anaconda. Все, что Вам нужно сделать - это создать виртуальную среду внутри Anaconda и активировать ее. Эти команды можно запустить в терминале Anaconda независимо от операционной системы Windows или Linux."

#: ../../getting_started.rst:32
msgid "Create a minimal environment with only Python installed in it."
msgstr "Создайте минимальную среду, где установлен только Python."

#: ../../getting_started.rst:38
msgid "Activate your new environment."
msgstr "Активируйте среду."

#: ../../getting_started.rst:45
msgid "Next, install the Qiskit package."
msgstr "Далее, установите пакет Qiskit."

#: ../../getting_started.rst:51
msgid "If the packages were installed correctly, you can run ``conda list`` to see the active packages in your virtual environment."
msgstr "Если установка пакетов произошла успешно, команда ``conda list`` покажет активные пакеты в Вашей виртуальной среде."

#: ../../getting_started.rst:54
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr "Если Вы собираетесь использовать визуализацию или блокноты Jupyter, рекомендуется установить Qiskit с дополнительной поддержкой ``visualization``:"

#: ../../getting_started.rst:61
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr "Стоит отметить, что если Вы используете zsh (оболочка по умолчанию для более новых версий macOS), Вам нужно поставить ``qiskit[visualization]`` в кавычках:"

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr "Запустить в облаке"

#: ../../getting_started.rst:71
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr "Следующие облачные вендоры (поставщики) имеют в своей среде предварительно установленный Qiskit:"

#: ../../getting_started.rst
msgid "Install from source"
msgstr "Установить из исходного кода"

#: ../../getting_started.rst:103
msgid "Installing the elements from source allows you to access the most recently updated version of Qiskit instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr "Установка элементов из исходного кода позволит Вам получить доступ к последней обновленной версии Qiskit вместо использования версии из репозитория Python Package Index (PyPI). Это даст Вам возможность более эффективно изучить и улучшить последнюю версию Qiskit кода."

#: ../../getting_started.rst:108
msgid "When installing the elements and components from source, by default their ``development`` version (which corresponds to the ``master`` git branch) will be used, as opposed to the ``stable`` version (which contains the same codebase as the published ``pip`` packages). Since the ``development`` versions of an element or component usually include new features and changes, they generally require using the ``development`` version of the rest of the items as well."
msgstr "При установке компонентов из исходного кода, по умолчанию будет использоваться их ``development`` версия (которая соответствует ``master`` ветке в git), а не ``stable`` версия (которая содержит тот же код, что и опубликованные пакеты ``pip``). Поскольку ``development`` версии элемента или компонента обычно включают в себя новые функции и последние изменения, они обычно требуют использования ``development`` версии и остальных компонентов."

#: ../../getting_started.rst:117
msgid "The Terra and Aer packages both require a compiler to build from source before you can install. Ignis, Aqua, and the IBM Quantum Provider backend do not require a compiler."
msgstr "Пакеты Terra и Aer требуют компилятор для сборки из исходного кода перед установкой. Ignis, Aqua и IBM Quantum Provider не требуют компилятора."

#: ../../getting_started.rst:121
msgid "Installing elements from source requires the following order of installation to prevent installing versions of elements that may be lower than those desired if the ``pip`` version is behind the source versions:"
msgstr "Установка элементов из исходного кода требует следующего порядка установки. Это нужно для предотвращения использования версий, которые могут быть ниже желаемых, если ``pip`` версия старее, чем версия из исходного кода:"

#: ../../getting_started.rst:125
msgid ":ref:`qiskit-terra <install-qiskit-terra>`"
msgstr ":ref:`qiskit-terra <install-qiskit-terra>`"

#: ../../getting_started.rst:126
msgid ":ref:`qiskit-aer <install-qiskit-aer>`"
msgstr ":ref:` qiskit-aer <install-qiskit-aer>`"

#: ../../getting_started.rst:127
msgid ":ref:`qiskit-ignis <install-qiskit-ignis>`"
msgstr ":ref:`qiskit-ignis <install-qiskit-ignis>`"

#: ../../getting_started.rst:128
msgid ":ref:`qiskit-ibmq-provider <install-qiskit-ibmq-provider>` (if you want to connect to the IBM Quantum devices or online simulator)"
msgstr ":ref:`qiskit-ibmq-provider <install-qiskit-ibmq-provider>` (если вы хотите подключиться к устройствам IBM Quantum или интерактивному симулятору)"

#: ../../getting_started.rst:132
msgid "To work with several components and elements simultaneously, use the following steps for each element."
msgstr "Для одновременной работы с несколькими компонентами и элементами, выполните следующие действия для каждого элемента."

#: ../../getting_started.rst:137
msgid "Due to the use of namespace packaging in Python, care must be taken in how you install packages. If you're planning to install any element from source, do not use the ``qiskit`` meta-package. Also, follow this guide and use a separate virtual environment for development. If you do choose to mix an existing installation with your development, refer to https://github.com/pypa/sample-namespace-packages/blob/master/table.md for the set of combinations of installation methods that work together."
msgstr "Из-за использования пространства имен в Python, необходимо следить за тем, как устанавливаются пакеты. Не используйте метапакет ``qiskit``, если вы планируете установить какой-либо элемент из исходного кода. Также следуйте данному руководству и используйте отдельную виртуальную среду (virtual environment) для разработки. Если вы хотите смешать существующие установленные пакеты с вашими пакетами для разработки, перейдите на страницу https://github.com/pypa/sample-namespace-packages/blob/master/table.md, чтобы найти рабочие комбинации."

#: ../../getting_started.rst:160
msgid "Installing from source requires that you have a C++ compiler on your system that supports C++11."
msgstr "Установка из исходного кода требует наличия компилятора C++ в системе, поддерживающей C++11."

#: ../../getting_started.rst
msgid "Compiler for Linux"
msgstr "Компилятор для Linux"

#: ../../getting_started.rst:166
msgid "On most Linux platforms, the necessary GCC compiler is already installed."
msgstr "На большинстве платформ Linux уже установлен необходимый компилятор GCC."

#: ../../getting_started.rst
msgid "Compiler for macOS"
msgstr "Компилятор для macOS"

#: ../../getting_started.rst:170
msgid "If you use macOS, you can install the Clang compiler by installing XCode. Check if you have XCode and Clang installed by opening a terminal window and entering the following."
msgstr "Если Вы используете macOS, то можно установить компилятор Clang, предварительно установив XCode. Проверьте, установлены ли XCode и Clang на Вашей системе, открыв окно терминала и введя следующее."

#: ../../getting_started.rst:178
msgid "Install XCode and Clang by using the following command."
msgstr "Установите XCode и Clang с помощью следующей команды."

#: ../../getting_started.rst
msgid "Compiler for Windows"
msgstr "Компилятор для Windows"

#: ../../getting_started.rst:186
msgid "On Windows, it is easiest to install the Visual C++ compiler from the `Build Tools for Visual Studio 2019 <https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019>`__. You can instead install Visual Studio version 2015 or 2017, making sure to select the options for installing the C++ compiler."
msgstr "В Windows проще всего установить компилятор Visual C++ из `Build Tools for Visual Studio 2019 <https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2019>`__. Также вы можете установить Visual Studio версий 2015 или 2017, выбрав в параметрах установки компилятор С++."

#: ../../getting_started.rst:192
msgid "Once the compilers are installed, you are ready to install Qiskit Terra."
msgstr "После установки компилятора все готово для установки Qiskit Terra."

#: ../../getting_started.rst:194
msgid "Clone the Terra repository."
msgstr "Клонируйте репозиторий Terra."

#: ../../getting_started.rst:200
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr "Клонирование репозитория создает локальную папку с названием ``qiskit-terra``."

#: ../../getting_started.rst:206
msgid "Install the Python requirements libraries from your ``qiskit-terra`` directory."
msgstr "Установите необходимые библиотеки Python из Вашей папки ``qiskit-terra``."

#: ../../getting_started.rst:212
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "Если Вы хотите запустить тесты, установите необходимые инструменты для разработчика."

#: ../../getting_started.rst:218
msgid "Install ``qiskit-terra``."
msgstr "Установите ``qiskit-terra``."

#: ../../getting_started.rst:224
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "Если Вы хотите установить Qiskit Terra в редактируемом режиме, который позволяет не переустанавливать пакет в случае изменения кода в проекте, Вы можете сделать это с помощью:"

#: ../../getting_started.rst:231
msgid "You can then run the code examples after installing Terra. You can run the example with the following command."
msgstr "После установки Terra, Вы можете запустить примеры работы с кодом. Запуск примера производится следующей командой."

#: ../../getting_started.rst:241
msgid "If you do not intend to install any other components, qiskit-terra will emit a ``RuntimeWarning`` warning that both qiskit-aer and qiskit-ibmq-provider are not installed. This is done because users commonly intend to use the additional elements, but do not realize they are not installed, or that the installation of either Aer or the IBM Quantum Provider failed for some reason. If you wish to suppress these warnings, add::"
msgstr "Если Вы не хотите устанавливать какие-либо другие компоненты, qiskit-terra выведет ``RuntimeWarning`` - предупреждение о том, что qiskit-aer и qiskit-ibmq-provider не установлены. Это делается потому, что пользователи обычно намерены использовать дополнительные элементы, но не осознают, что они не установлены, или что установка Aer или IBM Quantum Provider завершилась ошибкой по какой-то причине. Если Вы хотите скрыть эти предупреждения, добавьте:"

#: ../../getting_started.rst:253
msgid "before any ``qiskit`` imports in your code. This will suppress the warning about the missing qiskit-aer and qiskit-ibmq-provider, but will continue to display any other warnings from qiskit or other packages."
msgstr "перед тем как импортировать компоненты ``qiskit`` в код. Это скроет предупреждение об отсутствии qiskit-aer и qiskit-ibmq-provider, а другие предупреждения из qiskit или других пакетов продолжат отображаться."

#: ../../getting_started.rst:263
msgid "Clone the Aer repository."
msgstr "Клонируйте репозиторий Aer."

#: ../../getting_started.rst:269
msgid "Install build requirements."
msgstr "Установите требования для сборки."

#: ../../getting_started.rst:275
msgid "After this, the steps to install Aer depend on which operating system you are using. Since Aer is a compiled C++ program with a Python interface, there are non-Python dependencies for building the Aer binary which can't be installed universally depending on operating system."
msgstr "После этого шаги по установке Aer зависят от используемой Вами операционной системы. Поскольку Aer является скомпилированной программой C++ с интерфейсом на Python, существуют другие зависимости помимо Python для построения бинарного файла Aer, который не может быть установлен без зависимости от операционной системы."

#: ../../getting_started.rst:283 ../../getting_started.rst:347
msgid "Install compiler requirements."
msgstr "Установите требования компилятора."

#: ../../getting_started.rst:285
msgid "Building Aer requires a C++ compiler and development headers."
msgstr "Для сборки Aer требуется C++ компилятор и заголовки разработки (development headers)."

#: ../../getting_started.rst:287 ../../getting_started.rst:302
msgid "If you're using Fedora or an equivalent Linux distribution, install using:"
msgstr "Для Fedora или аналогичного дистрибутива Linux, для установки используйте:"

#: ../../getting_started.rst:294 ../../getting_started.rst:309
msgid "For Ubuntu/Debian install it using:"
msgstr "Для Ubuntu/Debian, используйте:"

#: ../../getting_started.rst:300
msgid "Install OpenBLAS development headers."
msgstr "Установите заголовки разработки (development headers) OpenBLAS."

#: ../../getting_started.rst:318
msgid "Install dependencies."
msgstr "Установите зависимости."

#: ../../getting_started.rst:320
msgid "To use the `Clang <https://clang.llvm.org/>`__ compiler on macOS, you need to install an extra library for supporting `OpenMP <https://www.openmp.org/>`__.  You can use `brew <https://brew.sh/>`__ to install this and other dependencies."
msgstr "Для использования компилятора ` Clang <https://clang.llvm.org/>` __ в macOS, необходимо установить дополнительную библиотеку для поддержки ` OpenMP <https://www.openmp.org/>` __. Вы можете использовать ` brew <https://brew.sh/>` __ для установки этой и других зависимостей."

#: ../../getting_started.rst:328
msgid "Then install a BLAS implementation; `OpenBLAS <https://www.openblas.net/>`__ is the default choice."
msgstr "Затем установите реализацию BLAS; `OpenBLAS <https://www.openblas.net/>`__ является выбором по умолчанию."

#: ../../getting_started.rst:335
msgid "Next, install ``Xcode Command Line Tools``."
msgstr "Далее, установите ``Xcode Command Line Tools``."

#: ../../getting_started.rst:343
msgid "On Windows you need to use `Anaconda3 <https://www.anaconda.com/distribution/#windows>`__ or `Miniconda3 <https://docs.conda.io/en/latest/miniconda.html>`__ to install all the dependencies."
msgstr "В Windows необходимо использовать `Anaconda3 <https://www.anaconda.com/distribution/#windows>` __ или `Miniconda3 <https://docs.conda.io/en/latest/miniconda.html>` __ для установки всех зависимостей."

#: ../../getting_started.rst:353
msgid "Qiskit Aer is a high performance simulator framework for quantum circuits. It provides `several backends <apidoc/aer_provider.html#simulator-backends>`__ to achieve different simulation goals."
msgstr "Qiskit Aer представляет собой мощную платформу для симуляции квантовых цепей. Для достижения конкретных целей предусмотрены `различные симуляторы <apidoc/aer_provider.html#simulator-backends>` __."

#: ../../getting_started.rst:362
msgid "Build and install qiskit-aer directly"
msgstr "Постройте и установите qiskit-aer."

#: ../../getting_started.rst:364
msgid "If you have pip <19.0.0 installed and your environment doesn't require a custom build, run:"
msgstr "Если у Вас установлен pip <19.0.0 и Ваша среда не требует пользовательской сборки, запустите:"

#: ../../getting_started.rst:372
msgid "This will both build the binaries and install Aer."
msgstr "Это запустит сборку бинарных файлов и установит Aer."

#: ../../getting_started.rst:374
msgid "Alternatively, if you have a newer pip installed, or have some custom requirement, you can build a Python wheel manually."
msgstr "В качестве альтернативы, если у Вас установлен новый pip или у Вас есть особые требования, Вы можете создать Python wheel вручную."

#: ../../getting_started.rst:382
msgid "If you need to set a custom option during the wheel build, refer to :ref:`aer_wheel_build_options`."
msgstr "Если Вам нужно установить пользовательский параметр во время сборки, обратитесь к :ref:`aer_wheel_build_options`."

#: ../../getting_started.rst:385
msgid "After you build the Python wheel, it will be stored in the ``dist/`` dir in the Aer repository. The exact version will depend"
msgstr "Результат сборки будет храниться в каталоге ``dist/`` репозитория Aer. Точная версия зависит от используемой."

#: ../../getting_started.rst:393
msgid "The exact filename of the output wheel file depends on the current version of Aer under development."
msgstr "Точное имя файла зависит от текущей версии Aer."

#: ../../getting_started.rst:402
msgid "The Aer build system uses `scikit-build <https://scikit-build.readthedocs.io/en/latest/index.html>`__ to run the compilation when building it with the Python interface. It acts as an interface for `setuptools <https://setuptools.readthedocs.io/en/latest/>`__ to call `CMake <https://cmake.org/>`__ and compile the binaries for your local system."
msgstr "Система сборки Aer использует `scikit-build <https://scikit-build.readthedocs.io/en/latest/index.html>`__ для запуска компиляции при сборке с помощью Python интерфейса. Он выступает в качестве интерфейса `setuptools <https://setuptools.readthedocs.io/en/latest/>`__ для вызова `CMake <https://cmake.org/>`__ и компиляции бинарных файлов для Вашей системы."

#: ../../getting_started.rst:407
msgid "Due to the complexity of compiling the binaries, you may need to pass options to a certain part of the build process. The way to pass variables is:"
msgstr "Из-за сложности компиляции бинарных файлов Вам может потребоваться передать параметры определенной части процесса сборки. Способ их передачи:"

#: ../../getting_started.rst:414
msgid "where the elements within square brackets `[]` are optional, and ``skbuild_opts``, ``cmake_opts``, ``build_tool_opts`` are to be replaced by flags of your choice. A list of *CMake* options is available here: https://cmake.org/cmake/help/v3.6/manual/cmake.1.html#options. For example, you could run something like:"
msgstr "где элементы в квадратных скобках `[]` необязательны, и ``skbuild_opts``, ``cmake_opts``, ``build_tool_opts`` должны будут быть заменены на флаги на Ваш выбор. Список опций *CMake* доступен здесь: https://cmake.org/cmake/help/v3.6/manual/cmake.1.html#options. Например, Вы можете запустить следующее:"

#: ../../getting_started.rst:424
msgid "This is passing the flag `-j8` to the underlying build system (which in this case is `Automake <https://www.gnu.org/software/automake/>`__), telling it that you want to build in parallel using 8 processes."
msgstr "Это передает флаг `-j8` базовой системе сборки (что в данном случае является `Automake <https://www.gnu.org/software/automake/>`__), говоря ей о том, что Вы хотите использовать 8 процессов для параллельной сборки."

#: ../../getting_started.rst:428
msgid "For example, a common use case for these flags on linux is to specify a specific version of the C++ compiler to use (normally if the default is too old):"
msgstr "Например, общий вариант использования этих флагов в Linux - указать конкретную версию компилятора C++ (если использующийся по умолчанию слишком старый):"

#: ../../getting_started.rst:436
msgid "which will tell CMake to use the g++-7 command instead of the default g++ when compiling Aer."
msgstr "что даст инструкцию CMake использовать команду g++-7 вместо g++ по умолчанию при компиляции Aer."

#: ../../getting_started.rst:439
msgid "Another common use case for this, depending on your environment, is that you may need to specify your platform name and turn off static linking."
msgstr "Другим распространенным вариантом использования, в зависимости от среды - указать название вашей платформы и отключить статическую связь (static linking)."

#: ../../getting_started.rst:447
msgid "Here ``--plat-name`` is a flag to setuptools, to specify the platform name to use in the package metadata, ``-DSTATIC_LINKING`` is a flag for using CMake to disable static linking, and ``-j8`` is a flag for using Automake to use 8 processes for compilation."
msgstr "Здесь ``-- plat-name`` - флаг setuptools для указания названия платформы для использования в метаданных пакета; ``-DSTATIC_LINKING`` - флаг CMake для отключения статического связывания, а ``-j8`` - флаг Automake для использования 8 процессов для компиляции."

#: ../../getting_started.rst:452
msgid "A list of common options depending on platform are:"
msgstr "Список общих параметров в зависимости от платформы:"

#: ../../getting_started.rst:455
msgid "Platform"
msgstr "Платформа"

#: ../../getting_started.rst:455
msgid "Tool"
msgstr "Инструмент"

#: ../../getting_started.rst:455
msgid "Option"
msgstr "Параметр"

#: ../../getting_started.rst:455
msgid "Use Case"
msgstr "Вариант использования"

#: ../../getting_started.rst:457
msgid "All"
msgstr "Все"

#: ../../getting_started.rst:457
msgid "Automake"
msgstr "Automake"

#: ../../getting_started.rst:457
msgid "-j"
msgstr "-j"

#: ../../getting_started.rst:457
msgid "Followed by a number, sets the number of processes to use for compilation."
msgstr "Число после параметра устанавливает количество процессов для использования во время компиляции."

#: ../../getting_started.rst:460
msgid "Linux"
msgstr "Linux"

#: ../../getting_started.rst:460 ../../getting_started.rst:467
msgid "CMake"
msgstr "CMake"

#: ../../getting_started.rst:460
msgid "-DCMAKE_CXX_COMPILER"
msgstr "-DCMAKE_CXX_COMPILER"

#: ../../getting_started.rst:460
msgid "Used to specify a specific C++ compiler; this is often needed if your default g++ is too old."
msgstr "Используется для указания конкретного компилятора C++, что часто необходимо, если ваш g++ слишком старый."

#: ../../getting_started.rst:464 ../../getting_started.rst:467
msgid "OSX"
msgstr "OSX"

#: ../../getting_started.rst:464
msgid "setuptools"
msgstr "setuptools"

#: ../../getting_started.rst:464
msgid "--plat-name"
msgstr "--plat-name"

#: ../../getting_started.rst:464
msgid "Used to specify the platform name in the output Python package."
msgstr "Используется для указания названия платформы в выходном Python пакете."

#: ../../getting_started.rst:467
msgid "-DSTATIC_LINKING"
msgstr "-DSTATIC_LINKING"

#: ../../getting_started.rst:467
msgid "Used to specify whether or not static linking should be used."
msgstr "Используется для указания того, следует ли использовать статическое связывание."

#: ../../getting_started.rst:472
msgid "Some of these options are not platform-specific. These particular platforms are listed because they are commonly used in the environment. Refer to the tool documentation for more information."
msgstr "Некоторые из этих опций не зависят от платформы. Эти платформы перечислены, потому что они часто используются. Обратитесь к документации конкретного инструмента для получения дополнительной информации."

#: ../../getting_started.rst:482
msgid "Clone the Ignis repository."
msgstr "Клонируйте репозиторий Ignis."

#: ../../getting_started.rst:488
msgid "Cloning the repository creates a local directory called ``qiskit-ignis``."
msgstr "Клонирование репозитория создает локальную папку с названием ``qiskit-ignis``."

#: ../../getting_started.rst:494
msgid "If you want to run tests or linting checks, install the developer requirements. This is not required to install or use the qiskit-ignis package when installing from source."
msgstr "Если Вы хотите запустить тесты, установите необходимые инструменты для разработчика. Необязательно использовать пакет qiskit-ignis при установке из исходного кода."

#: ../../getting_started.rst:502
msgid "Install Ignis."
msgstr "Установите Ignis."

#: ../../getting_started.rst:508 ../../getting_started.rst:547
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied:"
msgstr "Если Вы хотите установить пакет в редактируемом режиме, который позволяет не переустанавливать пакет в случае изменения кода в проекте, Вы можете сделать это с помощью:"

#: ../../getting_started.rst:521
msgid "Clone the qiskit-ibmq-provider repository."
msgstr "Клонируйте репозиторий qiskit-ibmq-provider."

#: ../../getting_started.rst:527
msgid "Cloning the repository creates a local directory called ``qiskit-ibmq-provider``."
msgstr "Клонирование репозитория создает локальную папку с названием ``qiskit-ibmq-provider``."

#: ../../getting_started.rst:533
msgid "If you want to run tests or linting checks, install the developer requirements. This is not required to install or use the qiskit-ibmq-provider package when installing from source."
msgstr "Если Вы хотите запустить тесты, установите необходимые инструменты для разработчика. Необязательно использовать пакет qiskit-ibmq-provider при установке из исходного кода."

#: ../../getting_started.rst:541
msgid "Install qiskit-ibmq-provider."
msgstr "Установите qiskit-ibmq-provider."

#: ../../getting_started.rst:555
msgid "Platform Support"
msgstr "Поддерживаемые Платформы"

#: ../../getting_started.rst:557
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit стремится поддерживать как можно больше платформ, но из-за ограничений доступных ресурсов тестирования и доступности платформ, к сожалению невозможно поддерживать все платформы. Поддержка платформ для Qiskit разбита на 3 уровня с разным уровнем поддержки для каждого уровня. Для платформ вне этого списка, Qiskit, вероятно, по-прежнему можно установить, но он не тестируется и Вам придется верстать Qiskit (и, вероятно, зависимости Qiskit) из источника."

#: ../../getting_started.rst:564
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "Кроме того, Qiskit поддерживает только CPython. Работа с другими интерпретатами Python в настоящее время не поддерживается."

#: ../../getting_started.rst:568
msgid "Tier 1"
msgstr "Уровень 1"

#: ../../getting_started.rst:570
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "Платформы первого уровня поддержки полностью тестируются в рамках процессов разработки для обеспечения правильного функционирования всех компонентов. Прекомпилированные бинарные файлы верстаются, тестируются и публикуются в PyPI в рамках процесса выпуска. Эти платформы должны иметь функционирующую среду Python, все остальные зависимости должны быть доступны на этих платформах."

#: ../../getting_started.rst:576
msgid "Tier 1 platforms are currently:"
msgstr "В настоящее время, платформами первого уровня поддержки являются:"

#: ../../getting_started.rst:578
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification."
msgstr "Linux x86_64 (дистрибутивы, совместимые со спецификацией упаковки `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`)."

#: ../../getting_started.rst:581
msgid "macOS x86_64 (10.9 or newer)"
msgstr "macOS x86_64 (10.9 или новее)"

#: ../../getting_started.rst:582
msgid "Windows 64 bit"
msgstr "Windows 64-разрядная версия"

#: ../../getting_started.rst:585
msgid "Tier 2"
msgstr "Уровень 2"

#: ../../getting_started.rst:587
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "Платформы второго уровня поддержки не тестируются в рамках процессов разработки для обеспечения правильного функционирования всех компонентов. Тем не менее, прекомпилированные бинарные файлы верстаются, тестируются и публикуются в PyPI в рамках процесса выпуска. Для установки этих пакетов должно быть достаточно только функционирующей среды Python."

#: ../../getting_started.rst:592
msgid "Tier 2 platforms are currently:"
msgstr "Текущие платформы второго уровня поддержки:"

#: ../../getting_started.rst:594
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Linux i686 (дистрибутивы, совместимые со спецификацией упаковки `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`) для Python < 3.10"

#: ../../getting_started.rst:597
msgid "Windows 32 bit for Python < 3.10"
msgstr "Windows 32-разрядная версия для Python < 3.10"

#: ../../getting_started.rst:598
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64 (дистрибутивы, совместимые со спецификацией упаковки `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`)"

#: ../../getting_started.rst:603
msgid "Tier 3"
msgstr "Уровень 3"

#: ../../getting_started.rst:605
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "Платформы третьего уровня не тестируются. Предварительно скомпилированные двоичные файлы создаются и публикуются в PyPI, являясь частью процесса выпуска, без каких-либо испытаний. Возможно, они не будут работать только с функционирующей средой Python и могут потребовать компилятор C/C++, или дополнительные программы для построения зависимостей от источника как часть процесса установки. Поддержка этих платформ осуществляется только по мере возможностей."

#: ../../getting_started.rst:612
msgid "Tier 3 platforms are currently:"
msgstr "Платформами третьего уровня поддержки на данный момент являются:"

#: ../../getting_started.rst:614
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Linux i686 (дистрибутивы, совместимые со спецификацией упаковки `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`) для Python >= 3.10"

#: ../../getting_started.rst:617
msgid "Windows 32bit for Python >= 3.10"
msgstr "Windows 32-разрядная версия для Python >= 3.10"

#: ../../getting_started.rst:618
msgid "macOS arm64 (10.15 or newer)"
msgstr "macOS arm64 (10.15 или новее)"

#: ../../getting_started.rst:621
msgid "Ready to get going?..."
msgstr "Готовы идти дальше?"

