msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-05 13:02+0000\n"
"PO-Revision-Date: 2022-05-28 13:32\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: ru_RU\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "Страница создана на основе `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "VQE на симуляторе Aer с шумом"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "Этот блокнот демонстрирует использование `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` для запуска симуляции с шумом, основанной на заданной модели шума. Это может быть полезно для исследования поведения при различных видах шума. Aer не только позволяет определить собственную модель шума, но и позволяет легко создать модель шума на основе свойств реального квантового устройства. Последнее и будет продемонстрировано в этом блокноте, поскольку целью является демонстрация VQE с шумом, а не более сложная задача построения собственных моделей шума."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "The ``QuantumInstance`` module provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "Модуль ``QuantumInstance`` предоставляет способ уменьшения ошибки измерения при запуске на симуляторе с шумом или на реальном квантовом устройстве. Это позволяет любому алгоритму, использующему его, автоматически выполнять уменьшение шума измерений."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "Дополнительную информацию о модели шума Qiskit Aer можно найти в онлайн документации по Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, также есть учебник для `building noise models <. /simulators/3_building_noise_models.ipynb>`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:45
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit."
msgstr "Симуляция с шумом будет продемонстрирована здесь на примере VQE, находящего минимальную (основного состояния) энергию гамильтониана, но метод применим к любому квантовому алгоритму из Qiskit."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Nature, for an H2 molecule, so we can quickly create an Operator."
msgstr "Итак, для VQE нам нужен оператор кубита в качестве входных данных. Здесь мы снова возьмем набор операторов Паули, которые были первоначально вычислены Qiskit Nature для молекулы H2, чтобы быстро создать оператор."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:97
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "Поскольку приведенная выше задача все еще легко решается классически, мы можем использовать NumPyMinimumEigensolver для вычисления точного значения, чтобы позже сравнить результаты."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:145
msgid "Performance *without* noise"
msgstr "Производительность *без* шума"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:147
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "Сначала мы запустим симулятор без добавления шума, чтобы увидеть результат. Я создал backend и QuantumInstance, который хранит backend, а также различные другие конфигурации времени выполнения, которые установлены здесь по умолчанию, чтобы было легко сравнить их, когда мы перейдем к следующему разделу, где добавляется шум. В этом блокноте нет попыток уменьшить шум или что-либо еще, поэтому последняя настройка и запуск VQE идентичны."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:211
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "Мы зафиксировали приведенные выше значения энергии во время сходимости, чтобы мы могли видеть, что произошло на графике приведенном ниже."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:270
msgid "Performance *with* noise"
msgstr "Производительность *с* шумом"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:272
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr "Теперь мы добавим шум. Здесь мы создадим модель шума для Aer на основе реального устройства. Вы можете создавать собственные модели шума в Aer, но это выходит за рамки данного блокнота. Ссылки на дополнительную информацию о модели шума Aer для тех, кто может быть в этом заинтересован, были приведены выше."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:274
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "Сначала нам нужно получить backend реального устройства, и на основе его ``конфигурации`` и ``свойств`` мы можем установить карту связи и модель шума соответствующего данному устройству. Несмотря на то, что мы могли бы оставить симулятор с картой по умолчанию \"один к одному\", здесь показано, как настроить и карту связи. Примечание: Мы также можем использовать эту карту связи в качестве карты запутанности для вариационной схемы, если захотим."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:276
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:404
msgid "Note: simulation with noise will take longer than without noise."
msgstr "Примечание: симуляция с шумом займет больше времени, чем без шума."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:278
msgid "Terra Mock Backends:"
msgstr "Terra Mock Backends:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:280
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "Мы будем использовать реальные данные о шумах для устройства IBM Quantum, используя данные, хранящиеся в Qiskit Terra. В частности, в этом примере устройство называется ibmq_vigo."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:400
msgid "Performance *with* noise and measurement error mitigation"
msgstr "Производительность *с* шумом и уменьшением погрешности измерения"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:402
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "Теперь мы добавим метод для уменьшения ошибки измерения, который повышает точность измерения. Здесь мы выбираем ``CompleteMeasFitter`` для уменьшения ошибки измерения. Калибровочная матрица будет автоматически обновляться каждые 30 минут (значение по умолчанию)."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:494
msgid "Lets bring the results together here for a summary."
msgstr "Давайте соберем все результаты вместе, чтобы подвести итог."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:496
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "Мы получили контрольное значение с помощью классического алгоритма, а затем запустили VQE на симуляторе qasm. Хотя симуляция идеальна (нет шума), существует так называемый дробовой шум из-за выборки - увеличение числа считываний уменьшает этот эффект, поскольку берется все больше и больше отсчетов, но число считываний было оставлено по умолчанию 1024, и мы видим небольшой эффект в результате."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:498
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "Затем мы добавили шум, используя модель, взятую с реального устройства, и увидели, что это повлияло на результат. Наконец, мы добавили уменьшение шума при измерении, которое корректирует результаты в попытке уменьшить влияние шума в классическом оборудовании, измеряющем кубиты."

