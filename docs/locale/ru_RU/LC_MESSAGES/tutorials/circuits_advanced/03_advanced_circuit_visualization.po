msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-16 16:44+0000\n"
"PO-Revision-Date: 2022-05-16 17:09\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/03_advanced_circuit_visualization.po\n"
"X-Crowdin-File-ID: 9126\n"
"Language: ru_RU\n"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb`__."
msgstr "Страница создана на основе `tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb`__."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:9
msgid "Visualizing a Quantum Circuit"
msgstr "Визуализация квантовой цепи"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:31
msgid "Drawing a Quantum Circuit"
msgstr "Изображение квантовой цепи"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:33
msgid "When building a quantum circuit, it often helps to draw the circuit. This is supported natively by a ``QuantumCircuit`` object. You can either call ``print()`` on the circuit, or call the ``draw()`` method on the object. This will render a `ASCII art version <https://en.wikipedia.org/wiki/ASCII_art>`__ of the circuit diagram."
msgstr "Просмотр создаваемой квантовой цепи часто оказывается полезным при ее проектировании. Такая возможность по умолчанию предусмотрена для объектов ``QuantumCircuit``. Вы можете использовать как ``print()`` с цепью в качестве аргумента, так и метод ``draw()``. Результатом будет схема в виде `ASCII-графики <https://ru.wikipedia.org/wiki/ASCII-графика>`__."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:225
msgid "Alternative Renderers for Circuits"
msgstr "Альтернативные визуализаторы цепей"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:227
msgid "A text output is useful for quickly seeing the output while developing a circuit, but it doesn’t provide the most flexibility in its output. There are two alternative output renderers for the quantum circuit. One uses `matplotlib <https://matplotlib.org/>`__, and the other uses `LaTeX <https://www.latex-project.org/>`__, which leverages the `qcircuit package <https://github.com/CQuIC/qcircuit>`__. These can be specified by using ``mpl`` and ``latex`` values for the ``output`` kwarg on the draw() method."
msgstr "Текстовый вывод полезен для быстрого просмотра при работе с цепью но не обладает достаточной гибкостью. В качестве альтернативы можно использовать `matplotlib <https://matplotlib.org/>`__, или `LaTeX <https://www.latex-project.org/>`__, использующий пакет `qcircuit <https://github.com/CQuIC/qcircuit>`__. Значение ``mpl`` или``latex`` нужно указать в качестве именованнованного аргумента ``output`` в методе draw()."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:260
msgid "Controlling output from circuit.draw()"
msgstr "Управлением выводом circuit.draw()"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:262
msgid "By default, the ``draw()`` method returns the rendered image as an object and does not output anything. The exact class returned depends on the output specified: ``'text'`` (the default) returns a ``TextDrawer`` object, ``'mpl'`` returns a ``matplotlib.Figure`` object, and ``latex`` returns a ``PIL.Image`` object. Having the return types enables modifying or directly interacting with the rendered output from the drawers. Jupyter notebooks understand these return types and render them for us in this tutorial, but when running outside of Jupyter, you do not have this feature automatically. However, the ``draw()`` method has optional arguments to display or save the output. When specified, the ``filename`` kwarg takes a path to which it saves the rendered output. Alternatively, if you’re using the ``mpl`` or ``latex`` outputs, you can leverage the ``interactive`` kwarg to open the image in a new window (this will not always work from within a notebook but will be demonstrated anyway)."
msgstr ""

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:275
msgid "Customizing the output"
msgstr "Настройка вывода"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:277
msgid "Depending on the output, there are also options to customize the circuit diagram rendered by the circuit."
msgstr "В некоторых случаях можно настроить вид схемы, соответствующей цепи."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:280
msgid "Disable Plot Barriers and Reversing Bit Order"
msgstr "Пропуск разделителей и обратный порядок битов"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:282
msgid "The first two options are shared among all three backends. They allow you to configure both the bit orders and whether or not you draw barriers. These can be set by the ``reverse_bits`` kwarg and ``plot_barriers`` kwarg, respectively. The examples below will work with any output backend; ``mpl`` is used here for brevity."
msgstr "Первые две опции доступны для всех трех типов отображений. Они позволяют настраивать порядок битов (по ключу ``reverse_bits``) и наличие разделителей (по ключу ``plot_barriers``) независимо друг от друга. Приведенные ниже примеры будут работать с любым выводом; ``mpl`` выбран для краткости."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:406
msgid "Backend-specific customizations"
msgstr "Настройки, зависящие от визуализатора"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:408
msgid "Some available customizing options are specific to a backend. The ``line_length`` kwarg for the ``text`` backend can be used to set a maximum width for the output. When a diagram is wider than the maximum, it will wrap the diagram below. The ``mpl`` backend has the ``style`` kwarg, which is used to customize the output. The ``scale`` option is used by the ``mpl`` and ``latex`` backends to scale the size of the output image with a multiplicative adjustment factor. The ``style`` kwarg takes in a ``dict`` with multiple options, providing a high level of flexibility for changing colors, changing rendered text for different types of gates, different line styles, etc. Available options are:"
msgstr "Некоторые опции доступны только для определенных типов вывода. Именованный аргумент ``line_length``, применяемый для ``text``, задает длину строки, после которой происходит перенос. При выводе в виде ``mpl`` доступна дополнительная настройка в аргументе с ключом ``style``. Опция ``scale`` (для ``mpl`` или ``latex``) масштабирует размер, умножая его на задаваемое число. Словарь в именованном аргументе ``style`` дает расширенный доступ, позволяя изменять цвета, наименования вентилей, типы линий и прочее. Список доступных опций и их значений по умолчанию:"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:411
msgid "**textcolor** (str): The color code to use for text. Defaults to ``'#000000'``"
msgstr "**textcolor** (str): Цвет основного текста ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:412
msgid "**subtextcolor** (str): The color code to use for subtext. Defaults to ``'#000000'``"
msgstr "**subtextcolor** (str): Цвет подтекста ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:413
msgid "**linecolor** (str): The color code to use for lines. Defaults to ``'#000000'``"
msgstr "**linecolor** (str): Цвет линий ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:414
msgid "**creglinecolor** (str): The color code to use for classical register lines ``'#778899'``"
msgstr "**creglinecolor** (str): Цвет линий классического регистра ``'#778899'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:415
msgid "**gatetextcolor** (str): The color code to use for gate text ``'#000000'``"
msgstr "**gatetextcolor** (str): Цвет текста внутри вентилей ``'#000000'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:416
msgid "**gatefacecolor** (str): The color code to use for gates. Defaults to ``'#ffffff'``"
msgstr "**gatefacecolor** (str): Цвет вентилей ``'#ffffff'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:417
msgid "**barrierfacecolor** (str): The color code to use for barriers. Defaults to ``'#bdbdbd'``"
msgstr "**barrierfacecolor** (str): Цвет разделителей ``'#bdbdbd'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:418
msgid "**backgroundcolor** (str): The color code to use for the background. Defaults to ``'#ffffff'``"
msgstr "**backgroundcolor** (str): Фоновый цвет ``'#ffffff'``"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:419
msgid "**fontsize** (int): The font size to use for text. Defaults to 13"
msgstr "**fontsize** (int): Кегль (размер) основного текста 13"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:420
msgid "**subfontsize** (int): The font size to use for subtext. Defaults to 8"
msgstr "**subfontsize** (int): Кегль подтекста 8"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:421
msgid "**displaytext** (dict): A dictionary of the text to use for each element type in the output visualization. The default values are:"
msgstr "**displaytext** (dict): Словарь отображаемых элементов. По умолчанию:"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:443
msgid "You must specify all the necessary values if using this. There is no provision for an incomplete dict passed in."
msgstr "При использовании этой опции необходимо определить все значения. Неполное задание словаря не предусмотрено."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:444
msgid "**displaycolor** (dict): The color codes to use for each circuit element. By default, all values default to the value of ``gatefacecolor`` and the keys are the same as ``displaytext``. Also, just like ``displaytext``, there is no provision for an incomplete dict passed in."
msgstr "**displaycolor** (dict): Цветовой словарь элементов цепи. По умолчанию значения совпадают с ``gatefacecolor`` и ``displaytext``. Как и в предыдущем случае, словарь необходимо определить целиком."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:445
msgid "**latexdrawerstyle** (bool): When set to True, enable LaTeX mode, which will draw gates like the ``latex`` output modes."
msgstr "**latexdrawerstyle** (bool): Значение True включает режим отображения гейтов в стиле LaTeX."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:446
msgid "**usepiformat** (bool): When set to True, use radians for output."
msgstr "**usepiformat** (bool): При True углы указываются в радианах."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:447
msgid "**fold** (int): The number of circuit elements at which to fold the circuit. Defaults to 20"
msgstr "**fold** (int): Число элементов цепи на одной строке 20"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:448
msgid "**cregbundle** (bool): If set True, bundle classical registers."
msgstr "**cregbundle** (bool): При True классические биты отображаются единым регистром."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:449
msgid "**showindex** (bool): If set True, draw an index."
msgstr "**showindex** (bool): Значение True показывает индекс."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:450
msgid "**compress** (bool): If set True, draw a compressed circuit."
msgstr "**compress** (bool): Значение True отображает схему в сжатом виде."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:451
msgid "**figwidth** (int): The maximum width (in inches) for the output figure."
msgstr "**figwidth** (int): Максимальная ширина изображения (в дюймах)."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:452
msgid "**dpi** (int): The DPI to use for the output image. Defaults to 150."
msgstr "**dpi** (int): Разрешение изображения 150."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:453
msgid "**creglinestyle** (str): The style of line to use for classical registers. Choices are ``'solid'``, ``'doublet'``, or any valid matplotlib ``linestyle`` kwarg value. Defaults to ``doublet``."
msgstr "**creglinestyle** (str): Тип линии классического регистра. Можно установить ``'solid'``, ``'doublet'`` (по умолчанию) или любой другой аргумент ``linestyle``, используемый matplotlib."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:684
msgid "circuit_drawer() as function"
msgstr "circuit_drawer() как функция"

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:686
msgid "If you have an application where you prefer to draw a circuit with a self-contained function instead of as a method of a circuit object, you can directly use the ``circuit_drawer()`` function, which is part of the public stable interface from ``qiskit.tools.visualization``. The function behaves identically to the ``circuit.draw()`` method, except that it takes in a circuit object as required argument."
msgstr "Если вы хотите отобразить цепь, не используя метод объекта, а применяя отдельную функцию стороннего приложения, можно напрямую использовать ``circuit_drawer()``, являющуюся частью открытого стабильного интерфейса из ``qiskit.tools.visualization``. Эта функция ведет себя аналогично рассмотренному методу, однако требует указания цепи в качестве аргумента."

#: ../../tutorials/circuits_advanced/03_advanced_circuit_visualization.ipynb:692
msgid "Note: In Qiskit Terra <= 0.7, the default behavior for the circuit_drawer() function is to use the latex output backend, and in 0.6.x that includes a fallback to mpl if latex fails for any reason. Starting with release > 0.7, the default changes to the text output."
msgstr "Примечание: В версиях Qiskit Terra <= 0.7, функция circuit_drawer() использует latex-отображение по умолчанию, при этом в 0.6.x резервным вариантом служит mpl при возникновении любых ошибок. Начиная с версии > 0.7 стандартным является текстовый вывод."

