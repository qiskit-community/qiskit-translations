msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-02 21:26+0000\n"
"PO-Revision-Date: 2021-12-02 22:02\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/3_measurement_error_mitigation.po\n"
"X-Crowdin-File-ID: 9136\n"
"Language: ru_RU\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:10
msgid "This page was generated from `tutorials/noise/3_measurement_error_mitigation.ipynb`__."
msgstr "Эта страница создана на основе `tutorials/noise/3_measurement_error_mitigation.ipynb`__."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:9
msgid "Measurement Error Mitigation"
msgstr "Уменьшение ошибок измерения"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:21
msgid "Introduction"
msgstr "Введение"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:23
msgid "The measurement calibration is used to mitigate measurement errors. The main idea is to prepare all :math:`2^n` basis input states and compute the probability of measuring counts in the other basis states. From these calibrations, it is possible to correct the average results of another experiment of interest. This notebook gives examples for how to use the ``ignis.mitigation.measurement`` module."
msgstr "С помощью калибровки измерений можно уменьшить ошибки измерений. Основная идея заключается в подготовке всех базисных входных состояний :math:`2^n` и вычислении вероятности измерения в других базисных состояниях. На основе этих калибровок можно скорректировать средние результаты другого интересующего эксперимента. В этом блокноте приведены примеры использования модуля ``ignis.mitigation.measurement``."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:57
msgid "3 Qubit Example of the Calibration Matrices"
msgstr "Пример Матрицы Калибровки для трех кубитов"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:68
msgid "Assume that we would like to generate a calibration matrix for the 3 qubits Q2, Q3 and Q4 in a 5-qubit Quantum Register [Q0,Q1,Q2,Q3,Q4]."
msgstr "Предположим, что мы хотим создать калибровочную матрицу для трех кубитов Q2, Q3 и Q4 в 5-кубитном квантовом регистре [Q0,Q1,Q2,Q3,Q4]."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:70
msgid "Since we have 3 qubits, there are :math:`2^3=8` possible quantum states."
msgstr "Поскольку у нас есть 3 кубита, существует :math:`2^3=8` возможных квантовых состояний."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:82
msgid "Generating Measurement Calibration Circuits"
msgstr "Генерация цепей для калибровки измерений"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:84
msgid "First, we generate a list of measurement calibration circuits for the full Hilbert space. Each circuit creates a basis state. If there are :math:`n=3` qubits, then we get :math:`2^3=8` calibration circuits."
msgstr "Сначала мы генерируем список цепей калибровки измерений для полного гильбертова пространства. Каждая цепь создает базисное состояние. Если имеется :math:`n=3` кубита, то мы получаем :math:`2^3=8` калибровочных цепей."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:95
msgid "The following function **complete_meas_cal** returns a list **meas_calibs** of ``QuantumCircuit`` objects containing the calibration circuits, and a list **state_labels** of the calibration state labels."
msgstr "Функция **complete_meas_cal** возвращает список **meas_calibs** объектов ``QuantumCircuit``, содержащих калибровочные цепи, и список **state_labels** меток калибровочных состояний."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:97
msgid "The input to this function can be given in one of the following three forms:"
msgstr "Входные данные для этой функции могут быть заданы тремя способами:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:99
msgid "**qubit_list:** A list of qubits to perform the measurement correction on, or:"
msgstr "**qubit_list:** Список кубитов, на которых будет проводится коррекция измерения:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:100
msgid "**qr (QuantumRegister):** A quantum register, or:"
msgstr "**qr (QuantumRegister):** Квантовый регистр:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:101
msgid "**cr (ClassicalRegister):** A classical register."
msgstr "**cr (ClassicalRegister):** Классический регистр."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:103
msgid "In addition, one can provide a string **circlabel**, which is added at the beginning of the circuit names for unique identification."
msgstr "Кроме того, можно указать параметр **circlabel**, который добавляется в начало названий цепей для их уникальной идентификации."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:105
msgid "For example, in our case, the input is a 5-qubit ``QuantumRegister`` containing the qubits Q2,Q3,Q4:"
msgstr "Например в нашем случае на вход подается 5-кубитный ``QuantumRegister``, содержащий кубиты Q2, Q3, Q4:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:129
msgid "Print the :math:`2^3=8` state labels (for the 3 qubits Q2,Q3,Q4):"
msgstr "Выводим :math:`2^3=8` меток состояний (для 3 кубитов: Q2, Q3, Q4):"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:171
msgid "Computing the Calibration Matrix"
msgstr "Вычисление Калибровочной Матрицы"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:173
msgid "If we do not apply any noise, then the calibration matrix is expected to be the :math:`8 \\times 8` identity matrix."
msgstr "Если мы не вносим никакого шума, то ожидается, что калибровочная матрица будет единичной матрицей :math:`8 \\times 8`."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:242
msgid "Assume that we apply some noise model from Qiskit Aer to the 5 qubits, then the calibration matrix will have most of its mass on the main diagonal, with some additional ‘noise’."
msgstr "Предположим, что мы применим некоторую модель шума из Qiskit Aer к 5 кубитам, тогда калибровочная матрица будет в основном состоять из ненулевых элементов на главной диагонали с некоторым дополнительным \"шумом\"."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:244
msgid "Alternatively, we can execute the calibration circuits using an IBMQ provider."
msgstr "В качестве альтернативы мы можем запустить цепи калибровки с помощью провайдера IBMQ."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:347
msgid "Analyzing the Results"
msgstr "Анализ результатов"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:349
msgid "We would like to compute the total measurement fidelity, and the measurement fidelity for a specific qubit, for example, Q0."
msgstr "Мы хотели бы вычислить общую точность измерений и точность измерений для конкретного кубита, например, Q0."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:351
msgid "Since the on-diagonal elements of the calibration matrix are the probabilities of measuring state ‘x’ given preparation of state ‘x’, then the trace of this matrix is the average assignment fidelity."
msgstr "Поскольку диагональные элементы калибровочной матрицы - это вероятности измерения состояния ‘x’ при подготовке состояния ‘x’, то след этой матрицы - это средняя точность подготовки состояния."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:399
msgid "Applying the Calibration"
msgstr "Применение калибровки"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:401
msgid "We now perform another experiment and correct the measured results."
msgstr "Теперь мы проведем еще один эксперимент и скорректируем результаты измерений."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:404
msgid "Correct Measurement Noise on a 3Q GHZ State"
msgstr "Коррекция шумов измерений в 3-кубитном GHZ состоянии"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:406
msgid "As an example, we start with the 3-qubit GHZ state on the qubits Q2,Q3,Q4:"
msgstr "В качестве примера мы начинаем с 3-кубитного GHZ состояния на кубитах Q2,Q3,Q4:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:408
msgid "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"
msgstr "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:457
#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1045
msgid "We now execute the calibration circuits (with the noise model above):"
msgstr "Теперь запускаем калибровочные цепи (с указанной выше моделью шума):"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:479
msgid "We now compute the results without any error mitigation and with the mitigation, namely after applying the calibration matrix to the results."
msgstr "Теперь мы вычисляем результаты без уменьшения ошибок и с уменьшением, а именно после применения калибровочной матрицы к результатам."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:481
msgid "There are two fitting methods for applying the calibration (if no method is defined, then ‘least_squares’ is used). - **‘pseudo_inverse’**, which is a direct inversion of the calibration matrix, - **‘least_squares’**, which constrains to have physical probabilities."
msgstr "Для применения калибровки существует два метода аппроксимации (если метод не определен, то используется ‘least_squares’). - **‘pseudo_inverse’**, который является прямой инверсией калибровочной матрицы, - **‘least_squares’**, который ограничивается физическими вероятностями."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:483
msgid "The raw data to be corrected can be given in a number of forms:"
msgstr "Исходные данные, подлежащие корректировке, могут быть представлены несколькими способами:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:485
msgid "Form1: A counts dictionary from results.get_counts,"
msgstr "Способ 1: Словарь значений из results.get_counts,"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:486
msgid "Form2: A list of counts of length=len(state_labels),"
msgstr "Способ 2: Лист числа измерений длиной length=len(state_labels),"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:487
msgid "Form3: A list of counts of length=M*len(state_labels) where M is an integer (e.g. for use with the tomography data),"
msgstr "Способ 3: Список числа измерений длиной length=M*len(state_labels), где M - целое число (например для использования с томографическими данными),"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:488
msgid "Form4: A qiskit Result (e.g. results as above)."
msgstr "Способ 4: Результат qiskit (например, results, как показано выше)."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:517
msgid "We can now plot the results with and without error mitigation:"
msgstr "Теперь мы можем построить график результатов с учетом и без учета уменьшения ошибок:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:549
msgid "Applying to a reduced subset of qubits"
msgstr "Применение к сокращенному подмножеству кубитов"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:560
msgid "Consider now that we want to correct a 2Q Bell state, but we have the 3Q calibration matrix. We can reduce the matrix and build a new mitigation object."
msgstr "Рассмотрим теперь, что мы хотим исправить состояние Белла для двух кубитов, но у нас есть калибровочная матрица для трех. Мы можем уменьшить матрицу и построить новый объект для коррекции."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:696
msgid "Tensored mitigation"
msgstr "Тензорное уменьшение ошибки"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:698
msgid "The calibration can be simplified if the error is known to be local. By “local error” we mean that the error can be tensored to subsets of qubits. In this case, less than :math:`2^n` states are needed for the computation of the calibration matrix."
msgstr "Калибровка может быть упрощена, если известно, что ошибка является локальной. Под “локальной ошибкой” мы имеем в виду то, что ошибка может быть определена для подмножества кубитов. В этом случае для вычисления калибровочной матрицы требуется менее :math:`2^n` состояний."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:700
msgid "Assume that the error acts locally on qubit 2 and the pair of qubits 3 and 4. Construct the calibration circuits by using the function ``tensored_meas_cal``. Unlike before we need to explicitly divide the qubit list up into subset regions."
msgstr "Предположим, что ошибка действует локально на кубите 2 и паре кубитов 3 и 4. Построим калибровочные схемы с помощью функции ``tensored_meas_cal``. В отличие от предыдущего случая, нам нужно явно разделить список кубитов на подмножества."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:724
msgid "We now retrieve the names of the generated circuits. Note that in each label (of length 3), the least significant bit corresponds to qubit 2, the middle bit corresponds to qubit 3, and the most significant bit corresponds to qubit 4."
msgstr "Теперь извлекаем имена сгенерированных схем. Заметим, что в каждой метке (длиной 3) наименее значимый бит соответствует кубиту 2, средний бит соответствует кубиту 3, а наиболее значимый бит соответствует кубиту 4."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:771
msgid "Let us elaborate on the circuit names. We see that there are only four circuits, instead of eight. The total number of required circuits is :math:`2^m` where :math:`m` is the number of qubits in the target subset (here :math:`m=2`)."
msgstr "Давайте подробнее остановимся на названиях цепей. Мы видим, что схем всего четыре, а не восемь. Общее число необходимых схем равно :math:`2^m`, где :math:`m` – число кубитов в целевом подмножестве (здесь :math:`m=2`)."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:773
msgid "Each basis state of qubits 3 and 4 appears exactly once. Only two basis states are required for qubit 2, so these are split equally across the four experiments. For example, state ‘0’ of qubit 2 appears in state labels ‘000’ and ‘010’."
msgstr "Каждое базисное состояние кубитов 3 и 4 появляется ровно один раз. Для кубита 2 требуется только два базисных состояния, поэтому они распределены поровну между четырьмя экспериментами. Например, состояние ‘0’ кубита 2 появляется в метках состояний ‘000’ и ‘010’."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:775
msgid "We now execute the calibration circuits on an Aer simulator, using the same noise model as before. This noise is in fact local to qubits 3 and 4 separately, but assume that we don’t know it, and that we only know that it is local for qubit 2."
msgstr "Теперь мы запускаем калибровочные схемы на симуляторе Aer, используя ту же модель шума, что и раньше. Этот шум на самом деле локален отдельно для кубитов 3 и 4, но предположим, что мы этого не знаем, и что мы знаем, что он локален только для кубита 2."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:823
msgid "The fitter provides two calibration matrices. One matrix is for qubit 2, and the other matrix is for qubits 3 and 4."
msgstr "Модуль подгонки предоставляет две калибровочные матрицы. Одна матрица предназначена для кубита 2, а другая - для кубитов 3 и 4."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:871
msgid "We can look at the readout fidelities of the individual tensored components or qubits within a set:"
msgstr "Мы можем посмотреть на точность считывания отдельных тензорных компонентов или кубитов в заданном наборе:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:925
msgid "Plot the individual calibration matrices:"
msgstr "Выводим на экран отдельные калибровочные матрицы:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1085
msgid "Plot the raw vs corrected state:"
msgstr "Построим графики для необработанного и скорректированного состояний:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1118
msgid "As a check we should get the same answer if we build the full correction matrix from a tensor product of the subspace calibration matrices:"
msgstr "В качестве проверки мы должны получить тот же ответ, если мы построим полную матрицу коррекции из тензорного произведения матриц калибровки для подпространства:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1155
msgid "Running Qiskit Algorithms with Measurement Error Mitigation"
msgstr "Запуск алгоритмов Qiskit с уменьшением ошибок измерения"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1157
msgid "To use measurement error mitigation when running quantum circuits as part of a Qiskit algorithm, we need to include the respective measurement error fitting instance in the QuantumInstance. This object also holds the specifications for the chosen backend."
msgstr "Чтобы задействовать функцию уменьшения ошибки измерения при запуске квантовых цепей как часть алгоритма Qiskit, нам необходимо включить соответствующий экземпляр класса корректировки ошибки измерения в QuantumInstance. Этот объект также содержит характеристики выбранного бэкенда."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1159
msgid "In the following, we illustrate measurement error mitigation on the example of searching the ground state of a Hamiltonian with VQE."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1170
msgid "First, we need to import the libraries that provide backends as well as the classes that are needed to run the algorithm."
msgstr "Во-первых, нам нужно импортировать библиотеки, предоставляющие бэкенды, а также классы, необходимые для работы алгоритма."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1201
msgid "Then, we initialize the instances that are required to execute the algorithm."
msgstr "Затем мы инициализируем объекты, необходимые для выполнения алгоритма."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1231
msgid "Here, we choose the Aer ``qasm_simulator`` as backend and also add a custom noise model. The application of an actual quantum backend provided by IBMQ is outlined in the commented code."
msgstr "Здесь мы выбираем Aer ``qasm_simulator`` в качестве бэкэнда, а также добавляем пользовательскую модель шума. Применение реального квантового бэкенда, предоставленного IBMQ, описано в прокомментированном коде."

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1268
msgid "Finally, we can run the algorithm and check the results."
msgstr "Наконец, мы можем запустить алгоритм и проверить результаты."

