msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-26 20:07\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/4_randomized_benchmarking.po\n"
"X-Crowdin-File-ID: 9138\n"
"Language: ru_RU\n"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:10
msgid "This page was generated from `tutorials/noise/4_randomized_benchmarking.ipynb`__."
msgstr "Эта страница создана на основе `tutorials/noise/4_randomized_benchmarking.ipynb`__."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:9
msgid "Randomized Benchmarking"
msgstr "Рандомизированное тестирование"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:12
msgid "Introduction"
msgstr "Введение"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:14
msgid "**Randomization benchmarking (RB)** is a well-known technique to measure average gate performance by running sequences of random Clifford gates that should return the qubits to the initial state. Qiskit Ignis has tools to generate one- and two-qubit Clifford gate sequences simultaneously."
msgstr "**Рандомизационная характеризация (randomization benchmarking, RB)** — это хорошо известная техника измерения средней производительности вентилей путем запуска последовательностей случайных вентилей Клиффорда, которые должны возвращать кубиты в исходное состояние. В Qiskit Ignis есть инструменты для одновременной генерации одно- и двухкубитных последовательностей из вентилей Клиффорда."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:16
msgid "This notebook gives an example for how to use the ``ignis.verification.randomized_benchmarking`` module. This particular example shows how to run 2-qubit randomized benchmarking (RB) simultaneous with 1-qubit RB. There are also examples on how to use some of the companion functions for predicting RB fidelity."
msgstr "В этом блокноте приводится пример использования модуля ``ignis.verification.randomized_benchmarking``. Этот конкретный пример показывает, как запустить 2-кубитную рандомизированную характеризацию (RB) одновременно с 1-кубитным RB. Также есть примеры использования некоторых сопутствующих функций для прогнозирования точности RB."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:49
msgid "1) Select the Parameters of the RB Run"
msgstr "1) Выбираем параметры запуска RB"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:51
msgid "First, we need to choose the following parameters:"
msgstr "Для начала необходимо выбрать следующие параметры:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:53
msgid "**nseeds:** The number of seeds. For each seed you will get a separate list of output circuits in rb_circs."
msgstr "**nseeds:** Количество зерен (случайных последовательностей гейтов). Для каждого seed вы получите отдельный список выходных цепей в rb_cirs."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:54
msgid "**length_vector:** The length vector of Clifford lengths. Must be in ascending order. RB sequences of increasing length grow on top of the previous sequences."
msgstr "**length_vector:** Вектор клиффордовых длин (число клиффордовых вентилей в последовательности). Должен записываться в порядке возрастания. Последовательности RB возрастающей длины растут поверх предыдущих последовательностей."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:55
msgid "**rb_pattern:** A list of the form [[i,j],[k],…] which will make simultaneous RB sequences where Qi,Qj are a 2-qubit RB sequence and Qk is a 1-qubit sequence, etc. The number of qubits is the sum of the entries. For ‘regular’ RB the qubit_pattern is just [[0]],[[0,1]]."
msgstr "**rb_pattern:** Список вида [[i,j],[k],…], определяющий одновременные RB последовательности, в котором Qi,Qj — 2-кубитная RB последовательность и Qk — 1-кубитная и т.д. Количество кубитов — это сумма входных элементов. Для ‘обычного’ RB это просто [[0]],[[0,1]]."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:56
msgid "**length_multiplier:** If this is an array it scales each rb_sequence by the multiplier."
msgstr "**length_multiplier:** Если это массив, то каждая RB последовательность умножается на множитель."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:57
msgid "**seed_offset:** What to start the seeds at (e.g. if we want to add more seeds later)."
msgstr "**seed_offset:** С какого значения seed начинать (например, если позже мы захотим добавить больше зерен)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:58
msgid "**align_cliffs:** If true adds a barrier across all qubits in rb_pattern after each set of cliffords."
msgstr "**align_cliffs:** Если true, добавляет барьер для всех кубитов в rb_pattern после каждого набора вентилей клиффорда."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:60
msgid "In this example we have 3 qubits Q0,Q1,Q2. We are running 2Q RB (on qubits Q0,Q2) and 1Q RB (on qubit Q1) simultaneously, where there are twice as many 1Q Clifford gates."
msgstr "В этом примере у нас есть 3 кубита Q0, Q1, Q2. Мы одновременно выполняем 2Q RB (на кубитах Q0, Q2) и 1Q RB (на кубите Q1), где в два раза больше 1Q клиффордовских вентилей."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:92
msgid "2) Generate the RB sequences"
msgstr "2) Создаем RB последовательности"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:94
msgid "We generate RB sequences. We start with a small example (so it doesn’t take too long to run)."
msgstr "Мы формируем RB последовательности. Начнем с небольшого примера (чтобы не пришлось долго запускать)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:96
msgid "In order to generate the RB sequences **rb_circs**, which is a list of lists of quantum circuits, we run the function ``rb.randomized_benchmarking_seq``."
msgstr "Для создания RB-последовательностей **rb_circs**, которые представляют собой список из списков квантовых цепей, мы запускаем функцию ``rb.randomized_benchmarking_seq``."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:98
msgid "This function returns:"
msgstr "Эта функция возвращает:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:100
msgid "**rb_circs:** A list of lists of circuits for the rb sequences (separate list for each seed)."
msgstr "**rb_circs:** Список из списков цепей для rb последовательностей (отдельный список для каждого seed)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:101
msgid "**xdata:** The Clifford lengths (with multiplier if applicable)."
msgstr "**xdata:** Длины последовательностей из операторов Клиффорда (с множителем, если это применимо)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:127
msgid "As an example, we print the circuit corresponding to the first RB sequence:"
msgstr "В качестве примера выведем схему, соответствующую первой RB последовательности:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:247
msgid "Look at the Unitary for 1 Circuit"
msgstr "Посмотрим на унитарность цепи 1"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:258
msgid "The Unitary representing each RB circuit should be the identity (with a global phase), since we multiply random Clifford elements, including a computed reversal gate. We simulate this using an Aer unitary simulator."
msgstr "Унитарный оператор, представляющий каждую RB-цепь, должен быть единичным (с глобальной фазой), поскольку мы перемножаем случайные элементы из группы Клиффорда, включая вычисленные обратные гейты. Мы симулируем это с помощью унитарного симулятора Aer."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:341
msgid "Define the noise model"
msgstr "Определяем модель шума"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:352
msgid "We define a noise model for the simulator. To simulate decay, we add depolarizing error probabilities to the CNOT and U gates."
msgstr "Мы определяем модель шума для симулятора. Чтобы смоделировать затухание, мы добавляем вероятность ошибки деполяризации к вентилям CNOT и U."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:379
msgid "3) Execute the RB sequences on Aer simulator"
msgstr "3) Запуск последовательностей RB на симуляторе Aer"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:381
msgid "We can execute the RB sequences either using a Qiskit Aer Simulator (with some noise model) or using an IBMQ provider, and obtain a list of results, ``result_list``."
msgstr "RB последовательности можно запускать либо с помощью Qiskit Aer Simulator (с некоторой моделью шума), либо с помощью провайдера IBMQ, и получать список результатов ``result_list``."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:469
msgid "4) Fit the RB results and calculate the gate fidelity"
msgstr "4) Аппроксимация результатов RB и расчет точности вентилей"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:472
msgid "Get statistics about the survival probabilities"
msgstr "Получение статистики о вероятности выживания"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:474
msgid "The results in **result_list** should fit to an exponentially decaying function :math:`A \\cdot \\alpha ^ m + B`, where :math:`m` is the Clifford length."
msgstr "Результаты **result_list** должны соответствовать функции :math:`A \\cdot \\alpha ^ m + B`, где :math:`m` — длина последовательности из набора Клиффорда."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:476
msgid "From :math:`\\alpha` we can calculate the **Error per Clifford (EPC)**:"
msgstr "Из :math:`\\alpha` мы можем вычислить **Error per Clifford (EPC)** (среднюю ошибку на оператор Клиффорда):"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:478
msgid "EPC = \\frac{2^n-1}{2^n} (1-\\alpha)\n\n"
msgstr "EPC = \\frac{2^n-1}{2^n} (1-\\alpha)\n\n"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:480
msgid "(where :math:`n=nQ` is the number of qubits)."
msgstr "(где :math:`n=nQ` — количество кубитов)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:503
msgid "Plot After 1 Seed"
msgstr "График после 1 зерна"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:545
msgid "Plot with the Rest of the Seeds"
msgstr "График с оставшимися зернами"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:547
msgid "The plot is being updated after each seed."
msgstr "График обновляется после каждого зерна."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:601
msgid "Add more shots to the data"
msgstr "Добавление дополнительных считываний к данным"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:720
msgid "Predicted Gate Fidelity"
msgstr "Предсказанная точность вентиля"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:731
msgid "From the known depolarizing errors on the simulation we can predict the **fidelity**. First we need to count the number of **gates per Clifford**."
msgstr "Зная ошибки деполяризации, мы можем спрогнозировать **точность**. Сначала нужно посчитать количество **вентилей на последовательность из операторов Клиффорда**."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:733
msgid "The function **gates_per_clifford** takes a list of transpiled RB circuits and outputs the number of basis gates in each circuit."
msgstr "Функция **gates_per_clifford** принимает список трансипилированных RB цепей и выводит количество базовых вентилей в каждой цепи."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:791
msgid "The function **calculate_2q_epc** gives measured errors in the basis gates that were used to construct the Clifford. It assumes that the error in the underlying gates is depolarizing. It outputs the error per a 2-qubit Clifford."
msgstr "Функция **calculate_2q_epc** выдает измеренные ошибки в базовых вентилях, которые были использованы для построения последовательности Клиффорда. Предполагается, что ошибка в базовых вентилях является деполяризующей. Она выводит ошибку на 2-кубитную последовательность из операторов Клиффорда."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:793
msgid "The input to this function is: - **gate_per_cliff:** dictionary of gate per Clifford. - **epg_2q:** EPG estimated by error model. - **qubit_pair:** index of two qubits to calculate EPC. - **list_epgs_1q:** list of single qubit EPGs of qubit listed in ``qubit_pair``. - **two_qubit_name:** name of two qubit gate in ``basis gates`` (default is ``cx``)."
msgstr "Входными данными для этой функции являются: - **gate_per_cliff:** словарь вентилей для последовательностей Клиффорда. - **epg_2q:** EPG, оцениваемая моделью ошибок. - **qubit_pair:** индексы двух кубитов для вычисления EPC. - **list_epgs_1q:** список EPG отдельных кубитов в ``qubit_pair``. - **two_qubit_name:** название двухкубитных вентилей в ``basis gates`` (по умолчанию ``cx``)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:848
msgid "Run an RB Sequence with T1,T2 Errors"
msgstr "Запуск RB последовательности с ошибками в T1, T2"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:850
msgid "We now choose RB sequences that contain only 2-qubit Cliffords."
msgstr "Теперь мы выбираем последовательности RB, которые содержат только 2-кубитные вентили Клиффорда."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:852
msgid "We execute these sequences as before, but with a noise model extended with T1/T2 thermal relaxation error, and fit the exponentially decaying curve."
msgstr "Мы запускаем эти последовательности, как и раньше, но с шумовой моделью, дополненной ошибкой тепловой релаксации T1/T2, и аппроксимируем экспоненциально затухающую кривую."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:993
msgid "We count again the number of **gates per Clifford** as before, and calculate the **two-qubit Clifford gate error**, using the predicted primitive gate errors from the coherence limit."
msgstr "Мы снова рассчитываем количество **вентилей на последовательность Клиффорда**, как и раньше, и вычисляем ошибку **двухкубитного вентиля из группы Клиффорда**, используя предсказанные из пределов когерентности ошибки простых вентилей."

