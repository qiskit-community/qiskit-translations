msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:49\n"
"Last-Translator: \n"
"Language: ru\n"
"Language-Team: Russian\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9542\n"

#: ../../qc_intro.rst:10
msgid "Quantum computing in a nutshell"
msgstr "Коротко о квантовых вычислениях"

#: ../../qc_intro.rst:12
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, search, optimization, and algebraic programs such as machine learning; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "Квантовые вычисления представляют собой новый принцип вычислений, который использует фундаментальные принципы квантовой механики для проведения расчетов. Если вы читаете этот текст, значит, вы, несомненно слышали, что преимущество квантовых вычислений заключается в возможности эффективно решить ряд задач, таких как факторизация целых чисел, квантовое моделирование, поиск, оптимизация, и улучшить производительность алгебраических программ, таких как машинное обучение; задач, которые требуют большего вычислительного объема, доступного на самых мощных современных классических компьютерах."

#: ../../qc_intro.rst:20
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "Сила квантовых вычислений опирается на два краеугольных камня квантовой механики, а именно: :ref:`интерференцию <qc-intro-interference>` и :ref:`квантовую запутанность <qc-intro-entanglement>`, которые подчеркивают волновые и корпускулярные аспекты квантовых вычислений, соответственно.  Qiskit (читается кис-кит) - это SDK (Software Development Kit, набор для разработки программного обеспечения) для выполнения квантовых вычислений, опирающихся на принципы квантовой механики, используя язык :ref:`квантовых цепей <qc-intro-circuits>`.  Квантовые цепи, элементами которых являются квантовые вентили, инструкции и классическая логика управления, позволяют представлять сложные алгоритмы и приложения в абстрактной форме, которая может быть выполнена на квантовом компьютере.  В своей основе Qiskit - это механизм построения, оптимизации и выполнения квантовых цепей. Дополнительные уровни алгоритмов и приложений используют квантовые схемы, часто в сочетании с классическими вычислительными ресурсами, для решения проблем оптимизации, квантовой химии, физики, машинного обучения и финансов.  Далее мы даем очень краткий обзор квантовых вычислений и того, как Qiskit используется на каждом этапе.  Заинтересованные читатели могут обратиться к дополнительным материалам для более глубокого понимания."

#: ../../qc_intro.rst:39
msgid "Interference"
msgstr "Интерференция"

#: ../../qc_intro.rst:41
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as superpositions (or superposition states)."
msgstr "По аналогии с классическим компьютером, квантовый компьютер тоже работает с битами. Однако, в то время как классические биты могут находиться только в состояниях 0 и 1, квантовый бит, или кубит, может принимать не только значения 0 и 1, но и любую их линейную комбинацию. В последнем случае говорят, что система находится в суперпозиции (состоянии суперпозиции)."

#: ../../qc_intro.rst:46
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing superposition and the principle of **interference** to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "Чтобы понять, как этот ресурс используется в квантовых вычислениях, мы сначала обратимся к классическому аналогу: шумоподавлению.  Шумоподавление, как это делается, например, в наушниках, осуществляется при помощи принципа суперпозиции и **интерференции** волн, когда для уменьшения амплитуды нежелательного шума генерируется звук примерно той же частоты и амплитуды, но в противофазе на величину :math:`\\pi` (или любое другое нечетное целое число :math:`\\pi`)."

#: ../../qc_intro.rst:57
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "Почти полное подавление шумового сигнала другим звуковым сигналом почти той же амплитуды и сдвигом по фазе равным :math:`\\sim \\pi`."

#: ../../qc_intro.rst:60
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unencumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "Как было показано выше, когда разность фаз близка к нечетному кратному :math:`\\pi`, суперпозиция двух волн приводит к интерференции, и выходной сигнал значительно уменьшается по сравнению с исходным.  В результате получается интересующий нас сигнал, не содержащий шума. Несмотря на то, что эта обработка выполняется цифровыми схемами, поскольку амплитуда и фаза являются непрерывными переменными, которые никогда не могут быть идеально согласованы,  коррекция всегда будет неполной."

#: ../../qc_intro.rst:67
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "В целом вычисления на квантовом компьютере происходят примерно так же, как и подавление шума. Сначала создается суперпозиция всех возможных вычислительных состояний.  Затем она подается на вход :ref:`квантовой цепи <qc-intro-circuits>`, при прохождении которой компоненты состояния суперпозиции выборочно интерферируют в соответствии с заданным алгоритмом. То, что остается после отбрасывания относительных амплитуд и фаз входного состояния, является решением вычислений, выполняемых квантовой цепью."

#: ../../qc_intro.rst:77
msgid "Quantum computation as an interference generation process."
msgstr "Квантовое вычисление как процесс порождения интерференции."

#: ../../qc_intro.rst:82
msgid "Entanglement"
msgstr "Запутанность"

#: ../../qc_intro.rst:84
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr "Второй принцип квантовой механики, который могут использоваться квантовые вычисления, - это явление **запутанности**.  Запутанность относится к состояниям более чем одного кубита (или частицы в целом), в которых объединенное состояние кубитов содержит больше информации, чем кубиты по отдельности.  Подавляющее большинство многокубитных квантовых состояний являются запутанными и представляют собой ценный ресурс.  Например, запутанные состояния между кубитами могут быть использованы для квантовой телепортации, когда общим запутанным состоянием двух кубитов можно манипулировать для передачи информации от одного кубита к другому, независимо от физической близости кубитов. Запутанные состояния, как естественные состояния квантовых систем, также важны в таких дисциплинах, как квантовая химия и квантовое моделирование, где решение (решения) часто принимают форму запутанных мультикубитных состояний.  Можно также использовать сильно запутанные квантовые состояния нескольких кубитов, например, для проверяемой генерации случайных чисел.  Для этого даже существует пакет `Qiskit <https://qiskit-rng.readthedocs.io/en/latest/>`_!"

#: ../../qc_intro.rst:102
msgid "Quantum circuits"
msgstr "Квантовые цепи"

#: ../../qc_intro.rst:104
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "Алгоритмы и приложения, использующие ресурсы квантовой механики, могут быть легко и эффективно написаны на языке **квантовых цепей**. Квантовая цепь - это вычислительная процедура, состоящая из когерентных квантовых операций над квантовыми данными, например, хранящимися в кубитах, и параллельных классических вычислений в реальном времени. Каждая горизонтальная линия, или провод, в схеме представляет собой кубиты, левый конец провода - это начальные квантовые данные, а правый - конечные квантовые данные, полученные в результате вычислений квантовой схемы. Операции над кубитами могут быть размещены на этих проводах и представлены квадратиками."

#: ../../qc_intro.rst:116
msgid "Quantum state teleportation circuit revisited."
msgstr "Пересмотрена схема телепортации квантового состояния."

#: ../../qc_intro.rst:118
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "Квантовые цепи позволяют квантовому компьютеру принимать на входе классическую информацию и выводить классическое решение, используя такие квантовые принципы, как :ref:`интерференция<qc-intro-interference>` и :ref:`запутанность<qc-intro-interference><qc-intro-entanglement>` для выполнения вычислений."

#: ../../qc_intro.rst:123
msgid "A typical quantum algorithm workflow consists of:"
msgstr "Типичный ход квантового алгоритма состоит из:"

#: ../../qc_intro.rst:125
msgid "The problem we want to solve,"
msgstr "Задача, которую мы хотим решить,"

#: ../../qc_intro.rst:126
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "Классического алгоритма, задающего вид квантовой цепи,"

#: ../../qc_intro.rst:127
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "Квантовой цепи, которую нужно запустить на квантовом оборудовании,"

#: ../../qc_intro.rst:128
msgid "And the output classical solution to the problem that it produces."
msgstr "И выходное классическое решение проблемы, которую она производит."

#: ../../qc_intro.rst:130
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamard (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit to another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract partial information about a qubit's state, often losing the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr "Квантовые вентили образуют примитивные операции над квантовыми данными.  Квантовые вентили представляют собой сохраняющие информацию обратимые преобразования квантовых данных, хранящихся в кубитах. Эти \"унитарные\" преобразования представляют собой квантово-механическое ядро квантовой цепи.  Некоторые вентили, такие как :math:`X` (также пишутся как :math:`\\oplus`) и :math:`CX`, имеют классические аналоги, такие как операции инвертирования бита и :math:`XOR`, соответственно, а другие - нет.  Вентиль Адамара (:math:`H`), наряду с параметризованными вращениями :math:`rX(\\theta)` и :math:`rY(\\theta)`, создают состояния суперпозиции, а такие вентили как :math:`Z`, :math:`rZ(\\theta)`, :math:`S` и :math:`T` придают фазы, которые могут быть использованы для интерференции.  Двухкубитные вентили, такие как :math:`CX`, используются для создания запутанности между парами кубитов или для \"перебрасывания\" фазы с одного кубита на другой. В отличие от вентилей, операции типа \"измерения\", представленные символом счетчика в коробке с линией, соединяющей с \"целевым\" проводом, извлекают частичную информацию о состоянии кубита, часто теряя фазу, чтобы иметь возможность представить ее в виде классического бита и записать этот классический бит на целевой провод (часто полностью классический провод в некотором считывающем устройстве). Это типичный способ переноса информации из квантовых данных в классическое устройство. Заметим, что имея только :math:`H`, :math:`rZ(\\theta)`, :math:`CX` и измерительные вентили, т.е. универсальный набор вентилей, мы можем построить любую квантовую схему, включая те, которые эффективно вычисляют динамику любой физической системы в природе."

#: ../../qc_intro.rst:149
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr "Некоторые рабочие задания содержат расширенную последовательность чередующихся квантовых схем и классических вычислений, например, вариационные квантовые алгоритмы выполняют квантовые цепи в рамках цикла оптимизации. Для таких рабочих задач производительность системы существенно возрастает, если квантовые схемы параметризованы, а переходы между выполнением схем и бездействующими классическими вычислениями эффективно реализованы. Следовательно, мы определяем **вычисления в ближнем времени** для обозначения вычислений с алгоритмами, которые неоднократно используют квантовые схемы с аппаратным обеспечением, разработанным для ускорения времени вычислений. При вычислениях в ближнем времени классические вычисления происходят на шкале времени, превышающем когерентность квантовых вычислений. Напротив, при **вычислениях в реальном времени** классические вычисления происходят в пределах времени декогеренции квантового устройства."

#: ../../qc_intro.rst:160
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit, which supports a rich feature set of operations and can send your circuits to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators. With only a few lines of code, it is possible to construct complex circuits like the one above."
msgstr ""

#: ../../qc_intro.rst:185
msgid "Quantum computers"
msgstr "Квантовые компьютеры"

#: ../../qc_intro.rst:191
msgid "A view inside the IBM Quantum System One."
msgstr "IBM Quantum System One: вид изнутри."

#: ../../qc_intro.rst:193
msgid "Quantum computers which are programmed using quantum circuits can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr "Квантовые компьютеры, которые программируются с помощью квантовых цепей, могут быть построены на основе любой квантовой технологии, позволяющей задать элементы кубита, и способной реализовать одно- и многокубитные операции с высокой точностью. В настоящее время активно разрабатываются архитектуры на основе сверхпроводящих схем, ионов в ловушках, полупроводниковых квантовых точек, фотонов и нейтральных атомов, и многие из них доступны пользователям через интернет. Qiskit не зависит от базовой архитектуры данной квантовой системы и может скомпилировать квантовую схему в соответствии с топологией запутывающих вентилей квантового устройства, преобразовать инструкции схемы в набор вентилей устройства и оптимизировать полученную квантовую схему для повышения точности."

#: ../../qc_intro.rst:203
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr "Как и в приведенном выше примере с подавлением шума, амплитуда и фаза кубитов - это непрерывные степени свободы, операции над которыми никогда не могут быть выполнены точно.  Эти ошибки вентилей, наряду с помехами от окружающей среды, в которой находится квантовый компьютер, могут разрушить вычисления, если они не учтены в процессе компиляции, и могут потребовать дополнительных процедур по снижению шума, чтобы получить высокоточный результат на современных квантовых системах, подверженных шуму.  Qiskit способен учитывать широкий диапазон калибровочных параметров устройства (см. рисунок ниже) в своей стратегии компиляции и может выбрать оптимальный набор кубитов, на которых будет работать заданная квантовая схема.  Кроме того, Qiskit содержит коллекцию методов подавления шума для получения точного представления вывода квантовой схемы."

#: ../../qc_intro.rst:217
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "Топология и частота ошибок для системы IBM Quantum *ibmq_manhattan*."

#: ../../qc_intro.rst:221
msgid "Where to go from here"
msgstr "Что можно посмотреть ещё"

#: ../../qc_intro.rst:223
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr "Надеемся, что мы дали читателю представление о том, что могут предложить квантовые вычисления, и вы захотите узнать больше. Если это так, то есть несколько ресурсов, которые могут быть вам интересны:"

#: ../../qc_intro.rst:227
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`Начало работы с Qiskit <getting_started.html>`_ - Окунитесь прямо в Qiskit."

#: ../../qc_intro.rst:229
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr "`Cправочник по квантовым вычислениям <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : Плавное, основанное на физике введение, написанное одними из основателей квантовых вычислений, в котором используется интерактивный компоновщик схем."

#: ../../qc_intro.rst:233
msgid "`Qiskit textbook <https://qiskit.org/learn/>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr ""

