msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-17 21:55+0000\n"
"PO-Revision-Date: 2023-08-14 19:13\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9542\n"

#: ../../qc_intro.rst:10
msgid "Quantum computing in a nutshell"
msgstr "핵심적인 양자 컴퓨팅의 내용"

#: ../../qc_intro.rst:12
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, search, optimization, and algebraic programs such as machine learning; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "양자 컴퓨팅은 양자역학의 기본 원리를 활용하는 계산의 새로운 패러다임을 나타낸다. 이걸 읽고 있다면, 양자 컴퓨팅의 전망은 규모가 커지면 가장 성능이 좋은 고전 컴퓨터로도 수행할 수 없는 계산들을 효율적으로 수행할 수 있는가의 여부에 달려 있다는 것을 알 것이다. 이러한 작업들에는 소인수 분해, 양자 시뮬레이션, 검색, 최적화, 그리고 기계 학습과 같은 대수 프로그램이 있다."

#: ../../qc_intro.rst:20
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "양자 컴퓨팅의 힘은 양자역학의 두 주춧돌에서 나오는데, 바로 양자 계산의 파동의 성질을 강조하는 :ref:`간섭 <qc-intro-interference>` 과 입자의 성질을 강조하는 :ref:`얽힘 <qc-intro-entanglement>` 이다. Qiskit은 :ref:`양자 회로 <qc-intro-circuits>` 의 언어를 사용하여 이러한 양자역학의 원리들을 적용해 양자 계산을 수행하는 SDK이다. 양자 게이트, 명령어, 그리고 고전적 제어 논리로 이루어진 양자 회로는 복잡한 알고리즘과 애플리케이션을 양자 컴퓨터에서 실행될 수 있는 추상적인 방식으로 나타낸다. Qiskit은 본질적으로 양자 회로 구축, 최적화, 그리고 실행 엔진이다. 추가적인 알고리즘과 애플리케이션 계층은 보통 고전적인 컴퓨팅 자원과 함께 양자 회로를 이용하여 최적화, 양자 화학, 물리, 기계 학습, 그리고 금융에 관한 문제들을 해결한다. 다음으로는 양자 컴퓨팅에 대한 간단한 개요와 Qiskit이 각 단계에서 어떻게 사용되는지 설명할 것이다. 더 심도 있는 내용에 관심이 있는 독자들을 위해 추가자료도 제공될 것이다."

#: ../../qc_intro.rst:39
msgid "Interference"
msgstr "간섭"

#: ../../qc_intro.rst:41
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as superpositions (or superposition states)."
msgstr "고전 컴퓨터와 마찬가지로, 양자 컴퓨터는 비트로 동작한다. 하지만 고전 비트가 0이나 1 상태로만 있을 수 있는 반면에 양자 비트, 또는 큐비트는 0이나 1 뿐만 아니라 둘의 선형 결합으로도 존재할 수 있다. 이러한 선형 결합은 중첩 (또는 중첩 상태) 이라고도 알려져 있다."

#: ../../qc_intro.rst:46
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing superposition and the principle of **interference** to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "이러한 개념이 어떻게 양자 계산에 사용되는지 알아볼려면 먼저 고전 컴퓨팅에서 상응하는 개념인 노이즈 캔슬링을 알아야 한다. 노이즈 캔슬링 헤드폰에서 사용되는 것과 같이 노이즈 캔슬링은 중첩과 **간섭** 의 원리를 이용해 원치 않는 소리와 비슷한 주파수와 진폭의 톤을 위상만 :math:`\\pi` (아니면 :math:`\\pi` 의 홀수 배수) 만큼 어긋나게 생성해 원치 않는 소리를 상쇄시킨다."

#: ../../qc_intro.rst:57
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "거의 동일한 진폭의 톤에 의한 잡음 신호의 대략적인 소거 및 :math:`\\sim \\pi` 의 위상에 의한 오프셋."

#: ../../qc_intro.rst:60
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unencumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "상술된 바와 같이, 위상차가 :math:`\\pi` 의 홀수 배수에 가까울 때, 2개의 파동들의 중첩은 간섭을 초래하고, 출력은 원본에 비하여 현저하게 감소된다.  그 결과는 노이즈에 의해 방해받지 않는 관심신호이다. 이러한 처리는 디지털 회로에 의해 수행되지만, 진폭 및 위상은 완벽하게 매칭될 수 없는 연속 변수이며, 이는 불완전한 보정을 초래한다."

#: ../../qc_intro.rst:67
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "양자 컴퓨터의 일반적인 계산은 잡음 제거와 거의 같은 방식으로 진행된다. 우선, 모든 가능한 계산 상태들의 중첩을 준비한다.  그러면 이는 규정된 알고리즘에 따라 초위치의 구성요소를 선택적으로 방해하는 :ref:`quantum circuit <qc-intro-circuits>` 의 입력으로 사용된다. 입력 상태의 상대 진폭 및 위상을 취소한 후에 남는 것은 양자 회로에 의해 수행되는 계산에 대한 해법이다."

#: ../../qc_intro.rst:77
msgid "Quantum computation as an interference generation process."
msgstr "간섭 생성 프로세스로서의 양자 계산."

#: ../../qc_intro.rst:82
msgid "Entanglement"
msgstr "얽힘"

#: ../../qc_intro.rst:84
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr "양자 계산이 활용할 수 있는 양자역학의 두 번째 원리는 **entanglement** 의 현상이다.  얽힘 (Entanglement) 은 한 개 이상의 큐비트 (또는 일반적으로 입자들) 의 상태를 지칭하는데, 여기서 큐비트들의 결합된 상태는 큐비트들이 독립적으로 행하는 것보다 더 많은 정보를 포함한다.  다수의 큐비트 양자 상태들의 압도적인 다수는 얽히고, 가치 있는 자원을 나타낸다. 예를 들어, 큐비트들 사이의 얽힌 상태들은 큐비트의 상대적인 물리적 근접성에 상관없이, 두 개의 큐비트들의 공유된 얽힌 상태가 하나의 큐비트로부터 다른 큐비트로 정보를 전송하도록 조작될 수 있는 양자 이동을 위해 사용될 수 있다. 양자 시스템의 자연스러운 상태로서의 얽힘 상태는 양자 화학 (quantum chemistry) 과 양자 시뮬레이션 (quantum simulation) 과 같은 해법들이 종종 얽힌 다중-큐비트 (multi-qubit) 상태의 형태를 취하는 분야들에서도 중요하다. 또한, 인증 가능한 정도의 무작위성을 가진 난수들을 생성하기 위해 다수의 큐비트들의 고도로 얽힌 양자 상태들을 이용할 수도 있다. 이를 시행하기 위한 `Qiskit 패키지 <https://qiskit-rng.readthedocs.io/en/latest/>`_ 도 이미 있다."

#: ../../qc_intro.rst:102
msgid "Quantum circuits"
msgstr "양자 회로"

#: ../../qc_intro.rst:104
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "양자 기계 자원을 이용하는 알고리즘 및 애플리케이션은 **양자 회로** 의 언어로 쉽고 효율적으로 작성될 수 있다. 양자 회로는 양자으로 유지되는 것과 같은 양자 데이터에 대한 결맞음 양자 동작 (coherent quantum operations), 및 동시 실시간 고전적인 계산으로 구성되는 계산 루틴이다. 회로에 있는 각각의 수평선 또는 선은 큐비트를 나타내고, 와이어의 왼쪽 끝은 초기 양자 데이터이고, 우측은 양자 회로의 계산에 의해 생성되는 최종 양자 데이터이다. 큐비트들에 대한 동작들은 이러한 와이어들 상에 배치될 수 있고, 박스들로 표현된다."

#: ../../qc_intro.rst:116
msgid "Quantum state teleportation circuit revisited."
msgstr "다시 보는 양자 상태의 원격 이동 회로."

#: ../../qc_intro.rst:118
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "양자 회로는 양자 컴퓨터가 고전적인 정보를 받아들이고 고전적인 솔루션을 출력할 수 있게 하는데, 이 때 :ref:`간섭 <qc-intro-interference>` 과 :ref:`얽힘 <qc-intro-entanglement>` 과 같은 양자 원리를 사용하여 계산을 한다."

#: ../../qc_intro.rst:123
msgid "A typical quantum algorithm workflow consists of:"
msgstr "일반적인 양자 알고리즘 워크플로우는 다음으로 구성됩니다."

#: ../../qc_intro.rst:125
msgid "The problem we want to solve,"
msgstr "우리가 해결하고자 하는 문제는"

#: ../../qc_intro.rst:126
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "양자 회로에 대한 설명을 생성하는 고전적인 알고리즘,"

#: ../../qc_intro.rst:127
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "양자 하드웨어에서 실행되어야 하는 양자 회로는"

#: ../../qc_intro.rst:128
msgid "And the output classical solution to the problem that it produces."
msgstr "그리고 생성된 문제를 해결하기 위해 출력된 고전적 해법."

#: ../../qc_intro.rst:130
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamard (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit to another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract partial information about a qubit's state, often losing the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr "양자 게이트는 양자 데이터에 적용되는 기본적인 연산을 구성한다. 양자 게이트는 큐비트 상에 저장된 양자 데이터에 적용되는 변환을 나타내며 이는 정보를 보존하고 가역적이다. 이러한 \"유니터리\" 변환은 양자 회로의 양자역학적 핵심을 보여준다. :math:`X` (:math:`\\oplus` 형태로도 표기) 및 :math:`CX`와 같은 몇몇 게이트는 비트 반전 및 :math:`XOR`과 같이 대응되는 고전적 연산이 존재하기도 하지만 그렇지 않은 게이트 또한 존재한다. 하다마드(Hadamard, :math:`H`) 게이트와 매개변수를 가진 :math:`rX(\\theta)` 및 :math:`rY(\\theta)` 회전은 중첩 상태를 생성하는 한편 :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, 그리고 :math:`T` 게이트는 간섭을 일으킬 수 있도록 위상을 변화시킨다. :math:`CX` 게이트와 같은 2큐비트 게이트는 큐비트 묶음에 얽힘을 만들거나 어느 한 큐비트로부터 다른 하나의 큐비트로 위상을 \"킥(kick)\"하기 위해 사용한다. 다음으로 앞서 언급한 게이트와는 달리 \"측정\"(상자 내의 계량 기호와 \"표적\" 와이어로 연결된 선으로 표현)과 같은 연산은 큐비트의 상태에 관한 부분적인 정보를 추출하며 이 과정에서 고전적인 비트로 표현하고 표적 와이어(해독 장치의 대체로 완전히 고전적인 연결)에 그것을 기록하기 위해 보통 위상 정보를 잃게 된다. 이는 양자 데이터로부터 정보를 얻어내 고전적 장치로 보내는 일반적인 방법이다. 참고로 :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, 그리고 측정 게이트, 즉, 유니버설 게이트 집합만으로도 모든 종류의 양자 회로를 생성할 수 있으며 그러한 양자 회로에는 자연에 존재하는 물리계의 역학을 효율적으로 계산할 수 있는 회로까지 포함된다."

#: ../../qc_intro.rst:149
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr "일부 작업부하들은 양자 회로들과 고전적인 계산이 교차로 합쳐진 확장된 시퀀스를 포함한다. 예를 들어, 다양한 변분 양자 알고리즘들은 최적화 루프 내에서 양자 회로들을 실행한다. 이러한 작업부하에 있어서, 양자 회로가 매개 변수화되고, 회로 실행과 비유동적 고전적 계산 사이의 상태 변화가 효율화되면 시스템 성능이 실질적으로 증가한다. 결과적으로, 계산 시간을 가속화하기 위해 개발된 하드웨어를 가진 양자 회로를 반복적으로 사용하는 알고리즘을 사용하는 계산으로 **근-시간 계산** 을 정의한다. 근-시간 계산에서 고전적인 계산은 양자 연산의 결맞음보다 더 긴 시간 단위에서 발생한다. 이는 고전적인 계산이 양자장치의 결어긋남 시간 내에서 발생하는 **실시간 계산** 과 대조된다."

#: ../../qc_intro.rst:160
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit, which supports a rich feature set of operations and can send your circuits to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators. With only a few lines of code, it is possible to construct complex circuits like the one above."
msgstr "복잡한 양자 회로를 최소한의 노력으로 구성하는 것이 Qiskit의 핵심이며, 다양한 기능 세트를 지원하고 회로를 다양한 :ref:`quantum computers <qc-intro-computers>` 또는 고전적 시뮬레이터로 보낼 수 있다. 약간의 코드만으로 위와 같은 복잡한 회로를 구성할 수 있다."

#: ../../qc_intro.rst:185
msgid "Quantum computers"
msgstr "양자 컴퓨터"

#: ../../qc_intro.rst:191
msgid "A view inside the IBM Quantum System One."
msgstr "IBM 양자 시스템 원의 내부."

#: ../../qc_intro.rst:193
msgid "Quantum computers which are programmed using quantum circuits can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr "양자 회로를 사용하여 프로그램되는 양자 컴퓨터들은 큐비트의 원소를 정의할 수 있는 아무 양자 기술을 사용하여 구축될 수 있고, 고충실도의 단일과 다중 큐비트 게이트 연산을 시행할 수 있다. 현재 초전도 회로, 이온 트랩, 양자점 반도체, 광자, 그리고 중성 원자를 기반으로 다양한 양자 컴퓨터 구조가 개발되고 있으며, 대다수는 이미 인터넷을 통해 사용해 볼 수 있다. Qiskit은 양자 시스템의 구조에 대한 전문 지식이 없어도 사용 가능하며, 양자 회로를 컴파일해 특정 양자 장치와 뒤엉킴 게이트의 위상을 일치시킬 수 있고, 회로 명령어를 장치의 기본 게이트 세트에 매핑시킬 수 있으며, 더 높은 충실도를 위해 양자 회로를 최적화시킬 수도 있다."

#: ../../qc_intro.rst:203
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr "위의 노이즈 제거 예에서와 같이, 큐비트들의 진폭 및 위상은 동작들이 정확하게 수행될 수 없는 연속적인 자유도 (degree of freedom) 이다.  이들 게이트 에러들은, 양자 컴퓨터가 상주하는 환경으로부터의 잡음과 함께, 컴파일 프로세스에서 설명되지 않는 경우 계산을 방해할 수 있고, 잡음에 민감한 현재의 양자 시스템들 상에서 고충실도 출력을 획득하기 위해 추가적인 완화 절차들을 요구할 수 있다. Qiskit은 컴파일 전략에서 광범위한 장치 교정 메트릭 (아래 그림 참조) 을 고려할 수 있고, 주어진 양자 회로를 실행할 최적의 큐비트 세트를 선택할 수 있다.  또한, Qiskit은 양자 회로 출력의 충실한 표현을 추출하기 위한 잡음 완화 기술의 집합을 호스트한다."

#: ../../qc_intro.rst:217
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "*ibmq_manhattan* 시스템에 대한 위상수학 및 오류 비율."

#: ../../qc_intro.rst:221
msgid "Where to go from here"
msgstr "더 알아보기"

#: ../../qc_intro.rst:223
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr "바라건대, 우리는 독자들에게 양자 계산이 어떤걸 제공하는지 맛보았기를 바라며, 여러분은 더 많은 것을 갈망하길 바란다. 그렇다면 다음과 같은 몇 가지 리소스를 활용할 수 있다."

#: ../../qc_intro.rst:227
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`Getting started with Qiskit <getting_started.html>`_ - Qiskit 시작하기."

#: ../../qc_intro.rst:229
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : \n"
"대화형 회로 컴포저를 사용하는 양자 계산의 창시자 중 일부가 작성한 물리학 기반 소개이다."

#: ../../qc_intro.rst:233
msgid "`Qiskit textbook <https://qiskit.org/textbook>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr "`Qiskit 교과서 <https://qiskit.org/textbook>`_ : Qiskit 을 기반으로 만들어진 대학 양자 알고리즘/계산 강좌의 보충 자료."

