msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:43\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "시작하기"

#: ../../getting_started.rst:10
msgid "Installation"
msgstr "설치하기"

#: ../../getting_started.rst:12
msgid "Let's get started using Qiskit!  The first thing to do is choose how you're going to run and install the packages.  There are three main ways to do this:"
msgstr "Qiskit을 사용해보자! 가장 먼저 해야 할 것은 패키지를 실행하고 설치할 방법을 선택하는 것이다. 여기에는 세 가지 주요 방법이 있다."

#: ../../getting_started.rst
msgid "Start locally"
msgstr "로컬에서 시작"

#: ../../getting_started.rst:19
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "Qiskit은 Python 3.7이상을 지원한다. 하지만 Python과 Qiskit 모두 계속 개발중이며, 때때로 새 릴리스가 하나 또는 다른 버전에서 발생하는 경우 호환성에 문제가 발생할 수 있다."

#: ../../getting_started.rst:23
msgid "You will need to `download Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ on your local system to get started. `Jupyter <https://jupyter.org/install>`__ is recommended for interacting with Qiskit."
msgstr "로컬 시스템에서 시작하기 위해서는 `Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ 을 다운로드해야 한다. `Jupyter <https://jupyter.org/install>`__ 를 통해 Qiskit을 사용하기를 권장한다."

#: ../../getting_started.rst:27
msgid "We recommend using `Python virtual environments <https://docs.python.org/3.10/tutorial/venv.html>`__ to cleanly separate Qiskit from other applications and improve your experience."
msgstr "Qiskit을 다른 애플리케이션과 분리하고 사용자 경험을 증진시키기 위해 `Python 가상 환경 <https://docs.python.org/3.10/tutorial/venv.html>`__ 을 사용하는 것을 추천한다."

#: ../../getting_started.rst:30
msgid "Create a minimal environment with only Python installed in it."
msgstr "오직 Python 만 설치한 최소한의 환경을 만들고,"

#: ../../getting_started.rst:36
msgid "Activate your new environment."
msgstr "새로운 환경을 활성화하라."

#: ../../getting_started.rst:43
msgid "Note: if you are using Windows, use the following commands in PowerShell."
msgstr "참고: 윈도우를 사용한다면 PowerShell에서 아래의 명령어를 사용하라."

#: ../../getting_started.rst:51
msgid "Next, install the Qiskit package."
msgstr "그런 다음 Qiskit 패키지를 설치한다."

#: ../../getting_started.rst:57
msgid "If the packages were installed correctly, you can run ``pip list`` to see the active packages in your virtual environment."
msgstr "만약 패키지가 제대로 설치되었다면, ``pip list`` 명령어를 사용하여 현재 가상 환경에서 활성화된 패키지를 확인할 수 있다."

#: ../../getting_started.rst:60
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr "시각화 기능 또는 Jupyter 노트북을 사용하려는 경우 추가 ``visualization`` 을 사용하여 Qiskit을 설치하는 것이 좋다."

#: ../../getting_started.rst:67
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr "zsh 사용자 (최신 버전의 macOS 기본 쉘) 인 경우 ``qiskit[visualization]`` 을 따옴표로 묶어야 한다:"

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr "클라우드에서 시작하기"

#: ../../getting_started.rst:76
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr "다음의 클라우드 환경을 이용하면 별도의 설치 없이 Qiskit을 사용할 수 있다."

#: ../../getting_started.rst
msgid "Install from source"
msgstr "소스 코드로부터 설치"

#: ../../getting_started.rst:92
msgid "Installing Qiskit from source allows you to access the current development version, instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr ""

#: ../../getting_started.rst:97
msgid "Begin by making a new virtual environment and activating it:"
msgstr ""

#: ../../getting_started.rst:104
msgid "Installing from source requires that you have the Rust compiler on your system. To install the Rust compiler the recommended path is to use rustup, which is a cross-platform Rust installer. To use rustup you can go to:"
msgstr "소스에서 설치하려면 시스템에 Rust 컴파일러가 있어야 한다. Rust 컴파일러를 설치하려면 크로스 플랫폼 Rust 설치 프로그램인 rustup을 사용하는 것이 좋다. rustup을 사용하려면:"

#: ../../getting_started.rst:108
msgid "https://rustup.rs/"
msgstr "https://rustup.rs/"

#: ../../getting_started.rst:110
msgid "which will provide instructions for how to install rust on your platform. Besides rustup there are `other installation methods <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ available too."
msgstr "플랫폼에 rust를 설치하는 방법에 대한 지시사항을 제공한다. rustup 외에 `다른 설치 방법 <https://forge.rust-lang.org/infra/other-installation-methods.html>`__  도 사용할 수 있다."

#: ../../getting_started.rst:114
msgid "Once the Rust compiler is installed, you are ready to install Qiskit."
msgstr ""

#: ../../getting_started.rst:116
msgid "Clone the Qiskit repository."
msgstr ""

#: ../../getting_started.rst:122
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr "저장소 복제는 ``qiskit-terra``라는 이름의 지역 디렉토리를 생성한다."

#: ../../getting_started.rst:128
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "만약 테스트 코드를 실행하거나 철자법 검사를 하고자 한다면, 개발자 요구사항 라이브러리를 설치하라."

#: ../../getting_started.rst:134
msgid "Install ``qiskit-terra``."
msgstr "``qiskit-terra``를 설치하기"

#: ../../getting_started.rst:140
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "만약, 프로젝트에 코드가 변화하였을 때 재설치가 필요하지 않는, 수정 가능한 모드로 설치하고자 한다면, 다음의 명령어를 사용하라."

#: ../../getting_started.rst:147
msgid "Installing in editable mode will build the compiled extensions in debug mode without optimizations. This will affect the runtime performance of the compiled code. If you'd like to use editable mode and build the compiled code in release with optimizations enabled you can run:"
msgstr "편집 가능 모드에서 설치하면 디버그 모드에서 컴파일된 extension들이 최적화 없이 빌드된다. 이는 컴파일된 코드의 런타임 성능에 영향을 끼친다. 편집 모드에서 최적화를 사용해 컴파일된 코드를 빌드 하고 싶다면 다음을 실행해 보자:"

#: ../../getting_started.rst:156
msgid "after you run pip and that will rebuild the binary in release mode. If you are working on Rust code in Qiskit you will need to rebuild the extension code every time you make a local change. ``pip install -e .`` will only build the Rust extension when it's called, so any local changes you make to the Rust code after running pip will not be reflected in the installed package unless you rebuild the extension. You can leverage the above ``build_rust`` command to do this (with or without ``--release`` based on whether you want to build in debug mode or release mode)."
msgstr "pip를 실행한 후 위 코드가 배포 모드에서 바이너리를 다시 빌드할 것이다. 만약 Qiskit에서 Rust 코드를 작업하는 경우, 로컬에서 변경이 발생할 때마다 확장 코드를 매번 다시 빌드해야 한다. ``pip install -e`` 는 호출될 때만 Rust 확장을 빌드하므로, 확장 코드를 다시 빌드하지 않는 한 pip를 실행한 후의 Rust 코드 작업의 로컬 변경 사항들은 설치된 패키지에 반영되지 않을 것이다. 이를 위해 위의 ``build_rust`` 명령을 사용할 수 있다 (디버그 모드 또는 배포 모드에서 빌드할 것인지 여부에 따라 ``--release`` 사용 여부를 결정한다)."

#: ../../getting_started.rst:165
msgid "You can then run the code examples after installing Qiskit. You can run the example with the following command."
msgstr ""

#: ../../getting_started.rst:175
msgid "Platform Support"
msgstr "플랫폼 지원"

#: ../../getting_started.rst:177
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit은 최대한 많은 플랫폼을 지원하기 위해 노력하지만, 사용 가능한 테스트 자원 및 플랫폼 가용성의 한계로 인해 모든 플랫폼을 지원할 수는 없다. Qiskit에 대한 플랫폼 지원은 3개의 계층으로 나뉘며 각 계층마다 지원 수준이 다르다. 이러한 플랫폼 이외의 플랫폼에서 Qiskit은 여전히 설치 가능하지만 테스트되지 않았으며 Qiskit(및 Qiskit의 종속 항목) 을 소스로부터 가져와야 한다."

#: ../../getting_started.rst:184
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "또한 Qiskit은 CPython만 지원한다. 다른 Python 인터프리터를 사용하는 것은 현재 지원되지 않는다."

#: ../../getting_started.rst:188
msgid "Tier 1"
msgstr "계층 1"

#: ../../getting_started.rst:190
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "계층 1 지원 플랫폼은 제안된 변경사항이 올바르게 작동하는지 확인하기 위해 개발 프로세스의 일부로 테스트된다. 사전 컴파일된 바이너리는 릴리스 프로세스의 일부로 빌드, 테스트 및 PyPI에 공개된다. 이러한 플랫폼은 모든 종속 프로그램을 사용할 수 있기 때문에 작동하는 Python 환경만으로 설치가 가능할 것으로 예상된다."

#: ../../getting_started.rst:196
msgid "Tier 1 platforms are currently:"
msgstr "계층 1 플랫폼은 다음과 같다:"

#: ../../getting_started.rst:198
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)."
msgstr "Linux x86_64 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ 패키지 사양과 호환되는 배포판)."

#: ../../getting_started.rst:201
msgid "macOS x86_64 (10.9 or newer)"
msgstr "macOS x86_64 (10.9 또는 최신 버전)"

#: ../../getting_started.rst:202
msgid "Windows 64 bit"
msgstr "윈도우 64비트"

#: ../../getting_started.rst:205
msgid "Tier 2"
msgstr "계층 2"

#: ../../getting_started.rst:207
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "계층 2 플랫폼은 개발 프로세스의 일부로 테스트를 거치지 않는다. 그러나 사전 컴파일된 바이너리는 릴리스 프로세스의 일부로 빌드, 테스트 및 PyPI에 공개되며 이러한 패키지는 단지 작동하는 Python 환경에서 설치가 가능할 것으로 예상된다."

#: ../../getting_started.rst:212
msgid "Tier 2 platforms are currently:"
msgstr "계층 2 플랫폼은 다음과 같다:"

#: ../../getting_started.rst:214
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Linux i686 (Python < 3.10) 용 Linux i686 ( `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__  패키징 스펙과 호환 가능)"

#: ../../getting_started.rst:217
msgid "Windows 32 bit for Python < 3.10"
msgstr "Python <3.10용 윈도우 32비트"

#: ../../getting_started.rst:218
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64 (패키징 사양과 호환되는 배포판 `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`)"

#: ../../getting_started.rst:223
msgid "Tier 3"
msgstr "계층 3"

#: ../../getting_started.rst:225
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "계층 3 플랫폼은 개발 프로세스의 일부로 테스트되지 않는다. 사전 컴파일된 바이너리는 테스트 없이 릴리스 프로세스의 일부로 PyPI에 빌드되고 공개된다. 단순히 작동하는 Python 환경으로는 설치할 수 없으며, 설치 프로세스의 일부로 소스의 종속 프로그램을 빌드하기 위해 C/C++ 컴파일러 또는 추가 프로그램이 필요할 수 있다. 이러한 플랫폼에 대한 지원은 최선의 노력이다."

#: ../../getting_started.rst:232
msgid "Tier 3 platforms are currently:"
msgstr "계층 3 플랫폼은 다음과 같다:"

#: ../../getting_started.rst:234
msgid "Linux ppc64le (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux ppc64le (패키징 사양과 호환되는 배포판 `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`)"

#: ../../getting_started.rst:237
msgid "Linux s390x (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux s390x (패키징 사양과 호환되는 배포판 `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`)"

#: ../../getting_started.rst:240
msgid "macOS arm64 (10.15 or newer)"
msgstr "macOS arm64 (10.15 또는 최신 버전)"

#: ../../getting_started.rst:241
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Python >= 3.10용 Linux i686 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ 패키징 사양과 호환되는 배포판)"

#: ../../getting_started.rst:244
msgid "Windows 32 bit for Python >= 3.10"
msgstr "Python >= 3.10 용 윈도우 32 비트"

#: ../../getting_started.rst:247
msgid "Ready to get going?..."
msgstr "시작할 준비가 다 되었다면..."

