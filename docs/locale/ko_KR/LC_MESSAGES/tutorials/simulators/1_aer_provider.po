msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-03-16 11:57\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/1_aer_provider.po\n"
"X-Crowdin-File-ID: 9160\n"

#: ../../tutorials/simulators/1_aer_provider.ipynb:10
msgid "This page was generated from `tutorials/simulators/1_aer_provider.ipynb`__."
msgstr "이 페이지는 `tutorials/simulators/1_aer_provider.ipynb`__ 에서 생성되었다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:9
msgid "Simulators"
msgstr "시뮬레이터"

#: ../../tutorials/simulators/1_aer_provider.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/simulators/1_aer_provider.ipynb:23
msgid "This notebook shows how to import the *Qiskit Aer* simulator backend and use it to run ideal (noise free) Qiskit Terra circuits."
msgstr "이 노트북은 *Qiskit Aer* 시뮬레이터 백엔드를 어떻게 가져오고, 이상적인 (잡음이 없는) Qiskit Terra 회로를 실행하는 데 사용할 수 있는지 보여준다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:51
msgid "The Aer Provider"
msgstr "Aer 공급자"

#: ../../tutorials/simulators/1_aer_provider.ipynb:53
msgid "The ``Aer`` provider contains a variety of high performance simulator backends for a variety of simulation methods. The available backends on the current system can be viewed using ``Aer.backends``"
msgstr "``Aer`` 공급자는 각종 시뮬레이터 방법들을 위한 다양한 고성능 시뮬레이터 백엔드들을 포함한다. 현재 시스템에 사용 가능한 백엔드들은 ``Aer.backends`` 를 사용하여 볼 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:133
msgid "The Aer Simulator"
msgstr "Aer 시뮬레이터"

#: ../../tutorials/simulators/1_aer_provider.ipynb:135
msgid "The main simulator backend of the Aer provider is the ``AerSimulator`` backend. A new simulator backend can be created using ``Aer.get_backend('aer_simulator')``."
msgstr "Aer 공급자의 주 시뮬레이터 백엔드는 ``AerSimulator`` 백엔드이다. 새로운 시뮬레이터 백엔드는 ``Aer.get_backend('aer_simulator')`` 를 사용하여 만들 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:156
msgid "The default behavior of the ``AerSimulator`` backend is to mimic the execution of an actual device. If a ``QuantumCircuit`` containing measurements is run it will return a count dictionary containing the final values of any classical registers in the circuit. The circuit may contain gates, measurements, resets, conditionals, and other custom simulator instructions that will be discussed in another notebook."
msgstr "``AerSimulator`` 백엔드의 기본 행동 방식은 실제 장치의 실행 과정을 모방하는 것이다. 만약 측정이 포함된 ``QuantumCircuit`` 이 실행된다면 회로의 고전 레지스터들의 최종값들을 포함한 카운트 딕셔너리가 출력될 것이다. 회로는 게이트, 측정, 초기화, 조건, 그리고 다른 맞춤형 시뮬레이터 명령들을 포함할 수 있는데, 이에 관한 더 자세한 내용은 다른 노트북에서 설명될 것이다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:168
msgid "Simulating a quantum circuit"
msgstr "양자 회로 시뮬레이션하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:170
msgid "The basic operation runs a quantum circuit and returns a counts dictionary of measurement outcomes. Here we run a simple circuit that prepares a 2-qubit Bell-state :math:`\\left|\\psi\\right\\rangle = \\frac{1}{\\sqrt{2}}\\left(\\left|0,0\\right\\rangle + \\left|1,1 \\right\\rangle\\right)` and measures both qubits."
msgstr "기본 연산은 양자 회로를 실행하고 측정 결과의 카운트를 딕셔너리 형식으로 출력한다. 여기서는 2-큐비트 벨 상태 :math:`\\left|\\psi\\right\\rangle = \\frac{1}{\\sqrt{2}}\\left(\\left|0,0\\right\\rangle + \\left|1,1 \\right\\rangle\\right)` 를 준비하고 두 큐비트를 다 측정하는 간단한 회로를 실행한다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:214
msgid "Returning measurement outcomes for each shot"
msgstr "매 시행마다 측정의 결과를 반환하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:216
msgid "The ``QasmSimulator`` also supports returning a list of measurement outcomes for each individual shot. This is enabled by setting the keyword argument ``memory=True`` in the ``run``."
msgstr "``QasmSimulator`` 도 개별 샷에 대한 측정 결과 목록의 반환을 지원한다. 이는 ``run`` 에 키워드 인수 ``memory=True`` 를 설정하여 활성화시킬 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:265
msgid "Aer Simulator Options"
msgstr "Aer 시뮬레이터 속 옵션"

#: ../../tutorials/simulators/1_aer_provider.ipynb:267
msgid "The ``AerSimulator`` backend supports a variety of configurable options which can be updated using the ``set_options`` method. See the ``AerSimulator`` API documentation for additional details."
msgstr "``AerSimulator`` 백엔드는 ``set_options`` 메서드를 사용하여 업데이트할 수 있는 다양한 설정들을 지원한다. 자세한 내용은 ``AerSimulator`` API 문서에서 확인할 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:279
msgid "Simulation Method"
msgstr "시뮬레이션 방법"

#: ../../tutorials/simulators/1_aer_provider.ipynb:281
msgid "The ``AerSimulator`` supports a variety of simulation methods, each of which supports a different set of instructions. The method can be set manually using ``simulator.set_option(method=value)`` option, or a simulator backend with a preconfigured method can be obtained directly from the ``Aer`` provider using ``Aer.get_backend``."
msgstr "``AerSimulator`` 는 각각 다른 목록의 명령어들을 지원하는 다양한 시뮬레이션 방법들을 지원한다. 이 방법을 ``simulator.set_option(method=value)`` 옵션을 통해 수동으로 설정하거나 ``Aer.get_backend`` 를 사용해 ``Aer`` 제공자에서 바로 시뮬레이션 방법이 다 구성된 시뮬레이터 백엔드를 얻을 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:283
msgid "When simulating ideal circuits, changing the method between the exact simulation methods ``stabilizer``, ``statevector``, ``density_matrix`` and ``matrix_product_state`` should not change the simulation result (other than usual variations from sampling probabilities for measurement outcomes)"
msgstr "이상적인 회로를 시뮬레이션할 때 시뮬레이션 방법을 정확도가 높은 방법들인 ``stabilizer``, ``statevector``, ``density_matrix``, 그리고 ``matrix_product_state`` 사이에서 바꾼다면 시뮬레이션 결과는 바뀌지 않을 것이다. (측정 결과에 대한 표본 추출 확률들의 일반적인 변형을 제외한다면)"

#: ../../tutorials/simulators/1_aer_provider.ipynb:340
msgid "Automatic Simulation Method"
msgstr "자동 시뮬레이션 방법"

#: ../../tutorials/simulators/1_aer_provider.ipynb:342
msgid "The default simulation method is ``automatic`` which will automatically select a one of the other simulation methods for each circuit based on the instructions in those circuits. A fixed simulation method can be specified by by adding the method name when getting the backend, or by setting the ``method`` option on the backend."
msgstr "기본 시뮬레이션 방법은 회로 속 명령어들에 따라 자동으로 시뮬레이션 방법을 선택하는 ``automatic`` 이다. 고정 시뮬레이션 방법은 백엔드를 가져올 때 방법 이름을 추가하거나 백엔드에서 ``method`` 옵션을 설정하여 지정할 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:354
msgid "GPU Simulation"
msgstr "GPU 시뮬레이션"

#: ../../tutorials/simulators/1_aer_provider.ipynb:356
msgid "The ``statevector``, ``density_matrix`` and ``unitary`` simulators support running on a NVidia GPUs. For these methods the simulation device can also be manually set to CPU or GPU using ``simulator.set_options(device='GPU')`` backend option. If a GPU device is not available setting this option will raise an exception."
msgstr "``statevector``, ``density_matrix`` 그리고 ``unitary`` 시뮬레이터들은 엔비디아 GPU에서 실행될 수 있다. 이 메서들에 대한 시뮬레이션 장치는 ``simulator.set_options(device='GPU')`` 백엔드 옵션을 활용하여 수동으로 CPU나 GPU로 설정할 수 있다. 만약 GPU 장치를 사용할 수 없다면 이러한 옵션은 예외를 발생시킬 것이다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:386
msgid "The ``Aer`` provider will also contain preconfigured GPU simulator backends if Qiskit Aer was installed with GPU support on a compatible system:"
msgstr "만약 Qiskit Aer가 호환 가능한 시스템에서 GPU 지원이 가능하게 설치된 경우에는 ``Aer`` 공급자에 미리 구성된 GPU 시뮬레이터 백엔드들이 포함되어 있을 것이다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:388
msgid "``aer_simulator_statevector_gpu``"
msgstr "``aer_simulator_statevector_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:389
msgid "``aer_simulator_density_matrix_gpu``"
msgstr "``aer_simulator_density_matrix_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:390
msgid "``aer_simulator_unitary_gpu``"
msgstr "``aer_simulator_unitary_gpu``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:392
msgid "*Note: The GPU version of Aer can be installed using* ``pip install qiskit-aer-gpu``."
msgstr "*참고: Aer의 GPU 버전은 ``pip install qiskit-aer-gpu`` 를 사용하여 설치할 수 있다.*"

#: ../../tutorials/simulators/1_aer_provider.ipynb:404
msgid "Simulation Precision"
msgstr "시뮬레이션 정밀도"

#: ../../tutorials/simulators/1_aer_provider.ipynb:406
msgid "One of the available simulator options allows setting the float precision for the ``statevector``, ``density_matrix``, ``unitary`` and ``superop`` methods. This is done using the ``set_precision=\"single\"`` or ``precision=\"double\"`` (default) option:"
msgstr "``statevector``, ``density_matrix``, ``unitary`` 그리고 ``superop`` 방법에 대한 정밀도를 float로 설정하는 옵션도 사용할 수 있다. 이는 ``set_precision=\"single\"`` 또는 ``precision=\"double\"`` (기본값) 옵션을 이용해 수행된다:"

#: ../../tutorials/simulators/1_aer_provider.ipynb:458
msgid "Setting the simulation precision applies to both CPU and GPU simulation devices. Single precision will halve the required memory and may provide performance improvements on certain systems."
msgstr "시뮬레이션 정밀도를 설정하는 것은 CPU 와 GPU 시뮬레이션 장치 둘 다에 적용된다. 단일 정밀도는 필요한 메모리를 절반으로 줄이고 특정 시스템에 대해 성능을 향상시킬 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:470
msgid "Custom Simulator Instructions"
msgstr "맞춤형 시뮬레이터 명령들"

#: ../../tutorials/simulators/1_aer_provider.ipynb:482
msgid "Saving the simulator state"
msgstr "시뮬레이터 상태 저장하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:484
msgid "The state of the simulator can be saved in a variety of formats using custom simulator instructions."
msgstr "시뮬레이터의 상태는 맞춤형 시뮬레이터 명령들을 사용해 다양한 형식으로 저장될 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:487
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Circuit method"
msgstr "회로 메서드"

#: ../../tutorials/simulators/1_aer_provider.ipynb:487
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Description"
msgstr "설명"

#: ../../tutorials/simulators/1_aer_provider.ipynb:487
#: ../../tutorials/simulators/1_aer_provider.ipynb:737
msgid "Supported Methods"
msgstr "지원되는 메서드들"

#: ../../tutorials/simulators/1_aer_provider.ipynb:489
msgid "``save_state``"
msgstr "``save_state``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:489
msgid "Save the simulator state in the native format for the simulation method"
msgstr "시뮬레이터 상태를 시뮬레이션 방법의 기본 형식으로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:489
msgid "All"
msgstr "전부"

#: ../../tutorials/simulators/1_aer_provider.ipynb:491
msgid "``save_statevector``"
msgstr "``save_statevector``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:491
msgid "Save the simulator state as a statevector"
msgstr "시뮬레이터 상태를 상태 벡터로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:491
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"extended_stabilizer\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:493
msgid "``save_stabilizer``"
msgstr "``save_stabilizer``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:493
msgid "Save the simulator state as a Clifford stabilizer"
msgstr "시뮬레이터 상태를 Clifford stabilizer로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:493
#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "``\"automatic\"``, ``\"stabilizer\"``"
msgstr "``\"automatic\"``, ``\"stabilizer\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:495
msgid "``save_density_matrix``"
msgstr "``save_density_matrix``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:495
msgid "Save the simulator state as a density matrix"
msgstr "시뮬레이터 상태를 밀도 행렬로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:495
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"matrix_product_state\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:497
msgid "``save_matrix_product_state``"
msgstr "``save_matrix_product_state``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:497
msgid "Save the simulator state as a a matrix product state tensor"
msgstr "시뮬레이터 상태를 행렬 곱 상태 텐서로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:497
msgid "``\"automatic\"``, ``\"matrix_product_state\"``"
msgstr "``\"automatic\"``, ``\"matrix_product_state\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:499
msgid "``save_unitary``"
msgstr "``save_unitary``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:499
msgid "Save the simulator state as unitary matrix of the run circuit"
msgstr "시뮬레이터 상태를 실행된 회로의 단일 행렬로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:499
msgid "``\"automatic\"``, ``\"unitary\"``"
msgstr "``\"automatic\"``, ``\"unitary\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:501
msgid "``save_superop``"
msgstr "``save_superop``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:501
msgid "Save the simulator state as superoperator matrix of the run circuit"
msgstr "시뮬레이터 상태를 실행된 회로의 superoperator 행렬로 저장한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:501
#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "``\"automatic\"``, ``\"superop\"``"
msgstr "``\"automatic\"``, ``\"superop\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:504
msgid "Note that these instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr "이러한 명령어들은 Aer 시뮬레이터에서만 지원되고, IBM 양자 장치와 같은 시뮬레이터가 아닌 백엔드에서 이러한 명령어들을 포함한 회로가 실행될 경우 오류가 발생할 것임에 주의하라."

#: ../../tutorials/simulators/1_aer_provider.ipynb:516
msgid "Saving the final statevector"
msgstr "최종 상태 벡터 저장하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:518
msgid "To save the final statevector of the simulation we can append the circuit with the ``save_statevector`` instruction. Note that this instruction should be applied *before* any measurements if we do not want to save the collapsed post-measurement state"
msgstr "시뮬레이션의 최종 상태 벡터를 저장하기 위해서는 회로에 ``save_statevector`` 명령어를 추가하면 된다. 측정 후에 붕괴된 상태를 저장하지 않기 위해서는 이 명령어를 꼭 어떠한 측정 *전에* 적용해야 한다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:562
msgid "Saving the circuit unitary"
msgstr "회로의 단일 행렬 저장하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:564
msgid "To save the unitary matrix for a ``QuantumCircuit`` we can append the circuit with the ``save_unitary`` instruction. Note that this circuit cannot contain any measurements or resets since these instructions are not supported on for the ``\"unitary\"`` simulation method"
msgstr "``QuantumCircuit`` 에 대한 유니터리 행렬을 저장하고 싶다면 회로에 ``save_unitary`` 명령어를 추가하면 된다. 다만 이 명령어가 추가된 회로에는 어떠한 측정이나 초기화가 포함될 수 없는데, 이 명령어들은 ``\"unitary\"`` 시뮬레이션 방법에서 지원되지 않기 때문이다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:635
msgid "Saving multiple states"
msgstr "여러 상태 저장하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:637
msgid "We can also apply save instructions at multiple locations in a circuit. Note that when doing this we must provide a unique label for each instruction to retrieve them from the results"
msgstr "또한, 명령어 저장은 회로의 여러 장소에 적용될 수 있다. 이렇게 여러 장소에 명령어 저장을 적용할 때에는 각 명령어에 고유한 라벨을 추가해야 결과에서 검색할 수 있다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:732
msgid "Setting the simulator to a custom state"
msgstr "맞춤형 상태로 시뮬레이터 설정하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:734
msgid "The ``AerSimulator`` allows setting a custom simulator state for several of its simulation methods using custom simulator instructions"
msgstr "``AerSimulator`` 는 몇몇 시뮬레이션 방법을 활용할 때 맞춤 시뮬레이터 명령어를 사용해 맞춤 시뮬레이터 상태를 설정할 수 있게 도와준다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "``set_statevector``"
msgstr "``set_statevector``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "Set the simulator state to the specified statevector"
msgstr "시뮬레이터 상태를 지정된 상태 벡터로 설정한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:739
msgid "``\"automatic\"``, ``\"statevector\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"statevector\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "``set_stabilizer``"
msgstr "``set_stabilizer``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:741
msgid "Set the simulator state to the specified Clifford stabilizer"
msgstr "시뮬레이터 상태를 지정된 Clifford stabilizer로 설정한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "``set_density_matrix``"
msgstr "``set_density_matrix``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "Set the simulator state to the specified density matrix"
msgstr "시뮬레이터 상태를 지정된 밀도 행렬로 설정한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:743
msgid "``\"automatic\"``, ``\"density_matrix\"``"
msgstr "``\"automatic\"``, ``\"density_matrix\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "``set_unitary``"
msgstr "``set_unitary``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "Set the simulator state to the specified unitary matrix"
msgstr "시뮬레이터 상태를 지정된 단일 행렬로 설정한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:745
msgid "``\"automatic\"``, ``\"unitary\"``, ``\"superop\"``"
msgstr "``\"automatic\"``, ``\"unitary\"``, ``\"superop\"``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "``set_superop``"
msgstr "``set_superop``"

#: ../../tutorials/simulators/1_aer_provider.ipynb:747
msgid "Set the simulator state to the specified superoperator matrix"
msgstr "시뮬레이터 상태를 지정된 superoperator 행렬로 설정한다"

#: ../../tutorials/simulators/1_aer_provider.ipynb:750
msgid "**Notes:** \\* These instructions must be applied to all qubits in a circuit, otherwise an exception will be raised. \\* The input state must also be a valid state (statevector, density matrix, unitary etc) otherwise an exception will be raised. \\* These instructions can be applied at any location in a circuit and will override the current state with the specified one. Any classical register values (e.g. from preceding measurements) will be unaffected \\* Set state instructions are only supported by the Aer simulator and will result in an error if a circuit containing them is run on a non-simulator backend such as an IBM Quantum device."
msgstr ""

#: ../../tutorials/simulators/1_aer_provider.ipynb:763
msgid "Setting a custom statevector"
msgstr "맞춤형 상태 벡터 설정하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:765
msgid "The ``set_statevector`` instruction can be used to set a custom ``Statevector`` state. The input statevector must be valid (:math:`|\\langle\\psi|\\psi\\rangle|=1`)"
msgstr "``set_statevector`` 명령어는 맞춤 ``Statevector`` 상태를 설정하기 위해 사용된다. 입력 상태 벡터는 꼭 유효해야 한다 (:math:`|\\langle\\psi|\\psi\\rangle|=1`)."

#: ../../tutorials/simulators/1_aer_provider.ipynb:833
msgid "Using the initialize instruction"
msgstr "초기화 명령어 사용하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:835
msgid "It is also possible to initialize the simulator to a custom statevector using the ``initialize`` instruction. Unlike the ``set_statevector`` instruction this instruction is also supported on real device backends by unrolling to reset and standard gate instructions."
msgstr "``initialize`` 명령어를 활용하여 시뮬레이터를 맞춤 상태 벡터로 초기화할 수도 있다. ``set_statevector`` 명령어와는 다르게 이 명령어는 초기화와 기본 게이트 명령어들에 전개되어 적용되기 때문에 실제 장치 백엔드에서도 지원된다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:899
msgid "Setting a custom density matrix"
msgstr "맞춤형 밀도 행렬 설정하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:901
msgid "The ``set_density_matrix`` instruction can be used to set a custom ``DensityMatrix`` state. The input density matrix must be valid (:math:`Tr[\\rho]=1, \\rho \\ge 0`)"
msgstr "``set_density_matrix`` 명령어는 맞춤 ``DensityMatrix`` 상태를 설정하기 위해 사용된다. 입력 밀도 행렬은 꼭 유효해야 한다 (:math:`Tr[\\rho]=1, \\rho \\ge 0`)."

#: ../../tutorials/simulators/1_aer_provider.ipynb:984
msgid "Setting a custom stabilizer state"
msgstr "맞춤형 stabilizer 상태 설정하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:986
msgid "The ``set_stabilizer`` instruction can be used to set a custom ``Clifford`` stabilizer state. The input stabilizer must be a valid ``Clifford``."
msgstr "``set_stabilizer`` 명령어는 맞춤 ``Clifford`` stabilizer 상태를 설정하기 위해 사용된다. 입력 stabilizer는 꼭 유효한 ``Clifford`` 여야 한다."

#: ../../tutorials/simulators/1_aer_provider.ipynb:1048
msgid "Setting a custom unitary"
msgstr "맞춤형 유니터리 설정하기"

#: ../../tutorials/simulators/1_aer_provider.ipynb:1050
msgid "The ``set_unitary`` instruction can be used to set a custom unitary ``Operator`` state. The input unitary matrix must be valid (:math:`U^\\dagger U=\\mathbb{1}`)"
msgstr "``set_unitary`` 명령어는 맞춤 유니터리 ``Operator`` 상태를 설정하기 위해 사용된다. 입력 유니터리 행렬은 꼭 유효해야 한다 (:math:`U^\\dagger U=\\mathbb{1}`)."

