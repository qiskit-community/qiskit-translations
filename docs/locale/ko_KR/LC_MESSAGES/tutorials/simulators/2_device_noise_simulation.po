msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 22:21+0000\n"
"PO-Revision-Date: 2020-11-12 22:40\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/2_device_noise_simulation.po\n"
"X-Crowdin-File-ID: 9162\n"
"Language: ko_KR\n"

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:10
msgid "This page was generated from `tutorials/simulators/2_device_noise_simulation.ipynb`__."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/2_device_noise_simulation.ipynb>`_."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:9
msgid "Device backend noise model simulations"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:23
msgid "This notebook shows how to use the Qiskit Aer ``noise`` module to automatically generate a basic noise model for an IBMQ hardware device, and use this model to do noisy simulations of ``QuantumCircuits`` to study the effects of errors which occur on real devices."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:25
msgid "Note, that these automatic models are only an *approximation* of the real errors that occur on actual devices, due to the fact that they must be build from a limited set of input parameters related to *average error rates* on gates. The study of quantum errors on real devices is an active area of research and we discuss the Qiskit Aer tools for configuring more detailed noise models in another notebook."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:51
msgid "Device Backend Noise Model"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:53
msgid "The *Qiskit Aer* device noise model automatically generates a simplified noise model for a real device. This model is generated using the calibration information reported in the ``BackendProperties`` of a device and takes into account"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:55
msgid "The *gate\\_error* probability of each basis gate on each qubit."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:56
msgid "The *gate\\_length* of each basis gate on each qubit."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:57
msgid "The :math:`T_1`, :math:`T_2` relaxation time constants of each qubit."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:58
msgid "The readout error probabilies of each qubit."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:61
msgid "Terra Mock Backends"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:63
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ``ibmq_vigo``."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:86
msgid "Test circuit for device and simulation comparison"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:88
msgid "Now we construct a test circuit to compare the output of the real device with the noisy output simulated on the Qiskit Aer ``QasmSimulator``. We will prepare a 3-qubit GHZ state :math:`\\frac{1}{2}(|0,0,0\\rangle + |1,1,1\\rangle)` on qubits 0, 1 and 2. Before running with noise or on the device we show the ideal expected output with no noise."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:131
msgid "Generating a simulator that mimics a device"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:133
msgid "We call ``from_backend`` to create a simulator for ``ibmq_vigo``:"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:154
msgid "By storing the device properties in ``vigo_simulator``, we ensure that the appropriate basis gates and coupling map are used when compiling circuits for simulation, thereby most closely mimicking the gates that will be executed on a real device. In addition ``vigo_simulator`` contains an approximate noise model consisting of:"
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:156
msgid "**Single-qubit gate errors** consisting of a single qubit depolarizing error followed by a single qubit thermal relaxation error."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:157
msgid "**Two-qubit gate errors** consisting of a two-qubit depolarizing error followed by single-qubit thermal relaxation errors on both qubits in the gate."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:158
msgid "**Single-qubit readout errors** on the classical bit value obtained from measurements on individual qubits."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:160
msgid "For the gate errors the error parameter of the thermal relaxation errors is derived using the ``thermal_relaxation_error`` function from ``aer.noise.errors`` module, along with the individual qubit :math:`T_1` and :math:`T_2` parameters, and the ``gate_time`` parameter from the device backend properties. The probability of the depolarizing error is then set so that the combined average gate infidelity from the depolarizing error followed by the thermal relaxation is equal to the ``gate_error`` value from the backend properties."
msgstr ""

#: ../../tutorials/simulators/2_device_noise_simulation.ipynb:163
msgid "For the readout errors the probability that the recorded classical bit value will be flipped from the true outcome after a measurement is given by the qubit ``readout_errors``."
msgstr ""

