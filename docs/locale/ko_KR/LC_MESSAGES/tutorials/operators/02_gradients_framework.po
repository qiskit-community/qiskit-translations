msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:43\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/operators/02_gradients_framework.po\n"
"X-Crowdin-File-ID: 9410\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:10
msgid "This page was generated from `tutorials/operators/02_gradients_framework.ipynb`__."
msgstr "이 페이지는 `tutorials/operators/02_gradients_framework.ipynb`__ 에서 생성되었다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:9
msgid "Qiskit Gradient Framework"
msgstr "Qiskit 경사 프레임워크 (Gradient Framework)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:11
msgid "The gradient framework enables the evaluation of quantum gradients as well as functions thereof. Besides standard first order gradients of expectation values of the form"
msgstr "경사 프레임워크는 양자 함수 뿐만 아니라 양자 경사를 구할 수 있게 해준다. 게다가 다음 형태의 기댓값의 표준 일차 경사도 가능하다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:13
msgid "\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle\n\n"
msgstr "\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:15
msgid "The gradient framework also supports the evaluation of second order gradients (Hessians), and the Quantum Fisher Information (QFI) of quantum states :math:`|\\psi\\left(\\theta\\right)\\rangle`."
msgstr "경사 프레임워크는 이차 경사(헤세 행렬)를 구하는 것과 양자 상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 양자 Fisher 정보(QFI, Quantum Fisher Information)를 구하는 것도 지원한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:26
msgid "|gradient_framework.png|"
msgstr "|gradient_framework.png|"

#: ../../tutorials/operators/02_gradients_framework.ipynb:28
msgid "gradient_framework.png"
msgstr "gradient_framework.png"

#: ../../tutorials/operators/02_gradients_framework.ipynb:40
msgid "Imports"
msgstr "불러오기"

#: ../../tutorials/operators/02_gradients_framework.ipynb:99
msgid "First Order Gradients"
msgstr "일차 경사 (First Order Gradients)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:101
msgid "Given a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`, and observable :math:`\\hat{O}\\left(\\omega\\right)=\\sum_{i}\\omega_i\\hat{O}_i`, we want to compute..."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:113
msgid "Gradients w.r.t. Measurement Operator Parameters"
msgstr "측정 연산자 매개변수에 대한 경사"

#: ../../tutorials/operators/02_gradients_framework.ipynb:115
msgid "Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e."
msgstr "관측가능량 :math:`\\hat{O}\\left(\\omega\\right)` 의 기댓값을 측정 연산자의 계수에 대한 경사는"

#: ../../tutorials/operators/02_gradients_framework.ipynb:117
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega_i} = \\langle\\psi\\left(\\theta\\right)|\\hat{O}_i\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega_i} = \\langle\\psi\\left(\\theta\\right)|\\hat{O}_i\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:128
msgid "First of all, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "먼저, 양자 상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 와 해밀토니안 :math:`H` 를 관측가능량처럼 작용하도록 정의한다. 그런 다음, 상태와 해밀토니안을 기댓값을 정의하는 객체로 랩핑한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:130
#: ../../tutorials/operators/02_gradients_framework.ipynb:1672
msgid "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"
msgstr "\\langle\\psi\\left(\\theta\\right)|H|\\psi\\left(\\theta\\right)\\rangle.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:250
msgid "We construct a list of the parameters for which we aim to evaluate the gradient. Now, this list and the expectation value operator are used to generate the operator which represents the gradient."
msgstr "경사를 계산할 수 있는 매개변수 리스트를 구성한다. 이 리스트와 기댓값 연산자는 경사를 나타내는 연산자를 생성하는 데 사용된다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:540
msgid "All that is left to do is to assign values to the parameters and to evaluate the gradient operators."
msgstr "남은 일은 매개변수에 값을 할당하고 경사 연산자를 구하는 것이다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:588
msgid "Gradients w.r.t. State Parameters"
msgstr "상태 매개변수에 대한 경사"

#: ../../tutorials/operators/02_gradients_framework.ipynb:590
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e.\\"
msgstr "상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 매개변수에 대한 기댓값의 경사는"

#: ../../tutorials/operators/02_gradients_framework.ipynb:592
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:594
msgid "respectively of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e."
msgstr "상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 매개변수에 대한 샘플링 확률의 경우는"

#: ../../tutorials/operators/02_gradients_framework.ipynb:596
msgid "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "\\frac{\\partial p_i}{\\partial\\theta} = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i |\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:598
msgid "A gradient w.r.t. a state parameter may be evaluated with different methods. Each method has advantages and disadvantages."
msgstr "상태 매개변수에 대한 경사는 다양한 방법으로 구할 수 있다. 각 방법은 장점과 단점이 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:712
msgid "Parameter Shift Gradients"
msgstr "매개변수 이동 경사 (Parameter Shift Gradients)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:714
msgid "Given a Hermitian operator :math:`g` with two unique eigenvalues :math:`\\pm r` which acts as generator for a parameterized quantum gate"
msgstr "주어진 두 유일한 고윳값 :math:`\\pm r` 을 가지는 에르미트(Hermitian) 연산자 :math:`g` 가 생성자로써 작용하는 매개변수화된 양자 게이트는"

#: ../../tutorials/operators/02_gradients_framework.ipynb:716
msgid "G(\\theta)= e^{-i\\theta g}.\n\n"
msgstr "G(\\theta)= e^{-i\\theta g}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:718
msgid "Then, quantum gradients can be computed by using eigenvalue :math:`r` dependent shifts to parameters. All `standard, parameterized Qiskit gates <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>`__ can be shifted with :math:`\\pi/2`, i.e.,"
msgstr "그러면 양자 경사들은 고윳값 :math:`r` 에 의존하는 이동으로 계산될 수 있다. 모든 `매개변수화된 기본 Qiskit 게이트들 <https://github.com/Qiskit/qiskit-terra/tree/master/qiskit/circuit/library/standard_gates>`__ 은 :math:`\\pi/2` 만큼 이동될 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:720
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} =  \\left(\\langle\\psi\\left(\\theta+\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\pi/2\\right)\\rangle -\\langle\\psi\\left(\\theta-\\pi/2\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\pi/2\\right)\\rangle\\right) / 2.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:722
#: ../../tutorials/operators/02_gradients_framework.ipynb:1249
msgid "Probability gradients are computed equivalently."
msgstr "확률 경사도 동등하게 계산된다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1014
msgid "Linear Combination of Unitaries Gradients"
msgstr "유니테리 경사의 선형 결합 (Linear Combination of Unitaries Gradients)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1016
msgid "Unitaries can be written as :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}`, where :math:`M\\left(\\omega\\right)` denotes a parameterized Hermitian matrix. Further, Hermitian matrices can be decomposed into weighted sums of Pauli terms, i.e., :math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` with :math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` and :math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` for :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` acting on the :math:`j^{\\text{th}}` qubit. Thus, the gradients of :math:`U_k\\left(\\omega_k\\right)` are given by :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"
msgstr "유니테리들은 :math:`U\\left(\\omega\\right) = e^{iM\\left(\\omega\\right)}` 와 같이 쓰여질 수 있는데, 여기서 :math:`M\\left(\\omega\\right)` 는 매개변수화된 에르미트 행렬을 나타낸다. 나아가 에르미트 행렬들은 Pauli 항들의 가중 합으로 분해될 수 있는데, 다시 말하면 :math:`m_p\\left(\\omega\\right)\\in\\mathbb{R}` 와 :math:`j^{\\text{th}}` 큐비트에 작용하는 :math:`\\sigma_{j, p}\\in\\left\\{I, X, Y, Z\\right\\}` 에 대한 :math:`h_p=\\bigotimes\\limits_{j=0}^{n-1}\\sigma_{j, p}` 로 :math:`M\\left(\\omega\\right) = \\sum_pm_p\\left(\\omega\\right)h_p` 와 같이 나타낼 수 있다. 고로, :math:`U_k\\left(\\omega_k\\right)` 의 경사들은 다음과 같이 주어진다 :nbsphinx-math:`\\begin{equation*} \\frac{\\partial U_k\\left(\\omega_k\\right)}{\\partial\\omega_k} = \\sum\\limits_pi \\frac{\\partial m_{k,p}\\left(\\omega_k\\right)}{\\partial\\omega_k}U_k\\left(\\omega_k\\right)h_{k_p}. \\end{equation*}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1021
msgid "Combining this observation with a circuit structure presented in `Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ allows us to compute the gradient with the evaluation of a single quantum circuit."
msgstr "이 결과를 `Simulating physical phenomena by quantum networks <https://journals.aps.org/pra/abstract/10.1103/PhysRevA.65.042323>`__ 에 제시된 회로 구조와 결합하면 단일 양자 회로를 구하여 경사를 계산할 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1243
msgid "Finite Difference Gradients"
msgstr "유한차 경사 (Finite Difference Gradients)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1245
msgid "Unlike the other methods, finite difference gradients are numerical estimations rather than analytical values. This implementation employs a central difference approach with :math:`\\epsilon \\ll 1`"
msgstr "다른 방법들과는 달리, 유한차 경사는 해석적이 아닌 수치적 추정을 한다. 이 구현은 :math:`\\epsilon \\ll 1` 이내의 값 차이를 이용한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1247
msgid "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} \\approx \\frac{1}{2\\epsilon} \\left(\\langle\\psi\\left(\\theta+\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\epsilon\\right)\\rangle - \\partial\\langle\\psi\\left(\\theta-\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\epsilon\\right)\\rangle\\right).\n\n"
msgstr "\\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta} \\approx \\frac{1}{2\\epsilon} \\left(\\langle\\psi\\left(\\theta+\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta+\\epsilon\\right)\\rangle - \\partial\\langle\\psi\\left(\\theta-\\epsilon\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta-\\epsilon\\right)\\rangle\\right).\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1543
msgid "Natural Gradient"
msgstr "자연 경사"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1545
msgid "A special type of first order gradient is the natural gradient which has proven itself useful in classical machine learning and is already being studied in the quantum context. This quantity represents a gradient that is 'rescaled' with the inverse `Quantum Fisher Information matrix <#Quantum-Fisher-Information-(QFI)>`__ (QFI)"
msgstr "1차 경사의 특별한 경우로, 고전 기계 학습에서도 유용함이 증명되었고 양자 문맥에서도 연구가 되고 있는 자연 경사가 있다. 이 값은 `양자 피셔 정보 행렬 <#Quantum-Fisher-Information-(QFI)>`__ (QFI) 의 역행렬로 보정된 경사를 나타낸다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1547
msgid "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI ^{-1} \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1558
msgid "Instead of inverting the QFI, one can also use a least-square solver with or without regularization to solve"
msgstr "QFI의 역 대신에, (정규화를 적용하거나 적용하지 않은) 최소자승법을 사용해서 구할 수도 있다"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1560
msgid "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"
msgstr "QFI x = \\frac{\\partial\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta}.\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1562
msgid "The implementation supports ridge and lasso regularization with automatic search for a good parameter using `L-curve corner search <https://arxiv.org/pdf/1608.04571.pdf>`__ as well as two types of perturbations of the diagonal elements of the QFI."
msgstr "이 구현은 QFI의 대각 성분의 두 가지 유형의 섭동뿐만 아니라 `L-curve corner search <https://arxiv.org/pdf/1608.04571.pdf>`__ 을 사용하여 좋은 매개 변수를 자동 검색함으로써 능선(ridge) 및 라소(lasso) 정규화를 지원한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1564
msgid "The natural gradient can be used instead of the standard gradient with any gradient-based optimizer and/or ODE solver."
msgstr "어떤 경사 기반의 최적화나 ODE 해결자를 사용하는 표준 경사 대신에 자연 경사를 사용할 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1647
msgid "Hessians (Second Order Gradients)"
msgstr "헤세 행렬 (Second Order Gradients)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1649
msgid "Four types of second order gradients are supported by the gradient framework."
msgstr "경사 프레임워크는 네 가지 유형의 이차 경사를 지원한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1651
msgid "Gradient of an expectation value w.r.t. a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega^2}`"
msgstr "관측량 :math:`\\hat{O}\\left(\\omega\\right)` 에 대한 측정 연산자의 계수에 대한 기댓값 경사, :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\omega^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1652
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"
msgstr "상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 매개변수에 대한 기댓값의 경사, :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1653
msgid "Gradient of sampling probabilities w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter, i.e. :math:`\\frac{\\partial^2 p_i}{\\partial\\theta^2} = \\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"
msgstr "상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 매개변수에 대한 샘플링 확률의 경사, :math:`\\frac{\\partial^2 p_i}{\\partial\\theta^2} = \\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|i\\rangle\\langle i|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta^2}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1654
msgid "Gradient of an expectation value w.r.t. a state :math:`|\\psi\\left(\\theta\\right)\\rangle` parameter and a coefficient of the measurement operator respectively observable :math:`\\hat{O}\\left(\\omega\\right)`, i.e. :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta\\partial\\omega}`"
msgstr "상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 의 매개변수와 관측량 :math:`\\hat{O}\\left(\\omega\\right)` 에 대한 측정 연산자의 계수에 대한 경사, :math:`\\frac{\\partial^2\\langle\\psi\\left(\\theta\\right)|\\hat{O}\\left(\\omega\\right)|\\psi\\left(\\theta\\right)\\rangle}{\\partial\\theta\\partial\\omega}`"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1656
msgid "In the following examples are given for the first two Hessian types. The remaining Hessians are evaluated analogously."
msgstr "다음은 첫 두 개의 헤세 유형에 대해 예제들이다. 나머지 헤세 유형들도 이와 비슷하게 구할 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1668
msgid "Hessians w.r.t. Measurement Operator Parameters"
msgstr "측정 연산자 매개변수에 대한 헤세 행렬"

#: ../../tutorials/operators/02_gradients_framework.ipynb:1670
msgid "Again, we define a quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle` and a Hamiltonian :math:`H` acting as observable. Then, the state and the Hamiltonian are wrapped into an object defining the expectation value"
msgstr "다시 양자 상태 :math:`|\\psi\\left(\\theta\\right)\\rangle` 와 해밀토니안 :math:`H` 를 관측가능량처럼 작용하도록 정의한다. 그런 다음, 상태와 해밀토니안을 기댓값을 정의하는 객체로 랩핑한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1741
msgid "Next, we can choose the parameters for which we want to compute second order gradients. - Given a tuple, the ``Hessian`` will evaluate the second order gradient for the two parameters. - Given a list, the ``Hessian`` will evaluate the second order gradient for all possible combinations of tuples of these parameters."
msgstr "다음에는 이차 경사를 계산할 매개변수를 선택할 것이다. - 주어진 튜플에 대해 ``Hessian`` 은 두 매개변수에 대한 이차 경사를 얻을 것이다. - 주어진 리스트에 대해 ``Hessian`` 은 주어진 매개변수들의 모든 가능한 조합들로 이차 경사를 얻을 것이다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1743
msgid "After binding parameter values to the parameters, the Hessian can be evaluated."
msgstr "매개변수 값을 매개변수에 바인딩 한 후, 헤세 행렬을 구할 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:1832
msgid "Hessians w.r.t. State Parameters"
msgstr "상태 매개변수에 대한 헤세 행렬"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2007
msgid "Quantum Fisher Information (QFI)"
msgstr "양자 Fisher 정보 (Quantum Fisher Information, QFI)"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2009
msgid "The Quantum Fisher Information is a metric tensor which is representative for the representation capacity of a parameterized quantum state :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` with input state :math:`|\\psi\\rangle`, parametrized Ansatz :math:`V\\left(\\theta\\right)`."
msgstr "양자 Fisher 정보는 메트릭 텐서로써 주어진 입력 상태 :math:`|\\psi\\rangle` 와 매개변수화된 가설 가설 :math:`V\\left(\\theta\\right)`에 대한 매개변수화된 양자 상태 :math:`|\\psi\\left(\\theta\\right)\\rangle = V\\left(\\theta\\right)|\\psi\\rangle` 의 표현력을 대표한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2011
msgid "The entries of the QFI for a pure state reads"
msgstr "순수 상태에 대한 QFI의 입력값은"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2013
msgid "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"
msgstr "QFI_{kl} = 4 * \\text{Re}\\left[\\langle\\partial_k\\psi|\\partial_l\\psi\\rangle-\\langle\\partial_k\\psi|\\psi\\rangle\\langle\\psi|\\partial_l\\psi\\rangle \\right].\n\n"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2025
msgid "Circuit QFIs"
msgstr "회로 QFI"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2027
msgid "The evaluation of the QFI corresponding to a quantum state that is generated by a parameterized quantum circuit can be conducted in different ways."
msgstr "매개변수화된 양자 회로로 생성된 양자 상태에 해당하는 QFI의 값을 구하는 것는 다양한 방식으로 수행될 수 있다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2030
msgid "Linear Combination Full QFI"
msgstr "선형 조합 전체 QFI"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2032
msgid "To compute the full QFI, we use a working qubit as well as intercepting controlled gates. See e.g. `Variational ansatz-based quantum simulation of imaginary time evolution <https://www.nature.com/articles/s41534-019-0187-2>`__."
msgstr ""

#: ../../tutorials/operators/02_gradients_framework.ipynb:2129
msgid "Block-diagonal and Diagonal Approximation"
msgstr "블록-대각과 대각 근사"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2131
msgid "A block-diagonal resp. diagonal approximation of the QFI can be computed without additional working qubits. This implementation requires the unrolling into Pauli rotations and unparameterized Gates."
msgstr "QFI의 블록 대각 행렬 표현의 대각 근사화는 추가 큐비트 없이 계산될 수 있다. 이 구현은 Pauli 회전들과 매개변수화가 안 된 게이트들로 푸는 것을 요구한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2241
msgid "Application Example: VQE with gradient-based optimization"
msgstr "응용 예: 경사 기반 최적화를 사용한 VQE"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2253
msgid "Additional Imports"
msgstr "추가 불러오기"

#: ../../tutorials/operators/02_gradients_framework.ipynb:2308
msgid "The Gradient Framework can also be used for a gradient-based ``VQE``. First, the Hamiltonian and wavefunction ansatz are initialized."
msgstr "경사 프레임워크는 경사 기반의 ``VQE`` 에도 사용될 수 있다. 먼저 해밀토니안과 파동함수 가설을 초기화한다."

#: ../../tutorials/operators/02_gradients_framework.ipynb:2388
msgid "Now, we can choose whether the ``VQE`` should use a ``Gradient`` or ``NaturalGradient``, define a ``QuantumInstance`` to execute the quantum circuits and run the algorithm."
msgstr "이제 ``VQE`` 가 ``Gradient`` 나 ``NaturalGradient`` 를 사용하도록 선택하고, 양자 회로를 실행할 ``QuantumInstance`` 를 정의해서 알고리즘을 실행한다."

