msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-06-28 18:31\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/05_qaoa.po\n"
"X-Crowdin-File-ID: 9502\n"
"Language: ko_KR\n"

#: ../../tutorials/algorithms/05_qaoa.ipynb:10
msgid "This page was generated from `tutorials/algorithms/05_qaoa.ipynb`__."
msgstr "이 페이지는 `tutorials/algorithms/05_qaoa.ipynb`__ 로부터 생성되었다."

#: ../../tutorials/algorithms/05_qaoa.ipynb:9
msgid "Quantum Approximate Optimization Algorithm"
msgstr "양자 근사 최적화 알고리즘"

#: ../../tutorials/algorithms/05_qaoa.ipynb:11
msgid "Qiskit has an implementation of the Quantum Approximate Optimization Algorithm `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__ and this notebook demonstrates using it for a graph partition problem."
msgstr "키스킷에는 양자 근사 최적화 알고리즘 `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__ 이 구현되어 있다. 이 노트북은 그래프 분할 (graph partition) 문제에 이를 적용하는 방법을 시연할 것이다."

#: ../../tutorials/algorithms/05_qaoa.ipynb:36
msgid "First we create a graph and draw it so it can be seen."
msgstr "먼저 그래프를 생성하고 이를 그려서 확인해보자."

#: ../../tutorials/algorithms/05_qaoa.ipynb:84
msgid "The brute-force method is as follows. Basically, we exhaustively try all the binary assignments. In each binary assignment, the entry of a vertex is either 0 (meaning the vertex is in the first partition) or 1 (meaning the vertex is in the second partition). We print the binary assignment that satisfies the definition of the graph partition and corresponds to the minimal number of crossing edges."
msgstr ""

#: ../../tutorials/algorithms/05_qaoa.ipynb:151
msgid "The graph partition problem can be converted to an Ising Hamiltonian. Qiskit has different capabilities in the Optimization module to do this. Here, since the goal is to show QAOA, the module is used without further explanation to create the operator. The paper `Ising formulations of many NP problems <https://arxiv.org/abs/1302.5843>`__ may be of interest if you would like to understand the technique further."
msgstr ""

#: ../../tutorials/algorithms/05_qaoa.ipynb:220
msgid "So lets use the QAOA algorithm to find the solution."
msgstr "그래서 QAOA 알고리즘을 사용하여 솔루션을 찾아보자."

#: ../../tutorials/algorithms/05_qaoa.ipynb:316
msgid "The outcome can be seen to match to the value computed above by brute force. But we can also use the classical ``NumPyMinimumEigensolver`` to do the computation, which may be useful as a reference without doing things by brute force."
msgstr "도출된 결과는 위에서 억지 기법으로 계산한 값과 일치하는 것을 확인할 수 있다. 그러나 또한 우리는 기존의 ``NumPyMinimumEigensolver`` 를 사용하여 계산을 수행할 수 있는데, 이는 억지 기법을 수행하지 않는 다는 점에서 참조하면 유용할 것이다."

#: ../../tutorials/algorithms/05_qaoa.ipynb:364
msgid "It is also possible to use VQE as is shown below"
msgstr "아래와 같이 VQE를 사용할 수도 있다"

