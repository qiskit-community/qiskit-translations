msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 16:27+0000\n"
"PO-Revision-Date: 2020-12-15 19:10\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: ko_KR\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "이 페이지는 `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__ 에서 생성되었다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_."
msgstr "`IBM 퀀텀 랩 <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_ 에서 대화식으로 실행하시오."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "노이즈가 있는 에어(Aer) 시뮬레이터에서의 VQE"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/aer>`__ ``qasm_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "이 노트북은 'Qiskit Aer <https://qiskit.org/aer>' __ 'qasm_시뮬레이터' 를 통해 주어진 노이즈 모델을 기반으로 시뮬레이션을 실행하는 것을 시연하고 있다. 이는 상이한 잡음 조건 하에서의 시뮬레이션을을 조사하는 데 유용하다. Aer를 이용하면 사용자 고유의 사용자 정의 노이즈 모델을 정의할 수 있을 뿐만 아니라 실제 퀀텀 디바이스의 특성을 기반으로 노이즈 모델을 쉽게 작성할 수 있다. 이를 통해 커스텀 노이즈 모델들을 구축하는 방법 보다 덜 복잡한 방법으로, 노이즈가 포함된 VQE을 만들수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/ignis>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "`키스킷 이그니스 <https://qiskit.org/ignis>`__ 는 노이즈 시뮬레이션 또는 실제 양자 디바이스에서 실행할 때 측정 오류를 완화하는 솔루션을 제공한다. 이 솔루션은 ``QuantumInstance`` 모듈에서 활용되며, 이를 이용하는 알고리즘은 자동으로 측정 노이즈 완화를 적용할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "Qiskit Ignis의 측정 오류 완화에 대한 자세한 정보는 '측정 오류 완화 <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>' __ 튜토리얼에서 확인할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit Aqua."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Chemistry, for an H2 molecule, so we can quickly create an Operator."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:95
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "위의 문제점이 여전히 쉽게 추적 가능하기 때문에 NumPyMinimumEigensolver를 사용하여 참조 값을 계산할 수 있으므로 나중에 결과를 비교할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:139
msgid "Performance *without* noise"
msgstr "노이즈를 *포함하지 않은* 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:141
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:200
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "우리는 수렴하는 동안 위에 있는 에너지 가치를 포착했기 때문에 아래 그래프에서 무엇이 진행되었는지 알 수 있습니다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:255
msgid "Performance *with* noise"
msgstr "노이즈를 *포함한* 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:257
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:259
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:261
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:379
msgid "Note: simulation with noise will take longer than without noise."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:263
msgid "Terra Mock Backends:"
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:265
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "Qiskit Terra에 저장된 날짜를 사용하여 실시간 노이즈 데이터를 사용한다. 구체적으로 본 튜토리얼에서 사용된 디바이스는 ``ibmq_vigo`` 이다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:375
msgid "Performance *with* noise and measurement error mitigation"
msgstr "소음을 *포함하고* 측정 오류 완화를 적용하였을 때의 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:377
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:464
msgid "Lets bring the results together here for a summary."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:466
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:468
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr ""

