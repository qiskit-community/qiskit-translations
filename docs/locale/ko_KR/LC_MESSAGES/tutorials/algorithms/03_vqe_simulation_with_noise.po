msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 16:27+0000\n"
"PO-Revision-Date: 2020-12-15 20:25\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: ko_KR\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "이 페이지는 `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__ 에서 생성되었다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_."
msgstr "`IBM 퀀텀 랩 <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_ 에서 대화식으로 실행하시오."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "노이즈가 있는 에어(Aer) 시뮬레이터에서의 VQE"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/aer>`__ ``qasm_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "이 노트북은 `키스킷 에어 <https://qiskit.org/aer>`__ ``qasm_simulator`` 를 통해 주어진 노이즈 모델을 기반으로 시뮬레이션을 실행하는 것을 시연한다. 이는 상이한 잡음 조건 하에서의 거동을 조사하는 데 유용할 수 있다. 에어는 사용자 고유의 노이즈 모델을 사용자가 정의할 수 있도록 허용할 뿐만 아니라 실제 양자 디바이스의 특성을 기반으로 노이즈 모델을 쉽게 작성할 수 있도록 해준다. 노이즈가 포함된 VQE 알고리즘의 결과를 보여주는 것이 목표이므로 후자의 경우가 바로 본 노트북에서 시연하고자 하는 것이며, 커스텀 노이즈 모델을 만드는 방법에 비하여 어렵지 않다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/ignis>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "`키스킷 이그니스 <https://qiskit.org/ignis>`__ 는 노이즈 시뮬레이션 또는 실제 양자 디바이스에서 실행할 때 측정 오류를 완화하는 솔루션을 제공한다. 이 솔루션은 ``QuantumInstance`` 모듈에서 활용되며, 이를 이용하는 알고리즘은 자동으로 측정 노이즈 완화를 적용할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "키스킷 에어 노이즈 모델에 대한 자세한 내용은 온라인 `키스킷 에어 문서 <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, 에서 찾을 수 있으며 `노이즈 모델을 생성하는 법 <../simulators/3_building_noise_models.ipynb>`__ 과 관련한 사용 지침서도 있으니 참고하도록 한다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "Qiskit Ignis의 측정 오류 완화에 대한 자세한 정보는 '측정 오류 완화 <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>' __ 튜토리얼에서 확인할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit Aqua."
msgstr "노이즈를 포함한 시뮬레이션은 VQE와 함께 여기에서 설명될 것이고, Hamiltonian의 최소 (접지 상태) 에너지를 찾을 수 있지만, 이 기술은 Qiskit Aqua 로부터의 임의의 양자 알고리즘에 적용된다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Chemistry, for an H2 molecule, so we can quickly create an Operator."
msgstr "그래서 VQE에 대해서는 큐비트 연산자를 입력으로 해야 한다. 여기서, Qiskit Chemistry에 의해 H2 분자을 계산 한 것처럼, 우리는 신속하게 파풀리스 세트를 이용한 오퍼레이터를 생성할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:95
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "위의 문제점이 여전히 쉽게 추적 가능하기 때문에 NumPyMinimumEigensolver를 사용하여 참조 값을 계산할 수 있으므로 나중에 결과를 비교할 수 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:139
msgid "Performance *without* noise"
msgstr "노이즈를 *포함하지 않은* 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:141
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "먼저, 결과를 보기 위해 노이즈를 추가하지 않고 시뮬레이터에서 실행한다. 우리는 백엔드와 QuantumInstance를 작성했는데, 이는 여기에서 기본값으로 사용되는 다양한 다른 런타임 구성뿐만 아니라 백엔드도 포함하고 있기 때문에, 다음 섹션에 가면 노이즈가 추가되는 다음 섹션을 쉽게 비교할 수 있다. VQE의 설정 및 실행이 동일하도록, 노이즈 또는 이 노트북에서의 어떤 것을 완화시키려는 시도는 없다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:200
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "우리는 수렴하는 동안 위에 있는 에너지 가치를 포착했기 때문에 아래 그래프에서 무엇이 진행되었는지 알 수 있습니다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:255
msgid "Performance *with* noise"
msgstr "노이즈를 *포함한* 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:257
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr "이제 우리는 노이즈를 추가할 것이다. 여기에서 실제 디바이스에서 Aer에 대한 잡음 모델을 만들었다. Aer를 사용하여 사용자 정의 노이즈 모델을 작성할 수 있지만 이는 이 노트북의 범위를 벗어난다. 이를 수행하는 데 관심이 있는 사람들을 위해 Aer 노이즈 모델에 대한 추가 정보에 대한 링크가 제공되었다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:259
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "먼저 실제 기기 백엔드를 확보하고 그의 ``구성(configuration)`` 과 ``속성(properties)`` 을 사용하여 장치와 일치하는 커플링 맵(coupling map) 과 노이즈 모델을 설정할 수 있습니다. 기본적으로 모든 맵에 시뮬레이터를 둘 수 있지만, 이는 커플링 맵을 설정하는 방법을 보여 준다. 참고: 이 커플링 맵을 선택하는 경우 다양한 양식에 대한 얽힘 맵으로 사용할 수도 있다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:261
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:379
msgid "Note: simulation with noise will take longer than without noise."
msgstr "참고: 노이즈가 있는 시뮬레이션은 노이즈가 없을 때보다 더 오래 걸립니다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:263
msgid "Terra Mock Backends:"
msgstr "Terra Mock 백엔드:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:265
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "Qiskit Terra에 저장된 날짜를 사용하여 실시간 노이즈 데이터를 사용한다. 구체적으로 본 튜토리얼에서 사용된 디바이스는 ``ibmq_vigo`` 이다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:375
msgid "Performance *with* noise and measurement error mitigation"
msgstr "소음을 *포함하고* 측정 오류 완화를 적용하였을 때의 성능"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:377
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "이제 측정의 정확도를 높이는 측정 오차 완화 방법을 추가할 것이다. 측정 오류를 완화하기 위해 ``CompleteMeasFitter`` 를 선택한다. 보정 매트릭스는 30분마다 자동으로 기본값으로 고쳐진다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:464
msgid "Lets bring the results together here for a summary."
msgstr "결과는 여기서 요약을 위해 함께 표시한다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:466
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "우리는 고전적 알고리즘을 사용하여 기준값을 생성한 다음, qasm 시뮬레이터에서 VQE를 실행하도록 진행했다. 시뮬레이션이 이상적이기는 하지만 (노이즈가 없음), 샘플링으로 인한 총 샷 노이즈(shot-noise) 가 있다. 총 샷 수를 증가시키면 더 많은 샘플을 얻어 샷노이즈를 줄일수 있지만, 샷은 1024의 기본값으로 남아 있어, 결과에 작은 영향을 줍니다."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:468
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "그런 다음 실제 디바이스에서 제거된 모델을 사용하여 노이즈를 추가하여 결과가 영향을 받는 것을 확인할 수 있습니다. 마지막으로, 측정 잡음 완화를 추가하여, 큐비트를 측정하는 고전장치에서 잡음의 영향을 완화시키기 위한 시도로 결과를 조정한다."

