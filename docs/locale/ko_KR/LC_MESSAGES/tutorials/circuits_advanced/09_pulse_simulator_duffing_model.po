msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-08-15 22:00\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/09_pulse_simulator_duffing_model.po\n"
"X-Crowdin-File-ID: 9482\n"
"Language: ko_KR\n"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb`__."
msgstr "이 페이지는 `tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb`__ 에서 생성되었다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:9
msgid "Qiskit Aer: Pulse simulation of two qubits using a Duffing oscillator model"
msgstr "Qiskit Aer: Duffing 오실레이터 모델을 이용한 2 큐비트의 펄스 시뮬레이션"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:11
msgid "This notebook shows how to use the Qiskit Aer pulse simulator, which simulates experiments specified as pulse ``Schedule`` objects at the Hamiltonian level. The simulator solves the Schrodinger equation for a specified Hamiltonian model and pulse ``Schedule`` in the frame of the drift Hamiltonian."
msgstr "이 노트북은 Hamiltonian 레벨에서 펄스 ``Schedule`` 객체로 지정되는 실험을 시뮬레이션하는 Qiskit Aer 펄스 시뮬레이터의 사용법을 설명한다. 이 시뮬레이터는 특정 Hamiltonian 모델과 펄스 ``Schedule`` 에 대한 Schrodinger 방정식을 drift Hamiltonian 프레임에서 해결한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:13
msgid "In particular, in this tutorial we will:"
msgstr "특히 이 튜토리얼에서는 다음의 작업들을 수행할 것이다:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:15
msgid "Construct a model of a two qubit superconducting system."
msgstr "두 개의 큐비트의 초전도 시스템의 모형을 생성한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:16
msgid "Calibrate :math:`\\pi` pulses on each qubit in the simulated system."
msgstr "시뮬레이션되는 시스템 속의 각 큐비트에 대한 :math:`\\pi` 펄스들을 조정한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:17
msgid "Observe cross-resonance oscillations when driving qubit 1 with target qubit 0."
msgstr "목표 큐비트 0을 사용하여 큐비트 1을 구동할 때의 교차-공진 진동을 관측한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:19
msgid "The Introduction outlines the concepts and flow of this notebook."
msgstr "소개에는 이 노트북의 개념과 플로우가 요약되어 있다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:31
msgid "1. Introduction"
msgstr "1. 소개"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:33
msgid "The main sections proceed as follows."
msgstr "중요 섹션은 다음과 같이 진행된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:36
msgid "Section 3: Duffing oscillator model"
msgstr "섹션 3: 더핑 진동자 (Duffing oscillator) 모델"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:38
msgid "To simulate a physical system, it is necessary to specify a model. In this notebook, we will model superconducting qubits as a collection of *Duffing oscillators*. The model is specified in terms of the following parameters:"
msgstr "실제 시스템을 시뮬레이션하려면 모델을 지정해야 한다. 이 노트북에서는 *Duffing oscillator* 들의 컬렉션으로서 초전도 (superconducting) 큐비트를 모델링한다. 모델은 다음 매개 변수에 따라 지정된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:40
msgid "Each Duffing oscillator is specified by a frequency :math:`\\nu`, anharmonicity :math:`\\alpha`, and drive strength :math:`r`, which result in the Hamiltonian terms:"
msgstr "각각의 Duffing oscillator는 주파수 :math:`\\nu`, 비조화성 :math:`\\alpha`, 드라이브 강도 :math:`r` 로 명시되어 있으며, 이로 인한 해밀토니안은 다음과 같다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:42
msgid "\\begin{equation}\n"
"    2\\pi\\nu a^\\dagger a + \\pi \\alpha a^\\dagger a(a^\\dagger a - 1) + 2 \\pi r (a + a^\\dagger) \\times D(t),\n"
"\\end{equation}"
msgstr "\\begin{equation}\n"
"    2\\pi\\nu a^\\dagger a + \\pi \\alpha a^\\dagger a(a^\\dagger a - 1) + 2 \\pi r (a + a^\\dagger) \\times D(t),\n"
"\\end{equation}"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:48
msgid "where :math:`D(t)` is the signal on the drive channel for the qubit, and :math:`a^\\dagger` and :math:`a` are, respectively, the creation and annihilation operators for the qubit. Note that the drive strength :math:`r` sets the scaling of the control term, with :math:`D(t)` assumed to be a complex and unitless number satisfying :math:`|D(t)| \\leq 1`."
msgstr "여기서 :math:`D(t)` 는 큐비트에 대한 드라이브 채널의 신호이고, :math:`a^\\dagger` 와 :math:`a` 는 각각 큐비트에 대한 생성과 소멸 연산자이다. 드라이브 강도 :math:`r` 은 제어 항의 크기를 설정하는데, 이 때 :math:`D(t)` 는 복소이고 단위가 없으며, :math:`|D(t)| \\leq 1` 의 조건을 만족하는 수라고 가정되는 점에 유의하라."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:50
msgid "A coupling between a pair of oscillators :math:`(l,k)` is specified by the coupling strength :math:`J`, resulting in an exchange coupling term:"
msgstr "한 쌍의 진동자 :math:`(l,k)` 사이의 결합은 결합 강도 :math:`J` 에 의해 지정되어 교환 결합 항을 생성한다:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:52
msgid "\\begin{equation}\n"
"    2 \\pi J (a_l a_k^\\dagger + a_l^\\dagger a_k),\n"
"\\end{equation}"
msgstr "\\begin{equation}\n"
"    2 \\pi J (a_l a_k^\\dagger + a_l^\\dagger a_k),\n"
"\\end{equation}"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:58
msgid "where the subscript denotes which qubit the operators act on."
msgstr "여기서 아래 첨자는 연산자가 어느 큐비트에 적용되는지를 표시한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:60
msgid "Additionally, for numerical simulation, it is necessary to specify a cutoff dimension; the Duffing oscillator model is *infinite dimensional*, and computer simulation requires restriction of the operators to a finite dimensional subspace."
msgstr "추가적으로, 수치 시뮬레이션의 경우 컷오프 차원을 지정해야 한다. Duffing oscillator 모델은 *무한 차원* 이며, 컴퓨터 시뮬레이션은 유한 차원의 부분공간에 대한 연산자들의 제한을 필요로 한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:62
msgid "**In the code:** We will define a model of the above form for two coupled qubits using the helper function ``duffing_system_model``."
msgstr "** 코드에서:** ``duffing_system_model`` 이라는 헬퍼 함수를 사용하여 두 개의 결합된 큐비트에 대해 위의 양식을 가진 모델을 정의할 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:65
msgid "Section 4: :math:`\\pi`-pulse calibration using Ignis"
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:67
msgid "Once the model is defined, we will calibrate :math:`\\pi`-pulses on each qubit. A :math:`\\pi`-pulse is defined as a pulse on the drive channel of a qubit that “flips” the qubit; i.e. that takes the ground state to the first excited state, and the first excited state to the ground state."
msgstr "모델이 정의되고 나면 각 큐비트에 적용될 :math:`\\pi` 펄스를 보정할 것이다. :math:`\\pi` 펄스는 큐비트를 \"뒤집는\" (바닥 상태를 첫번째 들뜬 상태로 바꾸거나, 첫번째 들뜬 상태를 바닥 상태로 바꾸는) 큐비트의 드라이브 채널에 대한 펄스로 정의된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:69
msgid "We will experimentally find a :math:`\\pi`-pulse for each qubit using the following procedure:"
msgstr "다음 절차를 사용하여 각 큐비트에 대해 :math:`\\pi` 펄스를 실험적으로 찾을 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:71
msgid "A fixed pulse shape is set - in this case it will be a Gaussian pulse."
msgstr "고정 펄스 형상이 설정되는데, 이 경우에는 Gaussian 펄스가 될 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:72
msgid "A sequence of experiments is run, each consisting of a Gaussian pulse on the qubit, followed by a measurement, with each experiment in the sequence having a subsequently larger amplitude for the Gaussian pulse."
msgstr "각각 큐비트에 대해 이전의 실험보다 더 큰 진폭을 가진 Gaussian 펄스로 구성되는 일련의 실험이 실행되고 측정된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:73
msgid "The measurement data is fit, and the pulse amplitude that completely flips the qubit is found (i.e. the :math:`\\pi`-pulse amplitude)."
msgstr "측정 데이터를 분석해 큐비트를 완전히 뒤집는 펄스 진폭을 (:math:`\\pi` 펄스 진폭을) 찾는다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:75
msgid "**In the code:** Using Ignis we will construct ``Schedule`` objects for the above experiments, then fit the data to find the :math:`\\pi`-pulse amplitudes."
msgstr "**코드에서:** 이그니스를 사용해 위의 실험들에 대한 ``Schedule`` 객체를 구축하고 데이터를 분석하여 :math:`\\pi` 펄스 진폭들을 찾을 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:78
msgid "Section 5: Cross-resonance oscillations"
msgstr "섹션 5: 교차-공진 진동"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:80
msgid "Once the :math:`\\pi`-pulses are calibrated, we will simulate the effects of cross-resonance driving on qubit :math:`1` with target qubit :math:`0`. This means that we will drive qubit :math:`1` at the frequency of qubit :math:`0`, with the goal of observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`. This phenomenon provides a basis for creating two-qubit *controlled* gates. Note: This section requires the calibration of the :math:`\\pi`-pulse in Section 4."
msgstr ":math:`\\pi`-펄스들이 교정되면, 타겟 큐비트 :math:`0` 를 통해 큐비트 :math:`1` 에 교차-공명 효과를 시뮬레이션을 할 것이다. 이는 큐비트 :math:`1` 의 상태에 따라 *달라지는* 큐비트 :math:`0` 의 궤적과 진동을 관찰하는 것을 목표로, 큐비트 :math:`0` 의 주파수로 큐비트 :math:`1` 을 구동한다는 의미이다. 이 현상은 두-큐비트 *제어* 게이트들을 생성하는 기저를 제공한다. 참고: 이 섹션은 섹션 4의 :math:`\\pi`-펄스의 교정을 필요로 한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:83
msgid "To observe cross-resonance driving, we will use experiments very similar to the :math:`\\pi`-pulse calibration case:"
msgstr "교차-공명 구동을 관찰하기 위해 :math:`\\pi` 펄스 보정 실험과 비슷한 실험들을 활용할 것이다:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:85
msgid "Initially, qubit :math:`1` is either left in the ground state, or is driven to its first excited state using the :math:`\\pi`-pulse found in Section 4."
msgstr "처음에는, 큐비트 :math:`1` 은 바닥 상태에 남아있던가, 아니면 섹션 4의 :math:`\\pi` 펄스를 사용해 첫 번째 들뜬 상태에 올라가게 된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:86
msgid "A sequence of experiments is run, each consisting of a Gaussian pulse on qubit :math:`1` driven at the frequency of qubit :math:`0`, followed by a measurement of both qubits, with each experiment of the sequence having a subsequently larger amplitude for the Gaussian pulse."
msgstr "각각 큐비트에 대해 이전의 실험보다 더 큰 진폭을 가지고, 큐비트 :math:`0` 의 주파수를 가지며, 큐비트 :math:`1` 에 대해 구동되는 Gaussian 펄스로 구성되는 일련의 실험이 실행되고 측정된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:88
msgid "**In the code:** Functions for defining the experiments and visualizing the data are constructed, including a visualization of the trajectory of the target qubit on the Bloch sphere."
msgstr "**코드에서:** 실험들을 정의하고 데이터를 시각화하는 함수들을 구축하는데, 이에는 블로흐 구면에서 목표 큐비트의 궤적을 시각화하는 함수를 포함한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:100
msgid "2. Imports"
msgstr "2. 가져오기"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:102
msgid "This notebook makes use of the following imports."
msgstr "이 노트북은 다음과 같은 import를 사용합니다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:128
msgid "Import qiskit libraries for working with ``pulse`` and calibration:"
msgstr "``pulse``및 보정에 대한 작업을 위해 qiskit 라이브러리를 가져온다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:153
msgid "Imports for qiskit pulse simulator:"
msgstr "Qiskit 펄스 시뮬레이터 가져오기:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:179
msgid "3. Duffing oscillator system model"
msgstr "3. 더핑 진동자 (Duffing oscillator) 시스템 모델"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:181
msgid "An object representing a model for a collection of Duffing oscillators can be constructed using the ``duffing_system_model`` function. Here we construct a :math:`2` Duffing oscillator model with cutoff dimension :math:`3`."
msgstr "Duffing 진동자 모음에 대한 모델을 나타내는 객체는 ``duffing_system_model`` 함수를 사용하여 구축할 수 있다. 여기서는 컷오프 (cutoff) 차원 :math:`3` 을 가진 :math:`2` Duffing 진동자 모델을 구축한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:225
msgid "The function ``duffing_system_model`` returns a ``PulseSystemModel`` object, which is a general object for storing model information required for simulation with the ``PulseSimulator``."
msgstr "``duffing_system_model`` 함수는 ``PulseSystemModel`` 객체를 반환하는데, 이는 ``PulseSimulator`` 를 포함한 시뮬레이션에 필요한 모델 정보를 저장하는 일반적인 객체이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:237
msgid "4 Calibrating :math:`\\pi` pulses on each qubit using Ignis"
msgstr "4. Ignis를 이용하여 각각의 큐비트에 대한 :math:`\\pi` 의 펄스들을 보정하기"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:239
msgid "As described in the introduction, we now calibrate :math:`\\pi` pulses on each qubit in ``two_qubit_model``. The experiments in this calibration procedure are known as *Rabi experiments*, and the data we will observe are known as *Rabi oscillations*."
msgstr "도입부에 설명된 바와 같이, 이제 ``two_qubit_model`` 에서 :math:`\\pi` 펄스를 보정할 수 있다. 이 교정 절차에서의 실험은 *Rabi experiments* 으로 알려져 있고, 관찰할 데이터는 *Rabi oscillations* 로 알려져 있다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:251
msgid "4.1 Constructing the schedules"
msgstr "4.1 스케줄 구성하기"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:253
msgid "We construct the schedules using the ``rabi_schedules`` function in Ignis. To do this, we need to supply an ``InstructionScheduleMap`` containing a measurement schedule."
msgstr "Ignis의 ``rabi_schedules`` 을 사용하여 스케줄을 짤 수 있다. 이를 위해서는 측정 스케줄을 포함한 ``InstructionScheduleMap`` 을 공급해야 한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:291
msgid "Next, construct the Rabi schedules."
msgstr "다음으로, 라비 (Rabi) 스케줄을 구성한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:325
msgid "The ``Schedule``\\ s in ``rabi_schedules`` correspond to experiments to generate Rabi oscillations on both qubits in parallel. Each experiment consists of a Gaussian pulse on the qubits of a given magnitude, followed by measurement."
msgstr "``rabi_schedules`` 의 ``Schedule`` 들은 병렬 구성의 큐비트들에 모두 라비 진동을 생성하는 실험에 해당한다. 각 실험은 주어진 크기의 큐비트에 대한 Gaussian 펄스로 구성되고, 뒤이어 측정이 이루어진다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:327
msgid "For example:"
msgstr "예를 들어:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:358
msgid "4.2 Simulate the Rabi experiments"
msgstr "4.2 Rabi 실험 시뮬레이션"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:360
msgid "To simulate the Rabi experiments, assemble the ``Schedule`` list into a qobj. When assembling, pass the ``PulseSimulator`` as the backend."
msgstr "라비 실험을 시뮬레이션하기 위해서는 ``Schedule`` 목록을 qobj로 조립하고, 조립할 때에는 ``PulseSimulator`` 를 백엔드로 사용하여야 한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:362
msgid "Here, we want to use local oscillators with frequencies automatically computed from Duffing model Hamiltonian."
msgstr "여기서는 Duffing 모델 Hamiltonian에서 자동으로 계산되는 주파수들을 갖는 로컬 진동자들을 사용할 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:394
msgid "Run the simulation using the simulator backend."
msgstr "시뮬레이터 백엔드를 사용하여 시뮬레이션을 실행한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:417
msgid "4.3 Fit and plot the data"
msgstr "4.3 데이터 구성 및 시각화"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:419
msgid "Next, we use ``RabiFitter`` in Ignis to fit the data, extract the :math:`\\pi`-pulse amplitude, and then plot the data."
msgstr "다음으로는 Ignis의 ``RabiFitter`` 를 사용하여 데이터를 분석하고 :math:`\\pi` 펄스 진폭을 추출하며, 데이터를 도식화할 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:478
msgid "Plotted is the averaged IQ data for observing each qubit. Observe that here, each qubit oscillates between the 0 and 1 state. The amplitude at which a given qubit reaches the peak of the oscillation is the desired :math:`\\pi`-pulse amplitude."
msgstr "그래프의 데이터는 각 큐비트를 관찰했을 때 나온 평균화된 IQ 데이터이다. 여기서 각 큐비트는 0 과 1 상태 사이를 오간다. 주어진 큐비트가 진동의 정점에 도달했을 때의 진폭이 바로 찾고 있었던 :math:`\\pi` 펄스의 진폭이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:490
msgid "5. Oscillations from cross-resonance drive"
msgstr "5. 교차-공명 드라이브로부터의 진동"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:492
msgid "Next, we simulate the effects of a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`."
msgstr "다음으로, 타겟 큐비트 :math:`0` 를 통해 큐비트 :math:`1` 에 교차-공명 효과를 시뮬레이션하여 큐비트 :math:`1` 의 상태에 따라 *달라지는* 큐비트 :math:`0` 의 궤적과 진동을 관찰한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:494
msgid "**Note:** This section depends on the :math:`\\pi`-pulse calibrations of Section 2."
msgstr "**참고:** 이 섹션은 섹션 2의 :math:`\\pi`-펄스 교정에 따라 달라진다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:506
msgid "5.1 Cross-resonance ``ControlChannel`` indices"
msgstr "5.1 교차-공명 ``ControlChannel`` 인덱스"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:508
msgid "Driving qubit :math:`1` at the frequency of qubit :math:`0` requires use of a pulse ``ControlChannel``. The model generating function ``duffing_system_model``, automatically sets up ``ControlChannels`` for performing cross-resonance drives between pairs of coupled qubits. The index of the ``ControlChannel`` for performing a particular cross-resonance drive is retrievable using the class method ``control_channel_index`` on the returned ``PulseSystemModel``. For example, to get the ``ControlChannel`` index corresponding to a CR drive on qubit 1 with target 0, call the function ``control_channel_index`` with the tuple ``(1,0)``:"
msgstr "큐비트 :math:`0` 의 주파수로 큐비트 :math:`1` 을 구동하려면 ``ControlChannel`` 펄스를 사용해야 한다. 모델 생성 함수 ``duffing_system_model`` 은 결합된 큐비트들 쌍 사이에 교차-공명 구동(CR drive)을 수행하는 ``ControlChannels`` 를 자동으로 설정한다. 개별적인 교차-공명 구동을 수행하는 ``ControlChannel`` 의 인덱스는 반환된 ``PulseSystemModel`` 에 클래스 메서드 ``control_channel_index`` 를 사용하여 검색할 수 있다. 예를 들어, 타겟 큐비트 0에 큐비트 1을 교차-공명 구동하는 것에 해당하는 ``ControlChannel`` 의 인덱스를 얻으려면 튜플 ``(1,0)`` 과 함께 함수 ``control_channel_index`` 를 호출하면 된다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:550
msgid "Hence, to perform a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, use ``ControlChannel(1)``. This will be made use of when constructing ``Schedule`` objects in this section."
msgstr "따라서, 타겟 큐비트 :math:`0` 로 큐비트 :math:`1` 에 교차-공명 구동을 수행하려면, ``ControlChannel(1)`` 을 사용한다. 이는 이 세션에서 ``Schedule`` 객체를 구성할 때도 사용될 것이다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:562
msgid "5.2 Functions to generate the experiment list, and analyze the output"
msgstr "5.2 실험 목록 생성 및 출력 분석하는 함수"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:564
msgid "First, we define a function ``cr_drive_experiments``, which, given the drive and target indices, and the option to either start with the drive qubit in the ground or excited state, returns a list of experiments for observing the oscillations."
msgstr "먼저, 주어진 구동 인덱스와 타겟 인덱스, 그리고 구동 큐비트가 바닥 상태 혹은 들뜬 상태에서 시작하는지에 대한 옵션을 받아 진동을 관찰하는 실험 목록을 반환하는 함수 ``cr_drive_experiments`` 를 정의한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:658
msgid "Next we create two functions for observing the data:"
msgstr "다음으로 데이터를 관찰하는 두 개의 함수를 작성한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:660
msgid "``plot_cr_pop_data`` - for plotting the oscillations between the ground state and the first excited state"
msgstr "``plot_cr_pop_data`` - 바닥 상태와 첫번째 들뜬 상태 사이의 진동을 그리기 위해"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:661
msgid "``plot_bloch_sphere`` - for viewing the trajectory of the target qubit on the bloch sphere"
msgstr "``plot_bloch_sphere`` - 목적 큐비트의 블로흐 구 상에서의 궤적을 보기 위해"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:769
msgid "5.3 Drive qubit 1 to observe CR oscillations on qubit 0"
msgstr "5.3 큐비트 0에서의 CR 진동을 관찰하기 위해 큐비트 1을 드라이브"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:772
msgid "Qubit 1 in the ground state"
msgstr ""

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:774
msgid "First, we drive with both qubit 0 and qubit 1 in the ground state."
msgstr "첫 번째로, 큐비트 0과 큐비트 1 모두를 바닥 상태에서 드라이브 한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:810
msgid "Run the simulation:"
msgstr "시뮬레이터 실행시키기:"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:841
msgid "Observe that qubit 1 remains in the ground state, while excitations are driven in qubit 0."
msgstr "큐비트 0에 여기가 구동되는 동안 큐비트 1은 여전히 바닥 상태에 있는 것을 관찰하라."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:843
msgid "We may also observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "또한 우리는 블로흐 구에서 0의 궤적을 관찰할 수 있다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:874
msgid "Qubit 1 in the first excited state"
msgstr "첫 번째 들뜬 상태의 큐비트 1"

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:876
msgid "Next, we again perform a CR drive qubit 1 with qubit 0 as the target, but now we start each experiment by flipping qubit 1 into the first excited state."
msgstr "다음으로, 큐비트 0을 타겟으로 큐비트 1에 CR drive를 다시 수행하지만, 여기서는 각 실험을 큐비트 1을 첫 번째 들뜬 상태로 바꿔서 시작한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:932
msgid "Observe that now qubit 1 is in the excited state, while oscillations are again being driven on qubit 0, now at a different rate as before."
msgstr "이제 큐비트 0에 진동이 예전과 다른 속도로 구동되는 동안 큐비트 1이 들뜬 상태에 있는 것을 관찰하라."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:934
msgid "Again, observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "다시, 블로흐 구에서 0의 궤적을 관찰한다."

#: ../../tutorials/circuits_advanced/09_pulse_simulator_duffing_model.ipynb:964
msgid "Here we see that qubit 0 takes a *different* trajectory on the Bloch sphere when qubit 1 is in the excited state. This is what enables controlled operations between two qubits."
msgstr "여기서 우리는 큐비트 1이 들뜬 상태에 있을 때, 블로흐 구 상에서 *상이한* 궤적을 취한다는 것을 알 수 있다. 이것이 2개의 큐비트 사이의 제어된 동작을 가능하게 하는 것이다."

