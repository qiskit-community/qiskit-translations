msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-01 19:07+0000\n"
"PO-Revision-Date: 2022-11-01 19:38\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/07_pulse_scheduler.po\n"
"X-Crowdin-File-ID: 9478\n"
"Language: ko_KR\n"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/07_pulse_scheduler.ipynb`__."
msgstr "이 페이지는 `tutorials/circuits_advanced/07_pulse_scheduler.ipynb`__ 로부터 생성되었다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:9
msgid "Using the Scheduler"
msgstr "스케줄러 사용하기"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:11
msgid "The scheduler will translate a ``QuantumCircuit`` into a Pulse ``Schedule``, using gate and measurement *calibrations*: an optimized pulse-level description of an operation on particular qubits."
msgstr "스케줄러는 ``QuantumCircuit`` 을 게이트와 측정 *교정* (특정 큐비트 연산에 대해 최적화된 펄스-레벨 기술)을 이용하여 펄스 ``Schedule`` 로 변환한다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:13
msgid "Backends that are OpenPulse enabled will typically have calibrations defined for measurements and for each of its basis gates. Calibrations can also be defined or updated by the user."
msgstr "OpenPulse가 활성화된 백엔드는 일반적으로 측정 및 각 기본 게이트에 대해 정의된 보정이 있다. 사용자가 교정을 정의하거나 업데이트할 수도 있다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:16
msgid "Basic usage"
msgstr "기본 사용법"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:18
msgid "To start, build a quantum circuit as you would normally. For our example below, we create a simple Bell state."
msgstr "우선, 평소처럼 양자 회로를 만든다. 아래 예제에서는 간단한 Bell 상태를 작성한다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:55
msgid "We’ll use the mocked backend, ``FakeHanoi``, to demonstrate how to use the scheduler. It contains default calibrations for measurement and for its basis gates. The Hadamard operation is not one of those basis gates, so we use the transpiler to compile our input circuit to an equivalent circuit in terms of the basis gates of the device."
msgstr "``FakeHanoi`` 모조 백엔드를 사용하여 스케줄러를 사용하는 방법을 시연할 것이다. 여기에는 측정 및 기본 게이트에 대한 초기값 교정이 포함되어 있다. Hadamard 연산은 기본 게이트들 중 하나가 아니기 때문에, 트랜스파일러를 사용하여 입력 회로를 장치의 기본 게이트들로 구성된 동등한 회로로 만들 것이다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:82
msgid "Let’s see how our schedule ``schedule`` built from the circuit ``transpiled_circ`` looks."
msgstr "회로 ``transpiled_circ`` 에서 만들어진 스케줄 ``schedule`` 이 어떤 모습인지 보라."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:112
msgid "That covers the basics! We used the transpiler to rewrite the circuit in terms of the basis gates, and then used the backend’s default calibrations to schedule the transpiled circuit. Next we will go through scheduling with calibrations we will build ourselves."
msgstr "기본을 익혔다! 트랜스파일러를 사용하여 기본 게이트들로 회로를 다시 썼고, 백앤드의 초기값 교정을 사용하여 트랜스파일된 회로를 스케줄로 만들었다. 다음에는 교정을 직접 구성하여 스케줄링을 해 볼 것이다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:115
msgid "Scheduling with custom gate definitions"
msgstr "사용자 정의 게이트로 스케줄링하기"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:117
msgid "If your input circuit has calibrations defined, it will use those calibrations when scheduling your circuit."
msgstr "입력 회로에 교정이 정의되어 있는 경우, 회로를 스케줄할 때 그 교정을 사용한다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:156
msgid "Notice that the initial pulse on ``D0``, the Hadamard gate, is now implemented with our custom pulse."
msgstr "``D0`` 의 초기 펄스인 Hadamard 게이트가 이제 사용자 정의 펄스로 구현되었다는 것에 주목하자."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:159
msgid "Scheduler methods"
msgstr "스케줄러 메서드"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:161
msgid "The scheduler can follow multiple routines. By default, it follows an *as late as possible* (ALAP) rule. Another scheduling method is *as soon as possible*, (ASAP). For both methods, the output schedule is minimal: in the longest-duration operation path of the input circuit, the start time of each operation is the end time of the proceeding operation. The methods determine how to schedule operations outside that longest path."
msgstr "스케줄러는 여러 처리 순서를 따를 수 있다. 기본값으로 *가능한 한 늦는 (as late as possible)* (ALAP) 규칙을 따른다. 다른 스케줄링 메서드는 *가능한 한 빠른 (as soon as possible)* (ASAP) 이다. 두 메서드 모두 출력 스케줄이 최소이다: 입력 회로의 가장 긴 지속 시간의 연산 경로에서 각 연산의 시작 시간은 선행하는 연산의 종료 시간이다. 이 메서드들은 가장 긴 경로가 아닌 쪽에서 연산의 스케줄을 결정한다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:163
msgid "This is made clear through an example:"
msgstr "이는 다음 예제를 통해 명확하게 작성된다:"

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:199
msgid "For our mocked backend, these :math:`X` gate operations are each the same duration (``duration = 160 dt``). For the schedule to be minimal, the two :math:`X` operations on qubit 0 will be scheduled back-to-back, and the measurement pulse will immediately follow the second of those pulses."
msgstr "모조 백엔드에서는, 이 :math:`X` 게이트 연산들의 지속 시간 (``duration = 160 dt``)이 같다. 스케줄을 최소화하려면 큐비트 0에 가해지는 두 :math:`X` 연산이 잇따라 스케줄되어야 하며, 측정 펄스가 두 펄스들 직후에 바로 따라와야 한다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:201
msgid "ALAP will choose the latest valid time to schedule lesser-constrained operations, so the :math:`X` gate on qubit 1 will play in sync with the second :math:`X` gate on qubit 0."
msgstr "ALAP는 유효한 시간 중 가장 나중을 택하여 제한이 적은 연산을 스케줄할 것이며, 따라서 큐비트 1의 :math:`X` 게이트는 큐비트 0의 두 번째 :math:`X` 게이트와 동시에 발생된다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:232
msgid "On the other hand, as the name suggests, ASAP will schedule operations as soon as its resources are free. Thus, the :math:`X` gate on qubit 1 will be scheduled at ``time=0``, in sync with the first :math:`X` gate on qubit 0."
msgstr "한편, 이름이 암시하는 바와 같이, ASAP는 자원이 되는 한 가장 빠르게 연산을 스케줄할 것이다. 고로, 큐비트 1의 :math:`X` 게이트는 큐비트 0의 첫 번째 :math:`X` 게이트와 동시인 ``time=0`` 으로 스케줄될 것이다."

#: ../../tutorials/circuits_advanced/07_pulse_scheduler.ipynb:263
msgid "ALAP is the default because it allows qubits to remain idle as long as possible. In this case, the difference between ALAP and ASAP may be negligible, but in ALAP, qubit 0 has *no* time to decay from the excited state before measurement."
msgstr "ALAP가 기본값인 이유는 큐비트들이 가능한 한 오랫동한 유휴 상태를 유지할 수 있기 때문이다. 이 경우, ALAP와 ASAP의 차이는 무시할 수 있지만, ALAP에선 큐비트 0은 측정 전에 들뜬 상태에서 붕괴할 수 있는 시간이 *없다.*"

