msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-12-06 03:24\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/7_accreditation.po\n"
"X-Crowdin-File-ID: 9144\n"
"Language: ko_KR\n"

#: ../../tutorials/noise/7_accreditation.ipynb:10
msgid "This page was generated from `tutorials/noise/7_accreditation.ipynb`__."
msgstr "이 페이지는 `tutorials/noise/7_accreditation.ipynb`__ 에서 생성되었다."

#: ../../tutorials/noise/7_accreditation.ipynb:9
msgid "Accreditation protocol"
msgstr "인증 프로토콜"

#: ../../tutorials/noise/7_accreditation.ipynb:20
msgid "Accreditation Protocol (AP) is a protocol devised to characterize the reliability of noisy quantum devices."
msgstr "인증 프로토콜 (Accreditation Protocol, AP) 은 잡음이 있는 양자 장치들의 신뢰성을 특성화하고자 고안된 프로토콜이다."

#: ../../tutorials/noise/7_accreditation.ipynb:22
msgid "Given a noisy quantum device implementing a “target” quantum circuit, AP certifies an upper-bound on the variation distance between the probability distribution of the outputs returned by the device and the ideal probability distribution. This method is based on Ferracin et al, “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709."
msgstr "“목적” 양자 회로를 구현할 잡음이 있는 양자 장치가 주어지면, AP는 장치가 반환하는 출력의 확률 분포와 이상적인 확률 분포 사이의 거리 분산의 상한을 인증한다. 이 방법은 다음을 기초로 한다: Ferracin 외, “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709."

#: ../../tutorials/noise/7_accreditation.ipynb:24
msgid "This notebook gives an example for how to use the ignis.characterization.accreditation module. This particular example shows how to accredit the outputs of a 4-qubit quantum circuit of depth 5. All the circuits are run using the noisy Aer simulator."
msgstr "이 노트북은 ignis.characterization.accreditation 모듈을 사용하는 방법에 대한 예제를 제공한다. 이 특정한 예제는 깊이 5의 4-큐비트 양자 회로의 출력들을 인증하는 방법을 보여준다. 모든 회로는 잡음이 있는 Aer 시뮬레이터를 이용하여 실행된다."

#: ../../tutorials/noise/7_accreditation.ipynb:58
msgid "Input to the protocol"
msgstr "프로토콜 입력"

#: ../../tutorials/noise/7_accreditation.ipynb:69
msgid "AP can accredit the outputs of a **target circuit** that 1) Takes as input :math:`n` qubits in the state :math:`|{0}>`\\  2) Ends with single-qubit measurements in the Pauli-\\ :math:`Z` basis 3) Is made of :math:`m` “bands”, each band containing a round of single-qubit gates and a round of controlled-\\ :math:`Z` gates. The accreditation is made by employing **trap circuits**, circuits that can be efficiently simulated on a classical computer and that whose outputs are used to witness the correct functionality of the device."
msgstr "AP는 **목적 회로** 의 출력을 인증할 수 있다. 여기서 목적 회로는 1) 상태  :math:`|{0}>` 에 있는 :math:`n` 개의 큐비트를 입력으로 갖고\\ 2) Pauli-\\ :math:`Z` 기저에서 단일-큐비트 측정으로 끝나며 3) :math:`m` 개의 “밴드”로 구성되어 있고, 각 밴드는 단일-큐비트 게이트와 제어-\\ :math:`Z` 게이트를 포함하고 있다. 인증은 **함정 회로**를 이용하는데, 이 회로는 고전 컴퓨터에서도 효과적으로 시뮬레이션이 가능하고 장치의 기능이 올바른지 증명하는데 사용된다."

#: ../../tutorials/noise/7_accreditation.ipynb:72
msgid "Let’s now draw a target quantum circuit! We start with a simple circuit to generate and measure 4-qubits GHZ states."
msgstr "이제 목적 양자 회로를 그려보자! 4-큐비트 GHZ 상태를 생성하고 측정하는 간단한 회로로 시작한다."

#: ../../tutorials/noise/7_accreditation.ipynb:126
msgid "Generating accreditation circuits"
msgstr "인증 회로 생성하기"

#: ../../tutorials/noise/7_accreditation.ipynb:137
msgid "The function :math:`accreditation\\_circuits` generates all the circuits required by AP, target and traps. It automatically appends random Pauli gates to the circuits (if the implementation is noisy, these random Pauli gates reduce the noise to Pauli errors ! )"
msgstr "함수 :math:`accreditation\\_circuits` 은 AP가 필요로 하는 목적과 함정 회로들을 생성한다. 이 함수는 회로에 임의의 Pauli 게이트들을 자동으로 추가한다 (구현에 잡음이 있는 경우 이러한 임의의 Pauli 게이트들은 Pauli 오차의 잡음을 줄여준다!)."

#: ../../tutorials/noise/7_accreditation.ipynb:139
msgid "It also returns the list :math:`postp\\_list` of strings required to post-process the outputs, as well as the number :math:`v\\_zero` indicating the circuit implementing the target."
msgstr "또한 출력을 후처리하는 데 필요한 문자열의 리스트 :math:`postp\\_list` 와 묵적을 구현하는 회로를 나타내는 숫자 :math:`v\\_zero` 도 반환한다."

#: ../../tutorials/noise/7_accreditation.ipynb:141
msgid "This is the target circuit with randomly chosen Pauli gates:"
msgstr "이것은 임의로 선택된 Pauli 게이트들을 갖는 목적 회로이다:"

#: ../../tutorials/noise/7_accreditation.ipynb:176
msgid "This is how a trap looks like:"
msgstr "함정 (회로) 는 다음과 같다:"

#: ../../tutorials/noise/7_accreditation.ipynb:206
msgid "One can use the optional twoqubitgate argument to switch use cx instead of cz gates and can arbitrarily change the coupling map, in order to compile to the desired device topology (which in this case might lead to more layers than expected)."
msgstr "선택 인수로 two_qubit_gate 를 사용하여 cz 게이트 대신에 cx 게이트로 전환하거나 장치 토폴로지를 원하는 상태로 컴파일하고자 커플링 맵을 임의로 변경할 수 있다 (이 경우 예상보다 많은 계층으로 이어질 수 있음)."

#: ../../tutorials/noise/7_accreditation.ipynb:242
msgid "Simulate the ideal circuits"
msgstr "이상적인 회로 시뮬레이션하기"

#: ../../tutorials/noise/7_accreditation.ipynb:253
msgid "Let’s implement AP."
msgstr "AP를 구현하자."

#: ../../tutorials/noise/7_accreditation.ipynb:255
msgid "We use :math:`accreditation\\_circuits` to generate target and trap circuits. Then, we use the function :math:`single\\_protocol\\_run` to implement all these circuits, keeping the output of the target only if all of the traps return the correct output."
msgstr "목적 및 함정 회로를 생성하기 위해 :math:`accreditation\\_circuits` 를 사용한다. 그런 다음, 함수 :math:`single\\_protocol\\_run` 로 모든 회로를 구현하여 모든 함정 회로가 올바른 출력을 반환하는 경우에만 목적 회로의 출력을 유지한다."

#: ../../tutorials/noise/7_accreditation.ipynb:311
msgid "In the absence of noise, all traps return the expected output, therefore we always accept the output of the target."
msgstr "잡음이 없는 경우, 모든 함정 회로는 예상되는 출력을 반환하므로, 항상 목적 회로의 출력을 허용한다."

#: ../../tutorials/noise/7_accreditation.ipynb:313
msgid "To obtain an upper-bound on the variation distance on the outputs of the target circuit, we need to implement AP :math:`d` times, each time with **v** different trap circuits."
msgstr "목적 회로의 출력값의 변동 거리 상에서 상부 경계를 얻고자, **v** 개의 상이한 함정 회로를 이용하여 AP를 구현하는 것을 :math:`d` 회 할 필요가 있다."

#: ../../tutorials/noise/7_accreditation.ipynb:425
msgid "The function :math:`bound\\_variation\\_distance` calculates the upper-bound on the variation distance (VD) using"
msgstr "함수 :math:`bound\\_variation\\_distance` 는 변동 거리 (VD)의 상부 경계를 다음을 사용하여 계산한다"

#: ../../tutorials/noise/7_accreditation.ipynb:427
msgid "VD\\leq \\frac{\\varepsilon}{N_{\\textrm{acc}}/d-\\theta}\\textrm{ ,}\n\n"
msgstr "VD\\leq \\frac{\\varepsilon}{N_{\\textrm{acc}}/d-\\theta}\\textrm{ ,}\n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:429
msgid "where :math:`\\theta\\in[0,1]` is a positive number and"
msgstr "여기서 :math:`\\theta\\in[0,1]` 은 양수이고"

#: ../../tutorials/noise/7_accreditation.ipynb:431
msgid "\\varepsilon= \\frac{1.7}{v+1}\n\n"
msgstr "\\varepsilon= \\frac{1.7}{v+1}\n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:433
msgid "is the maximum probability of accepting an incorrect state for the target. The function :math:`bound\\_variation\\_distance` also calculates the confidence in the bound as"
msgstr "는 대상에 대해 올바르지 않은 상태를 허용할 수 있는 최대 확률이다. 함수 :math:`bound\\_variation\\_distance` 또한 다음과 같이 바인드된의 신뢰도를 계산한다."

#: ../../tutorials/noise/7_accreditation.ipynb:435
msgid "1-2\\textrm{exp}\\big(-2\\theta d^2\\big)\n\n"
msgstr "1-2\\textrm{exp}\\big(-2\\theta d^2\\big) \n\n"

#: ../../tutorials/noise/7_accreditation.ipynb:483
msgid "Defining the noise model"
msgstr "잡음 모델 정의하기"

#: ../../tutorials/noise/7_accreditation.ipynb:494
msgid "We define a noise model for the simulator. We add depolarizing error probabilities to the controlled-\\ :math:`Z` and single-qubit gates."
msgstr "시뮬레이터에 대한 잡음 모델을 정의한다. controlled-\\ :math:`Z` 및 단일 큐비트 게이트들에 편극 소거 오류 (depolarizing error) 확률을 추가한다."

#: ../../tutorials/noise/7_accreditation.ipynb:524
msgid "We then implement noisy circuits and pass their outputs to :math:`single\\_protocol\\_run`."
msgstr "그런 다음, 잡음 회로를 구현하고 그들의 출력을 :math:`single\\_protocol\\_run` 로 전달한다."

#: ../../tutorials/noise/7_accreditation.ipynb:639
msgid "Changing the number of trap circuits per protocol run changes the upper-bound on the VD, but not the confidence."
msgstr "프토토콜 실행당 함정 회로 수를 변경하면 VD의 상부 경계도 변경되지만, 신뢰도는 변경되지 않는다."

#: ../../tutorials/noise/7_accreditation.ipynb:641
msgid "What number of trap circuits will ensure the minimal upper-bound for your target circuit?"
msgstr "목적 회로의 최소 상부 경계를 보장하는 함정 회로의 수는 얼마일까?"

