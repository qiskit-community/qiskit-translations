msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-05-25 21:12+0000\n"
"PO-Revision-Date: 2021-06-12 13:10\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/chemistry/01_electronic_structure.po\n"
"X-Crowdin-File-ID: 9400\n"
"Language: ko_KR\n"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:10
msgid "This page was generated from `tutorials/chemistry/01_electronic_structure.ipynb`__."
msgstr "이 페이지는 `tutorials/chemistry/01_electronic_structure.ipynb`__ 에서 생성되었다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/01_electronic_structure.ipynb>`_."
msgstr "`IBM 퀀텀 랩 <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/01_electronic_structure.ipynb>`_ 에서 대화식으로 실행하시오."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:9
msgid "Electronic structure"
msgstr "전자 구조"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:23
msgid "The molecular Hamiltonian is"
msgstr "분자 해밀톤은"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:25
msgid "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"
msgstr "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:30
msgid "Because the nuclei are much heavier than the electrons they do not move on the same time scale and therefore, the behavior of nuclei and electrons can be decoupled. This is the Born-Oppenheimer approximation."
msgstr "핵들은 동일한 시간 축척으로 이동하지 않는 전자들보다 훨씬 더 무거운 것이기 때문에, 핵들 및 전자들의 거동은 분리될 수 있다. 이것은 Born-Oppenheimer 근사치이다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:32
msgid "Therefore, one can first tackle the electronic problem with nuclear coordinate entering only as parameters. The energy levels of the electrons in the molecule can be found by solving the non-relativistic time independent Schroedinger equation,"
msgstr "그러므로, 핵 좌표를 매개 변수로만 입력하는 전자 문제를 먼저 다룰 수 있다. 분자 내의 전자의 에너지 수준은 비-상대성의 시간 독립적인 슈뢰딩거 방정식을 해결함으로써 발견될 수 있다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:34
msgid "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"
msgstr "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:39
msgid "where"
msgstr "여기서 이는 다음과 같다"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:41
msgid "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."
msgstr "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:46
msgid "In particular the ground state energy is given by:"
msgstr "특히, 접지 상태 에너지는 다음과 같이 주어진다:"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:48
msgid "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"
msgstr "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:53
msgid "where :math:`\\Psi_0` is the ground state of the system."
msgstr "여기서 :math:`\\Psi_0` 는 시스템의 접지 상태이다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:55
msgid "However, the dimensionality of this problem grows exponentially with the number of degrees of freedom. To tackle this issue we would like to prepare :math:`\\Psi_0` on a quantum computer and measure the Hamiltonian expectation value (or :math:`E_0`) directly."
msgstr "그러나, 이러한 문제의 차원은 자유도의 수에 따라 기하급수적으로 증가한다. 이 문제를 해결하기 위해 우리는 양자 컴퓨터에 :math:`\\Psi_0` 을 준비하고 해밀턴 기대값 (또는 :math:`E_0`) 을 직접 측정하고자 한다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:57
msgid "So how do we do that concretely?"
msgstr "어떻게 구체적으로 표현할 수 있을까?"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:69
msgid "The Hartree-Fock initial state"
msgstr "Hartree-Fock 초기 상태"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:71
msgid "A good starting point for solving this problem is the Hartree-Fock (HF) method. This method approximates a N-body problem into N one-body problems where each electron evolves in the mean-field of the others. Classically solving the HF equations is efficient and leads to the exact exchange energy but does not include any electron correlation. Therefore, it is usually a good starting point to start adding correlation."
msgstr "이 문제를 해결하기 위한 좋은 출발점은 HF (Hartree-Fock) 방식이다. 이 방법은 N체 문제를, 각각의 전자가 다른 것들의 평균-필드에서 진화하는 N개의 일체 문제 (one-body problem) 로 근사화한다. HF 방정식을 분류적으로 해결하는 것은 효율적이며 정확한 교환 에너지를 유도하지만 어떠한 전자 상관도 포함하지 않는다. 따라서 일반적으로 상관 추가를 시작하는 것이 좋은 시작점이다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:73
msgid "The Hamiltonian can then be re-expressed in the basis of the solutions of the HF method, also called Molecular Orbitals (MOs):"
msgstr "이어서, 해밀토니안은 또한 분자 오비탈 (Molecular Orbitals, MOs) 이라고도 불리는 HF 방법의 해법에 기초하여 다시 표현될 수 있다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:75
msgid "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"
msgstr "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:81
msgid "with the 1-body integrals"
msgstr "일체 통합물을 사용하는 경우"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:83
msgid "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)"
msgstr "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:88
msgid "and 2-body integrals"
msgstr "및 2체 적분"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:90
msgid "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}."
msgstr "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:95
msgid "The MOs (:math:`\\phi_u`) can be occupied or virtual (unoccupied). One MO can contain 2 electrons. However, in what follows we actually work with Spin Orbitals which are associated with a spin up (:math:`\\alpha`) of spin down (:math:`\\beta`) electron. Thus Spin Orbitals can contain one electron or be unoccupied."
msgstr "MOs (:math:`\\phi_u`) 는 점유하거나 가상 (점유되지 않음) 될 수 있다. 하나의 MO는 2개의 전자를 포함할 수 있다 그러나 스핀 다운 (:math:`\\beta`) 전자의 스핀 업 (:math:`\\alpha`) 과 연관된 스핀오비탈 (Spin Orbitals) 과 실제로 작업하는 것은 다음과 같다. 따라서, 스핀오비탈은 하나의 전자를 포함할 수 있거나 점유되지 않을 수 있다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:97
msgid "We now show how to concretely realise these steps with Qiskit."
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:108
msgid "Qiskit is interfaced with different classical codes which are able to find the HF solutions. Interfacing between Qiskit and the following codes is already available: \\* Gaussian \\* Psi4 \\* PyQuante \\* PySCF"
msgstr "키스킷은 HF 솔루션을 찾을 수 있는 다양한 클래식 코드와 인터페이스한다. 키스킷 사이의 인터페이싱 및 다음 코드가 이미 사용 가능하다.\\* Gaussian\\* Psi4\\* PyQuante\\* PySCF"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:110
msgid "In the following we set up a PySCF driver, for the hydrogen molecule at equilibrium bond length (0.735 angstrom) in the singlet state and with no charge."
msgstr "아래에서는 수소 분자를 전하가 없는 단일항 상태의 평형 결합 길이 (0.735 옹스트롬) 에 두고자 PySCF 드라이버를 설정한다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:135
msgid "For further information about the drivers see https://qiskit.org/documentation/apidoc/qiskit.chemistry.drivers.html"
msgstr "드라이버에 대한 자세한 정보는 https://qiskit.org/documentation/apidoc/qiskit.chemistry.drivers.html를 참조하라"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:147
msgid "The mapping from fermions to qubits"
msgstr "페르미온(fermions) 에서 큐비트로의 매핑"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:149
msgid "|553c2d6c013a429f882da960d4a32211|"
msgstr "| 553c2d6c013a429f882da960d4a32211 |"

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:151
msgid "The Hamiltonian given in the previous section is expressed in terms of fermionic operators. To encode the problem into the state of a quantum computer, these operators must be mapped to spin operators (indeed the qubits follow spin statistics)."
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:153
msgid "There exist different mapping types with different properties. Qiskit already supports the following mappings: \\* The Jordan-Wigner ‘jordan_wigner’ mapping (über das paulische äquivalenzverbot. In The Collected Works of Eugene Paul Wigner (pp. 109-129). Springer, Berlin, Heidelberg (1993)). \\* The Parity ‘parity’ (The Journal of chemical physics, 137(22), 224109 (2012)) \\* The Bravyi-Kitaev ‘bravyi_kitaev’ (Annals of Physics, 298(1), 210-226 (2002)) \\* The Bravyi-Kitaev Super Fast ‘bksf’ (Annals of Physics, 298(1), 210-226 (2002))"
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:156
msgid "The Jordan-Wigner mapping is particularly interesting as it maps each Spin Orbital to a qubit (as shown on the Figure above)."
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:158
msgid "Here we set up an object which contains all the information about any transformation of the fermionic Hamiltonian to the qubits Hamiltonian. In this example we simply ask for the Jordan-Wigner mapping."
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:189
msgid "If we now transform this Hamiltonian for the given driver defined above we get our qubit operator:"
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:265
msgid "In the minimal (STO-3G) basis set 4 qubits are required. We could even lower the qubit count by using the Parity mapping which allows to get rid of to qubits by symmetry considerations."
msgstr ""

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:323
msgid "This time only 2 qubits are needed."
msgstr "이번에는 2 개의 큐비트가 필요하다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:325
msgid "Another possibility is to use the Particle-Hole transformation (Physical Review A, 98(2), 022322 (2018)). This shifts the vacuum state to a state lying in the N-particle Fock space. In this representation the HF (reference) state has a null energy and the optimization procedure is more faster."
msgstr "또 다른 가능성은 입자 구멍(Particle-Hole) 의 변형을 사용하는 것이다 (문헌 [Physical Review A, 98 (2), 022322 (2018)]). 이는 진공 상태를 N-입자 포크 공간(Fork space) 에 놓인 상태로 이동시킨다. 이 표현에서, HF (레퍼런스) 상태는 null 에너지를 갖고, 최적화 절차는 더 빠르다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:403
msgid "The list of available mappings and transformations are"
msgstr "사용 가능한 맵핑 및 변환 목록은 다음과 같다."

#: ../../tutorials/chemistry/01_electronic_structure.ipynb:463
msgid "Now that the Hamiltonian is ready, it can be used in a quantum algorithm to find information about the electronic structure of the corresponding molecule. Check out our tutorials on Ground State Calculation and Excited States Calculation to learn more about how to do that in Qiskit!"
msgstr ""

