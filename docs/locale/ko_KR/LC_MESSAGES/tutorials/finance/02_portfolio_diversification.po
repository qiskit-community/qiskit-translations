msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 16:27+0000\n"
"PO-Revision-Date: 2020-12-20 03:36\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/02_portfolio_diversification.po\n"
"X-Crowdin-File-ID: 9344\n"
"Language: ko_KR\n"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:10
msgid "This page was generated from `tutorials/finance/02_portfolio_diversification.ipynb`__."
msgstr "이 페이지는 \"tutorials/finance/01_portfolio_optimization.ipynb\" __ 에서 생성되었다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/02_portfolio_diversification.ipynb>`_."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:9
msgid "*Portfolio Diversification*"
msgstr "*포트폴리오 다양화*"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:12
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:14
msgid "In asset management, there are broadly two approaches: active and passive investment management. Within passive investment management, there are index-tracking funds and there are approaches based on portfolio diversification, which aim at representing a portfolio with a large number of assets by a smaller number of representative stocks. This notebook illustrates a portfolio diversification problem, which has recently become popular for two reasons: 1. it makes it possible to mimic the performance of an index (or a similarly large set of assets) with a limited budget, at limited transaction costs. That is: traditional index-tracking may purchase all assets in the index, ideally with the same weights as in the index. This may be impractical for a number of reasons: the total of even a single round lot per asset may amount to more than the assets under management, the large scale of the index-tracking problem with integrality constraints may render the optimization problem difficult, and the transaction costs of the frequent rebalancing to adjust the positions to the weights in the index may render the approach expensive. Thus, a popular approach is to select a portfolio of :math:`q` assets that represent the market with :math:`n` assets, where :math:`q` is significantly smaller than :math:`n`, but where the portfolio replicates the behavior of the underlying market. To determine how to group assets into :math:`q` clusters and how to determine which :math:`q` assets should represent the :math:`q` clusters amounts to solving a large-scale optimization problem. In the following we describe the mathematical model for the portfolio diversification problem as introduced in [Cornuejols & Tutuncu, 2006] 2. it allows for similarity measures between time-series beyond the covariance matrix. Notice that traditionally, modern portfolio theory considers the covariance matrix as a measure of similarity between the assets. As such, however, the covariance matrix is imperfect. Consider, for instance, a company listed both in London and New York. Although both listings should be very similar, only parts of the time series of the prices of the two listings will overlap, because of the partial overlap of the times the markets open. Instead of covariance, one can consider, for example, dynamic time warping of [Berndt and Clifford, 1994] as a measure of similarity between two time series, which allows for the fact that for some time periods, the data are captured by only one of the time series, while for others, both time series exhibit the similarity due to the parallel evolution of the stock price."
msgstr "자산 관리에서는 능동적이고 수동적인 투자 관리에 대한 두 가지 접근 방식이 있다. 소극적인 투자관리 분야에서는 인덱스추적 펀드가 있고 포트폴리오 다각화에 기반을 둔 접근방법이 있는데, 이는 많은 자산을 소수의 주식으로 포토폴리오를 만드는 것이 목적이다. 이 글에서는 최근 두 가지 이유로 유명해진 포트폴리오 다변화 문제를 설명합니다. 1. 제한된 수수료와 제한된 예산으로 인덱스 (또는 유사한 대규모 자산 세트) 의 성능을 모방할 수 있다.. 즉, 전통적인 인덱스 추적은 인덱스에 있는 모든 자산을 구매하며 이상적으로 인덱스에서와 동일한 가중치를 사용한다. 이것은 많은 이유로 불가능 하다: 자산 당 단일 라운드 로트의 총 수는 관리 하에 있는 자산보다 많은 양일 수 있고, 적분기 제약조건을 갖는 인덱스 추적 문제의 큰 스케일은 최적화 문제를 어렵게 할 수 있고, 인덱스 내의 가중치에 대한 위치를 조정하기 위해 빈번한 리밸런싱의 수수료는 비싸다. 따라서 :math:'n' 자산을 나타내는 :math:'q' 자산 포트폴리오를 선택하는 것이 일반적인 접근법이지만, :math:'q' 가 :math:'n' 보다 현저히 작지만, 포트폴리오가 기본 시장의 흐름을 따른다. :math:의 q 클러스터에 자산을 그룹화하는 방법 및 :math:'q' 자산이 :math:'q' 클러스터를 표시하는 방법을 판별하는 방법은 대규모 최적화 문제점을 해결하는 방법이다. 여기서 도입된 포트폴리오 다변화 문제에 대한 수학적 모델을 설명한다 [Cornuejols & Tutuncu, 2006]. 이것은 공분산 매트릭스를 넘어서 시계열 (time-series) 사이의 유사성 측정을 가능하게 한다. 전통적으로, 현대적인 포트폴리오 이론은 공분산 행렬을 자산 사이의 유사성 측정으로 간주한다. 그러나, 공분산 매트릭스는 불완전하다. 예를 들어 런던과 뉴욕에 모두 상장된 회사를 생각해 보라. 두 목록 모두 매우 유사해야 하지만, 시장이 열리는 시간의 부분적인 겹침 때문에 두 목록 가격의 시계열 부분만 겹칠 수 있습니다. 공분산 대신에, 예를 들어, 2개의 시계열 사이의 유사성 측정으로서, [Berndt and Clifford, 1994] 의 동적 시간 왜곡을 고려할 수 있는데, 이는 일정 기간 동안 데이터가 시계열 중 단지 하나에 의해 포착되는 반면, 다른 경우에는, 두 시계열이 모두 주가의 평행한 전개로 인해 유사성을 나타낸다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:21
msgid "The overall workflow we demonstrate comprises:"
msgstr "본 전체 워크플로우(workflow) 는 다음과 같다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:23
msgid "pick the ground set of assets. In our case, this is a small number of US stocks."
msgstr "기초 세트 자산을 선택합니다. 우리의 경우, 이것은 적은 수의 미국 주식이다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:25
msgid "load the time series capturing the evolution of the prices of assets. In our case, this is a simplistic load of adjusted daily closing price data from Wikipedia or Nasdaq or LSE or EuroNext, whereas in a real asset management, a much higher frequency may be considered."
msgstr "자산 가격의 진화를 포착하는 시계열을 로드합니다. 우리의 경우, 이는 Wikipedia 또는 나스닥 또는 LSE 또는 유로넥스트로부터의 조정된 일별 종가 데이터를 단순히 조정하는 것이지만, 실제 자산 관리에서는 훨씬 더높은 수로 고려될 수 있다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:27
msgid "compute the pair-wise similarity among the time series. In our case, we run a linear-time approximation of the dynamic time warping, still on the classical computer."
msgstr "시계열 사이에 쌍별 유사성을 계산합니다. 우리의 경우, 우리는 여전히 고전적인 컴퓨터에 있는 동적인 시간 관리인의 선형 시간 근사를 실행한다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:29
msgid "compute the actual portfolio of :math:`q` representative assets, based on the similarity measure. This step is run twice, actually. First, we obtain a reference value by a run of an IBM solver (IBM ILOG CPLEX or the Exact Eigensolver) on the classical computer. Second, we run an alternative, hybrid algorithm partly on the quantum computer."
msgstr "이러한 유사성 측정에 기초하여 :math:의 실제 자산의 실제 포트폴리오를 계산한다. 이 단계는 실제로 두 번 실행됩니다. 먼저, 고전적인 컴퓨터에서 IBM solver (IBM ILOG CPLEX 또는 Exact Eigensolver) 를 실행하여 참조 값을 얻는다. 두 번째로, 우리는 양자컴퓨터에 부분적으로 하이브리드 알고리즘을 실행합니다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:31
msgid "visualization of the results. In our case, this is again a simplistic plot."
msgstr "결과를 시각화합니다. 우리의 경우, 이것은 단순한 도표이다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:33
msgid "In the following, we first explain the model used in (4) above, before we proceed with the installation of the pre-requisites and the data loading."
msgstr "다음에는 전제조건 및 데이터 로드 설치를 진행하기 전에 위의 (4) 에서 사용된 모델을 먼저 설명한다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:36
msgid "The Model"
msgstr "모델"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:38
msgid "As discussed in [Cornuejols & Tutuncu, 2006], we describe a mathematical model that clusters assets into groups of similar ones and selects one representative asset from each group to be included in the index fund portfolio. The model is based on the following data, which we will discuss in more detail later:"
msgstr "[Cornuejols & Tutuncu, 2006] 에서 논의된 바와 같이, 우리는 애셋들을 유사한 그룹들의 그룹들로 분류하고, 인덱스 펀드 포트폴리오에 포함될 각 그룹으로부터 하나의 대표적인 애셋을 선택하는 수학적 모델을 기술한다. 모델은 다음 데이터를 기반으로 합니다. 나중에 자세히 설명하겠습니다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:40
msgid "\\rho_{ij} = \\textrm{similarity}\\, \\textrm{between}\\, \\textrm{stock}\\, i \\, \\textrm{and}\\, \\textrm{stock}\\, j."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:45
msgid "For example, :math:`\\rho_{ii} = 1`, :math:`\\rho_{ij} \\leq 1` for :math:`i \\neq j` and :math:`\\rho_{ij}` is larger for more similar stocks. An example of this is the correlation between the returns of stocks :math:`i` and :math:`j`. But one could choose other similarity indices :math:`\\rho_{ij}`."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:47
msgid "The problem that we are interested in solving is:"
msgstr "우리가 해결에 관심이 있는 문제는 다음과 같습니다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:49
msgid "(M) \\quad  f = \\max_{x_{ij}, y_{j}} \\,\\, \\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:54
msgid "subject to the clustering constraint:"
msgstr "다음과 같이 클러스터링 제한조건에 적용됩니다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:56
msgid "\\sum_{j=1}^n y_j = q,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:61
msgid "to consistency constraints:"
msgstr "일관성 제한 조건:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:63
msgid "\\sum_{j=1}^n x_{ij} = 1, \\,\\textrm{ for }\\,  i = 1,\\ldots, n,\n"
"\\quad x_{ij} \\leq y_j,\\,\\textrm{ for }\\,  i = 1,\\ldots, n; \\, j = 1,\\ldots, n,\n"
"\\quad x_{jj} = y_j,\\,\\textrm{ for }\\,  j = 1,\\ldots, n,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:70
msgid "and integral constraints:"
msgstr "및 필수 제약 사항:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:72
msgid "\\quad  x_{ij}, y_j \\in\\{0,1\\}, \\,\\textrm{ for }\\,  i = 1,\\ldots, n; \\, j = 1,\\ldots, n."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:77
msgid "The variables :math:`y_j` describe which stocks :math:`j` are in the index fund (:math:`y_j = 1` if :math:`j` is selected in the fund, :math:`0` otherwise). For each stock :math:`i = 1,\\dots,n`, the variable :math:`x_{ij}` indicates which stock :math:`j` in the index fund is most similar to :math:`i` (:math:`x_{ij} = 1` if :math:`j` is the most similar stock in the index fund, :math:`0` otherwise)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:79
msgid "The first constraint selects :math:`q` stocks in the fund. The second constraint imposes that each stock :math:`i` has exactly one representative stock :math:`j` in the fund. The third and fourth constraints guarantee that stock :math:`i` can be represented by stock :math:`j` only if :math:`j` is in the fund. The objective of the model maximizes the similarity between the :math:`n` stocks and their representatives in the fund. Different cost functions can also be considered."
msgstr "첫 번째 제약은 펀드에서 :math:`q` 주식을 선택합니다. 두 번째 제약은 각 주식 :math:`i`가 펀드에 정확히 하나의 대표 주식 :math:`j`를 갖도록한다. 세 번째 및 네 번째 제약 조건은 펀드에 :math:`j`가있는 경우에만 주식 :math:`i`를 주식:math:`j`로 나타낼 수 있음을 보장한다. 모델의 목적은 :math:`n` 주식과 펀드의 대표자 간의 유사성을 극대화한다. 다른 비용 함수도 고려할 수 있다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:81
msgid "Let us concatenate the decision variables in one vector"
msgstr "한 벡터에서 결정 변수를 연결하도록 합니다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:83
msgid "{\\bf z} = [x_{11},x_{12},\\ldots,x_{11}, x_{22},\\ldots,x_{nn}, y_{1},\\ldots,y_{n}],"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:88
msgid "whose dimension is :math:`{\\bf z} \\in \\{0,1\\}^N`, with :math:`N = n (n+1)` and denote the optimal solution with :math:`{\\bf z}^*`, and the optimal cost :math:`f^*`."
msgstr "그의 치수는 :math:'{\\bf z} \\in\\{0 ,1\\} ^ N', :math:'N = n (n+1)' 이고, 최적의 솔루션을 :math:'{\\bf z} *' 로 표시하고 최적의 비용은 :math:'f' 이다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:91
msgid "A Hybrid Approach"
msgstr "하이브리드 접근법"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:93
msgid "Here, we demonstrate an approach that combines classical and quantum computing steps, following the quantum approximate optimization approach of Farhi, Goldstone, and Gutman (2014)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:96
msgid "Construct a binary polynomial optimization"
msgstr "2진 다항식 최적화를 구성하기"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:98
msgid "From :math:`(M)` one can construct a binary polynomial optimization with equality constraints only, by substituting the :math:`x_{ij} \\leq y_j` inequality constraints with the equivalent equality constraints :math:`x_{ij} (1- y_j) = 0`. Then the problem becomes:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:100
msgid "(BPO) \\quad  f = \\max_{x_{ij}, y_{j}} \\,\\, \\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:105
msgid "subject to the clustering constraint, the integral constraints, and the following modified consistency constraints:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:107
msgid "\\sum_{j=1}^n x_{ij} = 1, \\,\\textrm{ for }\\,  i = 1,\\ldots, n,\n\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:109
msgid "\\quad x_{ij} (1- y_j) = 0,\\,\\textrm{ for }\\,  i = 1,\\ldots, n; \\, j = 1,\\ldots, n,\n\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:111
msgid "\\quad x_{jj} = y_j,\\,\\textrm{ for }\\,  j = 1,\\ldots, n.\n\n"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:114
msgid "Construct the Ising Hamiltonian"
msgstr "이징 해밀턴 (Ising Hamiltonian)을 구성하다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:116
msgid "We can now construct the Ising Hamiltonian (QUBO) by penalty methods (introducing a penalty coefficient :math:`A` for each equality constraint) as"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:118
msgid "(IH) \\quad H = \\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij} + A\\Big( \\sum_{j=1}^n y_j - q\\Big)^2 + \\sum_{i=1}^n A\\Big( \\sum_{j=1}^n x_{ij} - 1\\Big)^2 + \\sum_{j=1}^n A (x_{jj}-y_j)^2 +\\sum_{i=1}^n \\sum_{j=1}^n A \\left(x_{ij} (1- y_j)\\right)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:124
msgid "From Hamiltonian to Quadratic Programming (QP) formulation"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:126
msgid "In the vector :math:`{\\bf z}`, the Ising Hamiltonian elements can be rewritten as follows,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:128
msgid "First term:"
msgstr "첫 번째 용어:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:130
msgid "\\sum_{i=1}^n \\sum_{j=1}^n \\rho_{ij} x_{ij} = [\\rho_{11},\\rho_{12},\\ldots,\\rho_{11}, \\rho_{22},\\ldots,\\rho_{nn}|{\\bf 0}_n ]{\\bf z} =: {\\bf c}_0^T {\\bf z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:135
msgid "Second term:"
msgstr "두 번째 용어:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:137
msgid "A\\Big( \\sum_{j=1}^n y_j - q\\Big)^2 = A \\Big(\\sum_{j=1}^n y_j\\Big)^2 - 2 A \\sum_{j=1}^n y_j + A q^2 = A {\\bf z}^T \\left[\\begin{array}{c}{\\bf 0}_{n^2} \\\\ \\hline  {\\bf 1}_n  \\end{array}\\right]\\left[\\begin{array}{cc}{\\bf 0}_{n^2} | {\\bf 1}_n  \\end{array}\\right]{\\bf z} - 2 A q [{\\bf 0}_{n^2}|{\\bf 1}_n]{\\bf z} + A q^2 =: {\\bf z}^T {\\bf Q}_0 {\\bf z} + {\\bf c}_1^T {\\bf z} + r_0"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:142
msgid "Third term:"
msgstr "세번째 용어:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:144
msgid "\\sum_{i=1}^n A\\Big( \\sum_{j=1}^n x_{ij} - 1\\Big)^2 = A\\sum_{i=1}^n \\Big(\\sum_{j=1}^n x_{ij}\\Big)^2 - 2 A \\sum_{i=1}^n\\sum_{j=1}^n x_{ij} + n A = \\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:149
msgid "which is equivalent to:"
msgstr "이는 다음과 같습니다:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:151
msgid "\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad\\qquad = A {\\bf z}^T \\left(\\sum_{i=1}^n \\left[\\begin{array}{c}{\\bf 0}_{n(i-1)}  \\\\ {\\bf 1}_n  \\\\ {\\bf 0}_{n(n-i)} \\\\ \\hline {\\bf 0}_{n} \\end{array}\\right]\\left[\\begin{array}{cccc}{\\bf 0}_{n(i-1)} & {\\bf 1}_n  & {\\bf 0}_{n(n-i)} & | {\\bf 0}_{n} \\end{array}\\right]\\right){\\bf z} - 2 A [{\\bf 1}_{n^2}|{\\bf 0}_n]{\\bf z} + n A =: {\\bf z}^T {\\bf Q}_1 {\\bf z} + {\\bf c}_2^T {\\bf z} + r_1"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:156
msgid "Fourth term:"
msgstr "네번째 용어:"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:158
msgid "A \\sum_{j=1}^n  (x_{jj}-y_j)^2 = A {\\bf z}^T  \\left(\\sum_{j=0}^{n-1} \\left[\\begin{array}{c}{\\bf 0}_{nj + j}  \\\\ 1  \\\\ {\\bf 0}_{n^2-(nj+j+1)} \\\\ \\hline {\\bf 0}_{j} \\\\ -1 \\\\ {\\bf 0}_{n-j-1} \\end{array}\\right]\\left[\\begin{array}{cccccc}{\\bf 0}_{nj + j} & 1  & {\\bf 0}_{n^2-(nj+j+1)} & | {\\bf 0}_{j} & -1 & {\\bf 0}_{n-j-1}  \\end{array}\\right]\\right){\\bf z} = A {\\bf z}^T {\\bf Q}_2 {\\bf z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:163
msgid "Fifth term:"
msgstr "다섯번째 용어::"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:165
msgid "\\sum_{i=1}^n \\sum_{j=1}^n A \\left(x_{ij} (1- y_j)\\right) = A [{\\bf 1}_{n^2}|{\\bf 0}_n]{\\bf z} + A {\\bf z}^T \\left( \\sum_{i=1}^n \\sum_{j=1}^n \\left[\\begin{array}{ccc|c}  &  & & \\\\ & {\\bf 0}_{n^2\\times n^2} & & -1/2_{(ij,j)}  \\\\ & & & \\\\ \\hline & -1/2_{(j, ij)} &  & {\\bf 0}_{n} \\end{array}\\right] \\right) {\\bf z} =:  {\\bf z}^T {\\bf Q}_3 {\\bf z} + {\\bf c}_3^T {\\bf z}"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:170
msgid "Therefore, the formulation becomes,"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:172
msgid "(IH-QP)\\quad \\max_{{\\bf z}\\in\\{0,1\\}^{n(n+1)}} \\, {\\bf z}^T ({\\bf Q}_0+{\\bf Q}_1+ {\\bf Q}_2 + {\\bf Q}_3 ){\\bf z} + ({\\bf c}_0+{\\bf c}_1+{\\bf c}_2+{\\bf c}_3)^T {\\bf z} +r_0+r_1+r_2"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:177
msgid "which can be passed to the variational quantum eigensolver."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:180
msgid "References"
msgstr "참조"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:182
msgid "[1] G. Cornuejols, M. L. Fisher, and G. L. Nemhauser, *Location of bank accounts to optimize float: an analytical study of exact and approximate algorithms*, Management Science, vol. 23(8), 1997"
msgstr "[1] G. Cornuejols, M. L. Fisher, and G. L. Nemhauser, *Location of bank accounts to optimize float: an analytical study of exact and approximate algorithms*, Management Science, vol. 23(8), 1997"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:184
msgid "[2] E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028, 2014"
msgstr "[2] E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028, 2014"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:186
msgid "[3] G. Cornuejols and R. Tutuncu, *Optimization methods in finance*, 2006"
msgstr "[3] G. Cornuejols and R. Tutuncu, *Optimization methods in finance*, 2006"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:188
msgid "[4] DJ. Berndt and J. Clifford, *Using dynamic time warping to find patterns in time series*. In KDD workshop 1994 (Vol. 10, No. 16, pp. 359-370)."
msgstr "[4] DJ. Berndt and J. Clifford, *Using dynamic time warping to find patterns in time series*. In KDD workshop 1994 (Vol. 10, No. 16, pp. 359-370)."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:190
msgid "[5] https://github.com/Qiskit/qiskit-tutorial/blob/master/qiskit/aqua/optimization/maxcut_and_tsp.ipynb"
msgstr "[5] https://github.com/Qiskit/qiskit-tutorial/blob/master/qiskit/aqua/optimization/maxcut_and_tsp.ipynb"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:202
msgid "The Implementation"
msgstr "구현"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:204
msgid "First, we import the requisite modules."
msgstr "먼저 필요한 모듈을 가져온다."

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:249
msgid "Next, we download price data for two stocks and compute their pair-wise similarity matrix (dynamic time warping distance normalized to (0,1] by taking the reciprocal). If this fails, e.g., due to you being offline or exceeding the daily limit for accesses to the stock-market data, we consider a constant matrix instead."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:284
msgid "Now we decide on the number of clusters. This has to be smaller than the number of stocks we have loaded."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:306
msgid "Classical solution using IBM ILOG CPLEX"
msgstr "IBM ILOG CPLEX를 사용한 고전적 솔루션"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:308
msgid "For a classical solution, we use IBM CPLEX. CPLEX is able to find the exact solution of this problem. We first define a ClassicalOptimizer class that encodes the problem in a way that CPLEX can solve, and then instantiate the class and solve it."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:477
msgid "Solution shows the selected stocks via the stars and in green the links (via similarities) with other stocks that are represented in the fund by the linked stock."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:489
msgid "Quantum Computing with IBM Q"
msgstr "IBM Q를 이용한 양자 컴퓨팅"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:491
msgid "For the quantum solution, we use Qiskit. We first define a class QuantumOptimizer that encodes the quantum approach to solve the problem and then we instantiate it and solve it. We define the following methods inside the class:"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:493
msgid "``exact_solution`` : to make sure that the Ising Hamiltonian is correctly encoded in the :math:`Z` basis, we can compute its eigendecomposition classically, i.e., considering a symmetric matrix of dimension :math:`2^N \\times 2^N`. For the problem at hand :math:`n=3`, that is :math:`N = 12`, seems to be the limit for many laptops;"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:494
msgid "``vqe_solution`` : solves the problem :math:`(M)` via the variational quantum eigensolver (VQE);"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:495
msgid "``qaoa_solution`` : solves the problem :math:`(M)` via a Quantum Approximate Optimization Algorithm (QAOA)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:586
msgid "Step 1"
msgstr "단계 1"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:588
msgid "Instantiate the quantum optimizer class with parameters: - the similarity matrix ``rho``; - the number of assets and clusters ``n`` and ``q``;"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:611
msgid "Step 2"
msgstr "단계 2"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:613
msgid "Encode the problem as a binary formulation (IH-QP)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:615
msgid "Sanity check: make sure that the binary formulation in the quantum optimizer is correct (i.e., yields the same cost given the same solution)."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:669
msgid "Step 3"
msgstr "단계 3"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:671
msgid "Encode the problem as an Ising Hamiltonian in the Z basis."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:673
msgid "Sanity check: make sure that the formulation is correct (i.e., yields the same cost given the same solution)"
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:724
msgid "Step 4"
msgstr "단계 4"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:726
msgid "Solve the problem via VQE. Notice that depending on the number of qubits, this can take a while: for 6 qubits it takes 15 minutes on a 2015 Macbook Pro, for 12 qubits it takes more than 12 hours. For longer runs, logging may be useful to observe the workings; otherwise, you just have to wait until the solution is printed."
msgstr ""

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:777
msgid "Step 5"
msgstr "단계 5"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:779
msgid "Visualize the solution"
msgstr "솔루션 시각화"

#: ../../tutorials/finance/02_portfolio_diversification.ipynb:836
msgid "Solution shows the selected stocks via the stars and in green the links (via similarities) with other stocks that are represented in the fund by the linked stock. Keep in mind that VQE is a heuristic working on the QP formulation of the Ising Hamiltonian, though. For suitable choices of A, local optima of the QP formulation will be feasible solutions to the ILP. While for some small instances, as above, we can find optimal solutions of the QP formulation which coincide with optima of the ILP, finding optimal solutions of the ILP is harder than finding local optima of the QP formulation, in general. Even within the VQE, one may provide stronger guarantees, for specific variational forms (trial wave functions)."
msgstr ""

