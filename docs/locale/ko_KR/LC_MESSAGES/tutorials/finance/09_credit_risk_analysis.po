msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-05 06:28\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9358\n"
"Language: ko_KR\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:10
msgid "This page was generated from `tutorials/finance/09_credit_risk_analysis.ipynb`__."
msgstr "이 페이지는 `tutorials/finance/09_credit_risk_analysis.ipynb`__ 에서 생성되었다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_."
msgstr "`IBM 퀀텀 랩 `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`__ 에서 대화식으로 실행하시오."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:9
msgid "*Credit Risk Analysis*"
msgstr "*신용 위험 분석*"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers:"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:25
msgid "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"
msgstr "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:26
msgid "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"
msgstr "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:28
msgid "A general introduction to QAE can be found in the following paper:"
msgstr "QAE에 대한 일반적인 소개는 다음 논문에서 확인할 수 있다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:30
msgid "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:32
msgid "The structure of the tutorial is as follows:"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:34
msgid "`Problem Definition <#Problem-Definition>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:35
msgid "`Uncertainty Model <#Uncertainty-Model>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:36
msgid "`Expected Loss <#Expected-Loss>`__"
msgstr "예상 손실 <#Expected-Loss> __"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:37
msgid "`Cumulative Distribution Function <#Cumulative-Distribution-Function>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:38
msgid "`Value at Risk <#Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:39
msgid "`Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:66
msgid "Problem Definition"
msgstr "문제점 정의"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:68
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr "이 튜토리얼에서는 :math:의 K 자산 포트폴리오의 신용 위험을 분석하고자 합니다. 모든 자산 ( :math:'k') 의 디폴트 확률은 *Gaussian 조건부 독립 * 모델을 따르며, 즉 표준 정규 분포에 이어서 잠재적인 무작위 변수 ( :math:'Z') 로부터 샘플링된 값 :math:'z' 가 제공되며, 자산 :math:'k' 의 디폴트 확률은 다음과 같이 주어진다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:70
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr "(z) = F\\left (\\frac {F={-1}(p_k ^ 0)-\\sqrt {\\rho_k} z} {\\sqrt {1- \\rho_k}} \\right)\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:72
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr "여기서 :math:`F`는 :math:`Z`의 누적 분포 함수를 나타내고, :math:`p_k ^ 0`은 :math:`z = 0`에 대한 자산 :math:`k`의 기본 확률이며 :math:`\\rho_k`는 :math:`Z`에 대한 자산 :math:`k`의 기본 확률에 대한 민감도이다. 따라서 :math:`Z`의 구체적인 실현이 주어지면 개별 기본 이벤트는 서로 독립적 인 것으로 간주된다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:74
msgid "We are interested in analyzing risk measures of the total loss"
msgstr "우리는 전체 손실의 위험 측정을 분석하는데 관심이 있습니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:76
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr "L = \\sum_ {k= 1} ^ K \\lambda_k X_k (Z)\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:78
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:80
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:82
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:84
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr "\\text{CVaR}_ {\\alpha} (L) = \\mathbb{E}[L \\mid L \\geq \\text{VaR}_ {\\alpha} (L)].\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:86
msgid "For more details on the considered model, see, e.g., Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca"
msgstr "고려된 모델에 대한 자세한 내용은 예를 들어 신용 위험에 대한 규제 자본 모델링을 참조하십시오. 마렉 루트코스키 (Marek Rutkowski), 실비오 타카 (Silvio Tarca)"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:88
msgid "The problem is defined by the following parameters: - number of qubits used to represent :math:`Z`, denoted by :math:`n_z` - truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}` - the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` - sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)` - loss given default for asset :math:`k`, denoted by :math:`\\lambda_k` - confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr "문제는 다음 매개 변수에 의해 정의된다.-:math:`Z`로 표시되는 :math:`Z`를 나타내는 데 사용되는 큐 비트 수-:math:`z_로 표시되는 :math:`Z`에 대한 절단 값 \\text{max}}`, 즉, Z는 :math:`2^{n_z}`등거리 값을 취하는 것으로 간주된다. :math:`\\{-z_{max}, ..., + z_{max}\\ }`-각 자산의 기본 기본 확률 :math:`p_0^k \\in (0, 1)`, :math:`k = 1, ..., K`-다음에 대한 기본 확률의 민감도 :math:`Z`, :math:`\\rho_k \\in [0, 1)`-자산에 대한 기본 손실 :math:`k`, :math:`\\lambda_k`로 표시-VaR / CVaR :math:`\\alpha \\ in [0, 1]`."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:119
msgid "Uncertainty Model"
msgstr "불확실성 모델"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:121
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr "이제 불확실성 모델을로드하는 회로를 구성합니다. 이것은 표준 정규 분포에 따라 : math :`Z`를 나타내는 : math :`n_z` 큐 비트의 레지스터에 양자 상태를 생성함으로써 달성 할 수 있다. 그런 다음이 상태는 :math:`K` 큐 비트의 두 번째 큐 비트 레지스터에서 단일 큐 비트 Y 회전을 제어하는 ​​데 사용된다. 여기서 큐 비트 :math:`k`의 :math:`| 1 \\rangle` 상태는 기본 이벤트를 나타낸다. 자산의 :math:`k`. 결과 양자 상태는 다음과 같이 쓸 수 있다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:123
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:128
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:217
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for - expected loss :math:`\\mathbb{E}[L]` - PDF and CDF of :math:`L` - value at risk :math:`VaR(L)` and corresponding probability - conditional value at risk :math:`CVaR(L)`"
msgstr "이제 시뮬레이터를 사용하여 :math:`| \\Psi \\rangle`을 구성하는 회로의 유효성을 검사하고-예상 손실 :math:`\\mathbb{E} [L]`-PDF 및 CDF의 해당 정확한 값을 계산한다. :math:`L`-위험 값 :math:`VaR (L)`및 해당 확률-위험 조건부 값 :math:`CVaR (L)`"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:407
msgid "Expected Loss"
msgstr "예상 손실"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:409
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr "예상 손실을 추정하기 위해 먼저 가중치 합계 연산자를 적용하여 총 손실에 대한 개별 손실을 합산합니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:411
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr "* mathcal{S}: |x_1, ..., x_K \\rangle_K | 0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K | \\lambda_1x_1+...+\\lambda_K x_K\\rangle_{n_S}.\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:413
msgid "The required number of qubits to represent the result is given by"
msgstr "결과를 표시하는 데 필요한 필수 비트 수는 다음과 같이 제공됩니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:415
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:417
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:419
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:424
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "이것은 예상 손실을 평가하기 위해 진폭 추정을 실행할 수 있도록 한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:476
msgid "Create the state preparation circuit:"
msgstr "상태 준비 회로를 작성한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:600
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:673
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "다음은 QAE를 실행하여 고전적인 Monte Carlo 시뮬레이션을 능가하는 2차 속도로 예상 손실을 추정한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:733
msgid "Cumulative Distribution Function"
msgstr "누적 분포 함수"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:735
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr "예상 손실 대신 (고전적 기법을 사용하여 효과적으로 평가할 수 있음) 이제 손실의 누적 분포 함수 (CDF) 를 추정합니다. 이는 기본적으로 기본 자산의 가능한 조합을 모두 평가하거나 Monte Carlo 시뮬레이션에 있는 많은 고전적 샘플을 평가하는 것을 포함한다. QAE에 기반한 알고리즘은 미래에 이러한 분석을 상당히 향상시킬 수 있는 잠재력을 갖고 있다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:737
msgid "To estimate the CDF, i.e., the probability :math:`\\mathbb{P}[L \\leq x]`, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:739
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:747
msgid "The resulting quantum state can be written as"
msgstr "결과적인 양자 상태는 다음과 같이 기록될 수 있다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:749
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"
msgstr " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:754
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr "여기서 우리는 불확실성 모델의 세부사항들을 제시하는 대신에 합산된 손실 값들 및 대응하는 확률들을 추정한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:756
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:874
#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1437
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr "다시, 양자회로의 유효성을 검증하기 위해 양자 시뮬레이션을 먼저 사용합니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1025
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "그 다음에 QAE를 실행하여 주어진 :math:'x' 에 대한 CDF를 추정한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1084
msgid "Value at Risk"
msgstr "최대예상손실액 (Value at Risk)"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1086
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr "다음에는 이중 검색 및 QAE를 사용하여 위험에 있는 값을 추정하기 위해 CDF를 효율적으로 평가합니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1274
msgid "Conditional Value at Risk"
msgstr "위험에 있는 조건부 값"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1276
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1278
msgid " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1285
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1503
msgid "Next we run QAE to estimate the CVaR."
msgstr "다음에는 QAE를 실행하여 CVS를 추정한다."

