msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 16:27+0000\n"
"PO-Revision-Date: 2020-12-29 18:30\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9358\n"
"Language: ko_KR\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:10
msgid "This page was generated from `tutorials/finance/09_credit_risk_analysis.ipynb`__."
msgstr "이 페이지는 `tutorials/finance/09_credit_risk_analysis.ipynb`__ 에서 생성되었다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`_."
msgstr "`IBM 퀀텀 랩 `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/09_credit_risk_analysis.ipynb>`__ 에서 대화식으로 실행하시오."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:9
msgid "*Credit Risk Analysis*"
msgstr "*신용 위험 분석*"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers: - Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. [Woerner2019] - Credit Risk Analysis using Quantum Computers. Egger et al. (2019) [Egger2019]"
msgstr "이 학습서에서는 신용 위험 분석에 양자 알고리즘을 사용하는 방법에 대해 설명합니다. 보다 정확하게, QAE (Quantum Amplitude Estimation) 를 사용하여 고전적인 Monte Carlo 시뮬레이션을 통해 2차 속도로 위험 측정을 추정할 수 있다. 이 학습서는 다음과 같은 보고서를 기반으로 합니다. - 양자 위험 분석. 양자 컴퓨터를 이용한 Stefan Woerner, Daniel J. Egger, [Woerner2019] -신용 위험 분석. 문헌 [참조: Egger et al. (2019) [Egger2019]"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:25
msgid "A general introduction to QAE can be found in the following paper and tutorial: - Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. - Qiskit Tutorial on Quantum Amplitude Estimation"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:27
msgid "The structure of the tutorial is as follows: 1. `Problem Definition <#Problem-Definition>`__ 2. `Uncertainty Model <#Uncertainty-Model>`__ 3. `Expected Loss <#Expected-Loss>`__ 4. `Cumulative Distribution Function <#Cumulative-Distribution-Function>`__ 5. `Value at Risk <#Value-at-Risk>`__ 6. `Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:54
msgid "Problem Definition"
msgstr "문제점 정의"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:56
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr "이 튜토리얼에서는 :math:의 K 자산 포트폴리오의 신용 위험을 분석하고자 합니다. 모든 자산 ( :math:'k') 의 디폴트 확률은 *Gaussian 조건부 독립 * 모델을 따르며, 즉 표준 정규 분포에 이어서 잠재적인 무작위 변수 ( :math:'Z') 로부터 샘플링된 값 :math:'z' 가 제공되며, 자산 :math:'k' 의 디폴트 확률은 다음과 같이 주어진다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:58
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:60
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:62
msgid "We are interested in analyzing risk measures of the total loss"
msgstr "우리는 전체 손실의 위험 측정을 분석하는데 관심이 있습니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:64
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr "L = \\sum_ {k= 1} ^ K \\lambda_k X_k (Z)\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:66
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:68
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:70
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:72
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr "\\text{CVaR}_ {\\alpha} (L) = \\mathbb{E}[L \\mid L \\geq \\text{VaR}_ {\\alpha} (L)].\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:74
msgid "For more details on the considered model, see, e.g., Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:76
msgid "The problem is defined by the following parameters: - number of qubits used to represent :math:`Z`, denoted by :math:`n_z` - truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}` - the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` - sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)` - loss given default for asset :math:`k`, denoted by :math:`\\lambda_k` - confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:107
msgid "Uncertainty Model"
msgstr "불확실성 모델"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:109
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:111
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:116
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:205
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for - expected loss :math:`\\mathbb{E}[L]` - PDF and CDF of :math:`L` - value at risk :math:`VaR(L)` and corresponding probability - conditional value at risk :math:`CVaR(L)`"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:395
msgid "Expected Loss"
msgstr "예상 손실"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:397
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr "예상 손실을 추정하기 위해 먼저 가중치 합계 연산자를 적용하여 총 손실에 대한 개별 손실을 합산합니다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:399
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr "* mathcal{S}: |x_1, ..., x_K \\rangle_K | 0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K | \\lambda_1x_1+...+\\lambda_K x_K\\rangle_{n_S}.\n\n"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:401
msgid "The required number of qubits to represent the result is given by"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:403
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:405
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:407
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:412
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "이것은 예상 손실을 평가하기 위해 진폭 추정을 실행할 수 있도록 한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:464
msgid "Create the state preparation circuit:"
msgstr "상태 준비 회로를 작성한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:588
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:661
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "다음은 QAE를 실행하여 고전적인 Monte Carlo 시뮬레이션을 능가하는 2차 속도로 예상 손실을 추정한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:721
msgid "Cumulative Distribution Function"
msgstr "누적 분포 함수"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:723
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:725
msgid "To estimate the CDF, i.e., the probability $ :nbsphinx-math:`\\mathbb{P}`[L :nbsphinx-math:`\\leq `x] $, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:727
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:735
msgid "The resulting quantum state can be written as"
msgstr "결과적인 양자 상태는 다음과 같이 기록될 수 있다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:737
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:742
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:744
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:862
#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1425
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1013
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "그 다음에 QAE를 실행하여 주어진 :math:'x' 에 대한 CDF를 추정한다."

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1072
msgid "Value at Risk"
msgstr "최대예상손실액 (Value at Risk)"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1074
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1262
msgid "Conditional Value at Risk"
msgstr "위험에 있는 조건부 값"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1264
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1266
msgid " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr " f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1273
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr ""

#: ../../tutorials/finance/09_credit_risk_analysis.ipynb:1491
msgid "Next we run QAE to estimate the CVaR."
msgstr "다음에는 QAE를 실행하여 CVS를 추정한다."

