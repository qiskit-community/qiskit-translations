msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-09 12:18+0000\n"
"PO-Revision-Date: 2020-07-07 21:26\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/development_strategy.po\n"
"X-Crowdin-File-ID: 7206\n"
"Language: ko_KR\n"

#: ../../development_strategy.rst:2
msgid "Development Strategy"
msgstr "개발 전략"

#: ../../development_strategy.rst:5
msgid "Roadmap"
msgstr "로드맵"

#: ../../development_strategy.rst:7
msgid "We are going to look out 12 months to establish a set of goals we want to work towards. When planning, we typically look at potential work from the perspective of the elements."
msgstr "우리는 앞으로 일하기를 원하는 목표들을 수립하기 위해서 적어도 12개월을 미리 내다보고 정할 것이다. 계획을 세울 때 대부분의 경우 각 구성 요소의 관점에서 잠재적인 목표들을 살펴볼 것이다."

#: ../../development_strategy.rst:12
msgid "Qiskit Terra"
msgstr "키스킷 테라"

#: ../../development_strategy.rst:14
msgid "In 2018 we worked on formalizing the backends and user flow in Qiskit Terra. The basic idea is as follows: the user designs a quantum circuit and then, through a set of transpiler passes, rewrites the circuit to run on different backends with different optimizations. We also introduced the concept of a *provider*, whose role is to supply backends for the user to run quantum circuits on. The provider API we have defined at version one supplies a set of schemas to verify that the provider and its backends are Terra-compatible."
msgstr "2018년에 우리는 키스킷 테라에서 사용되는 후위 처리 장치와 사용자 흐름을 공식화하는 일을 하였다. 기본이 되는 생각은 다음과 같다: 사용자가 양자 회로를 디자인하고 이 후 트랜스파일러들의 집합을 통해 회로들이 다른 최적화를 통해 다른 후위 처리장치에서 실행된다. 우리는 또한 새로운 개념으로 *제공자(provider)*를 도입하였는데, 이는 사용자가 양자 회로를 실행해 볼 수 있는 후위 처리 장치를 제공하는 역할이다. 우리가 첫번째 버전에서 정의했던 제공자 응용 프로그램 인터페이스는 제공자들을 확인하고 해당하는 후위 처리장치가 테라 패키지에 호환성이 있는지 확인하는 방식들을 정의하는 도식을 제시해 준다."

#: ../../development_strategy.rst:22
msgid "In 2019, we have many extensions planned. These include:"
msgstr "2019년에서는 여러 확장을 계획했었다. 이러한 계획은 다음을 포함한다:"

#: ../../development_strategy.rst:24
msgid "**Add passes to the transpiler.** The goal here is to be more efficient in circuit depth as well as adding passes that find approximate circuits and resource estimations."
msgstr "**트랜스파일어에 통로 추가하기.** 여기서 목표는 적절한 회로와 자원 소모 예측을 찾아주는 통로를 추가해 주고 또한 회로 깊이를 더욱 효율적으로 만드는 것이다."

#: ../../development_strategy.rst:27
msgid "**Introduce a circuit foundry and circuit API.** This has the goal of making sure that a user can easily build complex circuits from operations. Some of these include adding controls and power to operations, and inserting unitary matrices directly."
msgstr "**회로 주조 공장 및 회로 응용 프로그램 인터페이스 소개하기.** 여기에서 목표는 사용자들이 손쉽게 여러 연산을 통해서 복잡한 회로를 만들수 있게 하는 것이다. 이를 위해서 연산에 통제와 파워를 추가하고 단일 행령을 직접 입력할 수 있는 기능들이 포함된다."

#: ../../development_strategy.rst:31
msgid "**Provide an API for OpenPulse.** Now that OpenPulse is defined, and the IBM Quantum provider can accept it, we plan to build out the pulse features. These will include a scheduler and tools for building experiments out of pulses. Also included will be tools for mapping between experiments with gates (QASM) to experiments with pulses."
msgstr "**오픈 펄스에 대한 응용 프로그램 인터페이스 제공하기.** 이제 오픈 펄스가 정의되고 IBM 양자 시스템 제공자가 그것을 수락할 수 있게 되었으므로 우리는 펄스 기능을 구성하기 위한 계획을 시작하였다. 여기에는 펄스를 이용한 실험을 만들기 위한 스케줄러와 도구들이 포함되고 또한 펄스를 이용한 실험과 게이트(QASM)을 이용한 실험간에 사상하기 위한 도구들도 포함된다."

#: ../../development_strategy.rst:37
msgid "Qiskit Aer"
msgstr "키스킷 아르"

#: ../../development_strategy.rst:39
msgid "The first release of Qiskit Aer was made available at the end of 2018. It included C++ implementations of QASM, statevector, and unitary simulators. These are the core to Qiskit Aer, and replace the simulators that existed in Terra. The QASM simulator includes a customizable general (Kraus) noise model, and all simulators include CPU parallelization through the OpenMP library."
msgstr "2018년 말에 처음으로 키스킷 아르가 만들어져 공개되었다. 여기에는 C++로 만들어진 QASM, 상태벡터 그리고 단일 시뮬레이터가 포함되어 있다. 이것이 키스킷 아르의 핵심 요소이고 기존 테라에 있었던 시뮬레이터들을 대체한다. QASM 시뮬레이터는 사용자가 바꿀수 있는 범용의 (Kraus) 노이즈 모델을 포함하고 있으면 모든 시뮬레이터는 오픈엠피(OpenMP) 라이브러리를 통해 중앙처리장치(CPU) 병렬화가 가능하다."

#: ../../development_strategy.rst:45
msgid "In 2019, Aer will be extended in many ways:"
msgstr "2019년에 아르는 여러 방향으로 확장될 것이다:"

#: ../../development_strategy.rst:47
msgid "**Optimize simulators.** We are going to start profiling the simulators and work on making them faster. This will include automatic settings for backend configuration and OpenMP parallelization configuration based on the input Qobj and available hardware."
msgstr "**시뮬레이터 최적화하기.** 우리는 시뮬레이터를 프로파일링할 계획이고 더욱 빠르게 만들 것이다. 이를 위해 후위 처리 장치 설정, 입력 양자 객체(Qobj) 와 사용 가능한 하드웨어에 따른 오픈 엠피 병렬화 설정 등을 자동화하는 일을 할 것이다."

#: ../../development_strategy.rst:50
msgid "**Develop additional simulator backends.** We will include several approximate simulator backends that are more efficient for specific subclasses of circuits, such as the T-gate simulator, which works on Clifford and T gates (with low T-depth), and a stabilizer simulator,  which works just on Clifford gates."
msgstr "**추가적인 시뮬레이터 후위 처리 장치 개발하기** 우리는 앞으로 몇몇 특정한 회로에 더욱 효과적인 시뮬레이터 후위 처리 장치를 만들 계획이다. 예를 들어 클리포드와 (낮은 T-깊이를 가진) T-게이트에서 작동하는 T-게이트 시뮬레이터나 단지 클리포드 게이트에서만 작동하는 안정화 시뮬레이터같은 경우가 있다."

#: ../../development_strategy.rst:54
msgid "**Add noise approximation tools.** We plan to add noise approximation tools to mapping general (Kraus) noise models to approximate noise model that may be implemented on an approximate backends (for example only mixed Clifford and reset errors in the noise model)."
msgstr "**노이즈 근사값 추측 도구 추가하기.** 우리는 노이즈 근사값 추측 도구를 만들어서 일반적인 노이즈 모델 (Kraus) 에서 근사값 후위 처리 장치 (예를 들어 노이즈 모델에서 클리포드 모델과 초기화 에러만 가진) 에서 사용될 근사값 추측 노이즈 모델을 구성해 낼 것이다."

#: ../../development_strategy.rst:59
msgid "Qiskit Ignis"
msgstr "키스킷 이그니스"

#: ../../development_strategy.rst:61
msgid "This year, we are going to release the first version of Qiskit Ignis. The goal of Ignis is to be a set of tools for characterization of errors, improving gates, and enhancing computation in the presence of noise. Examples of these tools include optimal control, dynamical decoupling, and error mitigation."
msgstr "올 해 우리는 키스킷 이그니스의 최초 버전을 발표할 것이다. 이그니스의 목표는 노이즈가 있는 경우에 계산 능력을 증대시키고 게이트의 성능을 올리고 에러의 원인을 알아내는 도구들을 만드는 것이다. 이러한 도구의 예는 최적화 컨트롤(optimal control), 동적 분리(dynamical decoupling), 에러 경감(error mitigation) 등이 있다."

#: ../../development_strategy.rst:67
msgid "In 2019, Ignis will include tools for:"
msgstr "2019년에 이그니스는 다음의 도구들을 포함한다:"

#: ../../development_strategy.rst:69
msgid "quantum state/process tomography"
msgstr "양자 상태/과정 단층 촬영"

#: ../../development_strategy.rst:71
msgid "randomized benchmarking over different groups"
msgstr "여러 그룹들 간에 무작위 벤치마킹"

#: ../../development_strategy.rst:73
msgid "optimal control (e.g., pulse shaping)"
msgstr "최적화 제어 (예를 들어, 펄스 성형)"

#: ../../development_strategy.rst:75
msgid "dynamical decoupling"
msgstr "동적 분리"

#: ../../development_strategy.rst:77
msgid "circuit randomization"
msgstr "회로 임의 추출"

#: ../../development_strategy.rst:79
msgid "error mitigation (to improve results for quantum chemistry experiments)"
msgstr "에러 경감 (양자 화학 실험의 결과를 개선하기 위해서)"

#: ../../development_strategy.rst:82
msgid "Qiskit Aqua"
msgstr "키스킷 아쿠아"

#: ../../development_strategy.rst:84
msgid "Aqua is an open-source library of quantum algorithms and applications, introduced in June 2018. As a library of quantum algorithms, Aqua comes with a rich set of quantum algorithms of general applicability—such as VQE, QAOA, Grover's Search, Amplitude Estimation and Phase Estimation—and domain-specific algorithms-such as the Support Vector Machine (SVM) Quantum Kernel and Variational algorithms, suitable for supervised learning.  In addition, Aqua includes algorithm-supporting components, such as optimizers, variational forms, oracles, Quantum Fourier Transforms, feature maps, multiclass classification extension algorithms, uncertainty problems, and random distributions. As a framework for quantum applications, Aqua provides support for Chemistry (released separately as the Qiskit Chemistry component), as well as Artificial Intelligence (AI), Optimization and Finance.  Aqua is extensible across multiple domains, and has been designed and structured as a framework that allows researchers to contribute their own implementations of new algorithms and algorithm-supporting components."
msgstr "아쿠아는 2018년 6월에 도입된 양자 알고리즘과 응용 프로그램로 구성된 오픈 소스 라이브러리이다. 양자 알고리즘 라이브러리로서 아쿠아는 많은 양자 알고리즘의 집합을 가지고 있는데, 여기에는 VQE, QAOA, 그로버(Grover) 탐색, 진폭 추정 (Amplitude Estimation), 위상 추정 (Phase Estimation) 과 같은 범용으로 쓰이는 것들과 도메인에 특화된 서포트 벡터 머신 (support vector machine) 양자 커널 그리고 지도 학습에 쓰이는 변분 알고리즘(variational algorithm) 등이 포함된다. 또한 아쿠아는 알고리즘을 돕는 구성요소를 포함하는데, 예를 들어 최적화 도구(optimizer), 변분 폼(variational form), 오라클 (oracles), 양자 푸리에 변환(quantum Fourier Transforms), 특징 맵 (feature maps), 다계층 분류 확장 알고리즘(multiclass classification extension algorithm), 불확정 문제(uncertainty problems) 그리고 임의 분포 (random distribution) 등이 있다. 양자 응용 프로그램을 위한 프레임워크로서 아쿠아는 화학 문제(키스킷 양자 화학 구성 요소로 따로 출시되었다) 과 인공 지능(AI) 그리고 최적화, 금융 문제 등를 위한 지원을 제공한다. 아쿠아는 여러 도메인에 확장 가능하며, 연구자들이 자신이 직접 개발한 알고리즘과 그 구성요소를 기부할 수 있는 프레임워크로서 디자인되고 구성되었다."

#: ../../development_strategy.rst:98
msgid "Over the course of 2019, we are planning to enrich Aqua as follows:"
msgstr "2019년 동안 우리는 아쿠아를 다음과 같이 확장하려고 계획중이다:"

#: ../../development_strategy.rst:100
msgid "We will include several new quantum algorithms, such as Deutsch-Jozsa, Simon's, Bernstein-Vazirani, and Harrow, Hassidim, and Lloyd (HHL)."
msgstr "우리는 도이치-조사(Deutsch-Jozsa), 시몬(Simon's), 번스타인-바지라니(Bernstein-Vazirani), 해로우(Harrow) 하시딤(Hassidim), 로이드(Lloyd) (HHL) 같은 새로운 양자 알고리즘을 추가할 것이다."

#: ../../development_strategy.rst:103
msgid "We will improve the performance of quantum algorithms on top of both simulators and real hardware."
msgstr "우리는 시뮬레이터와 실제 하드웨어에서 돌아가는 양자 알고리즘의 성능을 향상시킬 것이다."

#: ../../development_strategy.rst:105
msgid "We will provide better support for execution on real quantum hardware."
msgstr "우리는 실제 양자 하드웨어서 실행되는 알고리즘에 대해 더 나은 지원을 할 것이다."

#: ../../development_strategy.rst:106
msgid "We will increase the set of problems supported by the AI, Optimization and Finance applications of Aqua."
msgstr "우리는 아쿠아에서 지원되는 인공지능, 최적화, 금융 응용 프로그램이 풀 수 있는 문제들의 종류를 늘릴 것이다."

#: ../../development_strategy.rst:110
msgid "Summary"
msgstr "요약"

#: ../../development_strategy.rst:112
msgid "These are examples of just some of the work we will be focusing on in the next 12 months. We will continuously adapt the plan based on feedback. Please follow along and let us know what you think!"
msgstr "다음은 앞으로 다가올 12 개월 동안 집중하여 작업할 목록들의 일부이다. 우리는 지속적으로 사람들의 피드백에 대응해서 계획을 수정할 것이다. 여기서 제공되는 내용들을 지속적으로 관심을 가지고 지켜보고 또한 어떤 것을 향상시킬 수 있는지 알려주기 바랍니다!"

#: ../../development_strategy.rst:119
msgid "Versioning"
msgstr "버전"

#: ../../development_strategy.rst:121
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has it's own releases and versions some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "키스킷 프로젝트는 각각 다른 기능을 수행하는 몇몇 요소들로 구성되어 있다. 각각은 독립적으로 유용하며 따로 사용될 수 있다. 그러나 우리는 편의를 위해 모든 요소들을 한번에 설치할 수 있도록 하나의 진입점으로서 이 코드 저장소와 메타 패키지들 제공한다. 이는 설치 과정을 간단화하고 최종 사용자들에게 통일된 인터페이스를 제공하기 위함이다. 하지만, 각각의 키스킷 요소들은 자신만의 배포 버전을 가지고 있기 때문에 다른 코드 저장소간의 버전을 다룰 때에는 주의가 필요하다. 이 문서는 키스킷 구성 요소들과 메타 패키지의 버전과 배포본을 다룰때 필요한 가이드라인을 설명한다."

#: ../../development_strategy.rst:131
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "이 안내서의 나머지 부분에서 표준 의미상의 버전 명명법은 ``주 버전.부 버전.패치버전``으로 표기된다. 예를 들어 버전 번호가 ``0.7.1``이라면 주 버전은 ``0``이고 부 버전 ``7``이고 패치 버전은 ``1``이다."

#: ../../development_strategy.rst:138
msgid "Meta-package Version"
msgstr "메타-패키지 버전"

#: ../../development_strategy.rst:140
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "키스킷 메타-패키지 버전은 각각의 구성 요소들의 배포본에 따라 결정되는 독립적인 값이다. 매번 우리가 어떤 요소를 추가하거나 추적되는 요소를 발표하면 메타-패키지의 필요 항목이나 버전은 새로 업데이트 되야 하고 새 버전이 발표되게 된다. 메타-패키지 공개 버전이 각각의 구성 요소와 일치하도록 일정을 조정하여서 발표를 한다."

#: ../../development_strategy.rst:148
msgid "Adding New Elements"
msgstr "새 구성요소 추가하기"

#: ../../development_strategy.rst:150
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "새로운 키스킷 구성 요소가 메타-패키지 필요항목에 추가되면, 우리는 **부 버전**의 숫자를 올려야 한다."

#: ../../development_strategy.rst:153
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and it's version is ``0.7.4``. Then we release a new element ``qiskit-ignis`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "예를 들어, 메타-패키지가 ``키스킷-아르`` 와 ``키스킷-테라``를 가지고 있으며 버전이 ``0.7.4``라고 해보자. 그리고 만약 우리가 메타-패키지에 추가할 계획으로 새 구성요소 ``키스킷-이그니스``를 출시했다고 하자. 그러면 이 새 요소를 메타-패키지에 추가할 때 마지막 버전은 ``0.8.0``로 증가하게 된다."

#: ../../development_strategy.rst:161
msgid "Patch Version Increases"
msgstr "패치 버전 증가"

#: ../../development_strategy.rst:163
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release we need also bump the requirement in the setup.py and then increase the patch version of the meta-package."
msgstr "만약 어떤 키스킷 구성요소가 메타-패키지에 등록되어 있고 버그를 고치기 위해 패치 버전을 공개했다면, setup.py 파일에 있는 필요 항목을 고치고 메타-패키지의 패지 버전을 증가시켜야 한다."

#: ../../development_strategy.rst:168
msgid "For example, if the meta-package is tracking 3 elements ``qiskit-terra==0.8.1``, ``qiskit-aer==0.2.1``, and ``qiskit-ignis==0.1.4`` with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase it's patch version and release, becoming ``0.9.7``."
msgstr "예를 들어, 현재 ``0.9.6`` 버전을 가지고 있는 메타-패키지에 ``키스킷-테라 0.8.1 버전``, ``키스킷-아르 0.2.1 버전``, ``키스킷-이그니스 0.1.4 버전``이 등록되어 있다고 하자. 이 때 키스킷-테라 패키지에 버그를 고치기 위한 패치 버전 ``0.8.2``가 공개되었다면, 메타-패키지도 이에 따라 패치 버전을 증가시켜 버전 ``0.9.7``이 되어야 한다."

#: ../../development_strategy.rst:174
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "추가적으로 때때로 메타-패키지 자체에 버그가 있어서 이를 고치고 새 버전을 내놓아야 할 때가 있다. 이러한 경우가 발생하면, 이전의 불완전한 버전과 구별하기 위해 패치 버전을 증가시켜야 한다. 어떤 상황에서도 pypi에서 예전 버전 혹은 불완전한 버전을 **지우지 말라**. 대신 단순히 패치 버전을 증가시키고 새로운 버전을 업로드하라."

#: ../../development_strategy.rst:183
msgid "Minor Version Increases"
msgstr "부 버전 증가"

#: ../../development_strategy.rst:185
msgid "Besides adding a new element to the meta-package the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "새로운 요소를 메타-패키지에 추가하는 것 이외에, 등록된 구성 요소의 부 버전이 올라갈 때 메타-패키지의 부 버전도 함께 증가해야 한다."

#: ../../development_strategy.rst:189
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "예를 들어, 메타-패키지가 ``0.7.5`` 버전이고 2개의 구성 요소 ``키스킷-테라 0.7.0 버전``과 ``키스킷-아르 0.1.1 버전``이 등록되어 있다고 하자. 이 때 ``키스킷-아르``의 버전이 ``0.2.0``으로 업데이트되면, 이에 맞추어 메타-패키지의 버전도 ``0.8.0``으로 올려주어야 한다."

#: ../../development_strategy.rst:196
msgid "Major Version Increases"
msgstr "주 버전 증가"

#: ../../development_strategy.rst:198
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now all the elements still have a major version number component of ``0`` and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1`` then the meta-package version should not increase the major version."
msgstr "주 버전은 다른 버전 구성요소들과는 다르다. 각각의 등록된 요소들과 연동해서 업데이트되는 다른 버전 숫자들과는 달리 주 버전은 모든 등록 요소가 한계에 다다랐을 때 (적어도 ``1.0.0`` 전에) 에만 증가하게 된다. 현재는 모든 구성 요소의 주 버전이 ``0``이며, 메타-패키지에 등록된 각각의 요소들이 주 버전이 ``>=1``로 되어 안정적이라고 판단되는 한, 메타-패키지의 주 버전은 올라가지 않는다."

#: ../../development_strategy.rst:206
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "모든 구성 요소들의 버전이 1.0.0 이상이 될 경우 주 버전 번호가 어떻게 바뀌어야 할 지에 대해서는 아직 정해지지 않았다."

#: ../../development_strategy.rst:211
msgid "Qiskit Element Requirement Tracking"
msgstr "키스킷 구성 요소 필요조건 추적"

#: ../../development_strategy.rst:213
msgid "While not strictly related to the meta-package and Qiskit versioning how we track the element versions in the meta-package's requirements list is important. Each element listed in the setup.py should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "메타-패키지와 키스킷의 버전이 엄격하게 연동되어 있지 않은 것과 별도로 메타-패키지의 필요 조건 항목들에 나타나는 구성 요소의 버전을 정확하게 추적하는 것은 중요하다. setup.py 파일에 나열된 각각의 구성 요소들은 단일 버전에 고정되어 있어야 한다. 이는 각각의 키스킷 버전은 등록된 구성 요소의 여러가지 버전 중 딱 한가지 버전만 설치해야 한다는 뜻이다. 예를 들어, 특정 버전의 경우 필요 조건 항목들은 다음과 같이 나타날 수 있다."

#: ../../development_strategy.rst:225
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "이것은 디버깅을 돕기도 하고, 또한 여러 구성 요소간에 버전을 추척하는 일을 좀 더 명확하게 해 준다."

#: ../../development_strategy.rst:228
msgid "It is also worth pointing out that the order we install the elements is critically important too. ``pip`` does not have a real dependency solver which means the installation order matters. So if there are overlapping requirements versions between elements or dependencies between elements we need to ensure that the order in the requirements list installs everything as expected. If the order needs to be change for some install time incompatibility it should be noted clearly."
msgstr "또한 우리가 구성 요소들을 설치하는 순서가 매우 중요하다. ``pip``는 설치하는 순서가 중요한 의미를 지니는 진정한 의미의 의존도 해결 모듈을 가지고 있지 않다. 그렇기 때문에 구성 요소나 각각의 요소간에 의존도에 관한 필요 조건 버전이 중복되게 되면, 우리는 설치 순서가 의도했던 대로 맞추어 지는지 확인해 주어야 한다. 만약 설치시 호환성 문제로 설치 순서가 바뀌어야 한다면, 이를 명확하게 적어두어야 한다."

#: ../../development_strategy.rst:238
msgid "Module Status"
msgstr "모듈 상태"

#: ../../development_strategy.rst:240
msgid "Qiskit is developing so fast that is it is hard to keep all different parts of the API supported for various versions. We do our best and we use the rule that for one minor version update, for example 0.6 to 0.7, we will keep the API working with a deprecated warning. Please don’t ignore these warnings. Sometimes there are cases in which this can’t be done and for these in the release history we will outline these in great details."
msgstr "키스킷은 매우 빠르게 개발되고 있기 때문에 여러가지 버전에서 지원되는 응용 프로그램 인터페이스의 각 부분의 변화를 모두 기록하기 힘들다. 우리는 최선을 다하고 있으며, 적어도 하나의 부 버전이 업데이트되면, 예를 들어 0.6에서 0.7로 증가할 때, 응용 프로그램 인터페이스에 지원 중단 경고(deprecated warning) 를 넣는 일을 하고 있다. 부디 이러한 경고 메세지를 무시하지 말아 달라. 때때로 이러한 작업이 불가능한 때가 있고 이러한 경우에는 공개 버전 기록에 자세한 설명과 함께 변화들을 적어놓을 것이다."

#: ../../development_strategy.rst:248
msgid "This being said as we work towards Qiskit 1.0 there are some modules that have become stable and the table below is our attempt to label them"
msgstr "현재 키스킷 버전은 1.0에 가까워저 가고 있고 몇몇 모듈은 매우 안정적으로 돌아간다. 아래의 표는 그러한 모듈들을 정리해 놓은 것이다."

#: ../../development_strategy.rst:254
msgid "Modules"
msgstr "모듈 목록"

#: ../../development_strategy.rst:257
msgid "Name"
msgstr "이름"

#: ../../development_strategy.rst:257
msgid "status"
msgstr "상태"

#: ../../development_strategy.rst:257
msgid "Note"
msgstr "노트"

#: ../../development_strategy.rst:259
msgid "assembler"
msgstr "어셈블러"

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:295 ../../development_strategy.rst:297
#: ../../development_strategy.rst:299
msgid "stable"
msgstr "안정"

#: ../../development_strategy.rst:259 ../../development_strategy.rst:263
#: ../../development_strategy.rst:295 ../../development_strategy.rst:299
msgid "completed in version 0.9"
msgstr "버전 0.9에서 완료된 항목들"

#: ../../development_strategy.rst:261
msgid "circuit"
msgstr "회로"

#: ../../development_strategy.rst:261 ../../development_strategy.rst:265
#: ../../development_strategy.rst:279 ../../development_strategy.rst:285
#: ../../development_strategy.rst:291 ../../development_strategy.rst:293
msgid "unstable"
msgstr "불안정"

#: ../../development_strategy.rst:263
msgid "compiler"
msgstr "컴파일러"

#: ../../development_strategy.rst:265
msgid "converters"
msgstr "변환기"

#: ../../development_strategy.rst:267
msgid "dagcircuit"
msgstr "dag회로"

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
#: ../../development_strategy.rst:281 ../../development_strategy.rst:283
#: ../../development_strategy.rst:287
msgid "remove"
msgstr "삭제"

#: ../../development_strategy.rst:267 ../../development_strategy.rst:269
msgid "will be part of circuits"
msgstr "회로의 일부가 될 것이다"

#: ../../development_strategy.rst:269
msgid "extensions"
msgstr "확장 기능"

#: ../../development_strategy.rst:271 ../../development_strategy.rst:275
msgid "ignis.characterization"
msgstr "이그니스.특성화(ignis.characterization)"

#: ../../development_strategy.rst:273
msgid "ignis.mitigation"
msgstr "이그니스.완화(ignis.mitigation)"

#: ../../development_strategy.rst:277
msgid "providers"
msgstr "공급자 (providers)"

#: ../../development_strategy.rst:277 ../../development_strategy.rst:289
#: ../../development_strategy.rst:297
msgid "completed in version 0.7"
msgstr "버전 0.7에서 완료됨"

#: ../../development_strategy.rst:279
msgid "pulse"
msgstr "펄스"

#: ../../development_strategy.rst:281
msgid "qasm"
msgstr "qasm"

#: ../../development_strategy.rst:281
msgid "passer location to be determined"
msgstr "전달 위치는 결정될 것임"

#: ../../development_strategy.rst:283
msgid "qobj"
msgstr "양자 객체(qobj)"

#: ../../development_strategy.rst:283 ../../development_strategy.rst:287
msgid "moved into the provider"
msgstr "공급자(provider) 로 옮겨졌음"

#: ../../development_strategy.rst:285
msgid "quantum_info"
msgstr "양자_정보(quantum_info)"

#: ../../development_strategy.rst:287
msgid "result"
msgstr "결과"

#: ../../development_strategy.rst:289
msgid "schemas"
msgstr "스키마"

#: ../../development_strategy.rst:291
msgid "tests"
msgstr "테스트"

#: ../../development_strategy.rst:293
msgid "tools"
msgstr "도구"

#: ../../development_strategy.rst:293
msgid "various elements to be removed"
msgstr "제거될 여러 구성 요소들"

#: ../../development_strategy.rst:295
msgid "transpiler"
msgstr "트랜스파일러(transpiler)"

#: ../../development_strategy.rst:297
msgid "validation"
msgstr "검증"

#: ../../development_strategy.rst:299
msgid "visualization"
msgstr "시각화"

#: ../../development_strategy.rst:303 ../../development_strategy.rst:339
msgid "Providers"
msgstr "공급자"

#: ../../development_strategy.rst:305
msgid "There are three providers that come with the default installation of Qiskit"
msgstr "키스킷을 설치하면 기본으로 제공되는 세 가지 공급자가 있다."

#: ../../development_strategy.rst:308
msgid "Basic Aer Provider"
msgstr "기본 아르 공급자"

#: ../../development_strategy.rst:310
msgid "This provider simulates ideal quantum circuits and has three backends. As Aer becomes more stable and can work on any operating system this provider will be removed."
msgstr "이 공급자는 이상적인 양자 회로를 시뮬레이션하고 세 개의 후위 처리 장치를 가진다. 아르가 점점 안정화 되고 어떤 운영 체계에서도 사용될 수 있게 되면 이 공급자는 제거될 것이다."

#: ../../development_strategy.rst:315
msgid "Aer Provider"
msgstr "아르 공급자"

#: ../../development_strategy.rst:317
msgid "This is a more advance simulator that is written in C++. It runs faster than Basic Aer and also allows you to add noise to your circuits. This allow you to explore what happens to your circuits for realistic models of the experiments and design experiments that might be more resilient to the noise in today’s quantum computers."
msgstr "이것은 C++로 쓰여진 고급 시뮬레이터이다. 기본적인 아르보다 빠르게 작동하고 회로에 노이즈를 추가할 수 있게 해준다. 이것은 오늘날 사용되는 양자 컴퓨터에 있는 노이즈에 좀 더 잘 대응할 수 있는 실험을 디자인하고 실제 실험에 가까운 모델에 어떠한 일이 일어나는지를 연구할 수 있게 해 준다."

#: ../../development_strategy.rst:324
msgid "IBM Quantum Provider"
msgstr "아이비엠 양자 시스템 공급자"

#: ../../development_strategy.rst:326
msgid "This provider gives you access to real experiments. You will need an IBM Quantum Experience account to use it.  It also has an online HPC simulator that can be used. It is a hosted version of the Aer Provider."
msgstr "이 공급자는 실제 실험을 해 볼 수 있도록 해 준다. 이를 사용하기 위해서는 아이비엠 양자 경험 계정이 필요하다. 또한 이 계정을 통해 온라인 고성능 수퍼 컴퓨터 시뮬레이터를 사용할 수 있다. 이것은 아르 공급자의 호스팅된 버전이다."

#: ../../development_strategy.rst:332
msgid "Community Extensions"
msgstr "커뮤니티 확장 기능"

#: ../../development_strategy.rst:334
msgid "Qiskit has been designed with modularity in mind. It is extensible in many different ways; on the page, we highlight the ways in which the Qiskit community has engaged with Qiskit and developed extensions and packages on top of it."
msgstr "키스킷은 모듈성을 염두해 두고 만들어 졌다. 많은 다른 방식으로 확장될 수 있는데, 다음 페이지에서 키스킷 커뮤니티가 키스킷과 어떻게 연관을 맺고 있으며 확장 기능과 패키지들을 개발하는지에 대해 강조하였다."

#: ../../development_strategy.rst:341
msgid "The Qiskit base provider is an entity that provides access to a group of different backends (for example, backends available through IBM Quantum). It interacts with those backends to do many things: find out which ones are available, retrieve an instance of a particular backend, get backend properties and configurations, and handling running and working with jobs."
msgstr "키스킷의 기본 제공자는 다른 후위 처리 장치(예를 들어 아이비엠 양자 시스템을 통해서 제공되는 후위 처리 장치들) 의 그룹에 접근할 수 있는 객체이다. 이는 여러 후위 처리 장치와 상호 작용하여 여러가지 일을 하는데, 어느 후위 처리 장치가 사용 가능한지, 특정 후위 처리 장치의 인스턴스를 회수해 오는 일, 후위 처리 장치의 특성과 설정을 가져오는 일, 여러 작업들을 실행하고 다루는 일들이 포함된다."

#: ../../development_strategy.rst:348
msgid "Additional providers"
msgstr "추가적인 후위 처리 장치"

#: ../../development_strategy.rst:350
msgid "**Decision diagram-based quantum simulator**"
msgstr "**의사결정 다이어그램에 기반한 양자 시뮬레이터**"

#: ../../development_strategy.rst
msgid "- **Organization:** Johannes Kepler University, Linz, Austria (Alwin Zulehner and Robert Wille)"
msgstr "- **기관:** 요하네스 케플러 (Johannes Kepler) 대학, 린즈 (Linz), 오스트리아 (Austria) (알빈 줄레너(Alwin Zulehner) 와 로버트 윌(Robert Wille)"

#: ../../development_strategy.rst
msgid "- **Description:** A local provider which allows Qiskit to use decision diagram-based quantum simulation"
msgstr "- **내용:** 키스킷에서 의사결정 다이어그램 기반의 양자 시뮬레이션을 가능하게 하는 로컬 제공자"

#: ../../development_strategy.rst
msgid "- **Qiskit Version:** 0.7"
msgstr "- **키스킷 버전:** 0.7"

#: ../../development_strategy.rst
msgid "- **More info:**  `Webpage at JKU <http://iic.jku.at/eda/research/quantum_simulation>`__, `Medium Blog <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>`__ and `GitHub Repo <https://github.com/Qiskit/qiskit-jku-provider>`__"
msgstr "- **추가 정보:**  `JKU 웹페이지 <http://iic.jku.at/eda/research/quantum_simulation>`, `미디움 블로그 (Medium Blog) <https://medium.com/qiskit/classical-simulators-for-quantum-computers-4b994dad4fa2>` 그리고 `깃허브 저장소 <https://github.com/Qiskit/qiskit-jku-provider>`"

#: ../../development_strategy.rst:361
msgid "**Quantum Inspire**"
msgstr "**양자 영감 (Quantum Inspire)**"

#: ../../development_strategy.rst
msgid "- **Organization:** QuTech-Delft"
msgstr "- **기관:** 큐테크-델프트 (QuTech-Delft)"

#: ../../development_strategy.rst
msgid "- **Description:** A provider for the Quantum Inspire backend"
msgstr "- **내용:** 양자 영감 후위 처리 장치를 위한 제공자"

#: ../../development_strategy.rst
msgid "- **More info:** `Medium Blog <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>`__ and `GitHub <https://github.com/QuTech-Delft/quantuminspire>`__."
msgstr "- **추가 정보:** `미디엄 블로그 <https://medium.com/qiskit/quantum-inspire-and-qiskit-f1be608f8955>` 그리고 `깃허브 <https://github.com/QuTech-Delft/quantuminspire>`."

#: ../../development_strategy.rst:371
msgid "Transpiler"
msgstr "트랜스파일러(transpiler)"

#: ../../development_strategy.rst:373
msgid "Circuit optimization is at the heart of making quantum computing feasible on actual hardware. A central component of Qiskit is the transpiler, which is a framework for manipulating quantum circuits according to certain transformations (known as transpiler passes). The transpiler enables users to create customized sets of passes, orchestrated by a pass manager, to transform the circuit according to the rules specified by the passes. In addition, the transpiler architecture is designed for modularity and extensibility, enabling Qiskit users to write their own passes, use them in the pass manager, and combine them with existing passes. In this way, the transpiler architecture opens up the door for research into aggressive optimization of quantum circuits."
msgstr "회로 최적화는 양자 계산이 실제 하드웨어에서 가능하게 만들어주는 핵심 요소이다. 키스킷의 가장 중요한 요소는 (트랜스 파일러 패스들로 알려진) 특정 변환들에 따라 양자 회로를 조작하는 프레임 워크인 트랜스 파일러이다. 이는 사용자 들로 하여금 패스 매니저의 감독아래 각각의 패스에 의해 정해진 규칙을 따라 회로들을 변환하는 패스 명령어 세트를 만들수 있게 해준다. 또한 트랜스파일러 아키텍처는 확장성과 모듈성을 염두해 두고 만들어 졌기에 키스킷 사용자들이 자신의 고유 패스들을 만들고 패스 매니저를 통해 그것을 사용하고 또한 기존의 패스와 합쳐서 사용할 수 있게 해준다. 이러한 방식의 트랜스파일러 아키텍처는 연구자들이 양자 회로의 최적화에 공격적으로 참여할 수 있도록 해준다."

#: ../../development_strategy.rst:385
msgid "Additional passes"
msgstr "추가 통로들"

#: ../../development_strategy.rst:387
msgid "**t|ket〉 optimization & routing pass**"
msgstr "**t|ket〉 최적화 & 경로 통로**"

#: ../../development_strategy.rst
msgid "- **Organization:** Cambridge Quantum Computing"
msgstr "- **기관:** 캠브리지 양자 컴퓨팅"

#: ../../development_strategy.rst
msgid "- **Description:** Transpiler pass for circuit optimization and mapping to backend using CQC's t|ket〉compiler."
msgstr "- **내용:** 시큐시(CQC) t|ket> 컴파일러를 이용해서 회로 최적화 및 후위 처리 장치 맵핑을 하는 트랜스패서 통로."

#: ../../development_strategy.rst
msgid "- **More info:** `Tutorial Notebook <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>`__ and `GitHub <https://github.com/CQCL/pytket>`__."
msgstr "- **추가 정보:** `사용 지침 노트북 <https://github.com/Qiskit/qiskit-tutorials/blob/master/community/aqua/chemistry/QSE_pytket.ipynb>` 그리고 `깃허브 <https://github.com/CQCL/pytket>`."

#: ../../development_strategy.rst:397
msgid "Tools"
msgstr "도구"

#: ../../development_strategy.rst:399
msgid "Extending Qiskit with new tools and functionality is an important part of building a community. These tools can be new visualizations, slack integration, Jupyter extensions and much more."
msgstr "키스킷을 새로운 도구와 기능으로 확장할 수 있는 것은 커뮤니티를 형성하기위한 매우 중요한 요소이다. 이러한 도구들로는 새로운 시각화 도구, 슬랙 (Slack) 연동, 주피터 (Jupyter) 확장툴 등등이 있다."

#: ../../development_strategy.rst:404
msgid "Additional Tools"
msgstr "추가적인 도구들"

#: ../../development_strategy.rst:405
msgid "**OpenControls library**"
msgstr "**열린 통제 (OpenControls) 라이브러리**"

#: ../../development_strategy.rst
msgid "- **Organization:** Q-CTRL"
msgstr "- **기관:** 큐-컨트롤 (Q-CTRL)"

#: ../../development_strategy.rst
msgid "- **Description:** Library of quantum control pulses derived from the open literature."
msgstr "- **내용:** 공개 문헌에 기반한 양자 조절 펄스 라이브러리."

#: ../../development_strategy.rst
msgid "- **More info:**  `GitHub <https://github.com/qctrl/python-open-controls>`__ and `Q-CTRL website <https://q-ctrl.com/products/open-controls/>`__"
msgstr "- **추가 정보:**  `깃허브 <https://github.com/qctrl/python-open-controls>` 그리고 `큐-컨트롤 웹사이트 <https://q-ctrl.com/products/open-controls/>`"

