msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 17:08+0000\n"
"PO-Revision-Date: 2021-04-14 00:56\n"
"Last-Translator: \n"
"Language-Team: Spanish, Mexico\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-MX\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/06_qaoa.po\n"
"X-Crowdin-File-ID: 9454\n"
"Language: es_MX\n"

#: ../../tutorials/algorithms/06_qaoa.ipynb:10
msgid "This page was generated from `tutorials/algorithms/06_qaoa.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/algorithms/06_qaoa.ipynb`__."

#: ../../tutorials/algorithms/06_qaoa.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/06_qaoa.ipynb>`_."
msgstr "Puedes correr esta sección de manera interactiva en el `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/06_qaoa.ipynb>`_."

#: ../../tutorials/algorithms/06_qaoa.ipynb:9
msgid "Quantum Approximate Optimization Algorithm"
msgstr "Algoritmo Cuántico de Optimización Aproximada"

#: ../../tutorials/algorithms/06_qaoa.ipynb:11
msgid "Qiskit has an implementation of the Quantum Approximate Optimization Algorithm `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ and this notebook demonstrates using it for a graph partition problem."
msgstr "Qiskit tiene una implementación del Algoritmo Cuántico de Optimización Aproximada (Quantum Approximate Optimization Algorithm) en `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ y este cuaderno muestra su uso para un problema de partición de grafos."

#: ../../tutorials/algorithms/06_qaoa.ipynb:13
msgid "While QAOA can be directly used it often more convenient to use it in conjunction with the Optimization module. See the Optimization tutorials for more information."
msgstr "Aunque el QAOA puede se usado de manera directa, comúnmente es más conveniente usarlo en conjunto con el modulo de Optimización. Vea los tutoriales de Optimización para más información."

#: ../../tutorials/algorithms/06_qaoa.ipynb:40
msgid "First we create a random graph and draw it so it can be seen."
msgstr "Primero creamos un grafo aleatorio y lo dibujamos para poder verlo."

#: ../../tutorials/algorithms/06_qaoa.ipynb:111
msgid "The brute-force method is as follows. Basically, we exhaustively try all the binary assignments. In each binary assignment, the entry of a vertex is either 0 (meaning the vertex is in the first partition) or 1 (meaning the vertex is in the second partition). We print the binary assignment that satisfies the definition of the graph partition and corresponds to the minimal number of crossing edges."
msgstr "El método de fuerza bruta es el siguiente. Básicamente, intentamos todos las asignaciones binarias de manera exhaustiva. En cada asignación, la entrada del vértice va a ser o 0 (que significa que el vértice esta en la primera partición) o 1 (que significa que el vértice esta en la segunda partición). Imprimimos la asignación binaria que satisface la definición de la partición de grafos y corresponde con el mínimo numero de bordes cruzados."

#: ../../tutorials/algorithms/06_qaoa.ipynb:173
msgid "The graph partition problem can be converted to an Ising Hamiltonian. Qiskit has different capabilities in the Optimization module to do this. Here, since the goal is to show QAOA, the module is used without further explanation to create the operator. The paper `Ising formulations of many NP problems <https://arxiv.org/abs/1302.5843>`__ may be of interest if you would like to understand the technique further."
msgstr "El problema de la partición de gráficas se puede convertir a un Hamiltoniano de Ising. Qiskit tiene diferentes capacidades en el módulo de Optimización para hacer esto. Aquí, dado que el objetivo es mostrar QAOA, el módulo se usa sin más explicación para crear el operador. El artículo `Ising formulations of many NP Problems <https://arxiv.org/abs/1302.5843>`__ puede ser de interés si desea comprender mejor la técnica."

#: ../../tutorials/algorithms/06_qaoa.ipynb:194
msgid "So lets use the QAOA algorithm to find the solution."
msgstr "Entonces, usemos el algoritmo QAOA para encontrar la solución."

#: ../../tutorials/algorithms/06_qaoa.ipynb:252
msgid "The outcome can be seen to match to the value computed above by brute force. But we can also use the classical ``NumPyMinimumEigensolver`` to do the computation, which may be useful as a reference without doing things by brute force."
msgstr "Se puede notar que el resultado coincide con el valor calculado por fuerza bruta. Pero también podemos usar el ``NumPyMinimumEigensolver`` clásico para hacer el calculo, lo cual puede ser útil como referencia sin tener que recurrir a la fuerza bruta."

#: ../../tutorials/algorithms/06_qaoa.ipynb:301
msgid "It is also possible to use VQE as is shown below"
msgstr "También es posible utilizar el VQE como se muestra a continuación"

