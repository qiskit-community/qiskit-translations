msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-22 20:51+0000\n"
"PO-Revision-Date: 2021-04-22 21:18\n"
"Last-Translator: \n"
"Language-Team: Spanish, Mexico\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-MX\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/chemistry/03_ground_state_solvers.po\n"
"X-Crowdin-File-ID: 9404\n"
"Language: es_MX\n"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:10
msgid "This page was generated from `tutorials/chemistry/03_ground_state_solvers.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/chemistry/03_ground_state_solvers.ipynb`__."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/03_ground_state_solvers.ipynb>`_."
msgstr "Puedes correr esta sección de manera interactiva en el `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/03_ground_state_solvers.ipynb>`_."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:9
msgid "Ground state solvers"
msgstr "Solucionadores para el estado base"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:23
msgid "|99b5397947c847b59af7d8cfa7b5b8be|"
msgstr ""

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the ground state calculation interface of Qiskit Chemistry. The goal is to compute the ground state of a molecular Hamiltonian. This Hamiltonian can be electronic or vibronic. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibronic structure tutorials."
msgstr "En este tutorial hablaremos de la interfaz de cálculo del estado base de Qiskit Chemistry. El objetivo es calcular el estado base de un Hamiltoniano molecular. Este Hamiltoniano puede ser electrónico o vibrónico. Para conocer más acerca de la preparación del Hamiltoniano, revisa los tutoriales de estructura Electrónica y Vibrónica."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "El primer paso es definir el sistema molecular. A continuación, pedimos la parte electrónica de una molécula de hidrógeno."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:58
msgid "The Solver"
msgstr "El Solucionador"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:60
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr "Después necesitamos definir un solucionador. El solucionador es el algoritmo mediante el cual el estado base es calculado."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:62
msgid "Let’s first start with a purely classical example: the NumPy minimum eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badly, it can be used on small systems to check the results of the quantum algorithms."
msgstr ""

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:85
msgid "To find the ground state we coul also use the Variational Quantum Eigensolver (VQE) algorithm. The VQE algorithms works by exchanging information between a classical and a quantum computer as depicted in the following figure."
msgstr "Para encontrar el estado base también podríamos usar el algoritmo Variational Quantum Eigensolver (VQE). El algoritmo VQE funciona intercambiando información entre una computadora clásica y una computadora cuántica, cómo se muestra en la siguiente figura."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:87
msgid "|b1dc289befbd49d28250de9c75e82c74|"
msgstr ""

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:89
msgid "Let’s initialize a VQE solver."
msgstr "Inicialicemos un solucionador de VQE."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:116
msgid "To define the VQE solver one needs two essential elements:"
msgstr "Para definir el solucionador de VQE necesitamos dos elementos esenciales:"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:118
msgid "A variational form: here we use the Unitary Coupled Cluster (UCC) ansatz (see for instance [Physical Review A 98.2 (2018): 022322]). Since it is a chemistry standard, a factory is already available allowing a fast initialization of a VQE with UCC. The default is to use all single and double excitations. However, the excitation type (S, D, SD) as well as other parameters can be selected."
msgstr "Una forma variacional: aquí utilizamos el Ansatz del Clúster Unido Unitario (UCC) (ver [Physical Review A 98.2 (2018): 022322]). Ya que es un estándar en la química, una fábrica que permite una rápida inicialización de un VQE con UCC ya está disponible. Por defecto se usan todas las excitaciones simples y dobles. Sin embargo, se pueden seleccionar las excitaciones de tipo (S, D, SD) así como otros parámetros."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:119
msgid "An initial state: the initial state of the qubits. In the factory used above, the qubits are initialized in the Hartree-Fock (see the electronic structure tutorial) initial state (the qubits corresponding to occupied MOs are :math:`|1\\rangle` and those corresponding to virtual MOs are :math:`|0\\rangle`."
msgstr "Un estado inicial: el estado inicial de los qubits. En la fabrica usada anteriormente, los qubits son inicializados al estado inicial de Hartree-Fock (ver el tutorial de estructura electrónica), (los qubits que corresponden a orbitales moleculares ocupados son :math:`|1\\rangle` y los que corresponden a orbitales moleculares virtuales son :math:`|0\\rangle`)."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:120
msgid "The backend: this is the quantum machine on which the right part of the figure above will be performed. Here we ask for the perfect quantum emulator (``statevector_simulator``)."
msgstr "El backend: esta es la máquina cuántica en la cual la parte derecha de la figura anterior va a ser ejecutada. Aquí pedimos el emulador cuántico perfecto (``statevector_simulator``)."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:122
msgid "One could also use any available variational form / initial state or even define one’s own. For instance,"
msgstr "Uno podría usar cualquier forma variacional / estado inicial disponible, o incluso definir uno propio. Por ejemplo,"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:154
msgid "The calculation and results"
msgstr "El cálculo y los resultados"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:156
msgid "We are now ready to run the calculation."
msgstr "Ahora estamos listos para ejecutar el cálculo."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:249
msgid "We can compare the VQE results to the NumPy exact solver and see that they match."
msgstr "Podemos comparar los resultados de VQE con el solucionador exacto de NumPy y ver que sí coinciden."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:340
msgid "Using a filter function"
msgstr "Usando una función filtro"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:351
msgid "Sometimes the true ground state of the Hamiltonian is not of interest because it lies in a different symmetry sector of the Hilbert space. In this case the NumPy eigensolver can take a filter function to return only the eigenstates with for example the correct number of particles. This is of particular importance in the case of vibronic structure calculations where the true ground state of the Hamiltonian is the vacuum state. A default filter function to check the number of particles is implemented in the different transformations and can be used as"
msgstr "A veces el verdadero estado del Hamiltoniano no es de interés ya que yace en un sector de simetría distinto del espacio de Hilbert. En este caso, el NumPy eigensolver puede tomar una función filtro para devolver solo los eigenestados con, por ejemplo, el número correcto de partículas. Esto es de particular importancia en el caso de los cálculos de estructuras vibrónicas donde el estado real del Hamiltoniano es el estado de vacío cuántico. Una función filtro predeterminada para revisar el número de partículas es implementado en las diferentes transformaciones y puede ser usado como"

