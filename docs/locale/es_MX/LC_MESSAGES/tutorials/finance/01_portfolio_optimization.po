msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-03 18:29+0000\n"
"PO-Revision-Date: 2020-09-10 14:08\n"
"Last-Translator: \n"
"Language-Team: Spanish, Mexico\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-MX\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9342\n"
"Language: es_MX\n"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:10
msgid "This page was generated from `tutorials/finance/01_portfolio_optimization.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/finance/01_portfolio_optimization.ipynb`__."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:9
msgid "**Portfolio Optimization**"
msgstr "Optimización de portafolio"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "Este tutorial muestra cómo resolver el siguiente problema de optimización de portafolio de varianza media para activos :math: `n`:"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:25
msgid ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"
msgstr ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:27
msgid "where we use the following notation:"
msgstr "donde usamos la siguiente notación:"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:29
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:` x \\in \\{0, 1 \\}^n` denota el vector de las variables de decisión binarias, los cuales indican qué activos escoger (:math:` x[i] = 1 `) y qué activos no escoger (:math:` x[i] = 0`),"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:30
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` define las devoluciones esperadas para los activos,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:31
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` especifica las covariancias entre los activos,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:32
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` controla el riesgo aceptable del tomador de decisiones,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:33
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr "y :math:`B` denota el presupuesto, es decir, el número de activos a seleccionar de :math:`n`."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:35
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr "Asumimos las siguientes simplificaciones: - todos los activos tienen el mismo precio (normalizado a 1), - el presupuesto completo :math:`B` tiene que ser gastado, es decir, uno tiene tiene que seleccionar exactamente :math: `B` activos."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:37
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Variational Quantum Eigensolver (VQE) or the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal solution for a given set of parameters."
msgstr "La restricción de igualdad :math:`1^T x = B` está mapeada a un término de penalización :math:`(1^T x - B)^2` que está escalada por un parámetro y restada de la función objetivo. El problema resultante se puede mapear a un hamiltoniano cuyo estado base corresponde a la solución óptima. Este cuaderno muestra cómo utilizar el Variational Quantum Eigensolver (VQE) o el Algoritmo de Optimización Aproximada (QAOA) para encontrar la solución óptima para un conjunto dado de parámetros."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:39
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019."
msgstr "Los experimentos en hardware cuántico real para este problema se reportan, por ejemplo, en el siguiente artículo: Mejorando la Optimización Cuántica Variacional usando CVaR. Barkoutsos et al. 2019."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:71
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr "[Optional] Configurar token para ejecutar el experimento en un dispositivo real"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:73
msgid "If you would like to run the experiment on a real device, you need to setup your account first."
msgstr "Si usted quiere ejecutar el experimento en un dispositivo real, primero necesita configurar su cuenta."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:75
msgid "Note: If you do not store your token yet, use ``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr "Nota: Si usted aún no almacena su token, primero utilice ``IBMQ.save_account('MY_API_TOKEN')`` para almacenarlo."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:87
msgid "Define problem instance"
msgstr "Definir instancia del problema"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:89
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "Aquí se crea una instancia de Operador para nuestro Hamiltonio. En este caso los paulis provienen de un Hamiltoniano Ising traducido del problema de portafolio. Nosotros usamos un problema aleatorio de portafolio para este cuaderno. Es sencillo extender esto al uso de datos financieros reales, como se ilustra aquí: `Cargando y Procesando datos de la Serie Horaria del Mercado de Valores <11_time_series.ipynb>`__"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:154
msgid "We define some utility methods to print the results in a nice format."
msgstr "Nosotros definimos algunos métodos de utilidad para imprimir los resultados en un formato agradable."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:196
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (como referencia clásica)"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:198
msgid "Lets solve the problem. First classically..."
msgstr "Vamos a solucionar el problema. Primero clásicamente..."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:200
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for 'ising'. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr "Ahora nosotros podemos utilizar el Operador que construimos arriba sin tener en cuenta los detalles de cómo se creó. Nosotros establecemos el algoritmo para el NumPyMinimumEigensolver de modo que podamos tener una referencia clásica. El problema está configurado para 'ising'. Backend no es necesario ya que esto se calcula clásicamente no se utiliza el cálculo cuántico. El resultado se devuelve como un diccionario."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:284
msgid "Solution using VQE"
msgstr "Solución usando VQE"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:286
msgid "We can now use the Variational Quantum Eigensolver (VQE) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "Ahora nosotros podemos utilizar el Variational Quantum Eigensolver (VQE) para resolver el problema. Nosotros espicificaremos el optimizador y la forma variacional a ser usada."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:288
msgid "Note: You can switch to different backends by providing the name of backend."
msgstr "Nota: Usted puede cambiar a diferentes backends proporcionando el nombre del backend."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:382
msgid "Solution using QAOA"
msgstr "Solución usando QAOA"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:384
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (QAOA). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "Nosotros también mostramos aquí un resultado usando el Algoritmo de Optimización Cuántica Aproximado (QAOA). Este es otro algoritmo variacional y utiliza una forma de variación interna que se crea basándose en el problema."

