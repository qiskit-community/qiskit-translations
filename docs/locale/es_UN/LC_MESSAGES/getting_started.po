msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 15:16\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "Primeros Pasos"

#: ../../getting_started.rst:10
msgid "Installation"
msgstr "Instalación"

#: ../../getting_started.rst:12
msgid "Let's get started using Qiskit!  The first thing to do is choose how you're going to run and install the packages.  There are three main ways to do this:"
msgstr "¡Comencemos a usar Qiskit! Lo primero que debes hacer es elegir cómo vas a ejecutar e instalar los paquetes. Hay tres formas principales de hacer esto:"

#: ../../getting_started.rst
msgid "Start locally"
msgstr "Comenzar localmente"

#: ../../getting_started.rst:19
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "Qiskit es compatible con Python 3.7 o posterior. Sin embargo, tanto Python como Qiskit son ecosistemas en evolución y, a veces, cuando se producen nuevas versiones en uno u otro, puede haber problemas de compatibilidad."

#: ../../getting_started.rst:23
msgid "You will need to `download Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ on your local system to get started. `Jupyter <https://jupyter.org/install>`__ is recommended for interacting with Qiskit."
msgstr "Deberás `descargar Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ en tu sistema local para comenzar. Se recomienda `Jupyter <https://jupyter.org/install>`__ para interactuar con Qiskit."

#: ../../getting_started.rst:27
msgid "We recommend using `Python virtual environments <https://docs.python.org/3.10/tutorial/venv.html>`__ to cleanly separate Qiskit from other applications and improve your experience."
msgstr "Recomendamos utilizar `entornos virtuales de Python <https://docs.python.org/3.10/tutorial/venv.html>`__ para separar claramente Qiskit de otras aplicaciones y mejorar tu experiencia."

#: ../../getting_started.rst:30
msgid "Create a minimal environment with only Python installed in it."
msgstr "Crea un entorno mínimo con solo Python instalado en él."

#: ../../getting_started.rst:36
msgid "Activate your new environment."
msgstr "Activa tu nuevo entorno."

#: ../../getting_started.rst:43
msgid "Note: if you are using Windows, use the following commands in PowerShell."
msgstr "Nota: si estás usando Windows, usa los siguientes comandos en PowerShell."

#: ../../getting_started.rst:51
msgid "Next, install the Qiskit package."
msgstr "A continuación, instala el paquete Qiskit."

#: ../../getting_started.rst:57
msgid "If the packages were installed correctly, you can run ``pip list`` to see the active packages in your virtual environment."
msgstr "Si los paquetes se instalaron correctamente, puedes ejecutar ``pip list`` para ver los paquetes activos en tu entorno virtual."

#: ../../getting_started.rst:60
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr "Si tienes la intención de utilizar la funcionalidad de visualización o los cuadernos de Jupyter, se recomienda instalar Qiskit con el soporte adicional de ``visualization``:"

#: ../../getting_started.rst:67
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr "Vale la pena señalar que si eres usuario de zsh (que es el shell predeterminado en las versiones más recientes de macOS), deberás poner ``qiskit[visualization]`` entre comillas:"

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr "Comenzar en la nube"

#: ../../getting_started.rst:76
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr "Los siguientes proveedores de nube tienen Qiskit preinstalado en sus entornos:"

#: ../../getting_started.rst
msgid "Install from source"
msgstr "Instalar desde el código fuente"

#: ../../getting_started.rst:92
msgid "Installing Qiskit from source allows you to access the current development version, instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr ""

#: ../../getting_started.rst:97
msgid "Begin by making a new virtual environment and activating it:"
msgstr ""

#: ../../getting_started.rst:104
msgid "Installing from source requires that you have the Rust compiler on your system. To install the Rust compiler the recommended path is to use rustup, which is a cross-platform Rust installer. To use rustup you can go to:"
msgstr "La instalación desde el código fuente requiere que tengas el compilador de Rust en tu sistema. Para instalar el compilador de Rust, el camino recomendado es usar rustup, que es un instalador de Rust multiplataforma. Para usar rustup puedes ir a:"

#: ../../getting_started.rst:108
msgid "https://rustup.rs/"
msgstr "https://rustup.rs/"

#: ../../getting_started.rst:110
msgid "which will provide instructions for how to install rust on your platform. Besides rustup there are `other installation methods <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ available too."
msgstr "que proporcionará instrucciones sobre cómo instalar rust en tu plataforma. Además de rustup, también hay `otros métodos de instalación <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ disponibles."

#: ../../getting_started.rst:114
msgid "Once the Rust compiler is installed, you are ready to install Qiskit."
msgstr ""

#: ../../getting_started.rst:116
msgid "Clone the Qiskit repository."
msgstr ""

#: ../../getting_started.rst:122
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr "La clonación del repositorio crea una carpeta local llamada ``qiskit-terra``."

#: ../../getting_started.rst:128
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "Si quieres ejecutar pruebas o verificaciones de linting, instala los requerimientos de desarrollador."

#: ../../getting_started.rst:134
msgid "Install ``qiskit-terra``."
msgstr "Instalar ``qiskit-terra``."

#: ../../getting_started.rst:140
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "Si deseas instalarlo en modo editable, es decir, que los cambios en el código del proyecto no requieran ser instalados de nuevo, puedes hacerlo con:"

#: ../../getting_started.rst:147
msgid "Installing in editable mode will build the compiled extensions in debug mode without optimizations. This will affect the runtime performance of the compiled code. If you'd like to use editable mode and build the compiled code in release with optimizations enabled you can run:"
msgstr "La instalación en modo editable construirá las extensiones compiladas en modo de depuración sin optimizaciones. Esto afectará el rendimiento en tiempo de ejecución del código compilado. Si deseas utilizar el modo editable y construir el código compilado que está publicado, con las optimizaciones habilitadas, puedes ejecutar:"

#: ../../getting_started.rst:156
msgid "after you run pip and that will rebuild the binary in release mode. If you are working on Rust code in Qiskit you will need to rebuild the extension code every time you make a local change. ``pip install -e .`` will only build the Rust extension when it's called, so any local changes you make to the Rust code after running pip will not be reflected in the installed package unless you rebuild the extension. You can leverage the above ``build_rust`` command to do this (with or without ``--release`` based on whether you want to build in debug mode or release mode)."
msgstr "después de ejecutar pip y eso reconstruirá el binario en modo de liberación. Si estás trabajando en el código de Rust en Qiskit, necesitarás reconstruir el código de extensión cada vez que realices un cambio local. ``pip install -e .`` solo compilará la extensión de Rust cuando sea ejecutado, por lo que cualquier cambio local que hagas en el código de Rust después de ejecutar pip no se reflejará en el paquete instalado a menos que reconstruyas la extensión. Puedes aprovechar el comando anterior ``build_rust`` para hacer esto (con o sin ``--release`` en función de si deseas compilar en modo de depuración o modo de liberación)."

#: ../../getting_started.rst:165
msgid "You can then run the code examples after installing Qiskit. You can run the example with the following command."
msgstr ""

#: ../../getting_started.rst:175
msgid "Platform Support"
msgstr "Soporte de la Plataforma"

#: ../../getting_started.rst:177
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit se esfuerza por admitir tantas plataformas como sea posible, pero debido a las limitaciones en los recursos de prueba disponibles y la disponibilidad de la plataforma, no todas las plataformas son compatibles. El soporte de plataforma para Qiskit se divide en 3 niveles con diferentes grados de soporte para cada nivel. Para plataformas fuera de estas, es probable que Qiskit todavía se pueda instalar, pero no se ha probado y tendrás que compilar Qiskit (y probablemente las dependencias de Qiskit) desde la fuente."

#: ../../getting_started.rst:184
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "Además, Qiskit solo es compatible con CPython. Actualmente, no se admite la ejecución con otros intérpretes de Python."

#: ../../getting_started.rst:188
msgid "Tier 1"
msgstr "Nivel 1"

#: ../../getting_started.rst:190
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "Las plataformas compatibles con el nivel 1 se prueban completamente en upstream como parte de los procesos de desarrollo para garantizar que cualquier cambio propuesto funcione correctamente. Los binarios precompilados se construyen, prueban y publican en PyPI como parte del proceso de lanzamiento. Se espera que estas plataformas se puedan instalar con solo un entorno de Python en funcionamiento, ya que todas las dependencias están disponibles en estas plataformas."

#: ../../getting_started.rst:196
msgid "Tier 1 platforms are currently:"
msgstr "Las plataformas de nivel 1 actualmente son:"

#: ../../getting_started.rst:198
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)."
msgstr ""

#: ../../getting_started.rst:201
msgid "macOS x86_64 (10.9 or newer)"
msgstr "macOS x86_64 (10.9 o superior)"

#: ../../getting_started.rst:202
msgid "Windows 64 bit"
msgstr "Windows 64 bit"

#: ../../getting_started.rst:205
msgid "Tier 2"
msgstr "Nivel 2"

#: ../../getting_started.rst:207
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "Las plataformas de nivel 2 no se prueban en upstream como parte del proceso de desarrollo. Sin embargo, los binarios precompilados se construyen, prueban y publican en PyPI como parte del proceso de lanzamiento y se puede esperar que estos paquetes se instalen solo con un entorno de Python en funcionamiento."

#: ../../getting_started.rst:212
msgid "Tier 2 platforms are currently:"
msgstr "Las plataformas de nivel 2 actualmente son:"

#: ../../getting_started.rst:214
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Linux i686 (distribuciones compatibles con la especificación de empaquetado `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__) para Python < 3.10"

#: ../../getting_started.rst:217
msgid "Windows 32 bit for Python < 3.10"
msgstr "Windows 32 bit para Python < 3.10"

#: ../../getting_started.rst:218
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64 (distribuciones compatibles con la especificación de empaquetado `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__)"

#: ../../getting_started.rst:223
msgid "Tier 3"
msgstr "Nivel 3"

#: ../../getting_started.rst:225
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "Las plataformas de nivel 3 no se prueban en upstream como parte del proceso de desarrollo. Los binarios precompilados se construyen y publican en PyPI como parte del proceso de lanzamiento, sin ninguna prueba. Es posible que no se puedan instalar solo con un entorno de Python en funcionamiento y pueden requerir un compilador C/C++ o programas adicionales para crear dependencias desde el origen como parte del proceso de instalación. El soporte para estas plataformas es únicamente de mejores intenciones."

#: ../../getting_started.rst:232
msgid "Tier 3 platforms are currently:"
msgstr "Las plataformas de nivel 3 actualmente son:"

#: ../../getting_started.rst:234
msgid "Linux ppc64le (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux ppc64le (distribuciones compatibles con la especificación de empaquetado `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__)"

#: ../../getting_started.rst:237
msgid "Linux s390x (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux s390x (distribuciones compatibles con la especificación de empaquetado `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__)"

#: ../../getting_started.rst:240
msgid "macOS arm64 (10.15 or newer)"
msgstr "macOS arm64 (10.15 o superior)"

#: ../../getting_started.rst:241
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Linux i686 (distribuciones compatibles con la especificación de empaquetado `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__) para Python >= 3.10"

#: ../../getting_started.rst:244
msgid "Windows 32 bit for Python >= 3.10"
msgstr "Windows 32 bit para Python >= 3.10"

#: ../../getting_started.rst:247
msgid "Ready to get going?..."
msgstr "¿Listo para empezar?..."

