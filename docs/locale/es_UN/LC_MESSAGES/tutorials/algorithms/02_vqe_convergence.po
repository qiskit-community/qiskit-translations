msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-06-28 18:45\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_convergence.po\n"
"X-Crowdin-File-ID: 9446\n"
"Language: es_UN\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr "Esta página fue generada a partir de ` tutorials/algorithms/02_vqe_convergence.ipynb ` __."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr "Monitoreo de la convergencia de VQE"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid "Variational algorithms in Qiskit, like `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ and `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, provide the option for a user to give a callback method that can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "Algoritmos variacionales en Qiskit, como `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ y `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, proporcionan la opción para que un usuario otorgue un método de retrollamada que se puede usar para monitorear el progreso de la optimización a medida que el algoritmo se ejecuta y converge al mínimo. El optimizador invoca la retrollamada para cada evaluación funcional y proporciona el valor actual del optimizador, el recuento de evaluaciones, los parámetros actuales del optimizador, etc. Ten en cuenta que, dependiendo del optimizador específico, esto puede no ser cada iteración (paso) del optimizador, por ejemplo si el optimizador está llamando a la función de costo para calcular un gradiente basado en diferencias finitas, esto será visible a través de la retrollamada."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid "This notebook demonstrates using Qiskit’s VQE algorithm to plot graphs of the convergence path to ground state energy with a selected set of optimizers."
msgstr "Este cuaderno demuestra cómo utilizar el algoritmo VQE de Qiskit para generar gráficas de la ruta de convergencia a la energía de estado fundamental con un conjunto seleccionado de optimizadores."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:43
msgid "First we create a qubit operator for VQE. Here we will use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Nature for an H2 molecule."
msgstr "Primero creamos un operador de qubits para VQE. Aquí usaremos el mismo operador que se usó en la introducción de los algoritmos, que originalmente fue calculado por Qiskit Nature para una molécula de H2."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:68
msgid "We will show the callback usage below over a set of optimizers for comparison. The minimum energy of the H2 Hamiltonian can be found quite easily so we are able to set maxiters to a small value"
msgstr "A continuación, mostraremos el uso del callback sobre un conjunto de optimizadores para comparar. La energía mínima del Hamiltoniano de H2 es fácil de encontrar por lo que podemos fijar maxiters —valor máximo de iteraciones— a un valor pequeño."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:128
msgid "Now from the callback data we stored we can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr "Ahora, de la información que guardamos del callback, podemos graficar los valores de energía en los puntos en los que cada optimizador llama a la función objetivo. Un optimizador que usa el método de diferencia finita para encontrar el gradiente tiene la grafica que cambia cómo en pasos, donde para un numero de evaluaciones, está utilizando puntos cercanos para establecer un gradiente (los puntos cercanos que tienen valores muy similares para los cuales su diferencia no puede observarse en la escala de la gráfica aquí)."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:163
msgid "Finally since the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value for the solution. We can now plot the difference from the resultant exact solution as the energy converges with VQE towards the minimum value which should be that exact classical solution."
msgstr "Finalmente, ya que el problema anterior se puede resolver fácilmente de manera clásica, podemos usar NumPyMinimumEigensolver para calcular una referencia para el valor de la solución. Ahora podemos graficar la diferencia de la solución exacta mientras la energía calculada con VQE converge al valor mínimo, que debería de ser la solución calculada clásicamente."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:232
msgid "Using Gradient framework"
msgstr "Utilizando la estructura del Gradiente"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:234
msgid "Qiskit now has a Gradient framework as part of the Opflow capability. With the gradient computed for the optimizer we now see just the optimization steps themselves."
msgstr "Qiskit ahora tiene un framework de gradiente como parte de la capacidad de Opflow. Con el gradiente calculado para el optimizador, ahora vemos solo los pasos de optimización en sí."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:315
msgid "Monitoring via the logging"
msgstr "Monitoreo a través de los registros"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:317
msgid "Much of the code is instrumented with `Python logging <https://docs.python.org/3/library/logging.html>`__ statements. The logging is configurable to adjust level of logging etc. Here we set the logging level to ``INFO``"
msgstr "Gran parte del código está instrumentado con declaraciones de `Python logging <https://docs.python.org/3/library/logging.html>`__. El logging se puede configurar para ajustar el nivel de registro, etc. Aquí configuramos el nivel de registro en ``INFO``"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:340
msgid "and at INFO level logging VQE will include information on the evaluations, as below."
msgstr "y al nivel INFO el logging del VQE incluirá información sobre las evaluaciones, como es mostrado en seguida."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:342
msgid "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"
msgstr "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"

