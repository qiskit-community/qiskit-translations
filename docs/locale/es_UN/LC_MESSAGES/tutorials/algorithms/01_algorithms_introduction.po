msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-10-15 19:05\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"
"Language: es_UN\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Introducción a algoritmos en Qiskit"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "¿Cómo está estructurada la librería de algoritmos?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Linear Solvers`` for linear systems of equations problems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr "Qiskit provee un número de `Algoritmos <https://qiskit.org/documentation/apidoc/algorithms.html>`__ y son agrupados por categoría de acuerdo con la tarea que pueden realizar. Por ejemplo: ``Minimum Eigensolvers`` puede usarse para encontrar el eigenvalor más pequeño de un operador, un ejemplo sería la energía del estado base de un Hamiltoniano en química o la solución a un problema de optimización cuando es expresado como un Hamiltoniano tipo Ising. Existen ``Linear Solvers`` para sistemas de ecuaciones lineales y ``Amplitude Estimators`` para estimar valores que pueden ser usados en aplicaciones financieras. El conjunto completo de categorías puede encontrarse en el link de la documentación de algoritmos presentado anteriormente."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr "Los algoritmos son configurables y, a menudo, parte de la configuración será en forma de bloques de construcción más pequeños, de los cuales se pueden dar diferentes instancias del tipo de bloque de construcción. Por ejemplo, con ``VQE``, el Variacional Quantum Eigensolver, se necesita una función de onda de prueba, en forma de un ``QuantumCircuit`` y un optimizador clásico, entre otras cosas."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let’s take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "Veamos un ejemplo para construir una instancia de VQE. Aquí \"TwoLocal\" es lo que se conoce como la forma variacional (función de onda de prueba), que es un circuito parametrizado que puede ser variado y \"SLSQP\" es un optimizador clásico. Ambos son creados como distintas instancias y son introducidos al VQE cuando este es construido. Si quieres intentar, por ejemplo, con un distinto optimizador o distinta forma variacional solo es cosa de crear una instancia nueva de lo que quieras hacer e introducirlo al VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:58
msgid "Let’s draw the ansatz so we can see it’s a QuantumCircuit where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We’ll come back to the parameters later in a working example below."
msgstr "Dibujemos el ansatz para que podamos ver que es un QuantumCircuit donde θ[0] a θ[7] van a ser parámetros que serán variados mientras que el optimizador VQE encuentra el mínimo eigenvalor. Volveremos a revisar los parámetros más adelante en un ejemplo."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:124
msgid "But more is needed before we can run the algorithm so let’s get to that next."
msgstr "Pero se necesita más para poder ejecutar un algoritmo, así que, vamos a ello a continuación."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:136
msgid "How to run an algorithm?"
msgstr "¿Cómo ejecutar un algoritmo?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:138
msgid "In order to run an algorithm we need to have backend, a simulator or real device, on which the circuits that comprise the algorithm can be run. So for example we can use the ``aer_simulator_statevector`` from the Aer provider."
msgstr "Para ejecutar un algoritmo necesitamos tener un backend, un simulador o un dispositivo real, en el que se puedan ejecutar los circuitos que componen el algoritmo. Entonces, por ejemplo, podemos usar el ``aer_simulator_statevector`` del proveedor Aer."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:161
msgid "Now a backend on its own does not have information on how you might want to run the circuits etc. For example how many shots, do you want a noise model, even options around transpiling the circuits. For this Qiskit Terra has a `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ which is provided both the backend as well as various settings around the circuit processing and execution so for instance:"
msgstr "Ahora, un backend por sí solo no tiene información sobre cómo es que se desean ejecutar los circuitos, etc. Por ejemplo, cuántas iteraciones, si deseas un modelo de ruido, incluso opciones para transpilar los circuitos. Para esto, Qiskit Terra tiene un `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ al cual se le proporciona tanto el backend como varias configuraciones alrededor del procesamiento y ejecución del circuito, entonces por ejemplo:"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:185
msgid "Note: if you provide the backend directly then internally a QuantumInstance will be created from it, with default settings, so at all times the algorithms are working through a QuantumInstance."
msgstr "Nota: si proporcionas el backend directamente, un QuantumInstance con configuración predeterminada va a ser creado a partir de este, de esta manera los algoritmos siempre funcionan a través de un QuantumInstance."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:187
msgid "So now we would be able to call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr "Así que ahora podríamos llamar al método `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__. Esta última es la interfaz de elección para los módulos de la aplicación, como Nature y Optimization, para que puedan funcionar indistintamente con cualquier algoritmo dentro de la categoría específica."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:199
msgid "A complete working example"
msgstr "Un ejemplo funcional completo"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:201
msgid "Let’s put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It’s a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr "Juntemos lo que hemos aprendido anteriormente y creemos un ejemplo de trabajo completo. VQE encontrará el valor propio mínimo, es decir, el valor mínimo de energía de un operador Hamiltoniano y, por lo tanto, necesitamos dicho operador para que VQE funcione. Dicho operador se da a continuación. Esto fue creado originalmente por el módulo de aplicación Nature como el Hamiltoniano para una molécula de H2 a una distancia interatómica de 0,735A. Es una suma de términos de Pauli como se muestra a continuación, pero por ahora no voy a decir nada más al respecto, ya que el objetivo es ejecutar el algoritmo, pero se puede encontrar más información sobre los operadores en otros tutoriales."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:229
msgid "So let’s build a VQE instance passing a backend using a QuantumInstance, to the constructor. Now VQE does have setters so the QuantumInstance can also be passed later."
msgstr "Así que construyamos una instancia de VQE pasando un backend usando QuantumInstance, al constructor. Ahora VQE tiene setters, por lo que QuantumInstance también se puede indicar más tarde."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:231
msgid "Note: In order that you can run this notebook and see the exact same output the random number generator used throughout algorithms in algorithms_globals, as well as the transpiler and simulator, via the QuantumInstance, are seeded. You do not have to do this but if want to be able to reproduce the exact same outcome each time then this is how it’s done."
msgstr "Nota: Para que puedas ejecutar este cuaderno y ver exactamente la misma salida, se usa la misma semilla en el generador de números aleatorios utilizado en los algoritmos en algorithms_globals, así como el transpilador y el simulador, a través de QuantumInstance. No tienes que hacer esto, pero si deseas poder reproducir exactamente el mismo resultado cada vez, así es como se hace."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:233
msgid "So let’s run VQE and print the result object it returns."
msgstr "Ahora corramos el VQE e imprimamos el objeto que devuelve como resultado."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:316
msgid "From the above result we can see it took the optimizer ``65`` evaluations of parameter values until it found the minimum eigenvalue of ``-1.85727`` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr "A partir del resultado anterior, podemos ver que tomó el optimizador ``65`` evaluaciones de los valores de los parámetros hasta que encontró el valor propio mínimo de ``-1.85727``, que es la energía del estado fundamental electrónico de la molécula de H2 dada. También se pueden ver los parámetros óptimos del ansatz que son los valores que estaban en el ansatz en el valor mínimo."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:328
msgid "Using VQE setting QuantumInstance after Construction"
msgstr "Uso de la configuración de QuantumInstance dentro de VQE después de la Construcción"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:330
msgid "To close off let’s also create a VQE instance without supplying the QuantumInstance. We later set it as long as by the time VQE runs it has a QuantumInstance to use."
msgstr "Para cerrar, creemos también una instancia de VQE sin suministrar QuantumInstance. Más tarde lo configuramos siempre y cuando el momento en el que se ejecute VQE tenga una QuantumInstance lista para usar."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:413
msgid "As the identical seeding was used as the prior example the result can be seen to be the same."
msgstr "Cómo se utilizó exactamente la misma semilla (seed) qué en el ejemplo anterior, se puede observar que el resultado es el mismo."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:424
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "Esto concluye esta introducción a algoritmos en Qiskit. Por favor revisa otros de los tutoriales de algoritmos de esta serie para encontrar más explicaciones más a profundidad de los algoritmos."

