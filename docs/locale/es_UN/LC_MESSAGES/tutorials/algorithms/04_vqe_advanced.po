msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-10 14:06+0000\n"
"PO-Revision-Date: 2021-06-22 23:23\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/04_vqe_advanced.po\n"
"X-Crowdin-File-ID: 9450\n"
"Language: es_UN\n"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:10
msgid "This page was generated from `tutorials/algorithms/04_vqe_advanced.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/algorithms/04_vqe_advanced.ipynb`__."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/04_vqe_advanced.ipynb>`_."
msgstr "Puedes correr esta sección de manera interactiva en el `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/04_vqe_advanced.ipynb>`_."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:9
msgid "Advanced VQE usage"
msgstr "Uso avanzado del VQE"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:11
msgid "There exist several parameters for configuring and using more advanced `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ capabilities. This tutorial will cover the parameters such as ``initial point``, ``expectation`` and ``gradient``."
msgstr "Existen varios parámetros para configurar y utilizar capacidades más avanzadas de `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__. Este tutorial cubrirá los parámetros como ``punto inicial``, ``expectativa`` y ``gradiente``."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:13
msgid "It will also cover advanced simulator use such as using Aer with the Matrix Product State method."
msgstr "También cubrirá el uso avanzado del simulador, tal como el uso de Aer con el método de tren de tensores —también conocido como Matriz Product State o MPS."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:39
msgid "Here we will use the same operator as used in the other VQE algorithms tutorials."
msgstr "Aquí usaremos el mismo operador que se uso en los otros tutoriales de algoritmos VQE."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:65
msgid "Initial point"
msgstr "Punto inicial"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:67
msgid "The ``initial_point`` parameter allows the optimization to begin at the given point, where the point is a list of parameters that will configure the ansatz. By default the initial point is ``None`` which means that VQE will choose one. The choice in in this case is if the supplied ansatz has a preferred point, based on the initial state provided to it, then this will be chosen, otherwise a random initial point that fits with any bounds the ansatz has will be chosen. If an initial point is supplied it will take priority though and be used - note though it must match in length to the number of parameters in the ansatz circuit."
msgstr "El parámetro ``initial_point`` permite que la optimización comience en el punto dado, donde el punto es una lista de parámetros que configurarán el ansatz. Por defecto, el punto inicial es ``None``, lo que significa que VQE elegirá uno. En este caso, la elección es si el ansatz proporcionado tiene un punto preferido, basado en el estado inicial que se le proporcionó, entonces se elegirá este; de lo contrario, se elegirá un punto inicial aleatorio que se ajuste a cualquier límite que tenga el ansatz. Sin embargo, si se proporciona un punto inicial, tendrá prioridad y se usará; tenga en cuenta que debe coincidir en longitud con el número de parámetros en el circuito ansatz."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:70
msgid "Why to use a initial point? One reason would be if you have guess a reasonable starting point for the problem or perhaps know have information from a prior experiment."
msgstr "¿Por qué usar un punto inicial? Una razón puede ser que ya tengas una idea razonable de un punto inicial para el problema, o quizá tengas información de un experimento anterior."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:72
msgid "To demonstrate the use let’s first simply repeat the first working example from the `algorithms introduction <01_algorithms_introduction.ipynb#A-complete-working-example>`__ tutorial to get a solution’s optimal point."
msgstr "Para mostrar su uso, primero hay que repetir el primer ejemplo del tutorial `introducción a algoritmos <01_algorithms_introduction.ipynb#A-complete-working-example>`__ para obtener el punto optimo de una solución."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:155
msgid "Now we can take the ``optimal_point`` from the above result and use it as the ``initial_point`` here."
msgstr "Ahora podemos tomar el ``optimal_point``del resultado de arriba y usarlo como el ``initial_point`` aquí."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:245
msgid "Here we see that result was arrived at much more quickly with ``optimizer_evals`` when it started from a random value when the initial point was not supplied (default of None)."
msgstr "Aquí vemos que se llegó al resultado mucho más rápido con ``optimizer_evals`` cuando comenzó a partir de un valor aleatorio cuando no se proporcionó el punto inicial (valor predeterminado de None)."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:247
msgid "Where this becomes useful for examples where we the solution to one problem can be used to for a guess for the solution to a very close similar problem. Chemistry is very good example where we change the inter-atomic distance(s) of molecule to plot a dissociation profile. When the distance changes are small we expect the solution to still be nearby the prior one. One technique is to simply use the optimal point from one solution as the starting point for the next step. Now more complex techniques are possible that do some extrapolation to compute an initial position based on prior solution(s) rather than directly use the prior solution."
msgstr "Donde esto se vuelve útil para ejemplos en los que la solución a un problema se puede usar para adivinar la solución a un problema similar muy cercano. La química es un muy buen ejemplo en el que cambiamos las distancias interatómicas de la molécula para trazar un perfil de disociación. Cuando los cambios de distancia son pequeños, esperamos que la solución aún esté cerca de la anterior. Una técnica consiste simplemente en utilizar el punto óptimo de una solución como punto de partida para el siguiente paso. Ahora son posibles técnicas más complejas que hacen alguna extrapolación para calcular una posición inicial basada en soluciones anteriores en lugar de usar directamente la solución anterior."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:260
msgid "Expectation"
msgstr "Valor Esperado"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:262
msgid "The energy of the Hamiltonian operator that VQE is working on is the expectation value when evaluated with the parameterized ansatz. To compute the expectation value VQE uses an instance of an `expectation <https://qiskit.org/documentation/apidoc/qiskit.opflow.expectations.html>`__ object. Such an instance may be supplied via the ``expectation`` parameter, or in the default case, where it has a value of ``None``, VQE will use the `ExpectationFactory <https://qiskit.org/documentation/stubs/qiskit.opflow.expectations.ExpectationFactory.html>`__ to create itself a suitable instance based on the supplied backend."
msgstr "La energía del operador Hamiltoniano en el que está trabajando VQE es el valor esperado cuando se evalúa con el ansatz parametrizado. Para calcular el valor esperado, VQE usa una instancia de un objeto `expectation <https://qiskit.org/documentation/apidoc/qiskit.opflow.expectations.html>`__. Dicha instancia se puede suministrar a través del parámetro ``expectation``, o en el caso predeterminado, donde tiene un valor de ``None``, VQE utilizará la `ExpectationFactory <https://qiskit.org/documentation/stubs/qiskit.opflow.expectations.ExpectationFactory.html>`__ para crear una instancia adecuada basada en el backend proporcionado."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:265
msgid "For most cases letting VQE create a suitable instance is sufficient. However the Qiskit Aer aer_simulator supports a snapshot instruction that can be used in conjunction with the operator expectation computation. If used then the outcome is ideal, i.e. like the statevector simulator, and has no shot noise. Since people normally choose the aer_simulator to have shot noise (sampling noise), and be more like a real-device outcome, VQE has an ``include_custom`` flag that is passed on to the ExpectationFactory. When using Aer qasm simulator, and this is set ``True``, the factory will return ``AerPauliExpectation`` which uses the snapshot instruction, when ``False``, default, then the regular ``PauliExpectation`` is returned."
msgstr "En la mayoría de los casos, es suficiente dejar que VQE cree una instancia adecuada. Sin embargo, el aer_simulator de Qiskit Aer admite una copia de instrucción que se puede utilizar junto con el cálculo del valor de expectación del operador. Si se usa, el resultado es ideal, es decir, como el simulador de vector de estado, y no tiene ruido por la iteración. Dado que las personas normalmente eligen aer_simulator para tener ruido de iteración (ruido de muestreo) y ser más como un resultado de dispositivo real, VQE tiene un indicador ``include_custom`` que se transmite a ExpectationFactory. Cuando se usa el simulador qasm de Aer, y esto se establece en ``True``, la fábrica devolverá ``AerPauliExpectation`` que usa la copia de la instrucción, cuando es ``False``, por defecto, luego se devuelve la ``PauliExpectation`` normal."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:268
msgid "The following example shows ``include_custom=True`` where the outcome matches the statevector simulator. In fact it can be better/faster to do this than use the statevector_simulator directly. This is because in the latter case when the Hamiltonian is a sum of Paulis it must be converted to matrix form, and this is avoided when using the snapshot instruction done when include_custom is True."
msgstr "El siguiente ejemplo muestra ``include_custom=True`` donde el resultado coincide con el simulador de vectores de estado. De hecho, puede ser mejor/más rápido hacer esto en lugar de utilizar el statevector_simulator directamente. Esto es porque, cuando el Hamiltoniano es una suma de matrices de Pauli, este debe ser convertido a forma matricial y al usar la instrucción snapshot cuando include_custom es True, esto es evitado."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:350
msgid "In case you have doubts here is the aer_simulator again but include_custom has been left to default to False. The optimization ended abruptly, presumably due to the shot noise confusing the SLSQP optimizer."
msgstr "En caso de que tengas dudas, aquí está el aer_simulator nuevamente, pero include_custom se ha dejado por defecto en False. La optimización terminó abruptamente, presumiblemente debido a que el ruido de la iteración confundió al optimizador SLSQP."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:443
msgid "Changing the optimizer to SPSA, which is designed to work in noisy environments, gets us a better result. Though the noise has affected the outcome so it’s not as accurate."
msgstr "Cambiar el optimizador a SPSA, que esta diseñado para trabajar en ambientes con ruido nos da un mejor resultado. Pero el ruido afectó el resultado entonces no es tan preciso."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:524
msgid "As mentioned above, an expectation object can be explicitly given (so the internal ``ExpectationFactory`` and include_custom are never used/needed. Below we create an ``AerPauliExpectation`` and pass this to VQE. We can see the result matches that above where we set include_custom to True and let VQE create its own expectation object."
msgstr "Como se menciono anteriormente, el objeto de valor esperado puede ser dado explícitamente (para que ``ExpectationFactory`` y include_custom nunca sean usados/necesitados). A continuación creamos \n"
" ``AerPauliExpectation`` y lo pasamos a VQE. Podemos ver que el resultado coincide con el que obtuvimos arriba cuando establecimos include_custom como True y dejamos que VQE creara su propio valor esperado."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:606
msgid "By default, the ``PauliExpectation`` object, that would have be chosen when include_custom is False (or when using Aer aer_simulator, or a real device) groups Paulis into commuting sets. This is efficient as it runs less circuits to compute the expectation. However, if for some reason you wanted to run a circuit for each Pauli then then grouping can be turned off when constructing the PauliExpectation. You need to explicitly pass in such an expectation instance to VQE to have it work this way though as shown below."
msgstr "De forma predeterminada, el objeto ``PauliExpectation``, que se habría elegido cuando include_custom es False (o cuando se usa aer_simulator de Aer, o un dispositivo real) agrupa a Paulis en conjuntos de conmutación. Esto es eficiente ya que ejecuta menos circuitos para calcular el valor de expectación. Sin embargo, si por alguna razón deseas ejecutar un circuito para cada Pauli, entonces la agrupación puede desactivarse al construir la PauliExpectation. Debes pasar explícitamente dicha instancia de expectación a VQE para que funcione de esta manera, como se muestra a continuación."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:690
msgid "Gradient"
msgstr "Gradiente"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:692
msgid "Optimizers that use a gradient-based technique can be supplied with a user defined gradient that will be used instead of their default gradient computation which is usually done by simple finite difference. Gradients are passed indirectly via to the optimizer via its ``gradient`` parameter."
msgstr "A los optimizadores que utilizan técnicas basadas en gradientes se les puede suministrar un gradiente definido por el usuario que va a ser usado en vez del gradiente definido por defecto que normalmente es calculado mediante una diferencia finita. Los gradientes pueden ser pasados indirectamente a través del optimizador mediante su parámetro ``gradient``."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:694
msgid "As the use of a user supplied ``gradient`` was shown in the `Monitoring VQE Convergence <02_vqe_convergence.ipynb#Using-Gradient-framework>`__ tutorial I will simply refer you there. Also the `Gradients framework <../operators/02_gradients_framework.ipynb>`__ tutorial has much more about the gradients themselves."
msgstr "Como el uso de un gradiente suministrado por el usuario fue explicado en el tutorial `Monitoreo de la convergencia de VQE <02_vqe_convergence.ipynb#Using-Gradient-framework>`__ simplemente haré referencia a el. También el tutorial `Estructura de los gradientes <../operators/02_gradients_framework.ipynb>`__ tiene mucho más material acerca de los gradientes."

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:706
msgid "Quantum Instance and advanced simulation"
msgstr "Quantum Instance y simulación avanzada"

#: ../../tutorials/algorithms/04_vqe_advanced.ipynb:708
msgid "While you may be familiar with passing a QuantumInstancen created from a ``aer_simulator_statevector`` a ``aer_simulator`` or real device backend, it is possible to use the advanced simulation modes of Aer too when applicable. For instance we can easily use the Aer `Matrix Product State <../simulators/7_matrix_product_state_method.ipynb>`__ method, that has the potential to scale to larger numbers of qubits."
msgstr "Si bien es posible que estés familiarizado con la transmisión de una QuantumInstancen creada a partir de un ``aer_simulator_statevector``, un ``aer_simulator`` o el backend de un dispositivo real, también es posible utilizar los modos de simulación avanzados de Aer cuando corresponda. Por ejemplo, podemos usar fácilmente el método de Aer `Matrix Product State <../simulators/7_matrix_product_state_method.ipynb>`__, que tiene el potencial de escalar a un mayor número de qubits."

