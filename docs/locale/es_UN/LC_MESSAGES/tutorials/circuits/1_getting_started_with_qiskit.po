msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 15:15\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/circuits/1_getting_started_with_qiskit.po\n"
"X-Crowdin-File-ID: 9114\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/circuits/1_getting_started_with_qiskit.ipynb`__."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:9
msgid "Getting Started with Qiskit"
msgstr "Primeros Pasos con Qiskit"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. The fundamental package of Qiskit is Terra that provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Execute**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Execute** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Aquí, proporcionamos una descripción general del trabajo con Qiskit. El paquete fundamental de Qiskit es Terra que proporciona los bloques de construcción básicos necesarios para programar computadoras cuánticas. La unidad fundamental de Qiskit es el `circuito cuántico <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Un flujo de trabajo básico con Qiskit consta de dos etapas: **Construir** y **Ejecutar**. **Construir** te permite crear diferentes circuitos cuánticos que representan el problema que estás resolviendo, y **Ejecutar** te permite ejecutarlos en diferentes backends. Una vez que se han ejecutado los trabajos, los datos se recopilan y se procesan posteriormente según la salida deseada."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:36
msgid "Circuit Basics"
msgstr "Conceptos Básicos de un Circuito"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:39
msgid "Building the circuit"
msgstr "Construcción del circuito"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:41
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "El elemento básico necesario para tu primer programa es el QuantumCircuit. Comenzamos creando un ``QuantumCircuit`` compuesto por tres qubits."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:63
msgid "After you create the circuit with its registers, you can add gates (\"operations\") to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr "Después de crear el circuito con sus registros, puedes agregar compuertas (\"operaciones\") para manipular los registros. A medida que avances en los tutoriales, encontrarás más compuertas y circuitos; a continuación, se muestra un ejemplo de un circuito cuántico que genera un estado GHZ de tres qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:65
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:67
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit :math:`q_{0}`, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A controlled-Not operation (:math:`C_{X}`) between qubit :math:`q_{0}` and qubit :math:`q_{1}`. - A controlled-Not operation between qubit :math:`q_{0}` and qubit :math:`q_{2}`."
msgstr "Para crear tal estado, comenzamos con un registro cuántico de tres qubits. De forma predeterminada, cada qubit en el registro se inicializa en :math:`|0\\rangle`. Para hacer el estado GHZ, aplicamos las siguientes compuertas: - Una puerta Hadamard :math:`H` en qubit :math:`q_{0}`, que lo pone en el estado de superposición :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - Una operación Not controlada (:math:`C_{X}`) entre el qubit :math:`q_{0}` y el qubit :math:`q_{1}`. - Una operación Not controlada entre el qubit :math:`q_{0}` y el qubit :math:`q_{2}`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:70
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "En una computadora cuántica ideal, el estado producido al ejecutar este circuito sería el estado GHZ anterior."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:72
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr "En Qiskit, las operaciones se pueden agregar al circuito una por una, como se muestra a continuación."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:126
msgid "Visualize Circuit"
msgstr "Visualizar el circuito"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:128
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Puedes visualizar tu circuito usando ``QuantumCircuit.draw()`` de Qiskit, que dibuja el circuito en la forma que se encuentra en muchos libros de texto."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:187
msgid "In this circuit, the qubits are put in order, with qubit :math:`q_{0}` at the top and qubit :math:`q_{2}` at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr "En este circuito, los qubits son ordenados, con el qubit :math:`q_{0}` en la parte superior y el qubit :math:`q_{2}` en la parte inferior. El circuito se lee de izquierda a derecha (lo que significa que las compuertas que se aplican antes en el circuito aparecen más a la izquierda)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:202
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Al representar el estado de un sistema de varios qubits, el orden de los productos tensoriales utilizado en Qiskit es diferente al utilizado en la mayoría de los libros de texto de física. Supongamos que hay :math:`n` qubits, y el qubit :math:`j` está etiquetado como :math:`Q_{j}`. Qiskit usa un orden en el que el qubit :math:`n^{\\mathrm{th}}` está en el lado izquierdo del producto tensorial, de modo que los vectores base están etiquetados como :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:204
msgid "For example, if qubit :math:`Q_{0}` is in state 0, qubit :math:`Q_{1}` is in state 0, and qubit :math:`Q_{2}` is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Por ejemplo, si el qubit :math:`Q_{0}` está en el estado 0, el qubit :math:`Q_{1}` está en el estado 0 y el qubit :math:`Q_{2}` está en el estado 1, Qiskit representaría este estado como :math:`|100\\rangle`, mientras que muchos libros de texto de física lo representarían como :math:`|001\\rangle`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:206
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit :math:`Q_{0}` being the control and qubit :math:`Q_{1}` being the target as"
msgstr "Esta diferencia en el etiquetado afecta la forma en que las operaciones multi-qubit se representan como matrices. Por ejemplo, Qiskit representa una operación X controlada (:math:`C_{X}`) con el qubit :math:`Q_{0}` siendo el control y el qubit :math:`Q_{1}` siendo el objectivo, como"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:208
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:224
msgid "Simulating circuits using Qiskit Aer"
msgstr "Simulación de circuitos usando Qiskit Aer"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:226
msgid "Qiskit Aer is our package for simulating quantum circuits. It provides many different backends for doing a simulation. There is also a basic, Python only, implementation called ``BasicAer`` in Terra that can be used as a drop-in replacement for ``Aer`` in the examples below."
msgstr "Qiskit Aer es nuestro paquete para simular circuitos cuánticos. Proporciona muchos backends diferentes para realizar una simulación. También hay una implementación básica, solo en Python, llamada ``BasicAer`` en Terra que se puede usar como reemplazo directo de ``Aer`` en los ejemplos a continuación."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:229
msgid "Statevector backend"
msgstr "Backend para vector de estado"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:231
msgid "The most common backend in Qiskit Aer is the ``statevector_simulator``. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "El backend más común en Qiskit Aer es el ``statevector_simulator``. Este simulador devuelve el estado cuántico, que es un vector complejo de dimensiones :math:`2^n`, donde :math:`n` es el número de qubits (así que ten cuidado al usar esto, ya que rápidamente se volverá demasiado grande para ejecutar en tu máquina)."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:242
msgid "To run the above circuit using the statevector simulator, first you need to import Aer and then set the backend to ``statevector_simulator``."
msgstr "Para ejecutar el circuito anterior usando el simulador de statevector, primero debes importar Aer y luego configurar el backend con ``statevector_simulator``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:267
msgid "Now that we have chosen the backend, it's time to compile and run the quantum circuit. In Qiskit we provide the ``run`` method for this. ``run`` returns a ``job`` object that encapsulates information about the job submitted to the backend."
msgstr "Ahora que hemos elegido el backend, es momento de compilar y ejecutar el circuito cuántico. En Qiskit proporcionamos el método ``run`` para esto. ``run`` devuelve un objeto ``job`` que encapsula la información sobre el trabajo enviado al backend."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:273
msgid "Tip: You can obtain the above parameters in Jupyter. Simply place the text cursor on a function and press Shift+Tab."
msgstr "Tip: Puedes obtener los parámetros anteriores en Jupyter. Simplemente coloca el cursor de texto en una función y presiona Mayús+Tab."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:299
msgid "When you run a program, a job object is made that has the following two useful methods: ``job.status()`` and ``job.result()``, which return the status of the job and a result object, respectively."
msgstr "Cuando ejecutas un programa, se crea un objeto de trabajo que tiene los siguientes dos métodos útiles: ``job.status()`` y ``job.result()``, que devuelven el estado del trabajo y un objeto con el resultado, respectivamente."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:305
msgid "Note: Jobs run asynchronously, but when the result method is called, it switches to synchronous and waits for it to finish before moving on to another task."
msgstr "Nota: Los trabajos se ejecutan de forma asincrónica, pero cuando se llama al método de resultado, cambia a forma síncrona y se espera a que finalice antes de pasar a otra tarea."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:330
msgid "The results object contains the data and Qiskit provides the method ``result.get_statevector(circ)`` to return the state vector for the quantum circuit."
msgstr "El objeto de resultados contiene los datos y Qiskit proporciona el método ``result.get_statevector(circ)`` para devolver el vector de estado del circuito cuántico."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:382
msgid "Qiskit also provides a visualization toolbox to allow you to view these results."
msgstr "Qiskit también proporciona un conjunto de herramientas de visualización que te permiten ver estos resultados."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:384
msgid "Below, we use the visualization function to plot the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "A continuación, usamos la función de visualización para graficar los componentes reales e imaginarios de la matriz de densidad :math:`\\rho` del estado."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:416
msgid "Unitary backend"
msgstr "Backend para la matriz unitaria"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:427
msgid "Qiskit Aer also includes a ``unitary_simulator`` that works *provided all the elements in the circuit are unitary operations*. This backend calculates the :math:`2^n \\times 2^n` matrix representing the gates in the quantum circuit."
msgstr "Qiskit Aer también incluye un ``unitary_simulator`` que funciona *siempre que todos los elementos del circuito sean operaciones unitarias*. Este backend calcula la matriz :math:`2^n \\times 2^n` que representa las compuertas en el circuito cuántico."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:527
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:538
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Los simuladores anteriores son útiles porque proporcionan información sobre el estado de salida del circuito ideal y la representación matricial del circuito. Sin embargo, un experimento real termina *midiendo* cada qubit (generalmente en la base computacional :math:`|0\\rangle, |1\\rangle`). Sin medición, no podemos obtener información sobre el estado. Las mediciones hacen que el sistema cuántico colapse en bits clásicos."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:540
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Por ejemplo, supongamos que hacemos mediciones independientes en cada qubit del estado GHZ de tres qubits"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:542
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:544
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit :math:`q_{2}`, :math:`y` to the outcome on qubit :math:`q_{1}`, and :math:`z` to the outcome on qubit :math:`q_{0}`."
msgstr "y dejemos que :math:`xyz` denote la cadena de bits que resulta. Recuerda que, bajo el etiquetado de qubits utilizado por Qiskit, :math:`x` correspondería al resultado en el qubit :math:`q_{2}`, :math:`y` al resultado en el qubit :math:`q_{1}` y :math:`z` al resultado en el qubit :math:`q_{0}`."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:550
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Nota: Esta representación de la cadena de bits coloca el bit más significativo (most significant bit, MSB) a la izquierda y el bit menos significativo (least significant bit, LSB) a la derecha. Este es el orden estándar de cadenas de bits binarias. Ordenamos los qubits de la misma manera (el qubit que representa el MSB tiene índice 0), por lo que Qiskit utiliza un orden de producto tensorial no estándar."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:556
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Recuerda que la probabilidad de obtener un resultado :math:`xyz` está dada por"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:558
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:560
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "y como tal para el estado de GHZ, la probabilidad de obtener 000 o 111 es 1/2."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:562
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Para simular un circuito que incluya mediciones, necesitamos agregar las mediciones al circuito original anterior y usar un backend Aer diferente."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:665
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Este circuito agrega un registro clásico y tres mediciones que se utilizan para mapear el resultado de los qubits a los bits clásicos."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:667
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``run`` method, via the ``shots`` keyword."
msgstr "Para simular este circuito, usamos el ``qasm_simulator`` de Qiskit Aer. Cada ejecución de este circuito producirá la cadena de bits 000 o 111. Para generar estadísticas sobre la distribución de las cadenas de bits (para, por ejemplo, estimar :math:`\\mathrm{Pr}(000)`), necesitamos repetir el circuito muchas veces. El número de veces que se repite el circuito se puede especificar en el método ``run``, mediante la palabra clave ``shots``."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:697
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Una vez que tengas un objeto de resultado, puedes acceder a los recuentos a través de la función ``get_counts(circuit)``. Esto te brinda los resultados binarios *agregados* del circuito que enviaste."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:743
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Aproximadamente el 50 por ciento de las veces, la cadena de bits de salida es 000. Qiskit también proporciona una función ``plot_histogram``, que te permite ver los resultados."

#: ../../tutorials/circuits/1_getting_started_with_qiskit.ipynb:774
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``run`` method and see how the estimated probabilities change."
msgstr "Las probabilidades de resultado estimadas :math:`\\mathrm{Pr}(000)` y :math:`\\mathrm{Pr}(111)` se calculan tomando los conteos agregados y dividiendo entre el número de iteraciones (cantidad de veces que el circuito fue repetido). Intenta cambiar el valor de ``shots`` en el método ``run`` y observa cómo cambian las probabilidades estimadas."

