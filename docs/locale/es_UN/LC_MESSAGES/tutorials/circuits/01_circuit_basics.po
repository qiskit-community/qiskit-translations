msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-03-20 09:44\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/01_circuit_basics.po\n"
"X-Crowdin-File-ID: 9498\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:10
msgid "This page was generated from `tutorials/circuits/01_circuit_basics.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/circuits/01_circuit_basics.ipynb`__."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:9
msgid "Circuit Basics"
msgstr "Aspectos Básicos de un Circuito"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. Qiskit provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Run**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Run** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Aquí, proporcionamos una descripción general del trabajo con Qiskit. Qiskit proporciona los componentes básicos necesarios para programar computadoras cuánticas. La unidad fundamental de Qiskit es el `circuito cuántico <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Un flujo de trabajo básico con Qiskit consta de dos etapas: **Construir** y **Ejecutar**. **Construir** te permite crear diferentes circuitos cuánticos que representan el problema que estás resolviendo y **Ejecutar** te permite ejecutarlos en diferentes backends. Una vez que se han ejecutado los trabajos (jobs), los datos se recopilan y posprocesan según el resultado deseado."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:36
msgid "Building the circuit"
msgstr "Construir el circuito"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:38
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "El elemento básico necesario para tu primer programa es el QuantumCircuit. Comenzamos creando un ``QuantumCircuit`` compuesto de tres qubits."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:60
msgid "After you create the circuit with its registers, you can add gates (\"operations\") to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr ""

#: ../../tutorials/circuits/01_circuit_basics.ipynb:62
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:64
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit 0, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A Controlled-NOT operation (:math:`C_{X}`) between qubit 0 and qubit 1. - A Controlled-NOT operation between qubit 0 and qubit 2."
msgstr "Para crear dicho estado, comenzamos con un registro cuántico de tres qubits. De forma predeterminada, cada qubit del registro se inicializa en :math:`|0\\rangle`. Para hacer el estado GHZ, aplicamos las siguientes compuertas: - Una compuerta Hadamard :math:`H` en el qubit 0, que lo pone en el estado de superposición :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - Una operación NOT controlada (:math:`C_{X}`) entre el qubit 0 y el qubit 1. - Una operación NOT controlada entre el qubit 0 y el qubit 2."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:66
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "En una computadora cuántica ideal, el estado producido al ejecutar este circuito sería el estado GHZ anterior."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:68
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr "En Qiskit, las operaciones se pueden agregar al circuito una por una, como se muestra a continuación."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:122
msgid "Visualize Circuit"
msgstr "Visualizar el circuito"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:124
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Puedes visualizar tu circuito usando ``QuantumCircuit.draw()`` de Qiskit, que dibuja el circuito en la forma que se encuentra en muchos libros de texto."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:154
msgid "In this circuit, the qubits are put in order, with qubit zero at the top and qubit two at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr "En este circuito, los qubits se ordenan, con el qubit cero en la parte superior y el qubit dos en la parte inferior. El circuito se lee de izquierda a derecha (lo que significa que las primeras compuertas que se aplican en el circuito se muestran más a la izquierda)."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:169
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Al representar el estado de un sistema de varios qubits, el orden de los tensores utilizado en Qiskit es diferente al utilizado en la mayoría de los libros de texto de física. Supongamos que hay :math:`n` qubits, y el qubit :math:`j` está etiquetado como :math:`Q_{j}`. Qiskit usa un orden en el que el qubit :math:`n^{\\mathrm{th}}` está en el lado izquierdo del producto tensorial, de modo que los vectores base están etiquetados como :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:171
msgid "For example, if qubit zero is in state 0, qubit 1 is in state 0, and qubit 2 is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Por ejemplo, si el qubit cero está en el estado 0, el qubit 1 está en el estado 0 y el qubit 2 está en el estado 1, Qiskit representaría este estado como :math:`|100\\rangle`, mientras que muchos libros de texto de física lo representarían como :math:`|001\\rangle`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:173
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit 0 being the control and qubit 1 being the target as"
msgstr "Esta diferencia en el etiquetado afecta la forma en que las operaciones de varios qubit se representan como matrices. Por ejemplo, Qiskit representa una operación X controlada (:math:`C_{X}`) con el qubit 0 siendo el control y el qubit 1 siendo el objetivo como"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:175
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:191
msgid "Simulating circuits"
msgstr "Simular circuitos"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:193
msgid "To simulate a circuit we use the quant_info module in Qiskit. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "Para simular un circuito usamos el módulo quant_info en Qiskit. Este simulador devuelve el estado cuántico, que es un vector complejo de dimensión :math:`2^n`, donde :math:`n` es el número de qubits (así que ten cuidado al usar esto, ya que rápidamente se volverá demasiado grande para ejecutar en tu máquina)."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:195
msgid "There are two stages to the simulator. The first is to set the input state and the second to evolve the state by the quantum circuit."
msgstr "Hay dos etapas en el simulador. La primera es establecer el estado de entrada y la segunda es hacer evolucionar el estado mediante el circuito cuántico."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:225
#: ../../tutorials/circuits/01_circuit_basics.ipynb:255
msgid "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{\\sqrt{2}}  \\\\\n"
" \\end{bmatrix}\n"
"$$"
msgstr "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{\\sqrt{2}}  \\\\\n"
" \\end{bmatrix}\n"
"$$"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:272
msgid "Qiskit also provides a visualization toolbox to allow you to view the state."
msgstr "Qiskit también proporciona un conjunto de herramientas de visualización que te permiten ver el estado."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:274
msgid "Below, we use the visualization function to plot the qsphere and a hinton representing the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "A continuación, usamos la función de visualización para dibujar la qsphere y un diagrama de hinton que representa los componentes real e imaginario de la matriz de densidad de estado :math:`\\rho`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:324
msgid "Unitary representation of a circuit"
msgstr "Representación unitaria de un circuito"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:335
msgid "Qiskit's quant_info module also has an operator method which can be used to make a unitary operator for the circuit. This calculates the :math:`2^n \\times 2^n` matrix representing the quantum circuit."
msgstr "El módulo quant_info de Qiskit también tiene un método de operador que puede usarse para hacer un operador unitario para el circuito. Esto calcula la matriz :math:`2^n \\times 2^n` que representa el circuito cuántico."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:456
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:467
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Los simuladores anteriores son útiles porque proporcionan información sobre el estado de salida del circuito ideal y la representación matricial del circuito. Sin embargo, un experimento real termina *midiendo* cada qubit (generalmente en la base computacional :math:`|0\\rangle, |1\\rangle`). Sin medición, no podemos obtener información sobre el estado. Las mediciones hacen que el sistema cuántico colapse en bits clásicos."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:469
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Por ejemplo, supongamos que hacemos mediciones independientes en cada qubit del estado GHZ de tres qubits"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:471
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:473
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit 2, :math:`y` to the outcome on qubit 1, and :math:`z` to the outcome on qubit 0."
msgstr "y denotemos la cadena de bits resultante como :math:`xyz`. Recuerda que, bajo el etiquetado de qubits utilizado por Qiskit, :math:`x` correspondería al resultado en el qubit 2, :math:`y` al resultado en el qubit 1, y :math:`z` al resultado en qubit 0."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:479
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Nota: Esta representación de la cadena de bits coloca el bit más significativo (Most Significant Bit, MSB) a la izquierda y el bit menos significativo (Least Significant Bit, LSB) a la derecha. Este es el orden estándar de cadenas de bits binarias. Ordenamos los qubits de la misma manera (el qubit que representa el MSB tiene índice 0), por lo que Qiskit utiliza un orden de producto tensorial no estándar."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:485
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Recuerda la probabilidad de obtener un resultado :math:`xyz` viene dada por"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:487
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:489
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "y como tal para el estado GHZ, la probabilidad de obtener 000 o 111 es 1/2."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:491
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Para simular un circuito que incluye medición, necesitamos agregar mediciones al circuito original anterior y usar un backend de Aer diferente."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:533
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Este circuito agrega un registro clásico y tres mediciones que se utilizan para mapear el resultado de los qubits a los bits clásicos."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:535
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``execute`` function, via the ``shots`` keyword."
msgstr "Para simular este circuito, usamos el ``qasm_simulator`` de Qiskit Aer. Cada ejecución de este circuito producirá la cadena de bits 000 o 111. Para generar estadísticas sobre la distribución de las cadenas de bits (para, por ejemplo, estimar :math:`\\mathrm{Pr}(000)`), necesitamos repetir el circuito muchas veces. El número de veces que se repite el circuito se puede especificar en la función ``execute``, mediante la palabra clave ``shots``."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:576
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Una vez que tengas un objeto de resultado, puedes acceder a los recuentos a través de la función ``get_counts(circuit)``. Esto te brinda los resultados binarios *agregados* del circuito que enviaste."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:622
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Aproximadamente el 50 por ciento de las veces, la cadena de bits de salida es 000. Qiskit también proporciona una función ``plot_histogram``, que te permite ver los resultados."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:653
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``execute`` function and see how the estimated probabilities change."
msgstr "Las probabilidades de salida estimadas :math:`\\mathrm{Pr}(000)` y :math:`\\mathrm{Pr}(111)` se calculan tomando los conteos agregados y dividiendo entre el número de iteraciones (cantidad de veces que el circuito fue repetido). Intenta cambiar el valor de ``shots`` en la función ``execute`` y ve cómo cambian las probabilidades estimadas."

