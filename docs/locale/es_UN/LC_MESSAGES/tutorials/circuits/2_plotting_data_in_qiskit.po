msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-06 22:58\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/circuits/2_plotting_data_in_qiskit.po\n"
"X-Crowdin-File-ID: 9116\n"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/circuit/2_plotting_data_in_qiskit.ipynb`__."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:9
msgid "Qiskit Visualizations"
msgstr "Visualizaciones en Qiskit"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:32
msgid "Plot Histogram"
msgstr "Graficar el Histograma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:34
msgid "To visualize the data from a quantum circuit run on a real device or ``qasm_simulator`` we have made a simple function"
msgstr "Para visualizar los datos de un circuito cuántico ejecutado en un dispositivo real o ``quasm_simulator``, hemos hecho una función simple"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:36
msgid "``plot_histogram(data)``"
msgstr "``plot_histogram(data)``"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:38
msgid "As an example we make a 2-qubit Bell state"
msgstr "Como ejemplo, generaremos un estado de Bell de 2 qubits"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:116
msgid "Options when plotting a histogram"
msgstr "Opciones al graficar un histograma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:118
msgid "The ``plot_histogram()`` has a few options to adjust the output graph. The first option is the ``legend`` kwarg. This is used to provide a label for the executions. It takes a list of strings used to label each execution's results. This is mostly useful when plotting multiple execution results in the same histogram. The ``sort`` kwarg is used to adjust the order the bars in the histogram are rendered. It can be set to either ascending order with ``asc`` or descending order with ``desc``. The ``number_to_keep`` kwarg takes an integer for the number of terms to show, the rest are grouped together in a single bar called rest. You can adjust the color of the bars with the ``color`` kwarg which either takes a string or a list of strings for the colors to use for the bars for each execution. You can adjust whether labels are printed above the bars or not with the ``bar_labels`` kwarg. The last option available is the ``figsize`` kwarg which takes a tuple of the size in inches to make the output figure."
msgstr "La función ``plot_histogram()`` tiene algunas opciones para ajustar la gráfica de salida. La primera opción es el kwarg ``legend``. Se utiliza para proporcionar una etiqueta para las ejecuciones. Se necesita una lista de cadenas que se emplean para etiquetar los resultados de cada ejecución. Esto es principalmente útil cuando se grafican varios resultados de ejecución en el mismo histograma. El kwarg ``sort`` se usa para ajustar el orden en que se representan las barras en el histograma. Se puede configurar en orden ascendente con ``asc`` o en orden descendente con ``desc``. El kwarg ``number_to_keep`` toma un número entero para el número de términos a mostrar, el resto es agrupado en una sola barra llamada resto. Puedes ajustar el color de las barras con el kwarg ``color`` que toma una cadena o una lista de cadenas para que los colores se usen para las barras en cada ejecución. Puedes ajustar si las etiquetas se imprimen encima de las barras o no con el kwarg ``bar_labels``. La última opción disponible es el kwarg ``figsize`` que toma una tupla con el tamaño en pulgadas para hacer la figura de salida."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:176
msgid "Using the output from plot_histogram()"
msgstr "Usar la salida de plot_histogram()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:178
msgid "When using the ``plot_histogram()`` function, it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object from ``plot_histogram()`` to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png``. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Al usar la función ``plot_histogram()``, esta devuelve un objeto de clase ``matplotlib.Figure`` para la visualización renderizada. Los cuadernos de Jupyter entienden este tipo de objeto y hacen el render dentro de este tutorial, pero al correr la función fuera de Jupyter no se tiene esta característica automáticamente. Sin embargo, la clase ``matplotlib.Figure`` tiene métodos nativos para mostrar y guardar la visualización. Puedes llamar al método ``.show()`` en el objeto devuelto por ``plot_histogram()`` para abrir la imagen en una nueva ventana (asumiendo el backend de matplotlib que tienes configurado es interactivo). O alternativamente, puedes llamar ``.savefig('out.png')`` para guardar la figura a ``out.png``. El método ``savefig()`` tiene de entrada una ruta para que puedas ajustar la ubicación y nombre del archivo donde estés guardando la salida."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:191
msgid "Plot State"
msgstr "Graficar el Estado"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:202
msgid "In many situations you want to see the state of a quantum computer. This could be for debugging. Here we assume you have this state (either from simulation or state tomography) and the goal is to visualize the quantum state. This requires exponential resources, so we advise to only view the state of small quantum systems. There are several functions for generating different types of visualization of a quantum state"
msgstr "En muchas situaciones, quieres ver el estado de una computadora cuántica. Esto podría ser para depurar tu código. Aquí asumimos que tienes este estado (ya sea de simulación o tomografía de estado) y el objetivo es visualizar el estado cuántico. Esto requiere una cantidad de recursos exponencial, por lo que recomendamos visualizar solo el estado de los sistemas cuánticos pequeños. Hay varias funciones para generar diferentes tipos de visualización de un estado cuántico"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:212
msgid "A quantum state is either a density matrix :math:`\\rho` (Hermitian matrix) or statevector :math:`|\\psi\\rangle` (complex vector). The density matrix is related to the statevector by"
msgstr "Un estado cuántico es una matriz de densidad :math:`\\rho` (matriz Hermitiana) o vector de estado :math:`|\\psi\\rangle` (vector complejo). La matriz de densidad está relacionada con el vector de estado por"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:214
msgid "\\rho = |\\psi\\rangle\\langle \\psi|,\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:216
msgid "and is more general as it can represent mixed states (positive sum of statevectors)"
msgstr "y es más general, ya que puede representar estados mixtos (suma positiva de vectores de estado)"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:218
msgid "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |.\n\n"
msgstr ""

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:220
msgid "The visualizations generated by the functions are:"
msgstr "Las visualizaciones generadas por las funciones son:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:222
msgid "``'plot_state_city'``: The standard view for quantum states where the real and imaginary (imag) parts of the density matrix are plotted like a city."
msgstr "``'plot_state_city'``: La visualización estándar para los estados cuánticos donde las partes reales e imaginarias (imag) de la matriz de densidad se grafican asemejando una ciudad."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:224
msgid "``'plot_state_qsphere'``: The Qiskit unique view of a quantum state where the amplitude and phase of the state vector are plotted in a spherical ball. The amplitude is the thickness of the arrow and the phase is the color. For mixed states it will show different ``'qsphere'`` for each component."
msgstr "``'plot_state_qsphere'``: La visualización única de Qiskit para un estado cuántico, en ella la amplitud y la fase del vector de estado se trazan en una esfera. La amplitud es el grosor de la flecha y la fase es el color. Para los estados mixtos mostrará diferentes ``'qsphere'`` para cada componente."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:226
msgid "``'plot_state_paulivec'``: The representation of the density matrix using Pauli operators as the basis :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."
msgstr "``'plot_state_paulivec'``: La representación de la matriz de densidad utilizando operadores de Pauli como base :math:`\\rho = \\sum_ {q= 0} ^ {d ^ 2-1} p_jP_j/d`."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:228
msgid "``'plot_state_hinton'``: Same as ``'city'`` but where the size of the element represents the value of the matrix element."
msgstr "``'plot_state_hinton'``: Igual que ``'city'`` pero aquí, el tamaño del elemento representa el valor del elemento de matriz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:230
msgid "``'plot_bloch_multivector'``: The projection of the quantum state onto the single qubit space and plotting on a bloch sphere."
msgstr "``'pl_bloch_multivector'``: La proyección del estado cuántico sobre el espacio de un solo qubit graficado en una esfera de Bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:361
msgid "Here we see that there is no information about the quantum state in the single qubit space as all vectors are zero."
msgstr "Aquí vemos que no hay información sobre el estado cuántico en el espacio de un solo qubit ya que todos los vectores son cero."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:373
msgid "Options when using state plotting functions"
msgstr "Opciones al usar funciones para graficar estados"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:375
msgid "The various functions for plotting quantum states provide a number of options to adjust how the plots are rendered. Which options are available depends on the function being used."
msgstr "Las diversas funciones para graficar estados cuánticos proporcionan una serie de opciones para ajustar cómo se renderizan cada una de las gráficas. Las opciones disponibles dependen de la función que se utilice."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:386
msgid "**plot_state_city()** options"
msgstr "Opciones para **plot_state_city()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:388
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:422
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:455
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:502
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:596
msgid "**title** (str): a string that represents the plot title"
msgstr "**title** (str): una cadena que representa el título de la gráfica"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:389
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:423
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:456
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:489
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:503
msgid "**figsize** (tuple): figure size in inches (width, height)."
msgstr "**figsize** (tuple): tamaño de la figura en pulgadas (ancho, alto)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:390
msgid "**color** (list): a list of len=2 giving colors for real and imaginary components of matrix elements."
msgstr "**color** (list): una lista de len=2 que da colores para los componentes reales e imaginarios de los elementos de la matriz."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:420
msgid "**plot_state_hinton()** options"
msgstr "Opciones para **plot_state_hinton()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:453
msgid "**plot_state_paulivec()** options"
msgstr "Opciones para **plot_state_paulivec()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:457
msgid "**color** (list or str): color of the expectation value bars."
msgstr "**color** (list o str): color de las barras de valor esperado."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:487
msgid "**plot_state_qsphere()** options"
msgstr "Opciones para **plot_state_qsphere()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:500
msgid "**plot_bloch_multivector()** options"
msgstr "Opciones para **plot_bloch_multivector()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:534
msgid "Using the output from state plotting functions"
msgstr "Usar la salida de las funciones para graficar estados"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:536
msgid "When using any of the state plotting functions it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Cuando se utiliza cualquiera de las funciones de graficación de estado, se devuelve un ``matplotlib.Figure`` para la visualización renderizada. Los cuadernos de Jupyter entienden este tipo de retorno y lo interpretan para nosotros en este tutorial, pero cuando se ejecuta fuera de Jupyter, no tienes esta característica automáticamente. Sin embargo, la clase ``matplotlib.Figure`` tiene métodos nativos para mostrar y guardar la visualización. Puedes llamar ``.show()`` en el objeto devuelto para abrir la imagen en una nueva ventana (suponiendo que tu backend de matplotlib configurado es interactivo). O alternativamente, puedes llamar ``.savefig('out.png')`` para guardar la figura en ``out.png`` en el directorio de trabajo actual. El método ``savefig()`` toma una ruta para que puedas ajustar la ubicación y el nombre del archivo donde estés guardando la salida."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:549
msgid "Plot Bloch Vector"
msgstr "Gráfica del Vector de Bloch"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:551
msgid "A standard way of plotting a quantum system is using the Bloch vector. This only works for a single qubit and takes as input the Bloch vector."
msgstr "Una forma estándar de trazar un sistema cuántico es usar el vector de Bloch. Esto sólo funciona para un solo qubit y toma como entrada el vector de Bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:553
msgid "The Bloch vector is defined as :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, where :math:`X`, :math:`Y`, and :math:`Z` are the Pauli operators for a single qubit and :math:`\\rho` is the density matrix."
msgstr "El vector de Bloch se define como :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, donde :math:`X`, :math:`Y` y :math:`Z` son los operadores de Pauli para un solo qubit y :math:`\\rho` es la matriz de densidad."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:594
msgid "Options for plot_bloch_vector()"
msgstr "Opciones para plot_bloch_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:597
msgid "**figsize** (tuple): Figure size in inches (width, height)."
msgstr "**figsize** (tuple): Tamaño de la figura en pulgadas (ancho, alto)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:628
msgid "Adjusting the output from plot_bloch_vector()"
msgstr "Ajustando la salida de plot_bloch_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:630
msgid "When using the ``plot_bloch_vector`` function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "Cuando se utiliza la función ``plot_bloch_vector``, devuelve un ``matplotlib.Figure`` para la visualización renderizada. Los cuadernos de Jupyter entienden este tipo de retorno y lo interpretan para nosotros en este tutorial, pero cuando se ejecuta fuera de Jupyter, no tienes esta característica automáticamente. Sin embargo, la clase ``matplotlib.Figure`` tiene métodos nativos para mostrar y guardar la visualización. Puedes llamar ``.show()`` en el objeto devuelto para abrir la imagen en una nueva ventana (suponiendo que tu backend de matplotlib configurado es interactivo). O alternativamente, puedes llamar ``.savefig('out.png')`` para guardar la figura en ``out.png`` en el directorio de trabajo actual. El método ``savefig()`` toma una ruta para que puedas ajustar la ubicación y el nombre del archivo donde estés guardando la salida."

