msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-05 17:45+0000\n"
"PO-Revision-Date: 2022-12-05 19:07\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/textbook/01_IQPE.po\n"
"X-Crowdin-File-ID: 9622\n"
"Language: es_UN\n"

#: ../../tutorials/textbook/01_IQPE.ipynb:10
msgid "This page was generated from `tutorials/textbook/01_IQPE.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/textbook/01_IQPE.ipynb`__."

#: ../../tutorials/textbook/01_IQPE.ipynb:9
msgid "Iterative Quantum Phase Estimation Algorithm"
msgstr "Algoritmo de Estimación de Fase Cuántica Iterativa"

#: ../../tutorials/textbook/01_IQPE.ipynb:11
msgid "The goal of this tutorial is to understand how the Iterative Phase Estimation (IPE) algorithm works, why would we use the IPE algorithm instead of the QPE (Quantum Phase Estimation) algorithm and how to build it with Qiskit using the same circuit exploiting reset gate and the ``c_if`` method that allows to apply gates conditioned by the values stored in a classical register, resulting from previous measurements."
msgstr "El objetivo de este tutorial es comprender cómo funciona el algoritmo de Estimación de Fase Iterativa (Iterative Phase Estimation, IPE), por qué usaríamos el algoritmo IPE en lugar del algoritmo QPE (Quantum Phase Estimation, Estimación de Fase Cuántica) y cómo construirlo con Qiskit utilizando el mismo circuito aprovechando la compuerta de reinicio y el método ``c_if`` que permite aplicar compuertas condicionadas por los valores almacenados en un registro clásico, resultantes de mediciones previas."

#: ../../tutorials/textbook/01_IQPE.ipynb:13
msgid "**References**"
msgstr "**Referencias**"

#: ../../tutorials/textbook/01_IQPE.ipynb:15
msgid "`Section 2 of Lab 4: Iterative Phase Estimation (IPE) Algorithm <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__"
msgstr "`Sección 2 del Lab 4: Algoritmo de Estimación de Fase Iterativa (IPE) <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__"

#: ../../tutorials/textbook/01_IQPE.ipynb:17
msgid "`Ch.3.6 Quantum Phase Estimation <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__"
msgstr "`Ch.3.6 Estimación de Fase Cuántica <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__"

#: ../../tutorials/textbook/01_IQPE.ipynb:42
msgid "Conditioned gates: the c_if method"
msgstr "Compuertas condicionadas: el método c_if"

#: ../../tutorials/textbook/01_IQPE.ipynb:53
msgid "Before starting the IPE algorithm, we will give a brief tutorial about the Qiskit conditional method, c_if, as it goes into building the IPE circuit."
msgstr "Antes de iniciar el algoritmo IPE, vamos a dar un breve tutorial sobre el método condicional de Qiskit, c_if, a medida que se avanza en la construcción del circuito IPE."

#: ../../tutorials/textbook/01_IQPE.ipynb:55
msgid "``c_if`` is a function (actually a method of the gate class) to perform conditioned operations based on the value stored previously in a classical register. With this feature you can apply gates after a measurement in the same circuit conditioned by the measurement outcome."
msgstr "``c_if`` es una función (en realidad, un método de la clase compuerta) para realizar operaciones condicionadas basadas en el valor almacenado previamente en un registro clásico. Con esta función puedes aplicar compuertas después de una medición en el mismo circuito condicionado por el resultado de la medición."

#: ../../tutorials/textbook/01_IQPE.ipynb:57
msgid "For example, the following code will execute the :math:`X` gate if the value of the classical register is :math:`0`."
msgstr "Por ejemplo, el siguiente código ejecutará la compuerta :math:`X` si el valor del registro clásico es :math:`0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:93
msgid "We highlight that the method c_if expects as the first argument a whole classical register, not a single classical bit (or a list of classical bits), and as the second argument a value in decimal representation (a non-negative integer), not the value of a single bit, 0, or 1 (or a list/string of binary digits)."
msgstr "Resaltamos que el método c_if espera como primer argumento un registro clásico completo, no un solo bit clásico (o una lista de bits clásicos), y como segundo argumento un valor en representación decimal (un entero no negativo), no el valor de un solo bit, 0, o 1 (o una lista/cadena de dígitos binarios)."

#: ../../tutorials/textbook/01_IQPE.ipynb:95
msgid "Let’s make another example. Consider that we want to perform a bit flip on the third qubit after the measurements in the following circuit, when the results of the measurement of :math:`q_0` and :math:`q_1` are both :math:`1`."
msgstr "Hagamos otro ejemplo. Considera que queremos realizar un cambio de bit en el tercer qubit después de las mediciones en el siguiente circuito, cuando los resultados de la medición de :math:`q_0` y :math:`q_1` son ambos :math:`1`."

#: ../../tutorials/textbook/01_IQPE.ipynb:133
msgid "We want to apply the :math:`X` gate, only if both the results of the measurement of :math:`q_0` and :math:`q_1` are :math:`1`. We can do this using the c_if method, conditioning the application of :math:`X` depending on the value passed as argument to c_if."
msgstr "Queremos aplicar la compuerta :math:`X`, solo si ambos resultados de la medición de :math:`q_0` y :math:`q_1` son :math:`1`. Podemos hacer esto usando el método c_if, condicionando la aplicación de :math:`X` dependiendo del valor pasado como argumento a c_if."

#: ../../tutorials/textbook/01_IQPE.ipynb:135
msgid "We will have to encode the value to pass to the c_if method such that it will check the values 011 and 111 (in binary representation), since it does not matter what :math:`q_2` is measured as."
msgstr "Tendremos que codificar el valor para pasar al método c_if de manera que verifique los valores 011 y 111 (en representación binaria), ya que no importa cómo sea medido :math:`q_2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:137
msgid "The 2 integer values in decimal representation:"
msgstr "Los 2 valores enteros en representación decimal:"

#: ../../tutorials/textbook/01_IQPE.ipynb:148
msgid "|b945facff0c54b1c86bcb7eef9328127|"
msgstr "|b945facff0c54b1c86bcb7eef9328127|"

#: ../../tutorials/textbook/01_IQPE.ipynb:150
msgid "b945facff0c54b1c86bcb7eef9328127"
msgstr "b945facff0c54b1c86bcb7eef9328127"

#: ../../tutorials/textbook/01_IQPE.ipynb:161
msgid "We can check the solutions using the bin() method in python (the prefix ``0b`` indicates the binary format)."
msgstr "Podemos verificar las soluciones usando el método bin() en python (el prefijo ``0b`` indica el formato binario)."

#: ../../tutorials/textbook/01_IQPE.ipynb:210
msgid "So we have to apply :math:`X` to :math:`q_2` using c_if two times, one for each value corresponding to 011 and 111."
msgstr "Entonces tenemos que aplicar :math:`X` a :math:`q_2` usando c_if dos veces, una para cada valor correspondiente a 011 y 111."

#: ../../tutorials/textbook/01_IQPE.ipynb:253
msgid "IPE"
msgstr "IPE"

#: ../../tutorials/textbook/01_IQPE.ipynb:255
msgid "The motivation for using the IPE algorithm is that QPE algorithm works fine for short depth circuits but when the circuit starts to grow, it doesn’t work properly due to gate noise and decoherence times."
msgstr "La motivación para usar el algoritmo IPE es que el algoritmo QPE funciona bien para circuitos de poca profundidad, pero cuando el circuito comienza a crecer, no funciona correctamente debido al ruido de compuerta y los tiempos de decoherencia."

#: ../../tutorials/textbook/01_IQPE.ipynb:257
msgid "The detailed explanation of how the algorithm works can be found in `Iterative Phase Estimation (IPE) Algorithm <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__. To understand QPE in depth, you can see also `Ch.3.6 Quantum Phase Estimation <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__."
msgstr "La explicación detallada de cómo funciona el algoritmo se puede encontrar en `Algoritmo de Estimación de Fase Iterativa (IPE) <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__. Para comprender la QPE en profundidad, puedes consultar también `Ch.3.6 Estimación de Fase Cuántica <https://qiskit.org/textbook/ch-algorithms/quantum-phase-estimation.html>`__."

#: ../../tutorials/textbook/01_IQPE.ipynb:260
msgid "IPE example with a 1-qubit gate for :math:`U`"
msgstr "Ejemplo de IPE con una compuerta de 1 qubit para :math:`U`"

#: ../../tutorials/textbook/01_IQPE.ipynb:262
msgid "We want to apply the IPE algorithm to estimate the phase for a 1-qubit operator :math:`U`. For example, here we use the :math:`S`-gate."
msgstr "Queremos aplicar el algoritmo IPE para estimar la fase de un operador :math:`U` de 1 qubit. Por ejemplo, aquí usamos la compuerta :math:`S`."

#: ../../tutorials/textbook/01_IQPE.ipynb:264
msgid "Let’s apply the IPE algorithm to estimate the phase for :math:`S`-gate. Its matrix is"
msgstr "Apliquemos el algoritmo IPE para estimar la fase de la compuerta :math:`S`. Su matriz es"

#: ../../tutorials/textbook/01_IQPE.ipynb:266
msgid " S =\n"
"\\begin{bmatrix}\n"
"1 & 0\\\\\n"
"0 & e^\\frac{i\\pi}{2}\\\\\n"
"\\end{bmatrix}"
msgstr " S =\n"
"\\begin{bmatrix}\n"
"1 & 0\\\\\n"
"0 & e^\\frac{i\\pi}{2}\\\\\n"
"\\end{bmatrix}"

#: ../../tutorials/textbook/01_IQPE.ipynb:274
msgid "That is, the :math:`S`-gate adds a phase :math:`\\pi/2` to the state :math:`|1\\rangle`, leaving unchanged the phase of the state :math:`|0\\rangle`"
msgstr "Es decir, la compuerta :math:`S` agrega una fase de :math:`\\pi/2` al estado :math:`|1\\rangle`, dejando sin cambios a la fase del estado :math:`|0\\rangle`"

#: ../../tutorials/textbook/01_IQPE.ipynb:276
msgid "S|1\\rangle = e^\\frac{i\\pi}{2}|1\\rangle\n\n"
msgstr "S|1\\rangle = e^\\frac{i\\pi}{2}|1\\rangle\n\n"

#: ../../tutorials/textbook/01_IQPE.ipynb:278
msgid "In the following, we will use the notation and terms used in `Section 2 of lab 4 <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__."
msgstr "En lo siguiente, utilizaremos la notación y los términos utilizados en la `Sección 2 del laboratorio 4 <https://qiskit.org/textbook/ch-labs/Lab04_IterativePhaseEstimation.html#2-iterative-phase-estimation-ipe-algorithm>`__."

#: ../../tutorials/textbook/01_IQPE.ipynb:280
msgid "Let’s consider to estimate the phase :math:`\\phi=\\frac{\\pi}{2}` for the eigenstate :math:`|1\\rangle`, we should find :math:`\\varphi=\\frac{1}{4}` (where :math:`\\phi = 2 \\pi \\varphi`). Therefore to estimate the phase we need exactly 2 phase bits, i.e. \\ :math:`m=2`, since :math:`1/2^2=1/4`. So :math:`\\varphi=0.\\varphi_1\\varphi_2`."
msgstr "Consideremos estimar la fase :math:`\\phi=\\frac{\\pi}{2}` para el estado propio :math:`|1\\rangle`, deberíamos encontrar :math:`\\varphi=\\frac{1}{4}` (donde :math:`\\phi = 2 \\pi \\varphi`). Por lo tanto, para estimar la fase necesitamos exactamente 2 bits de fase, es decir, \\ :math:`m=2`, ya que :math:`1/2^2=1/4`. Entonces :math:`\\varphi=0.\\varphi_1\\varphi_2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:282
msgid "Remember from the theory that for the IPE algorithm, :math:`m` is also the number of iterations, so we need only :math:`2` iterations or steps."
msgstr "Recuerda de la teoría que para el algoritmo IPE, :math:`m` es también el número de iteraciones, por lo que solo necesitamos :math:`2` iteraciones o pasos."

#: ../../tutorials/textbook/01_IQPE.ipynb:284
msgid "First, we initialize the circuit. IPE works with only 1 auxiliary qubit, instead of :math:`m` counting qubits of the QPE algorithm. Therefore, we need 2 qubits, 1 auxiliary qubit and 1 for the eigenstate of :math:`U`-gate, and a classical register of 2 bits, for the phase bits :math:`\\varphi_1`, :math:`\\varphi_2`."
msgstr "Primero, inicializamos el circuito. IPE trabaja con solo 1 qubit auxiliar, en lugar de :math:`m` qubits contados del algoritmo QPE. Por lo tanto, necesitamos 2 qubits, 1 qubit auxiliar y 1 para el estado propio de la compuerta :math:`U`, y un registro clásico de 2 bits, para los bits de fase :math:`\\varphi_1`, :math:`\\varphi_2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:311
#: ../../tutorials/textbook/01_IQPE.ipynb:702
msgid "First step"
msgstr "Primer paso"

#: ../../tutorials/textbook/01_IQPE.ipynb:313
msgid "Now we build the quantum circuit for the first step, that is, the first iteration of the algorithm, to estimate the least significant phase bit :math:`\\varphi_m`, in this case :math:`\\varphi_2`. For the first step we have 3 sub-steps: - initialization - application of the Controlled-\\ :math:`U` gates - measure of the auxiliary qubit in x-basis"
msgstr "Ahora construimos el circuito cuántico para el primer paso, es decir, la primera iteración del algoritmo, para estimar el bit de fase menos significativo :math:`\\varphi_m`, en este caso :math:`\\varphi_2`. Para el primer paso tenemos 3 subpasos: - inicialización - aplicación de las compuertas Controladas-\\ :math:`U` - medición del qubit auxiliar en la base x"

#: ../../tutorials/textbook/01_IQPE.ipynb:316
#: ../../tutorials/textbook/01_IQPE.ipynb:707
msgid "Initialization"
msgstr "Inicialización"

#: ../../tutorials/textbook/01_IQPE.ipynb:318
msgid "The initialization consists of application the Hadamard gate to the auxiliary qubit and the preparation of the eigenstate :math:`|1\\rangle`."
msgstr "La inicialización consiste en la aplicación de la compuerta Hadamard al qubit auxiliar y la preparación del estado propio :math:`|1\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:351
#: ../../tutorials/textbook/01_IQPE.ipynb:742
msgid "Application of the Controlled-\\ :math:`U` gates"
msgstr "Aplicación de las compuertas Controladas-\\ :math:`U`"

#: ../../tutorials/textbook/01_IQPE.ipynb:353
msgid "Then we have to apply :math:`2^t` times the Controlled-\\ :math:`U` operators (see also in the docs `Two qubit gates <https://qiskit.org/documentation/tutorials/circuits/3_summary_of_quantum_operations.html#Two-qubit-gates>`__), that, in this example, is the Controlled-\\ :math:`S` gate (:math:`CS` for short)."
msgstr "Luego tenemos que aplicar :math:`2^t` veces los operadores Controlados-\\ :math:`U` (ver también en la documentación `Compuertas de dos qubits <https://qiskit.org/documentation/tutorials/circuits/3_summary_of_quantum_operations.html#Two-qubit-gates>`__), que, en este ejemplo, es la compuerta Controlada-\\ :math:`S` (:math:`CS` para abreviar)."

#: ../../tutorials/textbook/01_IQPE.ipynb:355
msgid "To implement :math:`CS` in the circuit, since :math:`S` is a phase gate, we can use the controlled phase gate :math:`\\text{CP}(\\theta)`, with :math:`\\theta=\\pi/2`."
msgstr "Para implementar :math:`CS` en el circuito, ya que :math:`S` es una compuerta de fase, podemos usar la compuerta de fase controlada :math:`\\text{CP}(\\theta)`, con :math:`\\theta=\\pi/2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:387
msgid "Let’s apply :math:`2^t` times :math:`\\text{CP}(\\pi/2)`. Since for the first step :math:`t=m-1`, and :math:`m=2`, we have :math:`2^t=2`."
msgstr "Apliquemos :math:`2^t` veces :math:`\\text{CP}(\\pi/2)`. Dado que para el primer paso :math:`t=m-1`, y :math:`m=2`, tenemos :math:`2^t=2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:420
#: ../../tutorials/textbook/01_IQPE.ipynb:811
msgid "Measure in x-basis"
msgstr "Medición en la base x"

#: ../../tutorials/textbook/01_IQPE.ipynb:422
msgid "Finally, we perform the measurement of the auxiliary qubit in x-basis. So we will define a function to perform the x_measure and then apply it."
msgstr "Finalmente, realizamos la medición del qubit auxiliar en la base x. Así que definiremos una función para realizar la x_measure y luego la aplicaremos."

#: ../../tutorials/textbook/01_IQPE.ipynb:446
msgid "In this way we obtain the phase bit :math:`\\varphi_2` and store it in the classical bit :math:`c_0`."
msgstr "De esta forma obtenemos el bit de fase :math:`\\varphi_2` y lo almacenamos en el bit clásico :math:`c_0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:478
msgid "Subsequent steps (2nd step)"
msgstr "Pasos posteriores (segundo paso)"

#: ../../tutorials/textbook/01_IQPE.ipynb:480
msgid "Now we build the quantum circuit for the other remaining steps, in this example, only the second one. In these steps we have 4 sub-steps: the 3 sub-steps as in the first step and, in the middle, the additional step of the phase correction - initialization with reset - phase correction - application of the Controlled-\\ :math:`U` gates - measure of the auxiliary qubit in x-basis"
msgstr "Ahora construimos el circuito cuántico para los otros pasos restantes, en este ejemplo, solo el segundo. En estos pasos tenemos 4 subpasos: los 3 subpasos como en el primer paso y, en medio, el paso adicional de la corrección de fase - inicialización con restablecimiento - corrección de fase - aplicación de la compuerta :math:`U` Controlada - medición del qubit auxiliar en la base x"

#: ../../tutorials/textbook/01_IQPE.ipynb:483
#: ../../tutorials/textbook/01_IQPE.ipynb:850
msgid "Initialization with reset"
msgstr "Inicialización con restablecimiento"

#: ../../tutorials/textbook/01_IQPE.ipynb:485
msgid "As we want to perform an iterative algorithm in the same circuit, we need to reset the auxiliary qubit :math:`q0` after the measument gate and initialize it again as before to recycle the qubit."
msgstr "Como queremos realizar un algoritmo iterativo en el mismo circuito, necesitamos restablecer el qubit auxiliar :math:`q0` después de la compuerta de medición e inicializarlo nuevamente como antes para reciclar el qubit."

#: ../../tutorials/textbook/01_IQPE.ipynb:518
#: ../../tutorials/textbook/01_IQPE.ipynb:883
msgid "Phase correction (for step 2)"
msgstr "Corrección de fase (para el paso 2)"

#: ../../tutorials/textbook/01_IQPE.ipynb:520
msgid "As seen in the theory, in order to extract the phase bit :math:`\\varphi_{1}`, we perform a phase correction of :math:`-\\pi\\varphi_2/2`. Of course, we need to apply the phase correction in the circuit only if the phase bit :math:`\\varphi_2=1`, i.e. we have to apply the phase correction of :math:`-\\pi/2` only if the classical bit :math:`c_0` is 1."
msgstr "Como se ve en la teoría, para extraer el bit de fase :math:`\\varphi_{1}`, realizamos una corrección de fase de :math:`-\\pi\\varphi_2/2`. Por supuesto, necesitamos aplicar la corrección de fase en el circuito solo si el bit de fase :math:`\\varphi_2=1`, es decir, tenemos que aplicar la corrección de fase de :math:`-\\pi/2` solo si el bit clásico :math:`c_0` es 1."

#: ../../tutorials/textbook/01_IQPE.ipynb:522
msgid "So, after the reset we apply the phase gate :math:`P(\\theta)` with phase :math:`\\theta=-\\pi/2` conditioned by the classical bit :math:`c_0` (:math:`=\\varphi_2`) using the ``c_if`` method. So as we saw in the first part of this tutorial, we have to use the ``c_if`` method with a value of 1, as :math:`1_{10} = 001_{2}` (the subscripts :math:`_{10}` and :math:`_2` indicate the decimal and binary representations)."
msgstr "Entonces, después del restablecimiento, aplicamos la compuerta de fase :math:`P(\\theta)` con fase :math:`\\theta=-\\pi/2` condicionada por el bit clásico :math:`c_0` (:math:`=\\varphi_2`) usando el método ``c_if``. Entonces, como vimos en la primera parte de este tutorial, tenemos que usar el método ``c_if`` con un valor de 1, como :math:`1_{10} = 001_{2}` (los subíndices :math:`_{10}` y :math:`_2` indican las representaciones decimal y binaria)."

#: ../../tutorials/textbook/01_IQPE.ipynb:554
#: ../../tutorials/textbook/01_IQPE.ipynb:919
msgid "Application of the Controlled-\\ :math:`U` gates and x-measurement (for step 2)"
msgstr "Aplicación de las compuertas :math:`U` Controladas y medición en x (para el paso 2)"

#: ../../tutorials/textbook/01_IQPE.ipynb:556
msgid "We apply the :math:`CU` operations as we did in the first step. For the second step we have :math:`t=m-2`, hence :math:`2^t=1`. So we apply :math:`\\text{CP}(\\pi/2)` once. And then we perform the x-measurement of the qubit :math:`q_0`, storing the result, the phase bit :math:`\\varphi_1`, in the bit :math:`c_1` of classical register."
msgstr "Aplicamos las operaciones :math:`CU` como hicimos en el primer paso. Para el segundo paso tenemos :math:`t=m-2`, por lo tanto :math:`2^t=1`. Entonces aplicamos :math:`\\text{CP}(\\pi/2)` una vez. Y luego realizamos la medición en x del qubit :math:`q_0`, almacenando el resultado, el bit de fase :math:`\\varphi_1`, en el bit :math:`c_1` del registro clásico."

#: ../../tutorials/textbook/01_IQPE.ipynb:581
msgid "Et voilà, we have our final circuit"
msgstr "Y listo, tenemos nuestro circuito final"

#: ../../tutorials/textbook/01_IQPE.ipynb:611
msgid "Let’s execute the circuit with the ``qasm_simulator``, the simulator without noise that run locally."
msgstr "Ejecutemos el circuito con el ``qasm_simulator``, el simulador sin ruido que se ejecuta localmente."

#: ../../tutorials/textbook/01_IQPE.ipynb:641
msgid "In the picture we have the same histograms but on the left we have on the x-axis the string with phase bits :math:`\\varphi_1`, :math:`\\varphi_2` and on the right the actual phase :math:`\\varphi` in decimal representation."
msgstr "En la imagen tenemos los mismos histogramas, pero a la izquierda tenemos en el eje x la cadena con bits de fase :math:`\\varphi_1`, :math:`\\varphi_2` y a la derecha la fase real :math:`\\varphi` en representación decimal."

#: ../../tutorials/textbook/01_IQPE.ipynb:643
msgid "As we expected we have found :math:`\\varphi=\\frac{1}{4}=0.25` with a :math:`100\\%` probability."
msgstr "Como esperábamos, hemos encontrado :math:`\\varphi=\\frac{1}{4}=0.25` con una probabilidad de :math:`100\\%`."

#: ../../tutorials/textbook/01_IQPE.ipynb:655
msgid "IPE example with a 2-qubit gate"
msgstr "Ejemplo de IPE con una compuerta de 2 qubits"

#: ../../tutorials/textbook/01_IQPE.ipynb:657
msgid "Now, we want to apply the IPE algorithm to estimate the phase for a 2-qubit gate :math:`U`. For this example, let’s consider the controlled version of the :math:`T` gate, i.e. the gate :math:`U=\\textrm{Controlled-}T` (that from now we will express more compactly with :math:`CT`). Its matrix is"
msgstr "Ahora, queremos aplicar el algoritmo IPE para estimar la fase para una compuerta :math:`U` de 2 qubits. Para este ejemplo, consideremos la versión controlada de la compuerta :math:`T`, es decir, la compuerta :math:`U=\\textrm{Controlled-}T` (que a partir de ahora expresaremos de manera más compacta con :math:`CT`). Su matriz es"

#: ../../tutorials/textbook/01_IQPE.ipynb:659
msgid " CT =\n"
"\\begin{bmatrix}\n"
"1 & 0 & 0 & 0\\\\\n"
"0 & 1 & 0 & 0\\\\\n"
"0 & 0 & 1 & 0\\\\\n"
"0 & 0 & 0 & e^\\frac{i\\pi}{4}\\\\\n"
"\\end{bmatrix}"
msgstr " CT =\n"
"\\begin{bmatrix}\n"
"1 & 0 & 0 & 0\\\\\n"
"0 & 1 & 0 & 0\\\\\n"
"0 & 0 & 1 & 0\\\\\n"
"0 & 0 & 0 & e^\\frac{i\\pi}{4}\\\\\n"
"\\end{bmatrix}"

#: ../../tutorials/textbook/01_IQPE.ipynb:669
msgid "That is, the :math:`CT` gate adds a phase :math:`\\pi/4` to the state :math:`|11\\rangle`, leaving unchanged the phase of the other computational basis states :math:`|00\\rangle`, :math:`|01\\rangle`, :math:`|10\\rangle`."
msgstr "Es decir, la compuerta :math:`CT` agrega una fase de :math:`\\pi/4` al estado :math:`|11\\rangle`, dejando sin cambios la fase de los otros estados de la base computacional :math:`|00\\rangle`, :math:`|01\\rangle`, :math:`|10\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:671
msgid "Let’s consider to estimate the phase :math:`\\phi=\\pi/4` for the eigenstate :math:`|11\\rangle`, we should find :math:`\\varphi=1/8`, since :math:`\\phi = 2 \\pi \\varphi`. Therefore to estimate the phase we need exactly 3 classical bits, i.e. \\ :math:`m=3`, since :math:`1/2^3=1/8`. So :math:`\\varphi=0.\\varphi_1\\varphi_2\\varphi_3`."
msgstr "Consideremos estimar la fase :math:`\\phi=\\pi/4` para el estado propio :math:`|11\\rangle`, deberíamos encontrar :math:`\\varphi=1/8`, ya que :math:`\\phi = 2 \\pi \\varphi`. Por lo tanto, para estimar la fase necesitamos exactamente 3 bits clásicos, es decir, \\ :math:`m=3`, ya que :math:`1/2^3=1/8`. Entonces :math:`\\varphi=0.\\varphi_1\\varphi_2\\varphi_3`."

#: ../../tutorials/textbook/01_IQPE.ipynb:673
msgid "As done with the example for the 1-qubit :math:`U` operator we will go through the same steps but this time we will have :math:`3` steps since :math:`m=3`, and we will not repeat all the explanations. So for details see the above example for 1-qubit :math:`U` gate."
msgstr "Como se hizo con el ejemplo para el operador :math:`U` de 1 qubit, seguiremos los mismos pasos, pero esta vez tendremos :math:`3` pasos ya que :math:`m=3`, y no repetiremos todas las explicaciones. Entonces, para obtener más detalles, consulta el ejemplo anterior para la compuerta :math:`U` de 1 qubit."

#: ../../tutorials/textbook/01_IQPE.ipynb:675
msgid "First, we initialize the circuit with 3 qubits, 1 for the auxiliary qubit and 2 for the 2-qubit gate, and 3 classical bits to store the phase bits :math:`\\varphi_1`, :math:`\\varphi_2`, :math:`\\varphi_3`."
msgstr "Primero, inicializamos el circuito con 3 qubits, 1 para el qubit auxiliar y 2 para la compuerta de 2 qubits, y 3 bits clásicos para almacenar los bits de fase :math:`\\varphi_1`, :math:`\\varphi_2`, :math:`\\varphi_3`."

#: ../../tutorials/textbook/01_IQPE.ipynb:704
msgid "Now we build the quantum circuit for the first step, to estimate the least significant phase bit :math:`\\varphi_m=\\varphi_3`."
msgstr "Ahora construimos el circuito cuántico para el primer paso, para estimar el bit de fase menos significativo :math:`\\varphi_m=\\varphi_3`."

#: ../../tutorials/textbook/01_IQPE.ipynb:709
msgid "We initialize the auxiliary qubit and the other qubits with the eigenstate :math:`|11\\rangle`."
msgstr "Inicializamos el qubit auxiliar y los otros qubits con el estado propio :math:`|11\\rangle`."

#: ../../tutorials/textbook/01_IQPE.ipynb:744
msgid "Then we have to apply multiple times the :math:`CU` operator, that, in this example, is the Controlled-\\ :math:`CT` gate (:math:`CCT` for short)."
msgstr "Luego tenemos que aplicar varias veces el operador :math:`CU`, que, en este ejemplo, es la compuerta Controlada-\\ :math:`CT` (:math:`CCT` para abreviar)."

#: ../../tutorials/textbook/01_IQPE.ipynb:746
msgid "To implement :math:`CCT` in the circuit, since :math:`T` is a phase gate, we can use the multi-controlled phase gate :math:`\\text{MCP}(\\theta)`, with :math:`\\theta=\\pi/4`."
msgstr "Para implementar :math:`CCT` en el circuito, ya que :math:`T` es una compuerta de fase, podemos usar la compuerta de fase multicontrolada :math:`\\text{MCP}(\\theta)`, con :math:`\\theta=\\pi/4`."

#: ../../tutorials/textbook/01_IQPE.ipynb:778
msgid "Let’s apply :math:`2^t` times :math:`\\text{MCP}(\\pi/4)`. Since for the first step :math:`t=m-1` and :math:`m=3`, we have :math:`2^t=4`."
msgstr "Apliquemos :math:`2^t` veces :math:`\\text{MCP}(\\pi/4)`. Dado que para el primer paso :math:`t=m-1` y :math:`m=3`, tenemos :math:`2^t=4`."

#: ../../tutorials/textbook/01_IQPE.ipynb:813
msgid "Finally, we perform the measurement of the auxiliary qubit in x-basis. We can use the ``x_measurement`` function defined above in the example for 1-qubit gate. In this way we have obtained the phase bit :math:`\\varphi_3` and stored it in the classical bit :math:`c_0`."
msgstr "Finalmente, realizamos la medición del qubit auxiliar en la base x. Podemos usar la función ``x_measurement`` definida anteriormente en el ejemplo para la compuerta de 1 qubit. De esta forma hemos obtenido el bit de fase :math:`\\varphi_3` y lo almacenamos en el bit clásico :math:`c_0`."

#: ../../tutorials/textbook/01_IQPE.ipynb:845
msgid "Subsequent steps (2nd, 3rd)"
msgstr "Pasos posteriores (segundo, tercero)"

#: ../../tutorials/textbook/01_IQPE.ipynb:847
msgid "Now we build the quantum circuit for the other remaining steps, the second and the third ones. As said in the first example, in these steps we have the additional sub-step of the phase correction."
msgstr "Ahora construimos el circuito cuántico para los otros pasos restantes, el segundo y el tercero. Como se dijo en el primer ejemplo, en estos pasos tenemos el subpaso adicional de la corrección de fase."

#: ../../tutorials/textbook/01_IQPE.ipynb:885
msgid "In order to extract the phase bit :math:`\\varphi_{2}`, we perform a phase correction of :math:`-\\pi\\varphi_3/2`."
msgstr "Para extraer el bit de fase :math:`\\varphi_{2}`, realizamos una corrección de fase de :math:`-\\pi\\varphi_3/2`."

#: ../../tutorials/textbook/01_IQPE.ipynb:887
msgid "So, after the reset we apply the phase gate :math:`P(\\theta)` with phase :math:`\\theta=-\\pi/2` conditioned by the classical bit :math:`c_0` (:math:`=\\varphi_3`)."
msgstr "Entonces, después del restablecimiento, aplicamos la compuerta de fase :math:`P(\\theta)` con la fase :math:`\\theta=-\\pi/2` condicionada por el bit clásico :math:`c_0` (:math:`=\\varphi_3`)."

#: ../../tutorials/textbook/01_IQPE.ipynb:921
msgid "We apply the :math:`CU` operations as we did in the first step. For the second step we have :math:`t=m-2`, hence :math:`2^t=2`. So we apply :math:`\\text{MCP}(\\pi/4)` :math:`2` times. And then we perform the x-measurement of the qubit :math:`q_0`, storing the phase bit :math:`\\varphi_2` in the bit :math:`c_1`."
msgstr "Aplicamos las operaciones :math:`CU` como hicimos en el primer paso. Para el segundo paso tenemos :math:`t=m-2`, por lo tanto :math:`2^t=2`. Entonces aplicamos :math:`\\text{MCP}(\\pi/4)` :math:`2` veces. Y luego realizamos la medición en x del qubit :math:`q_0`, almacenando el bit de fase :math:`\\varphi_2` en el bit :math:`c_1`."

#: ../../tutorials/textbook/01_IQPE.ipynb:955
msgid "All substeps of the 3rd step"
msgstr "Todos los subpasos del 3er paso"

#: ../../tutorials/textbook/01_IQPE.ipynb:957
msgid "For the 3rd and last step, we perform the reset and initialization of the auxiliary qubit as done in the second step."
msgstr "Para el tercer y último paso, realizamos el restablecimiento e inicialización del qubit auxiliar como se hizo en el segundo paso."

#: ../../tutorials/textbook/01_IQPE.ipynb:959
msgid "Then at the 3rd step we have to perform the phase correction of :math:`-2\\pi 0.0\\varphi_{2}\\varphi_{3}= -2\\pi \\left(\\frac{\\varphi_2}{4}+\\frac{\\varphi_3}{8}\\right)=-\\frac{\\varphi_2\\pi}{2}-\\frac{ \\varphi_3\\pi}{4}`, thus we have to apply 2 conditioned phase corrections, one conditioned by :math:`\\varphi_3` (:math:`=c_0`) and the other by :math:`\\varphi_2`\\ (:math:`=c_1`). To do this we have to apply the following: - gate :math:`P(-\\pi/4)` conditioned by :math:`c_0=1`, that is, by :math:`c=001` (c_if with value :math:`1`) - gate :math:`P(-\\pi/2)` conditioned by :math:`c_1=1`, that is, the gate is applied when :math:`c=010` (c_if with values :math:`2`) - gate :math:`P(-3\\pi/4)` conditioned by :math:`c_1=1` and :math:`c_0=1` that is, the gate is applied when :math:`c=011` (c_if with values :math:`3`)"
msgstr "Luego, en el tercer paso, tenemos que realizar la corrección de fase de :math:`-2\\pi 0.0\\varphi_{2}\\varphi_{3}= -2\\pi \\left(\\frac{\\varphi_2}{4}+\\frac{\\varphi_3}{8}\\right)=-\\frac{\\varphi_2\\pi}{2}-\\frac{ \\varphi_3\\pi}{4}`, por lo que tenemos que aplicar 2 correcciones de fase condicionadas, una condicionada por :math:`\\varphi_3` (:math:`=c_0`) y la otra por :math:`\\varphi_2`\\ (:math:`=c_1`). Para ello tenemos que aplicar lo siguiente: - compuerta :math:`P(-\\pi/4)` condicionada por :math:`c_0=1`, es decir, por :math:`c=001` (c_if con valor :math:`1`) - compuerta :math:`P(-\\pi/2)` condicionada por :math:`c_1=1`, es decir, la compuerta se aplica cuando :math:`c=010` (c_if con valor :math:`2`) - compuerta :math:`P(-3\\pi/4)` condicionada por :math:`c_1=1` y :math:`c_0=1` es decir, la compuerta se aplica cuando :math:`c=011` (c_if con valor :math:`3`)"

#: ../../tutorials/textbook/01_IQPE.ipynb:962
msgid "Next, the :math:`CU` operations: we apply :math:`2^t` times the :math:`\\text{MCP}(\\pi/4)` gate and since at the 3rd step :math:`t=m-3=0`, we apply the gate only once."
msgstr "A continuación, las operaciones :math:`CU`: aplicamos :math:`2^t` veces la compuerta :math:`\\text{MCP}(\\pi/4)` y dado que en el 3er paso :math:`t=m-3=0`, aplicamos la compuerta solo una vez."

#: ../../tutorials/textbook/01_IQPE.ipynb:1010
msgid "Now, we execute the circuit with the simulator without noise."
msgstr "Ahora, ejecutamos el circuito con el simulador sin ruido."

#: ../../tutorials/textbook/01_IQPE.ipynb:1040
msgid "We have obtained :math:`100\\%` probability to find :math:`\\varphi=0.125`, that is, :math:`1/8`, as expected."
msgstr "Hemos obtenido :math:`100\\%` de probabilidad de encontrar :math:`\\varphi=0.125`, es decir, :math:`1/8`, como se esperaba."

