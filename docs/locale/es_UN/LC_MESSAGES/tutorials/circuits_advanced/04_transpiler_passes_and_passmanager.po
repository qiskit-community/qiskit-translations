msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-17 13:53+0000\n"
"PO-Revision-Date: 2022-06-17 15:03\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.po\n"
"X-Crowdin-File-ID: 9128\n"
"Language: es_UN\n"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:9
msgid "Transpiler Passes and Pass Manager"
msgstr "Pases al Transpilador y Administrador de Pases"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:32
msgid "A central component of Qiskit Terra is the transpiler, which is designed for modularity and extensibility. The goal is to be able to easily write new circuit transformations (known as transpiler **passes**), and combine them with other existing passes. Which passes are chained together and in which order has a major effect on the final outcome. This pipeline is determined by a **pass manager**, which schedules the passes and also allows passes to communicate with each other by providing a shared space. In this way, the transpiler opens up the door for research into aggressive optimization of quantum circuits."
msgstr "Un componente central de Qiskit Terra es el transpilador, el cual está diseñado para modularidad y extensibilidad. El objetivo es lograr escribir fácilmente transformaciones de circuitos (conocidos como **pases** al transpilador), y combinarlos con otros pases existentes. Cuáles pases son conectados y en qué orden tiene un efecto substancial en el resultado final. Este camino es determinado por un **administrador de pases**, el cual ordena los pases y también permite que los pases se comuniquen entre sí, proporcionándoles un espacio compartido. De esta manera, el transpilador abre la puerta a la investigación sobre la optimización agresiva de los circuitos cuánticos."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:35
msgid "In this notebook, we look at the built-in passes, how to use the pass manager, and develop a simple custom transpiler pass. In order to do the latter, we first need to introduce the internal representation of quantum circuits in Qiskit, in the form of a Directed Acyclic Graph, or **DAG**. Then, we illustrate a simple swap mapper pass, which transforms an input circuit to be compatible with a limited-connectivity quantum device."
msgstr "En este cuaderno, analizamos los pases incorporados, cómo usar el administrador de pases y desarrollamos un pase personalizado simple de transpilador. Para hacer esto último, primero tenemos que introducir la representación interna de los circuitos cuánticos en Qiskit, en la forma de Grafos Acíclicos Dirigidos o **DAG** (Directed Acyclic Graph). Después, ilustramos un pase de mapeo de intercambio simple, el cual transforma un circuito de entrada para que sea compatible con un dispositivo cuántico de conectividad limitada."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:37
msgid "**Before you start**: You may need to install the ``pydot`` library and the ``graphviz`` library for the DAG plotting routines. If you are using Anaconda Python, you can install both with the ``conda`` command. If you use your system’s native Python interpreter, install ``pydot`` using the ``pip`` command, and install ``graphviz`` using your system’s native package manager (e.g. ``yum``, ``apt``, ``dnf``, ``brew``, etc.)."
msgstr "**Antes de comenzar**: Es posible que necesites instalar las librerías ``pydot`` y ``graphviz`` para las rutinas de graficado de DAG. Si usas Anaconda Python, puedes instalar ambos con el comando ``conda``. Si usas el intérprete de Python nativo a tu sistema, puedes instalar ``pydot`` con el comando ``pip``, y ``graphviz`` con el administrador de paquetes nativo a tu sistema (por ejemplo, ``yum``, ``apt``, ``dnf``, ``brew``, etc.)."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:61
msgid "PassManager object"
msgstr "Objeto PassManager"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:63
msgid "Lets you specify the set of passes you want."
msgstr "Te permite especificar el conjunto de pases que quieres."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:118
msgid "All of Qiskit’s transpiler passes are accessible from ``qiskit.transpiler.passes``."
msgstr "Todos los pases al transpilador de Qiskit son accesibles con ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:307
msgid "Different Variants of the Same Pass"
msgstr "Diferentes Variantes del Mismo Pase"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:309
msgid "There can be passes that do the same job, but in different ways. For example, the ``TrivialLayout``, ``DenseLayout`` and ``NoiseAdaptiveLayout`` all choose a layout (binding of virtual qubits to physical qubits), but use different algorithms and objectives. Similarly, the ``BasicSwap``, ``LookaheadSwap`` and ``StochasticSwap`` all insert swaps to make the circuit compatible with the coupling map. The modularity of the transpiler allows plug-and-play replacements for each pass."
msgstr "Puede haber diferentes pases que hagan lo mismo, pero de diferente manera. Por ejemplo, los pases ``TrivialLayout``, ``DenseLayout`` y ``NoiseAdaptiveLayout`` escogen una disposición (enlace entre qubits virtuales a qubits físicos), pero usan diferentes algoritmos y objetivos. Similarmente, los pases ``BasicSwap``, ``LookaheadSwap`` y ``StochasticSwap`` insertan intercambios para hacer a los circuitos compatibles con un mapa de acoplamiento. La modularidad del transpilador permite hacer cambios a los pases y ejecutarlos fácilmente."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:311
msgid "Below, we show the swapper passes all applied to the same circuit, to transform it to match a linear chain topology. You can see differences in performance, where the ``StochasticSwap`` is clearly the best. However, this can vary depending on the input circuit."
msgstr "A continuación, mostramos todos los pases de intercambio aplicados a un mismo circuito, para transformarlo para que coincida con una topología de cadena lineal. Las diferencias en rendimiento son evidentes, donde ``StochasticSwap`` es claramente el mejor. Sin embargo, esto puede variar dependiendo del circuito de entrada."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:434
msgid "Preset Pass Managers"
msgstr "Administradores de Pases Preestablecidos"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:436
msgid "Qiskit comes with several pre-defined pass managers, corresponding to various levels of optimization achieved through different pipelines of passes. Currently ``optimization_level`` 0 through 3 are supported; the higher the number, the more optimized it is, at the expense of more time. Choosing a good pass manager may take trial and error, as it depends heavily on the circuit being transpiled and the backend being targeted."
msgstr "Qiskit viene con varios administradores de pases predefinidos, que corresponden a varios niveles de optimización logrados a través de diferentes canalizaciones de pases. Actualmente, se soportan ``optimization_level`` de 0 a 3; entre más alto sea el número, más se optimizará, a expensas de un mayor tiempo. Elegir un buen administrador de pases puede requerir prueba y error, ya que depende en gran medida del circuito que se transpila y el backend al que se dirige."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:438
msgid "Here we illustrate the different levels by looking at a state synthesis circuit. We initialize four qubits to an arbitrary state, and then try to optimize the circuit that achieves this."
msgstr "Aquí ilustramos los diferentes niveles viendo el circuito de síntesis del estado. Inicializamos 4 qubits en un estado arbitrario y intentamos optimizar el circuito que logre esto."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:440
msgid "``optimization_level=0``: just maps the circuit to the backend, with no explicit optimization (except whatever optimizations the mapper does)."
msgstr "``optimization_level=0``: mapea el circuito al backend, sin optimización explicita (excepto por las optimizaciones que se hagan al mapear)."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:442
msgid "``optimization_level=1``: maps the circuit, but also does light-weight optimizations by collapsing adjacent gates."
msgstr "``optimization_level=1``: mapea el circuito, pero también hace optimizaciones ligeras colapsando compuertas adyacentes."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:444
msgid "``optimization_level=2``: medium-weight optimization, including a noise-adaptive layout and a gate-cancellation procedure based on gate commutation relationships."
msgstr "``optimization_level=2``: optimización media, incluye un diseño adaptable al ruido y un procedimiento de cancelación de compuerta basado en las relaciones de conmutación de compuerta."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:446
msgid "``optimization_level=3``: heavy-weight optimization, which in addition to previous steps, does resynthesis of two-qubit blocks of gates in the circuit."
msgstr "``optimization_level=3``: optimización intensa, que además de los pasos anteriores, hace una resíntesis de bloques de compuertas de dos qubits en el circuito."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:703
msgid "Now map this to the 20-qubit Tokyo device, with different optimization levels:"
msgstr "Ahora mapeamos esto al dispositivo Tokyo de 20-qubits, con diferentes niveles de optimización:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:871
msgid "Introducing the DAG"
msgstr "Introducción al DAG"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:882
msgid "In Qiskit, we represent circuits internally using a Directed Acyclic Graph (DAG). The advantage of this representation over a pure list of gates (i.e., *netlist*) is that the flow of information between operations are explicit, making it easier for passes to make transformation decisions without changing the semantics of the circuit."
msgstr "En Qiskit representamos a los circuitos internamente usando Grafos Acíclicos Dirigidos (Directed Acyclic Graph, DAG). La ventaja de esta representación sobre una lista pura de compuertas (es decir, *netlist*) es que el flujo de información entre operaciones es explícito, lo que facilita que los pases tomen decisiones de transformación sin cambiar la semántica del circuito."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:884
msgid "Let’s start by building a simple circuit, and examining its DAG."
msgstr "Empecemos por construir un circuito simple y examinar su DAG."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:923
msgid "In the DAG, there are three kinds of graph nodes: qubit/clbit input nodes (green), operation nodes (blue), and output nodes (red). Each edge indicates data flow (or dependency) between two nodes."
msgstr "En el DAG, hay tres tipos de nodos de grafos: nodos de entrada de qubit/clbit (verde), nodos de operación (azul) y nodos de salida (rojo). Cada borde indica el flujo de datos (o dependencia) entre dos nodos."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:956
msgid "Therefore, writing a transpiler pass means using Qiskit’s DAGCircuit API to analyze or transform the circuit. Let’s see some examples of this."
msgstr "Por lo tanto, escribir un pase al transpilador significa utilizar la API DAGCircuit de Qiskit para analizar o transformar el circuito. Veamos algunos ejemplos de esto."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:967
msgid "**a. Get all op nodes in the DAG:**"
msgstr "**a. Poner todos los nodos op en el DAG:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1022
msgid "Each node is an instance of the ``DAGOpNode`` class. Let’s examine the information stored in the second op node."
msgstr "Cada nodo es una instancia de la clase ``DAGOpNode``. Examinemos la información guardada en el segundo nodo op."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1084
msgid "**b. Add an operation to the back:**"
msgstr "**b. Añadir una operación a la parte trasera:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1116
msgid "**c. Add an operation to the front:**"
msgstr "**c. Añadir una operación a la parte delantera:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1148
msgid "**d. Substitute a node with a subcircuit:**"
msgstr "**d. Substituir un nodo con un subcircuito:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1188
msgid "Finally, after all transformations are complete, we can convert back to a regular QuantumCircuit object. This is what the transpiler does! It takes a circuit, operates on it in DAG form, and outputs a transformed circuit."
msgstr "Finalmente, después de que todas las transformaciones hayan sido completadas, podemos convertir de vuelta a un objeto QuantumCircuit. ¡Esto es lo que hace el transpilador! Toma un circuito, opera sobre el en su forma DAG, y regresa un circuito transformado."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1221
msgid "Implementing a BasicMapper Pass"
msgstr "Implementación de un Pase BasicMapper"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1232
msgid "Now that we are familiar with the DAG, let’s use it to write a transpiler pass. Here we will implement a basic pass for mapping an arbitrary circuit to a device with limited qubit connectivity. We call this the BasicMapper. This pass is included in Qiskit Terra as well."
msgstr "Ahora que estamos familiarizados con el DAG, usémoslo para escribir un pase al transpilador. Aquí vamos a implementar un pase básico para mapear un circuito arbitrario a un dispositivo con conectividad de qubits limitada. Llamamos a esto un BasicMapper. Este pase también está incluido en Qiskit Terra."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1234
msgid "The first thing to do when writing a transpiler pass is to decide whether the pass class derives from a ``TransformationPass`` or ``AnalysisPass``. Transformation passes modify the circuit, while analysis passes only collect information about a circuit (to be used by other passes). Then, the ``run(dag)`` method is implemented, which does the main task. Finally, the pass is registered inside the ``qiskit.transpiler.passes`` module."
msgstr "La primera cosa que hay que hacer al escribir un pase al transpilador es decidir si la clase del pase deriva de ``TransformationPass`` o ``AnalysisPass``. Los pases de transformación modifican el circuito, mientras que los pases de análisis solo recopilan información acerca de un circuito (para ser usada por otros pases). Luego, se implementa el método ``run(dag)``, que ejecuta la tarea principal. Finalmente, el pase se registra en el módulo ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1236
msgid "This pass functions as follows: it traverses the DAG layer-by-layer (each layer is a group of operations that does not act on independent qubits, so in theory all operations in a layer can be done independently). For each operation, if it does not already meet the coupling map constraints, the pass identifies a swap path and inserts swaps to bring the two qubits close to each other."
msgstr "Este pase funciona de la siguiente manera: atraviesa el DAG capa por capa (cada capa es un grupo de operaciones que no actúa en qubits independientes, entonces, en teoría, todas las operaciones en una capa pueden ser ejecutadas independientemente). Para cada operación, si no cumple ya las restricciones del mapa de acoplamiento, el pase identifica una ruta de intercambio e inserta swaps para acercar los dos qubits entre sí."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1238
msgid "Follow the comments in the code for more details."
msgstr "Sigue los comentarios del código para más detalles."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1354
msgid "Let’s test this pass on a small example circuit."
msgstr "Probemos este pase en un circuito pequeño de ejemplo."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1408
msgid "Now we construct a pass manager that contains our new pass. We pass the example circuit above to this pass manager, and obtain a new, transformed circuit."
msgstr "Ahora, construimos el administrador de pases que contiene a nuestro nuevo pase. Pasamos el circuito de ejemplo anterior a este administrador de pases para obtener un nuevo circuito transformado."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1504
msgid "Note that this pass only inserts the swaps necessary to make every two-qubit interaction conform to the device coupling map. It does not, for example, care about the direction of interactions, or the native gate set supported by the device. This is a design philosophy of Qiskit’s transpiler: every pass performs a small, well-defined action, and the aggressive circuit optimization is achieved by the pass manager through combining multiple passes."
msgstr "Ten en cuenta que este pase solo inserta los swaps necesarios para hacer que todas las interacciones entre dos qubits se ajusten al mapa de acoplamiento del dispositivo. No se preocupa, por ejemplo, de la dirección de las interacciones, o el conjunto de compuertas nativo soportado por el dispositivo. Esta es una filosofía de diseño del transpilador de Qiskit: cada pase realiza una acción pequeña y bien definida, y la optimización agresiva de circuitos es lograda por el administrador de pases mediante una combinación de múltiples pases."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1516
msgid "Transpiler Logging"
msgstr "Logging del Transpilador"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1518
msgid "Due to the complexity of the internal operations that the transpiler is performing it’s likely that you’ll end up in a situation where you’d like to debug an issue or just understand more of what is happening inside the transpiler when you call it. To facilitate this the transpiler emits log messages as part of its normal operation. This logging uses the Python standard library ``logging`` module to emit the log messages. Python’s standard logging was used because it allows Qiskit-Terra’s logging to integrate in a standard way with other applications and libraries."
msgstr "Debido a la complejidad de las operaciones internas que el transpilador está realizando, es probable que termines en una situación donde te gustaría depurar un problema o simplemente entender más de lo que está pasando dentro del transpilador cuando lo llamas. Para facilitar esto, el transpilador emite mensajes de registro como parte de su funcionamiento normal. Este registro utiliza el módulo ``logging`` de la biblioteca estándar de Python para emitir los mensajes de registro. El logging estándar de Python se utilizó porque permite que los registros de Qiskit-Terra se integren de manera estándar con otras aplicaciones y bibliotecas."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1521
msgid "For a more thorough introduction to Python logging refer to the `official documentation <https://docs.python.org/3/library/logging.html>`__ and the tutorials and cookbook linked off of there."
msgstr "Para una introducción más a fondo del logging de Python, consulte la `documentación oficial <https://docs.python.org/3/library/logging.html>`__ y los tutoriales y libros de código enlazados ahí."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1536
msgid "Note: Most of the logging module functions used in this section adjust global settings. If you run commands in this section it might effect the output from other cells if they are run in a different order."
msgstr "Nota: la mayoría de las funciones del módulo logging usadas aquí ajustan configuraciones globales. Si corres comandos de esta sección puede que afecte las salidas de otras celdas si son ejecutadas en diferente orden."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1552
msgid "Configuring Python Standard Library Logging"
msgstr "Configuración de la Biblioteca Estándar de Python Logging"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1554
msgid "By default Python Standard Logging only prints log messages at the ``WARNING``, ``ERROR``, or ``CRITICAL`` log levels. Since none of the logs emitted by the transpiler use these log levels (they’re all informative) you need to configure logging."
msgstr "Por defecto, el Logging Estándar de Python solo imprime mensajes en los niveles de registro ``WARNING``, ``ERROR``, o ``CRITICAL``. Ya que ninguno de los registros emitidos por el transpilador usa estos niveles de registro (todos son informativos) tienes que configurar logging."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1556
msgid "The simplest way to do this is to just run:"
msgstr "La forma más sencilla de hacer esto es simplemente ejecutar:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1579
msgid "The ``basicConfig()`` function (see the docs here: https://docs.python.org/3/library/logging.html#logging.basicConfig) configures a root handler and formatter. We also specify the `log level <https://docs.python.org/3/library/logging.html#levels>`__ to display with the ``level`` kwarg. Setting it to a level will also include and higher levels. For example, if you set it to ``'INFO'`` in addition to the ``INFO`` level this will also include the ``WARNING``, ``ERROR``, and ``CRITICAL`` log levels."
msgstr "La función ``basicConfig()`` (ver la documentación aquí: https://docs.python.org/3/library/logging.html#logging.basicConfig) configura un controlador raíz y un formateador. También especificamos el `nivel de registro <https://docs.python.org/3/library/logging.html#levels>`__ a mostrar con el kwarg ``level``. Configurarlo a un nivel también va a hacer que incluya los niveles más altos. Por ejemplo, si lo configuras al nivel ``'INFO'`` además del nivel ``INFO`` esto también va a incluir los niveles de registro ``WARNING``, ``ERROR``, and ``CRITICAL``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1581
msgid "Now the python environment in this notebook is configured to emit log messages to stderr when you run the transpiler. For example:"
msgstr "Ahora el entorno de python de este cuaderno se configura para emitir mensajes de registro a stderr cuando corras el transpilador. Por ejemplo:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1596
msgid "Note: basicConfig() will only work when called the first time it’s called. It detects if a root handler and formatter have already been setup (either by using an earlier basicConfig() call or otherwise) and does nothing if they have. Further adjustments will have to by interacting with the handler directly."
msgstr "Nota: basicConfig() solo va a funcionar cuando se ejecute por primera vez. Detecta si un controlador raíz y un formateador ya han sido configurados (ya sea mediante una llamada anterior a basicConfig() o de otra manera) y no hace nada si ya fueron configurados. Ajustes adicionales tendrán que interactuar directamente con el controlador."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1854
msgid "As you can clearly see here when calling ``transpile()`` it now prints 2 types of log messages. The first is at the ``INFO`` log level and come from the pass manager. These indicate each pass that was executed and how long that took. The second are at the ``DEBUG`` level and come from the StochasticSwap pass and describes the internal operation of that pass. It’s useful for debugging issues in the pass’s operation."
msgstr "Como puedes ver claramente aquí, al ejecutar ``transpile()`` ahora imprime 2 tipos de mensaje de registro. El primero está al nivel de registro ``INFO`` y proviene del administrador de pases. Estos indican cada pase que se ejecutó y cuánto tiempo tomó. El segundo está al nivel de registro ``DEBUG`` y proviene del pase StochasticSwap y describe la operación interna de ese pase. Es útil para depurar problemas en la operación del pase."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1866
msgid "Adjusting the log level for the transpiler"
msgstr "Ajustando el nivel de registro para el transpilador"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1868
msgid "The qiskit transpiler uses a single namespace ``qiskit.transpiler``, as used by ``logging.getLogger('qiskit.transpiler')``. This makes it very easy to adjust the log level for just the transpiler. For example if you only wish to see log messages at the INFO level or above you can run:"
msgstr "El transpilador qiskit usa un solo espacio de nombres ``qiskit.transpiler``, como lo usa ``logging.getLogger('qiskit.transpiler')``. Esto hace que sea muy fácil ajustar el nivel de registro solamente para el transpilador. Por ejemplo, si solo desea ver los mensajes de registro en el nivel INFO o superior, puede ejecutar:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2003
msgid "Setting up logging to deal with parallel execution"
msgstr "Configuración del registro para lidiar con la ejecución en paralelo"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2005
msgid "When running the transpiler with multiple circuits by default these circuits are transpiled in parallel. If you want to do this with logging enabled and be able to understand the output some additional steps are required."
msgstr "Cuando se ejecuta el transpilador con múltiples circuitos, por defecto estos circuitos se transpilan en paralelo. Si deseas hacerlo con el logging (registro) habilitado y poder entender el mensaje de salida, se necesitan algunos pasos adicionales."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2007
msgid "If you were just to enable logging as above and then pass ``transpile()`` multiple circuits you’ll get results that are difficult to decipher. For example:"
msgstr "Si habilitas el logging como se hizo arriba, y pasas ``transpile()`` a múltiples circuitos obtendrás resultados que son difíciles de descifrar. Por ejemplo:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2447
msgid "As you can see here we get log messages from all 3 circuits being transpiled together. There is no way to know which pass is part of which circuit’s transpilation. Luckily Python logging provides tools to deal with this. The simplest one is to just change the `log formatter <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ so that includes additional information so we can associate a log message with the process it came from."
msgstr "Como puedes ver, aquí obtenemos mensajes de registro de los 3 circuitos que han sido transpilados juntos. No hay manera de saber cuál pase es parte de la transpilación de qué circuito. Por suerte, el logging de Python proporciona herramientas para lidiar con esto. La mejor manera es simplemente cambiar el `formateador de registro <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ para que incluya información adicional, para que podamos asociar los mensajes de registro al proceso que lo emitió."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2470
msgid "Then rerun the ``transpile()`` call and see the new log formatter."
msgstr "Luego, vuelve a ejecutar ``transpile()`` y observa el nuevo formateador de registro."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2906
msgid "Now the format for the log messages has been changed and it includes a process name for each of the transpilation processes so it’s at least clear which log messages go together."
msgstr "Ahora el formato de mensajes de registro ha sido cambiado e incluye el nombre del proceso para cada proceso de transpilación para que por lo menos sea claro que mensajes de registro van juntos."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2908
msgid "There are many different options for how you can configure, this example is pretty limited. Refer to the documentation for more examples and options to build more sophisticated use cases that suit your specific use case or preferences."
msgstr "Hay muchas opciones de cómo puedes configurar, este ejemplo es bastante limitado. Consulta la documentación para más ejemplos y opciones para construir casos de uso más sofisticados que se adapten a tu caso específico o a tus preferencias."

