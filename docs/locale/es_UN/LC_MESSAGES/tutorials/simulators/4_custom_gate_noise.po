msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-21 23:45\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"
"Language: es_UN\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/simulators/4_custom_gate_noise.ipynb`__."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "Aplicar ruido a compuertas unitarias personalizadas"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "Este cuaderno muestra cómo añadir compuertas unitarias personalizadas a un circuito cuántico, y utilizarlas para simulaciones de ruido en Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "Creación de operadores de matriz"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "Podemos utilizar la clase ``Operator`` en ``qiskit.quantum_info`` para representar operadores de matriz arbitrarios. Si el operador es unitario, entonces puede ser añadido a un circuito cuántico y utilizado para simulación en Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "Vamos a crear dos operadores a continuación para una compuerta CNOT y una compuerta iSWAP:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "**Nota:** La matriz está especificada con respecto al producto tensorial: :math:`U_{b}\\otimes U_{a}` para los qubits especificados por la lista ``[a, b]``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "Uso de operadores en circuitos"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Vamos a demostrar cómo se pueden utilizar estos en un circuito. Consideraremos un ejemplo de implementación de una compuerta CNOT descompuesta en términos de compuertas de un solo qubit y la compuerta iSWAP de la siguiente manera."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:185
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "Ten en cuenta que hemos asignado una *etiqueta* opcional de ``\"iswap\"`` al unitario cuando es insertado. Esto nos permite identificar este unitario en un ``NoiseModel`` de Qiskit Aer para que podamos añadir errores a estas compuertas unitarias personalizadas en simulaciones de circuito ruidosas."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:196
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "Podemos confirmar que este circuito devuelve la salida correcta utilizando la clase ``Operator`` como un simulador para el circuito:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:254
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "Y para confirmar que la salida es correcta, podemos calcular la fidelidad promedio de la compuerta:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:300
msgid "Creating a custom unitary in a noise model"
msgstr "Creación de un unitario personalizado en un modelo de ruido"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:302
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "El ``AerSimulator`` de Qiskit Aer admite la simulación de operadores unitarios arbitrarios directamente según lo especificado por la ``\"unitary\"`` en las compuertas base."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:347
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "Esto nos permite añadir modelos de ruido a unitarios arbitrarios en nuestra simulación cuando los identificamos utilizando el argumento opcional ``label`` de ``QuantumCircuit.unitary``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:349
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "Ahora haremos esto creando un ``NoiseModel`` que incluye un canal de error cuántico en nuestra compuerta iSWAP personalizada. Para nuestro ejemplo crearemos un error de 2 qubits que consiste de dos canales de amortiguamiento de amplitud de un solo bit con diferentes parámetros de amortiguamiento. Por ahora supondremos que todas las otras instrucciones del circuito son ideales."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:381
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "Ten en cuenta que cuando añadimos un error a una etiqueta personalizada como ``\"iswap\"``, el ``NoiseModel`` no sabe a qué compuerta se supone que va a aplicar esta etiqueta, así que debemos añadir manualmente la cadena de compuerta deseada al modelo de ruido ``basis_gates``. Esto asegura que el compilador se descompondrá a las compuertas base correctas para la simulación del modelo de ruido. Esto se puede hacer utilizando la función ``NoiseModel.add_basis_gates``:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:426
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr "Por defecto, las compuertas base de un modelo de ruido son ``['cx','id','u3']`` más cualquier compuerta base estándar ``AerSimulator`` que se agregue al modelo de ruido."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:438
msgid "Simulating a custom unitary noise model"
msgstr "Simulación de un modelo de ruido unitario personalizado"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:449
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr "Primero tomemos nuestro circuito CX anterior y agreguemos una compuerta Hadamard inicial y una medición final para crear un circuito de preparación de estado de Bell que podemos simular en el ``AerSimulator`` tanto para el caso ideal como para el ruidoso:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:517
msgid "Ideal output"
msgstr "Salida ideal"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:519
msgid "Let’s first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "Primero veamos la salida ideal. Dado que esto genera un estado de Bell, esperamos dos picos para 00 y 11."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:557
msgid "Noisy circuit execution"
msgstr "Ejecución del circuito ruidoso"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:559
msgid "Finally, let’s now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "Finalmente, vamos ahora a simularlo con nuestro modelo de ruido personalizado. Dado que hay un pequeño error de amortiguamiento de amplitud en las compuertas de dos qubits, esperamos pequeños picos adicionales para las probabilidades de salida 01 y 10."

