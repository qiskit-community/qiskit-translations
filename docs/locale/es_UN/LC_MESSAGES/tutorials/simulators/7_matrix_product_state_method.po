msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-21 23:45\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/7_matrix_product_state_method.po\n"
"X-Crowdin-File-ID: 9172\n"
"Language: es_UN\n"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:10
msgid "This page was generated from `tutorials/simulators/7_matrix_product_state_method.ipynb`__."
msgstr "Esta página fue generada a partir de `tutorials/simulators/7_matrix_product_state_method.ipynb`__."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:9
#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:26
msgid "Matrix product state simulation method"
msgstr "Método de simulación de estado del producto de matriz"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Simulation methods"
msgstr "Métodos de simulación"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:14
msgid "The ``AerSimulator`` has several simulation methods including ``statevector``, ``stabilizer``, ``extended_stabilizer`` and ``matrix_product_state``. Each of these determines the internal representation of the quantum circuit and the algorithms used to process the quantum operations. They each have advantages and disadvantages, and choosing the best method is a matter of investigation. In this tutorial, we focus on the ``matrix product state simulation method``."
msgstr "El ``AerSimulator`` tiene varios métodos de simulación que incluyen ``statevector``, ``stabilizer``, ``extended_stabilizer`` y ``matrix_product_state``. Cada uno de estos determina la representación interna del circuito cuántico y los algoritmos utilizados para procesar las operaciones cuánticas. Cada uno tiene ventajas y desventajas, y elegir el mejor método es una cuestión de investigación. En este tutorial, nos enfocamos en el ``método de simulación del estado del producto de matriz``."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:28
msgid "This simulation method is based on the concept of ``matrix product states``. This structure was initially proposed in the paper *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. There are additional papers that describe the structure in more detail, for example *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."
msgstr "Este método de simulación se basa en el concepto de ``estados de producto de matriz``. Esta estructura se propuso inicialmente en el artículo *Efficient classical simulation of slightly entangled quantum computations* de Vidal en https://arxiv.org/abs/quant-ph/0301063. Hay artículos adicionales que describen la estructura con más detalle, por ejemplo *The density-matrix renormalization group in the age of matrix product states* de Schollwoeck https://arxiv.org/abs/1008.3477."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:39
msgid "A pure quantum state is usually described as a state vector, by the expression :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."
msgstr "Un estado cuántico puro generalmente se describe como un vector de estado, mediante la expresión :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:41
msgid "The state vector representation implies an exponential size representation, regardless of the actual circuit. Every quantum gate operating on this representation requires exponential time and memory."
msgstr "La representación del vector de estado implica una representación de tamaño exponencial, independientemente del circuito en sí. Cada compuerta cuántica que opera en esta representación requiere tiempo y memoria exponenciales."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:43
msgid "The matrix product state (MPS) representation offers a local representation, in the form: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, such that all the information contained in the :math:`c_{i_1 \\ldots i_n}`, can be generated out of the MPS representation."
msgstr "La representación de estado del producto de matriz (matrix product state, MPS) ofrece una representación local, en la forma: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, de modo que toda la información contenida en :math:`c_{i_1 \\ldots i_n}`, se puede generar a partir de la representación MPS."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:54
msgid "Every :math:`\\Gamma^{[i]}` is a tensor of complex numbers that represents qubit :math:`i`. Every :math:`\\lambda^{[i]}` is a matrix of real numbers that is used to normalize the amplitudes of qubits :math:`i` and :math:`i+1`. Single-qubit gates operate only on the relevant tensor."
msgstr "Cada :math:`\\Gamma^{[i]}` es un tensor de números complejos que representa al qubit :math:`i`. Cada :math:`\\lambda^{[i]}` es una matriz de números reales que se utiliza para normalizar las amplitudes de los qubits :math:`i` e :math:`i+1`. Las compuertas de un solo qubit operan solo en el tensor relevante."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:56
msgid "Two-qubit gates operate on consecutive qubits :math:`i` and :math:`i+1`. This involves a tensor-contract operation over :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` and :math:`\\lambda^{[i+1]}`, that creates a single tensor. We apply the gate to this tensor, and then decompose back to the original structure. This operation may increase the size of the respective tensors. Gates that involve two qubits that are not consecutive, require a series of swap gates to bring the two qubits next to each other and then the reverse swaps."
msgstr "Las compuertas de dos qubits operan en qubits consecutivos :math:`i` e :math:`i+1`. Esto implica una operación de contracción de tensor sobre :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` y :math:`\\lambda^{[i+1]}`, que crea un solo tensor. Aplicamos la compuerta a este tensor y luego descomponemos de nuevo a la estructura original. Esta operación puede incrementar el tamaño de los respectivos tensores. Las compuertas que involucran dos qubits que no son consecutivos, requieren una serie de compuertas de intercambio para poner los dos qubits uno al lado del otro y luego los intercambios inversos."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:59
msgid "In the worst case, the tensors may grow exponentially. However, the size of the overall structure remains ‘small’ for circuits that do not have ‘many’ two-qubit gates. This allows much more efficient operations in circuits with relatively ‘low’ entanglement. Characterizing when to use this method over other methods is a subject of current research."
msgstr "En el peor de los casos, los tensores pueden crecer exponencialmente. Sin embargo, el tamaño de la estructura general sigue siendo ‘pequeño’ para los circuitos que no tienen ‘muchas’ compuertas de dos qubits. Esto permite operaciones mucho más eficientes en circuitos con un entrelazamiento relativamente ‘bajo’. Caracterizar cuándo utilizar este método sobre otros métodos es un tema de investigación actual."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:71
msgid "Using the matrix product state simulation method"
msgstr "Usar el método de simulación de estado del producto de matriz"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:73
msgid "The matrix product state simulation method is invoked in the ``AerSimulator`` by setting the simulation method. Other than that, all operations are controlled by the ``AerSimulator`` itself, as in the following example:"
msgstr "El método de simulación del estado del producto de matriz se invoca en el ``AerSimulator`` configurando el método de simulación. Aparte de eso, todas las operaciones están controladas por el propio ``AerSimulator``, como en el siguiente ejemplo:"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:137
msgid "To see the internal state vector of the circuit we can use the ``save_statevector`` instruction. To return the full internal MPS structure we can also use the ``save_matrix_product_state`` instruction."
msgstr "Para ver el vector de estado interno del circuito, podemos usar la instrucción ``save_statevector``. Para devolver la estructura MPS interna completa, también podemos usar la instrucción ``save_matrix_product_state``."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:218
msgid "Running circuits using the matrix product state simulation method can be fast, relative to other methods. However, if we generate the state vector during the execution, then the conversion to state vector is, of course, exponential in memory and time, and therefore we don’t benefit from using this method. We can benefit if we only do operations that don’t require printing the full state vector. For example, if we run a circuit and then take measurement. The circuit below has 200 qubits. We create an ``EPR state`` involving all these qubits. Although this state is highly entangled, it is handled well by the matrix product state method, because there are effectively only two states."
msgstr "La ejecución de circuitos que utilizan el método de simulación de estado del producto de matriz puede ser rápida, en comparación con otros métodos. Sin embargo, si generamos el vector de estado durante la ejecución, entonces la conversión a vector de estado es, por supuesto, exponencial en memoria y tiempo y, por lo tanto, no nos beneficiamos con el uso de este método. Podemos beneficiarnos si solo realizamos operaciones que no requieran imprimir el vector de estado completo. Por ejemplo, si ejecutamos un circuito y luego tomamos mediciones. El circuito de abajo tiene 200 qubits. Creamos un ``estado EPR`` que involucra a todos estos qubits. Aunque este estado está muy entrelazado, se maneja bien con el método de estado del producto de matriz, porque efectivamente solo hay dos estados."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:221
msgid "We can handle more qubits than this, but execution may take a few minutes. Try running a similar circuit with 500 qubits! Or maybe even 1000 (you can get a cup of coffee while waiting)."
msgstr "Podemos manejar más qubits que esto, pero la ejecución puede tardar unos minutos. ¡Intenta ejecutar un circuito similar con 500 qubits! O tal vez incluso 1000 (puedes tomar una taza de café mientras esperas)."

