msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-05 12:11+0000\n"
"PO-Revision-Date: 2023-06-05 13:31\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/deprecation_policy.po\n"
"X-Crowdin-File-ID: 9836\n"

#: ../../deprecation_policy.rst:3
msgid "Deprecation Policy"
msgstr "Política de Obsolescencia"

#: ../../deprecation_policy.rst:5
msgid "Many users and other packages depend on different parts of Qiskit.  We must make sure that whenever we make changes to the code, we give users ample time to adjust without breaking code that they have already written."
msgstr "Muchos usuarios y otros paquetes dependen de diferentes partes de Qiskit. Debemos asegurarnos de que cada vez que hagamos cambios en el código, demos a los usuarios tiempo suficiente para ajustarse sin romper el código que ya han escrito."

#: ../../deprecation_policy.rst:9
msgid "Most importantly: *do not* change any interface that is public-facing unless we absolutely have to.  Adding things is ok, taking things away is annoying for users but can be handled reasonably with plenty notice, but changing behavior generally means users cannot write code that will work with two subsequent versions of Qiskit, which is not acceptable."
msgstr "Lo más importante: *no* cambies ninguna interfaz pública a menos que sea absolutamente necesario. Agregar cosas está bien, quitar cosas es molesto para los usuarios, pero se puede manejar razonablemente con mucha anticipación, pero cambiar el comportamiento generalmente significa que los usuarios no pueden escribir código que funcione con dos versiones posteriores de Qiskit, lo cual no es aceptable."

#: ../../deprecation_policy.rst:15
msgid "Beware that users will often be using functions, classes and methods that we, the Qiskit developers, may consider internal or not widely used.  Do not make assumptions that \"this is buried, so nobody will be using it\"; if it is public, it is subject to the policy.  The only exceptions here are functions and modules that are explicitly internal, *i.e.* those whose names begin with a leading underscore (``_``)."
msgstr "Ten en cuenta que los usuarios a menudo utilizarán funciones, clases y métodos que nosotros, los desarrolladores de Qiskit, podemos considerar internos o no muy utilizados. No hagas suposiciones de que \"esto está enterrado, por lo que nadie lo usará\"; si es público, está sujeto a la política. Las únicas excepciones aquí son funciones y módulos que son explícitamente internos, *es decir*, aquellos cuyos nombres comienzan con un guion bajo (``_``)."

#: ../../deprecation_policy.rst:22
msgid "The guiding principles are:"
msgstr "Los principios rectores son:"

#: ../../deprecation_policy.rst:24
msgid "we must not remove or change code without active warnings for least three months or two complete version cycles;"
msgstr "no debemos eliminar ni cambiar el código sin advertencias activas durante al menos tres meses o dos ciclos de versión completos;"

#: ../../deprecation_policy.rst:27
msgid "there must always be a way to achieve valid goals that does not issue any warnings;"
msgstr "siempre debe haber una forma de lograr objetivos válidos que no emita advertencias;"

#: ../../deprecation_policy.rst:30
msgid "never assume that a function that isn't explicitly internal isn't in use;"
msgstr "nunca asumas que una función que no es explícitamente interna no está en uso;"

#: ../../deprecation_policy.rst:32
msgid "all deprecations, changes and removals are considered API changes, and can only occur in minor releases not patch releases, per the :ref:`stable branch policy <stable_branch_policy>`."
msgstr "todas las obsolescencias, cambios y eliminaciones se consideran cambios de API y solo pueden ocurrir en versiones menores, no en versiones de parches, según la :ref:`política de rama estable <stable_branch_policy>`."

#: ../../deprecation_policy.rst:39
msgid "Removing a feature"
msgstr "Eliminación de una característica"

#: ../../deprecation_policy.rst:41
msgid "When removing a feature (for example a class, function or function parameter), we will follow this procedure:"
msgstr "Al eliminar una característica (por ejemplo, una clase, función o parámetro de función), seguiremos este procedimiento:"

#: ../../deprecation_policy.rst:44
msgid "The alternative path must be in place for one minor version before any warnings are issued.  For example, if we want to replace the function ``foo()`` with ``bar()``, we must make at least one release with both functions before issuing any warnings within ``foo()``.  You may issue ``PendingDeprecationWarning``\\ s from the old paths immediately."
msgstr "La ruta alternativa debe estar en su lugar para una versión secundaria antes de que se emitan advertencias. Por ejemplo, si queremos reemplazar la función ``foo()`` con ``bar()``, debemos hacer al menos una liberación con ambas funciones antes de emitir cualquier advertencia dentro de ``foo()``. Puedes emitir ``PendingDeprecationWarning``\\ s desde las rutas inmediatamente anteriores."

#: ../../deprecation_policy.rst:50
msgid "*Reason*: we need to give people time to swap over without breaking their code as soon as they upgrade."
msgstr "*Motivo*: necesitamos darles a las personas tiempo para cambiar sin romper su código tan pronto como actualicen."

#: ../../deprecation_policy.rst:53
msgid "After the alternative path has been in place for at least one minor version, :ref:`issue the deprecation warnings <issuing-deprecation-warnings>`.  Add a release note with a ``deprecations`` section listing all deprecated paths, their alternatives, and the reason for deprecation.  :ref:`Update the tests to test the warnings <testing-deprecated-functionality>`."
msgstr "Después de que la ruta alternativa haya estado presente en al menos una versión menor, se deben :ref:`emitir las advertencias de desaprobación <issuing-deprecation-warnings>`. Agrega una nota de la versión con una sección de ``deprecations`` que enumere todas las rutas obsoletas, sus alternativas y el motivo de la obsolescencia. :ref:`Actualiza las pruebas para probar las advertencias <testing-deprecated-functionality>`."

#: ../../deprecation_policy.rst:59
msgid "*Reason*: removals must be highly visible for at least one version, to minimize the surprise to users when they actually go."
msgstr "*Motivo*: las eliminaciones deben ser muy visibles en al menos una versión, a fin de minimizar la sorpresa de los usuarios cuando realmente se vayan."

#: ../../deprecation_policy.rst:62
msgid "Set a removal date for the old feature, and remove it (and the warnings) when reached.  This must be at least three months after the version with the warnings was first released, and cannot be the minor version immediately after the warnings.  Add an ``upgrade`` release note that lists all the removals.  For example, if the alternative path was provided in ``0.19.0`` and the warnings were added in ``0.20.0``, the earliest version for removal is ``0.22.0``, even if ``0.21.0`` was released more than three months after ``0.20.0``."
msgstr "Establece una fecha de eliminación para la función anterior y elimínala (junto con las advertencias) cuando suceda. Esto debe ser al menos tres meses después de que se lanzó por primera vez la versión con las advertencias, y no puede ser la versión secundaria inmediatamente después de las advertencias. Agrega una nota de lanzamiento de ``upgrade`` que enumere todas las eliminaciones. Por ejemplo, si la ruta alternativa se proporcionó en ``0.19.0`` y las advertencias se agregaron en ``0.20.0``, la primera versión para la remoción es ``0.22.0``, incluso si ``0.21.0`` se lanzó más de tres meses después de ``0.20.0``."

#: ../../deprecation_policy.rst:73
msgid "These are *minimum* requirements.  For removal of significant or core features, give users at least an extra minor version if not longer."
msgstr "Estos son requisitos *mínimos*. Para la eliminación de funciones importantes o principales, proporciona a los usuarios al menos una versión menor adicional, si no es que más."

#: ../../deprecation_policy.rst:76
msgid "*Reason*: there needs to be time for users to see these messages, and to give them time to adjust.  Not all users will update their version of Qiskit immediately, and some may skip minor versions."
msgstr "*Motivo*: debe haber tiempo para que los usuarios vean estos mensajes y darles tiempo para adaptarse. No todos los usuarios actualizarán su versión de Qiskit inmediatamente y algunos pueden omitir versiones menores."

#: ../../deprecation_policy.rst:80
msgid "When a feature is marked as deprecated it is slated for removal, but users should still be able to rely on it to work correctly.  We consider a feature marked \"deprecated\" as frozen; we commit to maintaining it with critical bug fixes until it is removed, but we won't merge new functionality to it."
msgstr "Cuando una función se marca como obsoleta, está programada para su eliminación, pero los usuarios aún deberían poder confiar en que funcionará correctamente. Consideramos una característica marcada como \"obsoleta\" como congelada; nos comprometemos a mantenerlo con correcciones de errores críticos hasta que sea eliminada, pero no le agregaremos nueva funcionalidad."

#: ../../deprecation_policy.rst:87
msgid "Changing behavior"
msgstr "Cambio de comportamiento"

#: ../../deprecation_policy.rst:89
msgid "Changing behavior without a removal is particularly difficult to manage, because we need to have both options available for two versions, and be able to issue warnings.  For example, changing the type of the return value from a function will almost invariably involve making an API break, which is frustrating for users and makes it difficult for them to use Qiskit."
msgstr "Cambiar el comportamiento sin una eliminación es particularmente difícil de administrar, porque necesitamos tener ambas opciones disponibles para dos versiones y poder emitir advertencias. Por ejemplo, cambiar el tipo de valor de retorno de una función implicará casi invariablemente hacer un rompimiento de la API, lo que es frustrante para los usuarios y les dificulta el uso de Qiskit."

#: ../../deprecation_policy.rst:95
msgid "The best solution here is often to make a new function, and then use :ref:`the procedures for removal <removing-features>` above."
msgstr "La mejor solución aquí es a menudo hacer una nueva función y luego usar :ref:`los procedimientos para la eliminación <removing-features>` anteriores."

#: ../../deprecation_policy.rst:98
msgid "If you absolutely must change the behavior of existing code (other than fixing bugs), you will need to use your best judgment to apply the guiding principles at the top of this document.  The most appropriate warning for behavioral changes is usually ``FutureWarning``.  Some possibilities for how to effect a change:"
msgstr "Si es absolutamente necesario cambiar el comportamiento del código existente (aparte de corregir errores), deberás usar tu mejor criterio para aplicar los principios rectores que se encuentran en la parte superior de este documento. La advertencia más adecuada para los cambios de comportamiento suele ser ``FutureWarning``. Algunas posibilidades de cómo efectuar un cambio:"

#: ../../deprecation_policy.rst:104
msgid "If you are changing the default behavior of a function, consider adding a keyword argument to select between old and new behaviors.  When it comes time, you can issue a ``FutureWarning`` if the keyword argument is not given (*e.g.* if it is ``None``), saying that the new value will soon become the default.  You will need to go through the normal deprecation period for removing this keyword argument after you have made the behavior change.  This will take at least six months to go through both cycles."
msgstr "Si estás cambiando el comportamiento predeterminado de una función, considera agregar un argumento de palabra clave para seleccionar entre comportamientos antiguos y nuevos. Cuando llegue el momento, puedes emitir una ``FutureWarning`` si no se proporciona el argumento de palabra clave (*por ejemplo* si es ``None``), diciendo que el nuevo valor pronto se convertirá en el valor predeterminado. Deberás pasar por el período normal de desuso para eliminar este argumento de palabra clave después de haber realizado el cambio de comportamiento. Esto llevará al menos seis meses para pasar por ambos ciclos."

#: ../../deprecation_policy.rst:112
msgid "If you need to change the return type of a function, consider adding a new function that returns the new type, and then follow the procedures for deprecating the old function."
msgstr "Si necesitas cambiar el tipo de devolución de una función, considera agregar una nueva función que devuelva el nuevo tipo y luego sigue los procedimientos para obsoletar la función anterior."

#: ../../deprecation_policy.rst:116
msgid "If you need to accept a new input that you cannot distinguish from an existing possibility because of its type, consider letting it be passed by a different keyword argument, or add a second function that only accepts the new form."
msgstr "Si necesitas aceptar una nueva entrada que no puedes distinguir de una posibilidad existente debido a su tipo, considera dejar que se pase por un argumento de palabra clave diferente o agrega una segunda función que solo acepte la nueva forma."

#: ../../deprecation_policy.rst:124
msgid "Issuing deprecation warnings"
msgstr "Emisión de advertencias de obsolescencia"

#: ../../deprecation_policy.rst:126
msgid "The proper way to raise a deprecation warning is to use the decorators ``@deprecate_arg`` and ``@deprecate_func`` from ``qiskit.utils.deprecation``. These will generate a standardized message and and add the deprecation to that function's docstring so that it shows up in the docs."
msgstr ""

#: ../../deprecation_policy.rst:142
msgid "Usually, you should set ``additional_msg: str `` with the format ``\"Instead, use ...\"`` so that people know how to migrate. Read those functions' docstrings for additional arguments like ``pending: bool`` and ``predicate``."
msgstr ""

#: ../../deprecation_policy.rst:146
msgid "If you are deprecating in a non-Terra repo, set ``package_name``, e.g. to ``qiskit-nature``. Alternatively, if you prefer to use your own decorator helpers, then have them call ``add_deprecation_to_docstring`` from ``qiskit.utils.deprecation``."
msgstr ""

#: ../../deprecation_policy.rst:150
msgid "If ``@deprecate_func`` and ``@deprecate_arg`` cannot handle your use case, consider improving them. Otherwise, you can directly call the ``warn`` function from the `warnings module in the Python standard library <https://docs.python.org/3/library/warnings.html>`__, using the category ``DeprecationWarning``.  For example:"
msgstr ""

#: ../../deprecation_policy.rst:170
msgid "Make sure you include the version of the package that introduced the deprecation warning (so maintainers can easily see when it is valid to remove it), and what the alternative path is."
msgstr "Asegúrate de incluir la versión del paquete que introdujo la advertencia de obsolescencia (para que los mantenedores puedan ver fácilmente cuándo es válido eliminarlo) y cuál es la ruta alternativa."

#: ../../deprecation_policy.rst:174
msgid "Take note of the ``stacklevel`` argument.  This controls which function is accused of being deprecated.  Setting ``stacklevel=1`` (the default) means the warning will blame the ``warn`` function itself, while ``stacklevel=2`` will correctly blame the containing function.  It is unusual to set this to anything other than ``2``, but can be useful if you use a helper function to issue the same warning in multiple places."
msgstr "Toma nota del argumento ``stacklevel``. Esto controla qué función se acusa de estar en desuso. Establecer ``stacklevel=1`` (predeterminado) significa que la advertencia responsabilizará a la función ``warn`` en sí misma, mientras que ``stacklevel=2`` responsabilizará correctamente a la función contenedora. Es inusual establecer esto en algo que no sea ``2``, pero puede ser útil si usas una función auxiliar para emitir la misma advertencia en varios lugares."

#: ../../deprecation_policy.rst:185
msgid "Testing deprecated functionality"
msgstr "Prueba de funcionalidad obsoleta"

#: ../../deprecation_policy.rst:187
msgid "Whenever you add deprecation warnings, you will need to update tests involving the functionality.  The test suite should fail otherwise, because of the new warnings.  We must continue to test deprecated functionality throughout the deprecation period, to ensure that it still works."
msgstr "Cada vez que agregues advertencias de obsolescencia, deberás actualizar las pruebas relacionadas con la funcionalidad. De lo contrario, el conjunto de pruebas debería fallar debido a las nuevas advertencias. Debemos continuar probando la funcionalidad en desuso durante el período de desuso, para asegurarnos de que aún funcione."

#: ../../deprecation_policy.rst:192
msgid "To update the tests, you need to wrap each call of deprecated behavior in its own assertion block.  For subclasses of ``unittest.TestCase`` (which all Qiskit test cases are), this is done by:"
msgstr "Para actualizar las pruebas, debes envolver cada llamada de comportamiento obsoleto en su propio bloque de aserción. Para las subclases de ``unittest.TestCase`` (que son todos los casos de prueba de Qiskit), esto se hace de la siguiente manera:"

#: ../../deprecation_policy.rst:206
msgid "Documenting deprecations and breaking changes"
msgstr "Documentación de obsolescencias y cambios importantes"

#: ../../deprecation_policy.rst:208
msgid "It is important to warn the user when your breaking changes are coming."
msgstr ""

#: ../../deprecation_policy.rst:210
msgid "``@deprecate_arg`` and ``@deprecate_func`` will automatically add the deprecation to the docstring for the function so that it shows up in docs."
msgstr ""

#: ../../deprecation_policy.rst:213
msgid "If you are not using those decorators, you should directly add a `Sphinx deprecated directive <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#directive-deprecated>`__ ::"
msgstr ""

#: ../../deprecation_policy.rst:229
msgid "def deprecated_function():"
msgstr ""

#: ../../deprecation_policy.rst:219
msgid "\"\"\" Short description of the deprecated function."
msgstr ""

#: ../../deprecation_policy.rst:222
msgid "The function qiskit.deprecated_function() is deprecated since Qiskit Terra 0.20.0, and will be removed 3 months or more later. Instead, you should use qiskit.other_function()."
msgstr ""

#: ../../deprecation_policy.rst:227
msgid "<rest of the docstring> \"\"\" # ... the rest of the function ..."
msgstr ""

#: ../../deprecation_policy.rst:231
msgid "You should also document the deprecation in the changelog by using Reno. Explain the deprecation and how to migrate."
msgstr ""

#: ../../deprecation_policy.rst:234
msgid "In particular situations where a deprecation or change might be a major disruptor for users, a *migration guide* might be needed. Once the migration guide is written and published, deprecation messages and documentation should link to it (use the ``additional_msg: str`` argument for ``@deprecate_arg`` and ``@deprecate_func``)."
msgstr ""

