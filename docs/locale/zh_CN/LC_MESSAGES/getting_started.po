msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-03 12:57+0000\n"
"PO-Revision-Date: 2023-11-03 14:54\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: Chinese Simplified\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "入门指南"

#: ../../getting_started.rst:10
msgid "Installation"
msgstr "安装"

#: ../../getting_started.rst:12
msgid "Let's get started using Qiskit!  The first thing to do is choose how you're going to run and install the packages.  There are three main ways to do this:"
msgstr ""

#: ../../getting_started.rst
msgid "Start locally"
msgstr ""

#: ../../getting_started.rst:19
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr ""

#: ../../getting_started.rst:23
msgid "You will need to `download Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ on your local system to get started. `Jupyter <https://jupyter.org/install>`__ is recommended for interacting with Qiskit."
msgstr ""

#: ../../getting_started.rst:27
msgid "We recommend using `Python virtual environments <https://docs.python.org/3.10/tutorial/venv.html>`__ to cleanly separate Qiskit from other applications and improve your experience."
msgstr ""

#: ../../getting_started.rst:30
msgid "Create a minimal environment with only Python installed in it."
msgstr ""

#: ../../getting_started.rst:36
msgid "Activate your new environment."
msgstr ""

#: ../../getting_started.rst:43
msgid "Note: if you are using Windows, use the following commands in PowerShell."
msgstr ""

#: ../../getting_started.rst:51
msgid "Next, install the Qiskit package."
msgstr ""

#: ../../getting_started.rst:57
msgid "If the packages were installed correctly, you can run ``pip list`` to see the active packages in your virtual environment."
msgstr ""

#: ../../getting_started.rst:60
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr ""

#: ../../getting_started.rst:67
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr ""

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr ""

#: ../../getting_started.rst:76
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr ""

#: ../../getting_started.rst
msgid "Install from source"
msgstr ""

#: ../../getting_started.rst:92
msgid "Installing Qiskit from source allows you to access the current development version, instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr ""

#: ../../getting_started.rst:97
msgid "Begin by making a new virtual environment and activating it:"
msgstr ""

#: ../../getting_started.rst:104
msgid "Installing from source requires that you have the Rust compiler on your system. To install the Rust compiler the recommended path is to use rustup, which is a cross-platform Rust installer. To use rustup you can go to:"
msgstr ""

#: ../../getting_started.rst:108
msgid "https://rustup.rs/"
msgstr "https://rustup.rs/"

#: ../../getting_started.rst:110
msgid "which will provide instructions for how to install rust on your platform. Besides rustup there are `other installation methods <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ available too."
msgstr ""

#: ../../getting_started.rst:114
msgid "Once the Rust compiler is installed, you are ready to install Qiskit."
msgstr ""

#: ../../getting_started.rst:116
msgid "Clone the Qiskit repository."
msgstr ""

#: ../../getting_started.rst:122
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr ""

#: ../../getting_started.rst:128
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr ""

#: ../../getting_started.rst:134
msgid "Install ``qiskit-terra``."
msgstr "安装 ``qiskit-terra``。"

#: ../../getting_started.rst:140
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr ""

#: ../../getting_started.rst:147
msgid "Installing in editable mode will build the compiled extensions in debug mode without optimizations. This will affect the runtime performance of the compiled code. If you'd like to use editable mode and build the compiled code in release with optimizations enabled you can run:"
msgstr ""

#: ../../getting_started.rst:156
msgid "after you run pip and that will rebuild the binary in release mode. If you are working on Rust code in Qiskit you will need to rebuild the extension code every time you make a local change. ``pip install -e .`` will only build the Rust extension when it's called, so any local changes you make to the Rust code after running pip will not be reflected in the installed package unless you rebuild the extension. You can leverage the above ``build_rust`` command to do this (with or without ``--release`` based on whether you want to build in debug mode or release mode)."
msgstr ""

#: ../../getting_started.rst:165
msgid "You can then run the code examples after installing Qiskit. You can run the example with the following command."
msgstr ""

#: ../../getting_started.rst:175
msgid "Platform Support"
msgstr "平台支持"

#: ../../getting_started.rst:177
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit 力求支持尽可能多的平台，但由于可用的测试资源及平台可用性的限制，并非所有平台都可以支持。 对 Qiskit 的平台支持分为 3 层，每层的支持级别各有不同。 对于这些平台之外的平台， Qiskit 可能仍可安装，但未经过测试，您将不得不从源代码构建 Qiskit (和可能的 Qiskit 相关依赖) 。"

#: ../../getting_started.rst:184
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "此外， Qiskit 仅支持 CPython。 当前不支持使用其他 Python 解释器。"

#: ../../getting_started.rst:188
msgid "Tier 1"
msgstr "第 1 层"

#: ../../getting_started.rst:190
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "第 1 层支持的平台在开发过程的上游经过完全的测试，以确保任何提议的改变都能正常运行。 预编译的二进制文件被构建、测试和发布到 PyPI 作为发布过程的一部分。 由于所有依赖关系都在这些平台上可用，因此这些平台只需要一个可以正常运行的 Python 环境就可以安装。"

#: ../../getting_started.rst:196
msgid "Tier 1 platforms are currently:"
msgstr "第 1 层平台当前为:"

#: ../../getting_started.rst:198
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)."
msgstr ""

#: ../../getting_started.rst:201
msgid "macOS x86_64 (10.9 or newer)"
msgstr "macOS x86_64 (10.9 或更高版本)"

#: ../../getting_started.rst:202
msgid "Windows 64 bit"
msgstr "Windows 64 位"

#: ../../getting_started.rst:205
msgid "Tier 2"
msgstr "第 2 层"

#: ../../getting_started.rst:207
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "在开发过程中，第 2 层平台不会在上游进行测试。 但是，预先编译的二进制文件将作为发行版过程的一部分构建，测试并发布到 PyPI ，并且这些包可以仅使用一个正常运行的Python环境安装。"

#: ../../getting_started.rst:212
msgid "Tier 2 platforms are currently:"
msgstr "第 2 层平台当前为:"

#: ../../getting_started.rst:214
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Linux i686 (Python的发行版本与 \"manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ 打包规范 \" 兼容的分发版 ) < 3.10"

#: ../../getting_started.rst:217
msgid "Windows 32 bit for Python < 3.10"
msgstr "Windows 32 位的 Python < 3.10"

#: ../../getting_started.rst:218
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64 (Python的发行版本与 `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ 打包规范兼容的分发版)"

#: ../../getting_started.rst:223
msgid "Tier 3"
msgstr "第 3 层"

#: ../../getting_started.rst:225
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "在开发过程中，第 3 层平台不会在上游进行测试。  预编译二进制文件构建并发布到 PyPI 作为释放过程的一部分，完全没有测试。 仅使用一个正常运行的Python环境可能无法安装它们，可能还需要 C/C++ 编译器或其他程序作为安装过程的一部分从源代码构建依赖关系。 对这些平台的支持只尽了最大的努力。"

#: ../../getting_started.rst:232
msgid "Tier 3 platforms are currently:"
msgstr "第 3 层平台当前为:"

#: ../../getting_started.rst:234
msgid "Linux ppc64le (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr ""

#: ../../getting_started.rst:237
msgid "Linux s390x (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr ""

#: ../../getting_started.rst:240
msgid "macOS arm64 (10.15 or newer)"
msgstr "\n"
"macOS arm64 (10.15 或更高版本)"

#: ../../getting_started.rst:241
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Linux i686 (Python的发行版本与 \"manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ 打包规范 \" 兼容的分发版 ) >= 3.10"

#: ../../getting_started.rst:244
msgid "Windows 32 bit for Python >= 3.10"
msgstr "Windows 32 位的 Python >= 3.10"

#: ../../getting_started.rst:247
msgid "Ready to get going?..."
msgstr "准备好开始了吗？"

