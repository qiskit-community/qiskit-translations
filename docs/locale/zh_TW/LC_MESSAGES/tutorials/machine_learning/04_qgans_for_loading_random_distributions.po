msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-16 15:09\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9470\n"
"Language: zh_TW\n"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "此頁面是從 `tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb `__ 產生的。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/04_qgans_for_loading_random_distributions.ipynb>`_."
msgstr "在 `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/04_qgans_for_loading_random_distributions.ipynb>`_中互動執行。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "用於載入隨機分佈的 qGANs"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr "給定 :math:`k' 維資料樣本，我們採用了量子生成對抗網路（quantum Generative Adversarial Network, qGAN）來學習資料的基礎隨機分佈，並將其直接載入到量子狀態："

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle\n\n"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "其中， :math:`p_{\\theta}^{j}` 說明基底態的發生機率 :math:`\\big| j\\rangle`."

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "量子生成對抗網路（qGAN）訓練的目的是產生一個 態 :math:`\\big| g_{\\theta}\\rangle`，其中 :math:`p_{\\theta}^{j}`, 對於 :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, 敘述一個接近於訓練資料分佈的機率分佈 :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "如需詳細資料，請參閱 `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal， Lucchi， Woerner* [2019]."

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <../finance/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "如需如何使用訓練過的qGAN在財務衍生工具的計價範例，請參閱` 使用qGANs做選擇權計價（Option Pricing with qGANs） <..finance/10_qgan_option_pricing.ibynb>`__ 的教學。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:57
msgid "Load the Training Data"
msgstr "載入訓練資料"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:59
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "首先，我們需要載入 :math:`k' 維訓練資料樣本（這裡 k=1）。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:61
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "接下來，設定資料解析度，例如， min/max 資料的最大/最小值，以及用來代表每一個資料維度的量子位元數目。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:96
msgid "Initialize the qGAN"
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:98
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, a variational quantum circuit, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:100
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` variational form that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "為了實現量子產生器，我們選擇了實現 :math:\"R_Y\" 旋轉和 :math:`CZ` 閘的深度-\\ :math:`1' 的變分形式，以均勻分佈為輸入狀態。 值得注意的是，對於 :math:`k>1` 產生器的參數必須小心選擇。 例如，電路深度應該是 :math:`>1` ，因為更高的電路深度能代表更複雜的結構。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:102
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-aqua#optional-installs>`__ for more information."
msgstr "這裡使用的古典鑑別器，是使用 NumPy 的類神經網路實作而成。 也有基於 PyTorch 的鑑別器，其在安裝Qiskit時並未預設安裝，如需相關資訊，請參閱「自訂安裝（Optional Install） <https://github.com/Qiskit/qiskit-aqua#optional-installs>`__ 」。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:104
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "在這裡，這兩個網路都會使用 ADAM 最佳化演算法進行更新（ADAM 是 qGAN 最佳化工具預設值）。"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:165
msgid "Run the qGAN Training"
msgstr "執行 qGAN 訓練"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:167
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "在訓練期間，鑑別器與產生器的參數會對於以下損失函數做交替更新："

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:169
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:171
msgid "and"
msgstr "以及"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:173
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:178
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:180
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:246
msgid "Training Progress & Outcome"
msgstr "訓練進度與成果"

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:248
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr ""

#: ../../tutorials/machine_learning/04_qgans_for_loading_random_distributions.ipynb:250
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "最後，我們還將訓練分佈的累積分佈函數（CDF）與目標分佈的 CDF 進行比較。"

