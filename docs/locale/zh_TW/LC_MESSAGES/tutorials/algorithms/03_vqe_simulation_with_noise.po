msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-03-30 13:46\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: zh_TW\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "這個頁面是從`tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__所產生的。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "此筆記本示範使用 `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` ，根據給定的雜訊模型來執行含有雜訊的模擬。這對於在不同雜訊條件下的行為進行調查很有用。 Aer 不僅可以讓您定義自己的自訂雜訊模型，也可讓雜訊模型根據真實量子元件的特性而輕易地被建立。後者是這個筆記本將展示的，因為目標是顯示有雜訊的 VQE ，而不是如何建立自訂雜訊模型的更複雜的任務。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/documentation/apidoc/ignis.html>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "`Qiskit Ignis <https://qiskit.org/documentation/apidoc/ignis.html>`__ 提供一個解決方案，以減少在雜訊模擬或實際量子元件上執行時的測量誤差。此解決方案被``QuantumInstance`` 模組所利用，它允許使用它的任何演算法自動開啟具有測量雜訊降低功能。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "關於 Qiskit Aer 雜訊模型的更多信息可以在線上 `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__ 中找到，還有關於 `building noise models<../simulators/3_building_noise_models.ipynb>`__的教程。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "關於 Qiskit Ignis 中減少測量誤差的更多信息可以在 `測量誤差緩解<https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>` 的教程中找到。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit."
msgstr "利用VQE尋找哈密頓量最小能量(基態) 的範例，噪音模擬會在這裡被演示 ，找到哈密頓量的最小（地面狀態）能量，但該技術適用於 Qiskit 的任何量子演算法。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Nature, for an H2 molecule, so we can quickly create an Operator."
msgstr "因此，對於 VQE，我們需要一個量子位元算子作為輸入。在這裡，再一次，我們會拿一組由 Qiskit Nature 所計算出來的 paulis ，用於一個 H2 分子，這樣我們就可以快速建立一個算子。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:99
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "由於上述問題使用古典仍然很容易解決，我們可以使用 NumPyMinimumEigensolver 來計算參考值，以便稍後我們比較結果。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:147
msgid "Performance *without* noise"
msgstr "*無*雜訊下的表現"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:149
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "首先，我們在不添加雜訊的情況下在模擬器上運行以查看結果。我已經創建了後端和 QuantumInstance，它用來保存了後端以及其他各種運行時的配置，這些配置是預設的，所以對與下一個添加雜訊的部分很容易進行比較。因為我們沒有嘗試降低此筆記本中的雜訊或任何東西，因此後面的 VQE 設置和運行是相同的。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:213
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "我們在收斂過程中獲得了其能量值，因此我們可以在下圖中看到發生了什麼。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:272
msgid "Performance *with* noise"
msgstr "*有*雜訊下的表現"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:274
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:276
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "首先，我們需要獲得一個實際的元件後台，從它的 ``configuration`` 和 ``properties`` 我們可以繪製耦合圖和雜訊模型來與元件匹配。雖然我們可以讓模擬器使用預設的所有對所有的映射，這解釋了如何設置耦合圖。注意:我們也可以選擇使用這個耦合圖作為變分形式的糾纏映射。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:278
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:406
msgid "Note: simulation with noise will take longer than without noise."
msgstr "注意:以雜訊模擬的時間會比沒有雜訊的時間更長。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:280
msgid "Terra Mock Backends:"
msgstr "Terra 模擬後端"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:282
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "我們將使用對應於儲存在 Qiskit Terra 內日期的 IBM Quantum 設備真實噪音數據。具體而言，在此教程中，使用的設備是 ``ibmq_vigo``。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:402
msgid "Performance *with* noise and measurement error mitigation"
msgstr "效能*具有*雜訊與降低測量誤差"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:404
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "現在我們將添加減少測量誤差的方法，這增加了測量的真實性。這裡我們選擇``CompleteMeasFitter`` 來減少測量誤差。校準矩陣將每 30 分鐘自動刷新一次(預設值)。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:496
msgid "Lets bring the results together here for a summary."
msgstr "讓我們在這裡匯總結果以進行總結。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:498
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "我們使用古典演算法生成了一個參考值，然後繼續在 qasm 模擬器上運行 VQE。雖然模擬是理想的(沒有雜訊)，但由於採樣而產生所謂的雜訊 - 隨著越來越多的樣本被採集，增加運行數量會減少雜訊，但預設值為 1024 我們看到對結果產生了一個小的影響。"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:500
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "然後我們使用從真實元件上取下的模型添加雜訊，可以看到結果受到影響。最後，我們添加了測量雜訊降低，以嘗試降低量子位元在古典設備中測量的雜訊影響。"

