msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-09-09 13:16\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_convergence.po\n"
"X-Crowdin-File-ID: 9446\n"
"Language: zh_TW\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr "此頁面是從 `tutorials/algorithms/02_vqe_convergence.ipynb`__ 所產生的。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr "觀察 VQE 收斂"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid "Variational algorithms in Qiskit, like `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ and `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, provide the option for a user to give a callback method that can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "Qiskit 中的變分演算法(如 `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ 和 `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__)提供了一個選項給使用者，可用來監視最佳化進度的回呼方法，隨著演算法運算並收斂到其最小值。優化器會呼叫每一個功能評估的回呼，並提供現行優化器的數值、評估計數、現行優化器參數等。請注意，視特定優化器而定，這可能不是優化器的每一個反覆運算(步驟)，例如，如果優化器呼叫成本函數來計算有限差異型的梯度，則會透過回呼來顯示此值。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid "This notebook demonstrates using Qiskit’s VQE algorithm to plot graphs of the convergence path to ground state energy with a selected set of optimizers."
msgstr "此筆記本示範使用 Qiskit 的 VQE 演算法，以選定的一組優化器來針對基態收斂的情形作圖。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:43
msgid "First we create a qubit operator for VQE. Here we will use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Nature for an H2 molecule."
msgstr "首先，我們會建立 VQE 的量子位元算子。在這裡，我們將使用演算法簡介中使用的相同算子，這原本是 Qiskit Nature 為了計算 H2 分子的算子。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:68
msgid "We will show the callback usage below over a set of optimizers for comparison. The minimum energy of the H2 Hamiltonian can be found quite easily so we are able to set maxiters to a small value"
msgstr "我們將展示如何在一組優化器中使用回呼法以進行比較。這可以讓我們很容易地找到 H2 Hamiltonian 的最小能量，故能夠將 maxiters 設定為一個小數值"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:128
msgid "Now from the callback data we stored we can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:163
msgid "Finally since the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value for the solution. We can now plot the difference from the resultant exact solution as the energy converges with VQE towards the minimum value which should be that exact classical solution."
msgstr "最後，由於上述問題仍很容易被追蹤，因此我們可以使用 NumPyMinimumEigensover 來計算解決方案的參照值。我們現在可以根據產生的精確解決方案來繪製不同的解決方案，因為能量會與 VQE 轉換成最小的值，而這應該是精確的古典解決方案。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:232
msgid "Using Gradient framework"
msgstr "使用 Gradient 架構"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:234
msgid "Qiskit now has a Gradient framework as part of the Opflow capability. With the gradient computed for the optimizer we now see just the optimization steps themselves."
msgstr "Qiskit 現在有一個 Gradient 架構，作為 Opflow 功能的一部分。由於優化器的梯度已經計算好，我們現在只會看到最佳化步驟本身。"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:315
msgid "Monitoring via the logging"
msgstr "透過登錄表來監測"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:317
msgid "Much of the code is instrumented with `Python logging <https://docs.python.org/3/library/logging.html>`__ statements. The logging is configurable to adjust level of logging etc. Here we set the logging level to ``INFO``"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:340
msgid "and at INFO level logging VQE will include information on the evaluations, as below."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:342
msgid "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"
msgstr "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"

