msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-15 08:14\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9342\n"
"Language: zh_TW\n"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:10
msgid "This page was generated from `tutorials/finance/01_portfolio_optimization.ipynb`__."
msgstr "此教程是從 `教程/金融/01_投資組合優化.ipynb`__ 產生的。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/01_portfolio_optimization.ipynb>`_."
msgstr "在`IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/01_portfolio_optimization.ipynb>`_.中執行。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:9
msgid "*Portfolio Optimization*"
msgstr "*投資組合優化*"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "簡介"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "此教程教導如何求出 :math:`n` 資產的均值方差投資組合最佳化問題："

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:25
msgid ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"
msgstr ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:27
msgid "where we use the following notation:"
msgstr "我們將使用下列表示法："

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:29
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0， 1\\}^n` 表示二進位決策變數的向量，指出要挑選哪些資產（:math:`x[i] = 1`），而哪些資產該被捨棄（:math:`x[i] = 0`），"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:30
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` 定義為資產的預期報酬"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:31
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` 專指資產之間的共變異數"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:32
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` 控制決策者的風險偏好，"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:33
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr "以及 :math:`B` 指的是預算，即從 :math:`n中提出的資產數。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:35
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr "我們實施下列簡化：所有資產都是一樣的價格（簡化為價格為1），總預算:math:`B` 必須被花光（必須確切選擇:math:`B`種資產）。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:37
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Variational Quantum Eigensolver (VQE) or the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal solution for a given set of parameters."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:39
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019."
msgstr "以下論文中針對此問題的實際量子硬體進行了實驗：“Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019”"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:71
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr "[Optional] 設定token以在實際裝置上執行實驗"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:73
msgid "If you would like to run the experiment on a real device, you need to setup your account first."
msgstr "如果您想要在實際裝置上執行實驗，則需要先設定您的帳戶。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:75
msgid "Note: If you do not store your token yet, use ``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr "附註：如果您還沒有token，請首先使用 ``IBMQ.save_account（'MY_API_TOKEN'）`並儲存 。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:87
msgid "Define problem instance"
msgstr "定義問題"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:89
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "這裡會為我們的哈密頓量建立運算子實例。 在這種情況下， paulis 是從組合問題翻譯的 Ising 哈密頓哈密頓。 我們對這個筆記本使用隨機組合問題的解覺方案。 並將此延伸至使用實際財務資料，如下所示： `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:154
msgid "We define some utility methods to print the results in a nice format."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:196
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPimMinimEigensolver （為古典電腦的對比）"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:198
msgid "Lets solve the problem. First classically…"
msgstr "首先，讓我們來用古典的方法解決問題..."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:200
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for ‘ising’. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr ""

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:284
msgid "Solution using VQE"
msgstr "使用 VQE 求解"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:286
msgid "We can now use the Variational Quantum Eigensolver (VQE) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "只要改一下優化器還有變數表單，我們就可以使用 Variational Quantum Eigensolver （VQE）來解決這個問題。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:288
msgid "Note: You can switch to different backends by providing the name of backend."
msgstr "附註：您可以提供後端的名稱來切換至不同的後端。"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:382
msgid "Solution using QAOA"
msgstr "使用QAOA的解決方案"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:384
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (QAOA). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "我們也在這裡使用「量子近似最佳化演算法（ QAOA ）」來顯示結果。 這是另一個差異演算法，其中的不同是他將使用基於問題建立的內部變數表單用於運算。"

