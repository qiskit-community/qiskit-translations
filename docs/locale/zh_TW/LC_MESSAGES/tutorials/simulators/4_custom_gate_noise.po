msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 21:04+0000\n"
"PO-Revision-Date: 2023-03-02 21:43\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "此頁面是從 `tutorials/simulators/4_custom_gate_noise.ipynb`__產生的。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "將雜訊作用於自定義的么正閘"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "簡介"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "此筆記本會顯示如何將自定義么正閘新增至量子電路，並在 Qiskit Aer 中使用它們進行雜訊模擬。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "建立矩陣算子"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "我們可以使用 ``qiskit.quantum_info`` 中的 `Operator`` 類別來代表任意矩陣算子。 如果該算子是么正算子就可被新增至量子電路中，並被用在 Qiskit Aer 上進行模擬。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "讓我們為 CNOT 閘和 iSWAP 閘建立以下兩個算子："

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "**Note：** 針對張量積 :math:`U_{b}\\otimes U_{a}` 代表清單 ``[a， b]`` 中的 quits 指定矩陣。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "在電路中使用算符"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "讓我們示範如何在電路中使用這些方法。 我們將考慮實施一個 CNOT 閘的例子，以單量子位元閘和 iSWAP 閘的方式分解，如下所示。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:186
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "請注意，在插入這個么正矩陣時，我們已為它加上一個可選的標籤 ``\"iswap\"``。這讓我們能在 Qiskit Aer ``NoiseModel`` 中識別這個么正矩陣，這樣一來，我們就可以在具有雜訊的電路模擬中為自訂的么正閘新增誤差。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:197
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "我們可以確認，作為該電路的模擬器，此電路使用 ``Operator`` 類別傳回正確的輸出："

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:256
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "要確認該輸出是正確的，我們可以計算其平均閘保真度："

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:303
msgid "Creating a custom unitary in a noise model"
msgstr "在雜訊模型中建立一個自訂的么正矩陣"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:305
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "Qiskit Aer ``AerSimulator`` 支援由基底閘中的 ``\"unitary\"`` 直接指定的對任意么正運算子的模擬。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:351
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "當我們使用 ``QuantumCircuit.unitary`` 的可選 ``label`` 引數識別它們時，這允許我們將雜訊模型添加到我們的模擬中的任意么正閘。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:353
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "現在我們將建立一個 ``NoiseModel`` ，其中包括在我們自訂 iSWAP 閘上的一個量子誤差通道。 舉例，我們將會建立一個雙量子位元誤差，此誤差由兩個具有不同阻尼參數的單量子位元振幅阻尼通道組成。 目前我們將假設除此之外的所有電路指令都是理想的。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:385
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "請注意，當我們將誤差新增至自訂標籤(例如 ``\"iswap\"``)時，``NoiseModel`` 不知道此標籤應該套用到的閘，因此我們必須手動將想要的套用的閘的字串新增至該雜訊模型 ``basis_gates``。 這可確保該編譯器將回歸到該雜訊模型模擬的正確基底閘。 這可以使用 ``NoiseModel.add_basis_gates`` 函數來完成："

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:431
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr "依預設，雜訊模型的基底閘為 ``['cx','id','u3']`` 加上任何新增至該雜訊模型的標準 ``AerSimulator`` 基底閘。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:443
msgid "Simulating a custom unitary noise model"
msgstr "模擬一個自訂的么正雜訊模型"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:454
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr "讓我們先取得先前的 CX 電路，並新增起始 Hadamard 閘和最終測量，以建立 Bell 狀態準備電路，我們可以在 \" ` AerSimulator`` 上模擬出理想和雜訊的情況："

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:523
msgid "Ideal output"
msgstr "理想輸出"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:525
msgid "Let’s first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "讓我們先看看理想的輸出。 因為這會產生 Bell 狀態，我們預期在 00 和 11會有兩個峰。"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:563
msgid "Noisy circuit execution"
msgstr "執行雜訊電路"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:565
msgid "Finally, let’s now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "最後，讓我們現在用我們的自訂噪音模型來模擬它。 由於雙量子位元閘的振幅衰減很小，所以我們預期 01 和 10 的結果機率會有小的額外峰值。"

