msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-08-03 11:47\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/3_measurement_error_mitigation.po\n"
"X-Crowdin-File-ID: 9136\n"
"Language: zh_TW\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:10
msgid "This page was generated from `tutorials/noise/3_measurement_error_mitigation.ipynb`__."
msgstr "此頁面是從 `tutorials/noise/3_measurement_error_mitigation.ipynb`__ 產生的。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:9
msgid "Measurement Error Mitigation"
msgstr "測量誤差緩解"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:21
msgid "Introduction"
msgstr "簡介"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:23
msgid "The measurement calibration is used to mitigate measurement errors. The main idea is to prepare all :math:`2^n` basis input states and compute the probability of measuring counts in the other basis states. From these calibrations, it is possible to correct the average results of another experiment of interest. This notebook gives examples for how to use the ``ignis.mitigation.measurement`` module."
msgstr "測量校準是用來減輕測量誤差。 主要的做法是準備所有 :math:`2^n` 基底輸入狀態並計算其他基底狀態下測得的機率。 從這些校準中，可以更正另一個我們感興趣的實驗之平均結果。 此記事本提供了範例說明如何使用 ``ignis.mitigation.measuret`` 模組。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:57
msgid "3 Qubit Example of the Calibration Matrices"
msgstr "三量子位元的校準矩陣範例"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:68
msgid "Assume that we would like to generate a calibration matrix for the 3 qubits Q2, Q3 and Q4 in a 5-qubit Quantum Register [Q0,Q1,Q2,Q3,Q4]."
msgstr "假設我們要為五量子位元暫存器 [Q0,Q1,Q2,Q3,Q4] 中的三個量子位元Q2、Q3 和 Q4 生成校準矩陣。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:70
msgid "Since we have 3 qubits, there are :math:`2^3=8` possible quantum states."
msgstr "由於我們有 3 個量子位元，所以有 :math:`2^3=8` 種可能的量子態。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:82
msgid "Generating Measurement Calibration Circuits"
msgstr "產生測量校準電路"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:84
msgid "First, we generate a list of measurement calibration circuits for the full Hilbert space. Each circuit creates a basis state. If there are :math:`n=3` qubits, then we get :math:`2^3=8` calibration circuits."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:95
msgid "The following function **complete_meas_cal** returns a list **meas_calibs** of ``QuantumCircuit`` objects containing the calibration circuits, and a list **state_labels** of the calibration state labels."
msgstr "下列函數 **complete_meas_cal** 會傳回包含校準電路的 ``QuantumCircuit`` 物件清單**meas_calibs**，以及校準狀態標籤的清單 **state_labels** 。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:97
msgid "The input to this function can be given in one of the following three forms:"
msgstr "此函數的輸入可以用下列三種格式的其中一種方式來提供："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:99
msgid "**qubit_list:** A list of qubits to perform the measurement correction on, or:"
msgstr "**qubit_list:** 是要對以下執行測量更正的量子位元清單，或："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:100
msgid "**qr (QuantumRegister):** A quantum register, or:"
msgstr "**qr (QuantumRegister):** 一個量子暫存器，或："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:101
msgid "**cr (ClassicalRegister):** A classical register."
msgstr "**cr (ClassicalRegister):** 一個古典暫存器。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:103
msgid "In addition, one can provide a string **circlabel**, which is added at the beginning of the circuit names for unique identification."
msgstr "此外，我們還可以提供一個字串 **circlabel**，它會被新增在電路名稱的開頭，以進行唯一識別。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:105
msgid "For example, in our case, the input is a 5-qubit ``QuantumRegister`` containing the qubits Q2,Q3,Q4:"
msgstr "例如，在此情況中，輸入是一個包含量子位元 Q2, Q3 和 Q4 的五量子位元的 ``QuantumRegister``:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:129
msgid "Print the :math:`2^3=8` state labels (for the 3 qubits Q2,Q3,Q4):"
msgstr "列印 :math:`2^3=8` 個狀態標籤(對應於其3量子位元 Q2,Q3,Q4)："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:171
msgid "Computing the Calibration Matrix"
msgstr "計算校準矩陣"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:173
msgid "If we do not apply any noise, then the calibration matrix is expected to be the :math:`8 \\times 8` identity matrix."
msgstr "如果我們不添加任何雜訊，那麽校準矩陣應等於 :math:`8 \\times 8` 個單位矩陣。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:242
msgid "Assume that we apply some noise model from Qiskit Aer to the 5 qubits, then the calibration matrix will have most of its mass on the main diagonal, with some additional ‘noise’."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:244
msgid "Alternatively, we can execute the calibration circuits using an IBMQ provider."
msgstr "或者，我們也可以使用 IBMQ provider 來執行校準電路。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:347
msgid "Analyzing the Results"
msgstr "分析結果"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:349
msgid "We would like to compute the total measurement fidelity, and the measurement fidelity for a specific qubit, for example, Q0."
msgstr "我們想要計算總測量準確性，以及特定量子位元的測量保真度(fidelity)，例如， Q0。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:351
msgid "Since the on-diagonal elements of the calibration matrix are the probabilities of measuring state ‘x’ given preparation of state ‘x’, then the trace of this matrix is the average assignment fidelity."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:399
msgid "Applying the Calibration"
msgstr "套用校準"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:401
msgid "We now perform another experiment and correct the measured results."
msgstr "我們現在進行另一個實驗，並更正測量結果。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:404
msgid "Correct Measurement Noise on a 3Q GHZ State"
msgstr "修正對三量子位元 GHZ 狀態的量測雜訊"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:406
msgid "As an example, we start with the 3-qubit GHZ state on the qubits Q2,Q3,Q4:"
msgstr "作為範例，我們以三個量子位元 Q2、Q3 和 Q4 的 GHZ 狀態開始:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:408
msgid "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"
msgstr "\\mid GHZ \\rangle = \\frac{\\mid{000} \\rangle + \\mid{111} \\rangle}{\\sqrt{2}}\n\n"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:457
#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1045
msgid "We now execute the calibration circuits (with the noise model above):"
msgstr "我們現在以上方的雜訊模型執行校準電路:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:479
msgid "We now compute the results without any error mitigation and with the mitigation, namely after applying the calibration matrix to the results."
msgstr "我們現在計算沒有任何誤差緩解和有誤差緩解的結果，也就是在我們將校準矩陣套用至結果以後。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:481
msgid "There are two fitting methods for applying the calibration (if no method is defined, then ‘least_squares’ is used). - **‘pseudo_inverse’**, which is a direct inversion of the calibration matrix, - **‘least_squares’**, which constrains to have physical probabilities."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:483
msgid "The raw data to be corrected can be given in a number of forms:"
msgstr "要更正的原始資料，可以用多種形式提供："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:485
msgid "Form1: A counts dictionary from results.get_counts,"
msgstr "形式1：來自 results.get_counts 的計數字典，"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:486
msgid "Form2: A list of counts of length=len(state_labels),"
msgstr "形式2：一個 length=len(state_labels) 的計數清單，"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:487
msgid "Form3: A list of counts of length=M*len(state_labels) where M is an integer (e.g. for use with the tomography data),"
msgstr "形式3 ：一個 length=M*len(state_labels) 的計數清單，其中 M 是一個整數（例如，與斷層掃描資料一起使用），"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:488
msgid "Form4: A qiskit Result (e.g. results as above)."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:517
msgid "We can now plot the results with and without error mitigation:"
msgstr "我們現在可以繪製出有以及沒有誤差緩解的結果:"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:549
msgid "Applying to a reduced subset of qubits"
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:560
msgid "Consider now that we want to correct a 2Q Bell state, but we have the 3Q calibration matrix. We can reduce the matrix and build a new mitigation object."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:696
msgid "Tensored mitigation"
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:698
msgid "The calibration can be simplified if the error is known to be local. By “local error” we mean that the error can be tensored to subsets of qubits. In this case, less than :math:`2^n` states are needed for the computation of the calibration matrix."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:700
msgid "Assume that the error acts locally on qubit 2 and the pair of qubits 3 and 4. Construct the calibration circuits by using the function ``tensored_meas_cal``. Unlike before we need to explicitly divide the qubit list up into subset regions."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:724
msgid "We now retrieve the names of the generated circuits. Note that in each label (of length 3), the least significant bit corresponds to qubit 2, the middle bit corresponds to qubit 3, and the most significant bit corresponds to qubit 4."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:771
msgid "Let us elaborate on the circuit names. We see that there are only four circuits, instead of eight. The total number of required circuits is :math:`2^m` where :math:`m` is the number of qubits in the target subset (here :math:`m=2`)."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:773
msgid "Each basis state of qubits 3 and 4 appears exactly once. Only two basis states are required for qubit 2, so these are split equally across the four experiments. For example, state ‘0’ of qubit 2 appears in state labels ‘000’ and ‘010’."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:775
msgid "We now execute the calibration circuits on an Aer simulator, using the same noise model as before. This noise is in fact local to qubits 3 and 4 separately, but assume that we don’t know it, and that we only know that it is local for qubit 2."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:823
msgid "The fitter provides two calibration matrices. One matrix is for qubit 2, and the other matrix is for qubits 3 and 4."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:871
msgid "We can look at the readout fidelities of the individual tensored components or qubits within a set:"
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:925
msgid "Plot the individual calibration matrices:"
msgstr "繪製個別校準矩陣："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1085
msgid "Plot the raw vs corrected state:"
msgstr "繪製原始態與已更正的態："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1118
msgid "As a check we should get the same answer if we build the full correction matrix from a tensor product of the subspace calibration matrices:"
msgstr "我們可以做以下的確認。如果我們從子空間校準矩陣的張量積創建完整的修正矩陣，我們應該得到同樣的答案："

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1155
msgid "Running Qiskit Algorithms with Measurement Error Mitigation"
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1157
msgid "To use measurement error mitigation when running quantum circuits as part of a Qiskit algorithm, we need to include the respective measurement error fitting instance in the QuantumInstance. This object also holds the specifications for the chosen backend."
msgstr "若要在 Qiskit 演算法中執行量子電路時使用測量誤差緩解，我們需要在 QuantumInstance 中包含各自的測量誤差擬合實例。 此物件也會保留所選後端的規格。"

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1159
msgid "In the following, we illustrate measurement error mitigation of Aqua algorithms on the example of searching the ground state of a Hamiltonian with VQE."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1170
msgid "First, we need to import the libraries that provide backends as well as the classes that are needed to run the algorithm."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1201
msgid "Then, we initialize the instances that are required to execute the algorithm."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1231
msgid "Here, we choose the Aer ``qasm_simulator`` as backend and also add a custom noise model. The application of an actual quantum backend provided by IBMQ is outlined in the commented code."
msgstr ""

#: ../../tutorials/noise/3_measurement_error_mitigation.ipynb:1268
msgid "Finally, we can run the algorithm and check the results."
msgstr "最後，我們可以執行此演算法並檢查其結果。"

