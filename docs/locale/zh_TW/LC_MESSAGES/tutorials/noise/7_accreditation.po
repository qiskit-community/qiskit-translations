msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:39\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/7_accreditation.po\n"
"X-Crowdin-File-ID: 9144\n"
"Language: zh_TW\n"

#: ../../tutorials/noise/7_accreditation.ipynb:10
msgid "This page was generated from `tutorials/noise/7_accreditation.ipynb`__."
msgstr "此頁面是從 `tutorials/noise/7_accrelitation.ipynb`__ 產生的。"

#: ../../tutorials/noise/7_accreditation.ipynb:9
msgid "Accreditation protocol"
msgstr "認證標準流程"

#: ../../tutorials/noise/7_accreditation.ipynb:20
msgid "Accreditation Protocol (AP) is a protocol devised to characterize the reliability of noisy quantum devices."
msgstr "認證標準流程 (AP) 是一個用來量測雜訊量子元件可靠性的標準流程。"

#: ../../tutorials/noise/7_accreditation.ipynb:22
msgid "Given a noisy quantum device implementing a “target” quantum circuit, AP certifies an upper-bound on the variation distance between the probability distribution of the outputs returned by the device and the ideal probability distribution. This method is based on Ferracin et al, “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709."
msgstr "給定一個執行一個 \"目標\" 量子電路的雜訊量子元件，AP 認證該元件返回的輸出機率分佈與理想機率分佈之間的變化距離的一個上限。 該方法是基於 Ferracin et al, “Accrediting outputs of noisy intermediate-scale quantum devices”, https://arxiv.org/abs/1811.09709."

#: ../../tutorials/noise/7_accreditation.ipynb:24
msgid "This notebook gives an example for how to use the ignis.characterization.accreditation module. This particular example shows how to accredit the outputs of a 4-qubit quantum circuit of depth 5. All the circuits are run using the noisy Aer simulator."
msgstr "此筆記本提供了如何使用 ignis.characterization.accreditation 模組。 此特定範例顯示如何對深度為 5 的 4 - 量子位元量子電路的輸出進行認證 。 所有電路都是使用雜訊 Aer 模擬器執行的。"

#: ../../tutorials/noise/7_accreditation.ipynb:58
msgid "Input to the protocol"
msgstr "認證標準流程的輸入"

#: ../../tutorials/noise/7_accreditation.ipynb:69
msgid "AP can accredit the outputs of a **target circuit** that 1) Takes as input :math:`n` qubits in the state :math:`|{0}>`\\  2) Ends with single-qubit measurements in the Pauli-\\ :math:`Z` basis 3) Is made of :math:`m` “bands”, each band containing a round of single-qubit gates and a round of controlled-\\ :math:`Z` gates. The accreditation is made by employing **trap circuits**, circuits that can be efficiently simulated on a classical computer and that whose outputs are used to witness the correct functionality of the device."
msgstr "AP 對滿足以下條件的**目標量子電路 (target circuit)** 的輸出進行認證：\n"
"1) 輸入是在 :math:`|{0}>`\\ 量子態的 :math:`n` 個量子位元。\n"
"2) 最後一步是以 Pauli-\\ :math:`Z` 為基底的單一量子位元測量。\n"
"3) 它是由 :math:`m` “帶(bands)” 組成，每一個“帶”包含了一回合的單一量子位元閘和一回合的 controlled-\\ :math:`Z` 閘。\n"
"該認證運用了 **陷阱電路 (trap circuits)**。陷阱電路可有效率地被古典電腦模擬，且其輸出可被用於驗證元件功能的正確性。"

#: ../../tutorials/noise/7_accreditation.ipynb:72
msgid "Let’s now draw a target quantum circuit! We start with a simple circuit to generate and measure 4-qubits GHZ states."
msgstr "現在讓我們繪製一個目標量子電路吧！ 我們從一個簡單的電路開始，生成並測量 4-量子位元 GHZ 態。"

#: ../../tutorials/noise/7_accreditation.ipynb:126
msgid "Generating accreditation circuits"
msgstr "產生認證電路"

#: ../../tutorials/noise/7_accreditation.ipynb:137
msgid "The function :math:`accreditation\\_circuits` generates all the circuits required by AP, target and traps. It automatically appends random Pauli gates to the circuits (if the implementation is noisy, these random Pauli gates reduce the noise to Pauli errors ! )"
msgstr "此函數 :math:`accreditation\\_circuits` 會產生 AP、目標和陷阱所需要的所有電路。 它會自動將隨機 Pauli 閘 (random Pauli gates) 附加到電路中（如果該電路的執行很具有許多雜訊，這些隨機 Pauli 閘會將雜訊減少到 Pauli 錯誤 (Pauli errors)！）"

#: ../../tutorials/noise/7_accreditation.ipynb:139
msgid "It also returns the list :math:`postp\\_list` of strings required to post-process the outputs, as well as the number :math:`v\\_zero` indicating the circuit implementing the target."
msgstr "它也會傳回後置處理輸出所需的字串清單 :math:`postp\\_list`，以及指出執行該目標的電路號碼 :math:`v\\_zero`。"

#: ../../tutorials/noise/7_accreditation.ipynb:141
msgid "This is the target circuit with randomly chosen Pauli gates:"
msgstr "這是具有隨機選取 Pauli 閘的目標電路："

#: ../../tutorials/noise/7_accreditation.ipynb:176
msgid "This is how a trap looks like:"
msgstr "這是一個陷阱電路的樣子："

#: ../../tutorials/noise/7_accreditation.ipynb:206
msgid "One can use the optional twoqubitgate argument to switch use cx instead of cz gates and can arbitrarily change the coupling map, in order to compile to the desired device topology (which in this case might lead to more layers than expected)."
msgstr "我們可以利用二量子位元閘的引數來從 cz 閘切換至 cx 閘，且可以任意變更連結對映，以編譯到所需的元件拓蹼(topology)（在此情況下，可能會導致比預期更多層）。"

#: ../../tutorials/noise/7_accreditation.ipynb:242
msgid "Simulate the ideal circuits"
msgstr "模擬此理想電路"

#: ../../tutorials/noise/7_accreditation.ipynb:253
msgid "Let’s implement AP."
msgstr "讓我們執行 AP。"

#: ../../tutorials/noise/7_accreditation.ipynb:255
msgid "We use :math:`accreditation\\_circuits` to generate target and trap circuits. Then, we use the function :math:`single\\_protocol\\_run` to implement all these circuits, keeping the output of the target only if all of the traps return the correct output."
msgstr "我們使用 :math:`accreditation\\_circuits` 來產生目標和陷阱電路。 然後，我們使用函數 :math:`single\\_protocol\\_run` 來執行所有這些電路，只有在所有陷阱傳回正確的輸出地的情況下才會保留目標的輸出。"

#: ../../tutorials/noise/7_accreditation.ipynb:315
msgid "In the absence of noise, all traps return the expected output, therefore we always accept the output of the target."
msgstr "在沒有雜訊的情況下，所有陷阱會傳回預期的輸出，因此我們一律接受目標的輸出。"

#: ../../tutorials/noise/7_accreditation.ipynb:317
msgid "To obtain an upper-bound on the variation distance on the outputs of the target circuit, we need to implement AP :math:`d` times, each time with **v** different trap circuits."
msgstr "為了在目標電路的輸出上獲取變化距離的一個上限，我們需要執行 AP :math:`d` 次，每次有 **v** 個不同的陷阱電路。"

#: ../../tutorials/noise/7_accreditation.ipynb:457
msgid "The function :math:`bound\\_variation\\_distance` calculates the upper-bound on the variation distance (VD) using"
msgstr "該函數 :math:`bound\\_variation\\_distance` 會計算變異距離 (VD) 的上限。"

#: ../../tutorials/noise/7_accreditation.ipynb:459
msgid "VD\\leq \\frac{\\varepsilon}{N_{\\textrm{acc}}/d-\\theta}\\textrm{ ,}\n\n"
msgstr ""

#: ../../tutorials/noise/7_accreditation.ipynb:461
msgid "where :math:`\\theta\\in[0,1]` is a positive number and"
msgstr "其中 :math:`\\theta\\in[0,1]` 是一個正數且"

#: ../../tutorials/noise/7_accreditation.ipynb:463
msgid "\\varepsilon= \\frac{1.7}{v+1}\n\n"
msgstr ""

#: ../../tutorials/noise/7_accreditation.ipynb:465
msgid "is the maximum probability of accepting an incorrect state for the target. The function :math:`bound\\_variation\\_distance` also calculates the confidence in the bound as"
msgstr "是接受目標不正確狀態的機率上限。 函數 :math:`bound\\_variation\\_distance`也會計算連結中的信心程度"

#: ../../tutorials/noise/7_accreditation.ipynb:467
msgid "1-2\\textrm{exp}\\big(-2\\theta d^2\\big)\n\n"
msgstr ""

#: ../../tutorials/noise/7_accreditation.ipynb:520
msgid "Defining the noise model"
msgstr "定義該雜訊模型"

#: ../../tutorials/noise/7_accreditation.ipynb:531
msgid "We define a noise model for the simulator. We add depolarizing error probabilities to the controlled-\\ :math:`Z` and single-qubit gates."
msgstr "我們為模擬器定義一個雜訊模型。 我們將去極化錯誤機率新增至 controlled-\\ :math:`Z` 和單一量子位元閘。"

#: ../../tutorials/noise/7_accreditation.ipynb:561
msgid "We then implement noisy circuits and pass their outputs to :math:`single\\_protocol\\_run`."
msgstr "我們接著執行具有雜訊的電路，並將其輸出傳遞給 :math:`single\\_protocol\\_run`。"

#: ../../tutorials/noise/7_accreditation.ipynb:706
msgid "Changing the number of trap circuits per protocol run changes the upper-bound on the VD, but not the confidence."
msgstr "變更每個標準流程的陷阱電路數目會變更 VD 上的上限，但不會改變信心程度。"

#: ../../tutorials/noise/7_accreditation.ipynb:708
msgid "What number of trap circuits will ensure the minimal upper-bound for your target circuit?"
msgstr "總共需要多少個陷阱電路才能確保您的目標電路有最小上限值？"

