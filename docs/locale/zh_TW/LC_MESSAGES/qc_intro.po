msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:23\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9542\n"
"Language: zh_TW\n"

#: ../../qc_intro.rst:10
msgid "Quantum computing in a nutshell"
msgstr "簡短秒解量子計算"

#: ../../qc_intro.rst:12
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, search, optimization, and algebraic programs such as machine learning; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "量子計算在計算中代表一個新的範式，它利用量子力學的基本原理來進行計算。如果你讀到這一點，你無疑已經聽說了量子計算的前途在於能夠高效地執行一些任務，諸如質因數分解、量子模擬、搜尋、最佳化以及代數程式如機器學習；計算在規模上甚至超越了最大規模的經典計算機的能力。"

#: ../../qc_intro.rst:20
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "量子計算的力量在於量子力學的兩個基石，即 :ref:`干涉 <qc-intro-interference>` 和 :ref:`糾纏 <qc-intro-entanglement>` ，分別強調量子計算的波與粒子像性等方面。  Qiskit 是一套軟體開發套件用來進行量子計算並使用量子力學的原理來作 :ref:\"量子電路 <qc-intro-circuits>\" 的語言。量子閘、指令和經典的控制邏輯，量子電路允許量子電腦上執行以抽象的方式表達複雜的演算法和應用。在其核心， Qiskit 是一個量子電路構造、最佳化和執行引擎。額外的演算法和應用層利用量子電路，經常與經典運算資源合作，去解決最佳化、量子化學、物理、機器學習和金融等方面的問題。以下是我們對量子計算的簡要概述，以及在每個步驟中如何使用 Qiskit 的情況。有興趣的讀者請至額外深入的資料以進一步深入瞭解。"

#: ../../qc_intro.rst:39
msgid "Interference"
msgstr "干涉"

#: ../../qc_intro.rst:41
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as superpositions (or superposition states)."
msgstr "就如經典的電腦，量子電腦在位元上操作。 然而，當經典位元只能在狀態 0 和 1中找到，但量子位元或qubit以代表 0 和 1 的值，或兩者的線性組合。  這些線性組合稱為畳加（或疊加狀態）。"

#: ../../qc_intro.rst:46
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing superposition and the principle of **interference** to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "要看這個資源是如何在量子計算中使用的，我們首先轉向古典類比：噪音消除。  噪音消除，以耳機消噪為例，通過使用疊加和 **干涉的原理，去產生近似相同的頻率和振幅的音調來降低不想要的噪聲的幅度，但在兩者是以:math:`\\pi` （或 :math:`\\pi`的任何其它奇數的整數）數值令其反相來執行噪聲消除，從而降低了不想要的噪聲的幅度。"

#: ../../qc_intro.rst:57
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "通過近似相等振幅的音調，以偏移相位值:math:`\\sim \\pi`來消除噪聲訊號的近似性。"

#: ../../qc_intro.rst:60
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unencumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "如上所示，當相位差接近 :math:`\\pi`的奇數倍數時，兩波的疊加導致干涉，使輸出比原相的明顯減少。其結果是信號的利益沒有被雜訊所影響。雖然這種處理是由數位電路所完成，但振幅和相位都是無法完美匹配的連續變數，導致不完整的修正。"

#: ../../qc_intro.rst:67
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "在量子計算機上的一般計算方式與噪聲消除的方式非常相同。 一開始，一個人準備疊加所有可能的計算狀態。然後，作為輸入到 :ref:`量子電路 <qc-intro-circuits>` 的輸入，根據規定的演算法選擇性地干涉疊加的組成部分。在抵消了輸入狀態的相對振幅和相位之後的所剩下的是量子電路所執行計算的解。"

#: ../../qc_intro.rst:77
msgid "Quantum computation as an interference generation process."
msgstr "量子計算作為相干產生過程。"

#: ../../qc_intro.rst:82
msgid "Entanglement"
msgstr "糾纏"

#: ../../qc_intro.rst:84
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr ""

#: ../../qc_intro.rst:102
msgid "Quantum circuits"
msgstr "量子電路"

#: ../../qc_intro.rst:104
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "利用量子機械資源的演算法和應用，可以用 **量子電路** 的語言來輕鬆高效地編寫。 量子電路是一個計算常式，包含量子資料上的相干量子運算，如以量子位元為單位的量子運算，以及並行的實時經典計算。 每條水平線，或電路中的線代表一個量子位元，其中線的左端是初始量子資料，右邊是量子電路的計算產生的最終量子資料。 qubits 上的操作可以放置在這些電線上，並以方框表示。"

#: ../../qc_intro.rst:116
msgid "Quantum state teleportation circuit revisited."
msgstr "量子態的隠形傳輸電路被重新審視。"

#: ../../qc_intro.rst:118
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`interference <qc-intro-interference>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "量子電路使量子計算機能夠掌握經典的資訊並輸出經典的解決方案，利用諸如 :ref:`干涉<qc-intro-interference>` 和 :ref:`糾纏 <qc-intro-entanglement>` 的量子原理進行計算。"

#: ../../qc_intro.rst:123
msgid "A typical quantum algorithm workflow consists of:"
msgstr "典型的量子演算法工作流程包括："

#: ../../qc_intro.rst:125
msgid "The problem we want to solve,"
msgstr "我們想解決的問題"

#: ../../qc_intro.rst:126
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "一個經典演算法產生了量子電路的描述"

#: ../../qc_intro.rst:127
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "量子電路要在量子硬體上運行"

#: ../../qc_intro.rst:128
msgid "And the output classical solution to the problem that it produces."
msgstr "而它產生的問題的輸出經典解決方法。"

#: ../../qc_intro.rst:130
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamard (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit to another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract partial information about a qubit's state, often losing the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr ""

#: ../../qc_intro.rst:149
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr ""

#: ../../qc_intro.rst:160
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit, that support a rich feature set of operations, and can be passed to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators. With only a few lines of code, it is possible to construct complex circuits like the one above."
msgstr ""

#: ../../qc_intro.rst:191
msgid "Quantum computers"
msgstr "量子電腦"

#: ../../qc_intro.rst:197
msgid "A view inside the IBM Quantum System One."
msgstr "內觀IBM Quantum System One。"

#: ../../qc_intro.rst:199
msgid "Quantum computers which are programmed using quantum circuits can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr ""

#: ../../qc_intro.rst:209
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr ""

#: ../../qc_intro.rst:223
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "IBM Quantum *ibmq_manhattan* 系統的拓蹼及錯誤率。"

#: ../../qc_intro.rst:227
msgid "Where to go from here"
msgstr "從這裡開始"

#: ../../qc_intro.rst:229
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr "希望我們能讓讀者嘗嘗有什麼量子計算是必須提供，而你渴望能得到更多。  如果是的話，有幾個資源您可能會興趣的："

#: ../../qc_intro.rst:233
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`開始使用 Qiskit <getting_started.html>`_ - 直接進入Qiskit。"

#: ../../qc_intro.rst:235
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr ""

#: ../../qc_intro.rst:239
msgid "`Qiskit textbook <https://qiskit.org/textbook>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr ""

