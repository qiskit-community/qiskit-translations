msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-03-15 06:56\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/optimization/6_examples_max_cut_and_tsp.po\n"
"X-Crowdin-File-ID: 9360\n"
"Language: id_ID\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:10
msgid "This page was generated from `tutorials/optimization/6_examples_max_cut_and_tsp.ipynb`__."
msgstr "Halaman ini dibuat dari `tutorials/optimization/6_examples_max_cut_and_tsp.ipynb`__."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/optimization/6_examples_max_cut_and_tsp.ipynb>`_."
msgstr "Jalankan secara interaktif dalam `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/optimization/6_examples_max_cut_and_tsp.ipynb>`_."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:9
msgid "*Max-Cut and Traveling Salesman Problem*"
msgstr "*Permasalahan Max-Cut dan Traveling Salesman*"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:21
msgid "Introduction"
msgstr "Pengantar"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:23
msgid "Many problems in quantitative fields such as finance and engineering are optimization problems. Optimization problems lie at the core of complex decision-making and definition of strategies."
msgstr "Banyak masalah dalam bidang kuantitatif seperti keuangan dan teknik termasuk dalam masalah optimisasi. Masalah optimisasi merupakan inti dari pengambilan keputusan kompleks dan mendefinisikan strategi."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:25
msgid "Optimization (or combinatorial optimization) means searching for an optimal solution in a finite or countably infinite set of potential solutions. Optimality is defined with respect to some criterion function, which is to be minimized or maximized. This is typically called cost function or objective function."
msgstr "Optimisasi (atau optimisasi kombinatorial) berarti mencari solusi optimal dalam suatu set solusi potensial yang terbatas. Optimalitas didefinisikan berdasarkan eberapa fungsi kriteria, yaitu diminimalkan atau dimaksimalkan. Hal ini biasanya disebut fungsi biaya atau fungsi objektif."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:27
msgid "**Typical optimization problems**"
msgstr "**Permasalahan umum pada optimisasi**"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:29
msgid "Minimization: cost, distance, length of a traversal, weight, processing time, material, energy consumption, number of objects"
msgstr "Minimasi: biaya, jarak, panjang sebuah traversal, berat, waktu pemrosesan, material, konsumsi energi, jumlah objek"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:31
msgid "Maximization: profit, value, output, return, yield, utility, efficiency, capacity, number of objects"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:33
msgid "We consider here max-cut problems of practical interest in many fields, and show how they can be mapped on quantum computers manually and how Qiskit’s optimization module supports this."
msgstr "Permasalahan max-cut digunakan pada banyak bidang dan kita akan menunjukkan bagaimana mereka bisa dipetakan pada komputer kuantum secara manual dan bagaimana modul optimasi Qiskit mendukung hal ini."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:36
msgid "Weighted Max-Cut"
msgstr "Max-Cut dengan Bobot"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:38
msgid "Max-Cut is an NP-complete problem, with applications in clustering, network science, and statistical physics. To grasp how practical applications are mapped into given Max-Cut instances, consider a system of many people that can interact and influence each other. Individuals can be represented by vertices of a graph, and their interactions seen as pairwise connections between vertices of the graph, or edges. With this representation in mind, it is easy to model typical marketing problems. For example, suppose that it is assumed that individuals will influence each other’s buying decisions, and knowledge is given about how strong they will influence each other. The influence can be modeled by weights assigned on each edge of the graph. It is possible then to predict the outcome of a marketing strategy in which products are offered for free to some individuals, and then ask which is the optimal subset of individuals that should get the free products, in order to maximize revenues."
msgstr "Max-Cut adalah masalah NP-komplit, dengan aplikasi dalam clustering, ilmu jaringan, dan fisika statistik. Untuk memahami bagaimana aplikasi praktis dipetakan ke dalam mesin virtual Max-Cut, pertimbangkan sebuah sistem yang terdiri dari banyak orang yang dapat berinteraksi dan mempengaruhi satu sama lain. Individu dapat diwakili oleh simpul dari grafik, dan interaksi mereka dilihat sebagai koneksi pairwise antara simpul dari grafik, atau tepi. Dengan representasi seperti ini, mudah untuk memodelkan masalah umum pemasaran. Sebagai contoh, misalkan diasumsikan bahwa individu akan saling mempengaruhi keputusan membeli satu sama lain, dan diketahui seberapa besar pengaruh mereka terhadap satu sama lain. Pengaruhnya dapat dimodelkan dengan bobot yang ditetapkan pada setiap tepi dari grafik. Memungkinkan untk dilakukan prediksi terhadap hasil dari strategi marketing di mana produk yang ditawarkan secara gratis untuk beberapa individu, dengan memilih subset optimal dari inividu yang menerima produk faris, dapat memaksimalkan pendapatan."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:41
msgid "The formal definition of this problem is the following:"
msgstr "Definisi formal dari permasalahan ini adalah sebagai berikut:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:43
msgid "Consider an :math:`n`-node undirected graph *G = (V, E)* where *\\|V\\| = n* with edge weights :math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, for :math:`(i, j)\\in E`. A cut is defined as a partition of the original set V into two subsets. The cost function to be optimized is in this case the sum of weights of edges connecting points in the two different subsets, *crossing* the cut. By assigning :math:`x_i=0` or :math:`x_i=1` to each node :math:`i`, one tries to maximize the global profit function (here and in the following summations run over indices 0,1,…n-1)"
msgstr "Pertimbangkan sebuah grafik dengan :math:`n`-node yang tidak diarahkan *G = (V, E)* di mana *\\|V\\| = n* dengan edge berbobot:math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, untuk :math:`(i, j)\\in E`. Sebuah cut didefinisikan sebagai partisi dari set asli V menjadi dua subset. Fungsi biaya yang dioptimasi dalam kasis ini adalam total bobot edge yang menhubungkan titik-titik pada dua subset berda yang *memotong* cut. Dengan menetapkan :math:`x_i=0` atau :math:`x_i=1` untuk setiap node :math:`i`, fungsi keuntungan global dimaksimasi (di sini dan penjumlahan berikutnya dilakukan untuk indeks 0,1,…n-1)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:46
msgid "\\tilde{C}(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j).\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:48
msgid "In our simple marketing model, :math:`w_{ij}` represents the probability that the person :math:`j` will buy a product after :math:`i` gets a free one. Note that the weights :math:`w_{ij}` can in principle be greater than :math:`1` (or even negative), corresponding to the case where the individual :math:`j` will buy more than one product. Maximizing the total buying probability corresponds to maximizing the total future revenues. In the case where the profit probability will be greater than the cost of the initial free samples, the strategy is a convenient one. An extension to this model has the nodes themselves carry weights, which can be regarded, in our marketing model, as the likelihood that a person granted with a free sample of the product will buy it again in the future. With this additional information in our model, the objective function to maximize becomes"
msgstr "Dalam model pemasaran kita yang sederhana, :math:`w_{ij}` mewakili probabilitas bahwa seseorang :math:`j` akan membeli sebuah produk setelah :math:`i` mendapat produk gratis. Catat bahwa bobot :math:`w_{ij}` bisa lebih besar dari :math:`1` (atau bahkan negatif), sesuai dengan kasus di mana individu :math:`j` akan membeli lebih dari satu produk. Memaksimalkan total probabilitas pembelian akan memaksimasi total pendapatan di masa depan. Pada kasus di mana probabilitas keuntungan akan menjadi lebih besar dari biaya sampel gratis awal, strateginya seperti biasa. Ekstensi dari model ini memiliki node yang memiliki bobot yang bisa dianggap sebagai, pada model pemasaran kita, kemungkinan seseorang dengan sampel gratis akan membeli produk itu lagi di masa depan. Dengan tambahan indormasi tambahan dalam model, fungsi objektif maksimasi menjadi"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:51
msgid "C(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j)+\\sum_i w_i x_i.\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:53
msgid "In order to find a solution to this problem on a quantum computer, one needs first to map it to an Ising Hamiltonian. This can be done with the assignment :math:`x_i\\rightarrow (1-Z_i)/2`, where :math:`Z_i` is the Pauli Z operator that has eigenvalues :math:`\\pm 1`. Doing this we find that"
msgstr "Untuk menemukan solusi untuk masalah ini pada komputer kuantum, kita perlu pertama-tama memetakan itu ke Hamiltonian Ising. Hal ini dapat dilakukan dengan menetapkan :math:` x_i\\rightarrow (1-Z_i) /2 `, di mana :math:` Z_i ` adalah operator Z Pauli Z yang memiliki nilai eigen :math:` \\pm 1 `. Melakukan ini kita menemukan bahwa"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:55
msgid "C(\\textbf{Z}) = \\sum_{i,j} \\frac{w_{ij}}{4} (1-Z_i)(1+Z_j) + \\sum_i \\frac{w_i}{2} (1-Z_i) = -\\frac{1}{2}\\left( \\sum_{i<j} w_{ij} Z_i Z_j +\\sum_i w_i Z_i\\right)+\\mathrm{const},\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:57
msgid "where $:nbsphinx-math:`\\mathrm{const}` = :nbsphinx-math:`\\sum`\\ *{i<j}w*\\ {ij}/2+:nbsphinx-math:`\\sum`\\_i w_i/2 $. In other terms, the weighted Max-Cut problem is equivalent to minimizing the Ising Hamiltonian"
msgstr "di mana $:nbsphinx-math:` \\mathrm{const}` = :nbsphinx-math:` \\sum ` \\ * {i <j} w*\\ {ij}/2 +:nbsphinx-math:` \\sum ` \\_i w_i/2 $. Dalam istilah lain, masalah Max-Cut yang berbobot setara dengan meminimalkan Hamiltonian Ising"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:59
msgid "H = \\sum_i w_i Z_i + \\sum_{i<j} w_{ij} Z_iZ_j.\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:61
msgid "Qiskit’s optimization module can generate the Ising Hamiltonian for the first profit function :math:`\\tilde{C}`. To this extent, function :math:`\\tilde{C}` can be modeled as a ``QuadraticProgram``, which provides the ``to_ising()`` method."
msgstr "Modul optimasi Qiskit dapat menghasilkan Hamiltonian Ising untuk fungsi profit pertama :math:`\\tilde{C}`. Sampai titik ini, fungsi :math:`\\tilde{C}` dapat dimodelkan sebagai ` ` QuadraticProgram ` `, yang menyediakan metode ` ` to_ising () ` `."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:64
msgid "Approximate Universal Quantum Computing for Optimization Problems"
msgstr "Aproksimasi Quantum Computing Universal untuk Masalah Pengoptimalan"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:66
msgid "There has been a considerable amount of interest in recent times about the use of quantum computers to find a solution to combinatorial optimization problems. It is important to say that, given the classical nature of combinatorial problems, exponential speedup in using quantum computers compared to the best classical algorithms is not guaranteed. However, due to the nature and importance of the target problems, it is worth investigating heuristic approaches on a quantum computer that could indeed speed up some problem instances. Here we demonstrate an approach that is based on the *Quantum Approximate Optimization Algorithm* (QAOA) by Farhi, Goldstone, and Gutman (2014). We frame the algorithm in the context of *approximate quantum computing*, given its heuristic nature."
msgstr "Telah ada banyak ketertarikan baru-baru ini dalam penggunaan komputer kuantum untuk menemukan solusi untuk masalah optimasikombinatorial. Sangat penting untuk mengatakan bahwa, mengingat sifat klasik dari masalah kombinatorial, eksponensial speedup dalam komputer kuantum dibandingkan dengan algoritme klasik terbaik tidak dapat dijamin. Namun, karena sifat dan pentingnya permasalahan target, hal ini menjadi layak untuk menyelidiki pendekatan heuristik pada komputer kuantum yang memang bisa mempercepat beberapa contoh masalah. Di sini kita mendemonstrasikan pendekatan yang didasarkan pada *Quantum Hamper Optimization Algoritme * (QAOA) oleh Farhi, Goldstone, dan Gutman (2014). Kami frame algoritma dalam konteks * perkiraan komputasi kuantum *, mengingat sifat heuristik-nya."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:69
msgid "The algorithm works as follows:"
msgstr "Algoritme ini bekerja sebagai berikut:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:71
msgid "Choose the :math:`w_i` and :math:`w_{ij}` in the target Ising problem. In principle, even higher powers of Z are allowed."
msgstr "Pilih :math:` w_i ` dan :math:` w_{ij}` dalam permasalahan target Ising. Pada prinsipnya, kekuatan yang lebih tinggi dari Z diperbolehkan."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:73
msgid "Choose the depth of the quantum circuit :math:`m`. Note that the depth can be modified adaptively."
msgstr "Pilih kedalaman dari sirkuit kuantum :math:` m `. Perlu dicatat bahwa kedalaman dapat dimodifikasi secara adaptif."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:75
msgid "Choose a set of controls :math:`\\theta` and make a trial function :math:`|\\psi(\\boldsymbol\\theta)\\rangle`, built using a quantum circuit made of C-Phase gates and single-qubit Y rotations, parameterized by the components of :math:`\\boldsymbol\\theta`."
msgstr "Pilih set kontrol :math:`\\theta ` dan buat fungsi percobaan :math:` | \\psi (\\boldsymbol\\theta)\\rsudut `, dibangun menggunakan sirkuit kuantum yang terbuat dari gerbang Fase-C dan rotasi Y qubit-tunggal, yang diparameterisasi oleh komponen :math:` \\boldsymbol\\theta `."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:77
msgid "Evaluate"
msgstr "Evaluasi"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:79
msgid "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"
msgstr "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:81
msgid "by sampling the outcome of the circuit in the Z-basis and adding the expectation values of the individual Ising terms together. In general, different control points around :math:`\\boldsymbol\\theta` have to be estimated, depending on the classical optimizer chosen."
msgstr "dengan mengambil sampel hasil dari sirkuit dalam basis Z dan menambahkan nilai ekspektasi dari syarat-syarat Ising individu bersama-sama. Secara umum, titik kontrol yang berbeda di sekitar :math:` \\boldsymbol\\theta ` harus diestimasi, tergantung pada optimizer klasik yang dipilih."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:83
msgid "Use a classical optimizer to choose a new set of controls."
msgstr "Gunakan optimizer klasik untuk memilih set kontrol baru."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:85
msgid "Continue until :math:`C(\\boldsymbol\\theta)` reaches a minimum, close enough to the solution :math:`\\boldsymbol\\theta^*`."
msgstr "Lanjutkan sampai :math:` C( \\boldsymbol\\theta) ` mencapai nilai minimum, cukup dekat dengan solusi :math:` \\boldsymbol\\theta ^ * `."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:87
msgid "Use the last :math:`\\boldsymbol\\theta` to generate a final set of samples from the distribution :math:`|\\langle z_i~|\\psi(\\boldsymbol\\theta)\\rangle|^2\\;\\forall i` to obtain the answer."
msgstr "Gunakan yang terakhir :math:` \\boldsymbol\\theta ` untuk menghasilkan satu set terakhir dari sampel dari distribusi :math:` | \\langle z_i ~ | \\psi (\\boldsymbol\\theta)\\rsudut | ^ 2 \\; \\forall i ` untuk mendapatkan jawaban."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:89
msgid "It is our belief the difficulty of finding good heuristic algorithms will come down to the choice of an appropriate trial wavefunction. For example, one could consider a trial function whose entanglement best aligns with the target problem, or simply make the amount of entanglement a variable. In this tutorial, we will consider a simple trial function of the form"
msgstr "Kami percaya bahwa kesulitan dalam menemukan algoritma heuristik yang baik bergantung pada pilihan dari uji gelombang yang sesuai. Sebagai contoh, seseorang dapat mempertimbangkan fungsi uji coba dengan belitan (entanglement) yang paling selaras dengan permasalahan target, atau sesederhana membuat jumlah belitan sebagai variabel. Dalam tutorial ini, kita akan mempertimbangkan fungsi percobaan sederhana dari bentuk tersebut"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:91
msgid "|\\psi(\\theta)\\rangle  = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m |+\\rangle\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:93
msgid "where :math:`U_\\mathrm{entangler}` is a collection of C-Phase gates (fully entangling gates), and :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, where :math:`n` is the number of qubits and :math:`m` is the depth of the quantum circuit. The motivation for this choice is that for these classical problems this choice allows us to search over the space of quantum states that have only real coefficients, still exploiting the entanglement to potentially converge faster to the solution."
msgstr "di mana :math:` U_ \\mathrm{entangler}` adalah kumpulan gerbang Fase-c (gerbang belitan penuh), dan :math:` U_ \\mathrm{single}(\\theta) = \\prod_ {i= 1} ^ n Y (\\theta_{i}) `, di mana :math:` n ` adalah jumlah qubits dan :math:` m ` adalah kedalaman dari sirkuit kuantum. Motivasi dari pilihan ini adalah bahwa untuk permasalahan-permasalahan klasi, pilihan ini memungkinkan kita untuk mencari dari seluruh keadaan kuantum yang hanya memiliki koefisien nyata, dengan masih mengeksploitasi entanglement dengan potensi konvergen lebih cepat ke solusi."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:96
msgid "One advantage of using this sampling method compared to adiabatic approaches is that the target Ising Hamiltonian does not have to be implemented directly on hardware, allowing this algorithm not to be limited to the connectivity of the device. Furthermore, higher-order terms in the cost function, such as :math:`Z_iZ_jZ_k`, can also be sampled efficiently, whereas in adiabatic or annealing approaches they are generally impractical to deal with."
msgstr "Salah satu keuntungan dari menggunakan metode sampling ini dibandingkan dengan pendekatan adiabatik adalah bahwa target Ising Hamiltonian tidak harus diimplementasikan secara langsung pada perangkat keras, yang memungkinkan algoritma ini tidak terbatas pada konektivitas dari perangkat. Selanjutnya, syarat urutan lebih tinggi dalam fungsi biaya, seperti :math:` Z_iZ_jZ_k `, juga dapat dijadikan sampel secara efisien, sedangkan dalam pendekatan adiabatik atau annealing umumnya tidak praktis untuk dihadapi."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:98
msgid "References: - A. Lucas, Frontiers in Physics 2, 5 (2014) - E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028 (2014) - D. Wecker, M. B. Hastings, M. Troyer Phys. Rev. A 94, 022309 (2016) - E. Farhi, J. Goldstone, S. Gutmann, H. Neven e-print arXiv 1703.06199 (2017)"
msgstr "Referensi: - A. Lucas, Frontiers in Physics 2, 5 (2014) - E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028 (2014) - D. Wecker, M. B. Hastings, M. Troyer Phys. Rev. A 94, 022309 (2016) - E. Farhi, J. Goldstone, S. Gutmann, H. Neven e-print arXiv 1703.06199 (2017)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:142
msgid "Max-Cut problem"
msgstr "Permasalahan Max-Cut"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:232
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:820
msgid "Brute force approach"
msgstr "Pendekatan brute force"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:234
msgid "Try all possible :math:`2^n` combinations. For :math:`n = 4`, as in this example, one deals with only 16 combinations, but for n = 1000, one has 1.071509e+30 combinations, which is impractical to deal with by using a brute force approach."
msgstr "Coba semua kombinasi :math:` 2 ^ n ` yang mungkin. Untuk :math:` n = 4 `, seperti dalam contoh ini, hanya 16 kombinasi, tetapi untuk n = 1000, terdapat 1.071509e+30 kombinasi, yang tidak praktis untuk pendekatan brute force."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:332
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:906
msgid "Mapping to the Ising problem"
msgstr "Pemetaan ke permasalahan Ising"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:343
msgid "Qiskit provides functionality to directly generate the Ising Hamiltonian as well as create the corresponding ``QuadraticProgram``."
msgstr "Qiskit menyediakan fungsionalitas untuk secara langsung menghasilkan Hamiltonian Ising serta menciptakan ` ` QuadraticProgram ` ` yang terkait."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:496
msgid "Since the problem was cast to a minimization problem, the solution of :math:`-4` corresponds to the optimum."
msgstr "Karena permasalahan dilemparkan ke masalah minimisasi, solusi :math:` -4 ` sesuai dengan nilai optimum."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:508
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1163
msgid "Checking that the full Hamiltonian gives the right cost"
msgstr "Memeriksa bahwa Hamiltonian penuh memberikan biaya yang tepat"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:575
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1232
msgid "Running it on quantum computer"
msgstr "Menjalankannya pada komputer kuantum"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:577
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1234
msgid "We run the optimization routine using a feedback loop with a quantum computer that uses trial functions built with Y single-qubit rotations, :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, and entangler steps :math:`U_\\mathrm{entangler}`."
msgstr "Kami menjalankan optimisasi rutin menggunakan loop umpan balik dengan komputer kuantum yang menggunakan fungsi percobaan yang dibangun dengan rotasi  Y qubit-tunggal, :math:` U_ \\mathrm{single}(\\theta) = \\prod_ {i= 1} ^ n Y (\\theta_{i}) `, dan langkah-langkah belitan :math:` U_ \\mathrm{entangler}`."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:716
msgid "Traveling Salesman Problem"
msgstr "Permasalahan Traveling Salesman "

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:718
msgid "In addition to being a notorious NP-complete problem that has drawn the attention of computer scientists and mathematicians for over two centuries, the Traveling Salesman Problem (TSP) has important bearings on finance and marketing, as its name suggests. Colloquially speaking, the traveling salesman is a person that goes from city to city to sell merchandise. The objective in this case is to find the shortest path that would enable the salesman to visit all the cities and return to its hometown, i.e. the city where he started traveling. By doing this, the salesman gets to maximize potential sales in the least amount of time."
msgstr "Selain menjadi sebuah masalah NP yang sangat terkenal yang menarik perhatian ilmuwan komputer dan matematikawan selama lebih dari dua abad, Traveling Salesman Problem (TSP) memiliki bantalan penting pada finance dan pemasaran, sesuai dengan namanya. Secara kolokuial, penjual keliling adalah orang yang pergi dari kota ke kota untuk menjual barang dagangan. Tujuan dalam kasus ini adalah untuk menemukan rute terpendek yang akan memungkinkan penjual untuk mengunjungi semua kota dan kembali ke kampung halamannya, yaitu kota di mana ia mulai bepergian. Dengan melakukan hal ini, si penjual dapat memaksimalkan potensi penjualan dalam waktu yang paling sedikit."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:721
msgid "The problem derives its importance from its “hardness” and ubiquitous equivalence to other relevant combinatorial optimization problems that arise in practice."
msgstr "Pentingnya permasalahan ini berakar dari \"kekerasan\" dan kesamaan yang universal terhadap masalah optimisasi kombinatorial yang relevan lainnya yang sering muncul."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:723
msgid "The mathematical formulation with some early analysis was proposed by W.R. Hamilton in the early 19th century. Mathematically the problem is, as in the case of Max-Cut, best abstracted in terms of graphs. The TSP on the nodes of a graph asks for the shortest *Hamiltonian cycle* that can be taken through each of the nodes. A Hamilton cycle is a closed path that uses every vertex of a graph once. The general solution is unknown and an algorithm that finds it efficiently (e.g., in polynomial time) is not expected to exist."
msgstr "Formulasi matematika dengan beberapa analisis awal diajukanoleh W.R. Hamilton pada awal abad ke-19. Secara matematis, masalah ini adalah, seperti dalam kasus Max-Cut, yang diabstraksi paling baik dalam hal grafik. TSP pada simpul dari grafik meminta *siklus Hamiltonian* yang terpendek yang dapat diambil melalui masing-masing node. Sebuah siklus Hamilton adalah rute tertutup yang menggunakan setiap simpul dari sebuah grafik hanya sekali. Solusi umum tidak dapat diketahui dan algoritma yang menemukannya secara efisien (misalnya, dalam waktu polinomial) tidak akan ada."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:726
msgid "Find the shortest Hamiltonian cycle in a graph :math:`G=(V,E)` with :math:`n=|V|` nodes and distances, :math:`w_{ij}` (distance from vertex :math:`i` to vertex :math:`j`). A Hamiltonian cycle is described by :math:`N^2` variables :math:`x_{i,p}`, where :math:`i` represents the node and :math:`p` represents its order in a prospective cycle. The decision variable takes the value 1 if the solution occurs at node :math:`i` at time order :math:`p`. We require that every node can only appear once in the cycle, and for each time a node has to occur. This amounts to the two constraints (here and in the following, whenever not specified, the summands run over 0,1,…N-1)"
msgstr "Temukan siklus Hamiltonian terpendek dalam sebuah grafik :math:` G = (V, E) ` dengan node dan jarak :math:` n = | V | `, :math:` w_{ij}` (jarak dari vertex :math:` i ` ke vertex :math:` j `). Sebuah siklus Hamiltonian dideskripsikan oleh :math:` N ^ 2 ` variabel :math:` x_{i,p}`, di mana :math:` i ` mewakili node dan :math:` p ` mewakili urutannya dalam siklus. Variabel keputusan mengambil nilai 1 jika solusi terjadi pada titik :math:` i ` pada urutan waktu :math:` p `. Kami mensyaratkan bahwa setiap node hanya dapat muncul sekali dalam siklus, dan harus selalu ada node setiap siklus. Hal ini memenuhi kedua batasan (di sini dan dalam hal berikut, setiap kali tidak ditentukan, penjumlahan yang dimaksud untuk 0,1,…N-1)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:729
msgid "\\sum_{i} x_{i,p} = 1 ~~\\forall p\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:731
msgid "\\sum_{p} x_{i,p} = 1 ~~\\forall i.\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:733
msgid "For nodes in our prospective ordering, if :math:`x_{i,p}` and :math:`x_{j,p+1}` are both 1, then there should be an energy penalty if :math:`(i,j) \\notin E` (not connected in the graph). The form of this penalty is"
msgstr "Untuk node-node dalam urutan prospektif, jika :math:` x_{i,p}` dan :math:` x_{j, p + 1} ` keduanya adalah 1, maka harus ada penalti energi jika :math:` (i, j) \\notin E ` (tidak terhubung dalam grafik). Bentuk hukuman ini adalah ..."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:735
msgid "\\sum_{i,j\\notin E}\\sum_{p} x_{i,p}x_{j,p+1}>0,\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:737
msgid "where it is assumed the boundary condition of the Hamiltonian cycles :math:`(p=N)\\equiv (p=0)`. However, here it will be assumed a fully connected graph and not include this term. The distance that needs to be minimized is"
msgstr "di mana diasumsikan kondisi batas dari siklus Hamiltonian :math:` (p=N) \\equiv (p= 0) `. Namun, di sini akan diasumsikan grafik yang terhubung sepenuhnya dan tidak termasuk istilah ini. Jarak yang perlu diminimalkan adalah"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:739
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}.\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:741
msgid "Putting this all together in a single objective function to be minimized, we get the following:"
msgstr "Setelah seluruh hal ini disatukan dalam sebuah fungsi obyektif tunggal untuk diminimalkan, kita mendapatkan hal-hal berikut:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:743
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}+ A\\sum_p\\left(1- \\sum_i x_{i,p}\\right)^2+A\\sum_i\\left(1- \\sum_p x_{i,p}\\right)^2,\n\n"
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:745
msgid "where :math:`A` is a free parameter. One needs to ensure that :math:`A` is large enough so that these constraints are respected. One way to do this is to choose :math:`A` such that :math:`A > \\mathrm{max}(w_{ij})`."
msgstr "di mana :math:` A ` adalah sebuah parameter bebas. Kita harus memastikan bahwa :math:` A ` cukup besar sehingga batasan ini dipenuhi. Salah satu cara untuk melakukan hal ini adalah dengan memilih :math:` A ` sedemikian rupa sehingga :math:` A > \\mathrm{max}(w_{ij}) `."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:747
msgid "Once again, it is easy to map the problem in this form to a quantum computer, and the solution will be found by minimizing a Ising Hamiltonian."
msgstr "Sekali lagi, mudah untuk memetakan masalah dalam bentuk ini ke komputer kuantum, dan solusi akan ditemukan dengan cara meminimalkan sebuah Hamiltonian Ising."

