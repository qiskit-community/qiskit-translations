msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 17:08+0000\n"
"PO-Revision-Date: 2021-04-07 18:16\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/optimization/1_quadratic_program.po\n"
"X-Crowdin-File-ID: 9148\n"
"Language: id_ID\n"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:10
msgid "This page was generated from `tutorials/optimization/1_quadratic_program.ipynb`__."
msgstr "Halaman ini dibuat dari ` tutorials/algoritms/01_grover.ipynb ` __."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/optimization/1_quadratic_program.ipynb>`_."
msgstr "Jalankan secara interaktif dalam ' IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/1_aer_provider.ipynb>` _."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:9
msgid "Quadratic Programs"
msgstr "Program Kuadratik"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:21
msgid "Introduction"
msgstr "Pendahuluan"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:32
msgid "In this tutorial, we briefly introduce how to build optimization problems using Qiskit’s optimization module. Qiskit introduces the ``QuadraticProgram`` class to make a model of an optimization problem. More precisely, it deals with quadratically constrained quadratic programs given as follows:"
msgstr "Dalam tutorial ini, kami memperkenalkan cara membangun masalah optimisasi dengan menggunakan modul optimasi Qiskit. Qiskit membuat kelas ` ` QuadraticProgram ` ` untuk membuat model optimisasi. Tutorial ini berkaitan dengan program kuadratik yang memiliki konstrain kuadratik diberikan sebagai berikut:"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:34
msgid "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"
msgstr ""

#: ../../tutorials/optimization/1_quadratic_program.ipynb:44
msgid "where the :math:`Q_i` are :math:`n \\times n` matrices, :math:`A` is a :math:`m \\times n` matrix , :math:`x`, and :math:`c` are :math:`n`-dimensional vectors, :math:`b` is an :math:`m`-dimensional vector, and where :math:`x` can defined as binary, integer, or continuous variables. In addition to “:math:`\\leq`” constraints ‘QuadraticProgram’ also supports “:math:`\\geq`” and “:math:`=`”."
msgstr "dimana :math:` Q_i` adalah matrik :math:` n \\times n`, :math:`A` adalah matrik :math:` m \\times n`, :math:`x`, dan :math:`c` adalah vektor berdimensi :math:`n`, :math:`b` adalah vektor berdimensi :math:` m`, dan :math:` x ` dapat didefinisikan sebagai biner, integer, atau variabel kontinu. Selain dari kondisi \":math:`\\leq`\" 'QuadraticProgram' juga mendukung kondisi \":math:` \\geq`\" dan \":math:`=`\"."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:56
msgid "Loading a ``Quadratic Program`` from an LP file"
msgstr "Memuat ``Program Kuadrat`` dari file LP"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:67
msgid "As setup, you need to import the following module."
msgstr "Sebagai pengaturan, Anda perlu mengimpor modul berikut."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:88
msgid "You start with an empty model. How to add variables and constraints to a model is explained in the section “Directly constructing a ``QuadraticProgram``”."
msgstr "Anda mulai dengan model yang kosong. Cara menambahkan variabel dan constrain pada sebuah model dijelaskan dalam bagian \"Langung mengkontruksi sebuah ` ` QuadraticProgram ` `\"."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:99
msgid "Qiskit’s optimization module supports the conversion from Docplex model. You can easily make a model of an optimization problem with Docplex. You can find the documentation of Docplex at https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"
msgstr "Modul optimisasi Qiskit mendukung konversi dari model Docplex. Anda dapat dengan mudah membuat model masalah optimasi dengan Docplex. Anda dapat menemukan dokumentasi dari Docplex di https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:101
msgid "You can load a Docplex model to ``QuadraticProgram`` by invoking ``from_docplex``."
msgstr "Anda dapat memuat model Docplex untuk ` ` ` QuadraticProgram ` ` dengan memanggil ` ` from_docplex ` `."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:113
msgid "Loading a ``QuadraticProgram`` from a docplex model"
msgstr "Memuat` ` QuadraticProgram ` ` dari model docplex"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:275
msgid "Directly constructing a ``QuadraticProgram``"
msgstr "Langsung membangun ` ` QuadraticProgram ` `"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:286
msgid "We then explain how to make model of an optimization problem directly using ``QuadraticProgram``. Let’s start from an empty model."
msgstr "Kami kemudian menjelaskan bagaimana membuat model dari masalah optimisasi secara langsung menggunakan ` ` QuadraticProgram ` `. Mari kita mulai dari model yang kosong."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:348
msgid "The ``QuadraticProgram`` supports three types of variables: - Binary variable - Integer variable - Continuous variable"
msgstr "` ` QuadraticProgram ` ` mendukung tiga jenis variabel:-Variable biner-Variable bilangan bulat-Variabel kontinu"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:350
msgid "When you add variables, you can specify names, types, lower bounds and upper bounds."
msgstr "Ketika Anda menambahkan variabel, Anda dapat menentukan nama, tipe, batas bawah dan batas atas."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:352
msgid "When you display your problem as LP format, ``Binaries`` denotes binary variables and ``Generals`` denotes integer variables. If variables are not included in either ``Binaries`` or ``Generals``, such variables are continuous ones with default lower bound = 0 and upper bound = infinity. Note that you cannot use ‘e’ or ‘E’ as the first character of names due to the `specification of LP format <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."
msgstr "Ketika Anda menampilkan masalah Anda sebagai format LP, ` ` Binaries ` ` menandakan variabel biner dan ` ` Generals ` ` menandakan variabel bilangan bulat. Jika variabel tidak dimasukkan dalam ` ` ` Binaries ` ` atau ` ` Generals ` `, variabel tersebut adalah variabel kontinu dengan batas bawah = 0 dan batas atas = tak terhingga (default). Perhatikan bahwa anda tidak dapat menggunakan 'e' atau' E' sebagai karakter pertama nama karena ` spesifikasi dari format LP <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>` __."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:435
msgid "You can set the objective function by invoking ``QuadraticProgram.minimize`` or ``QuadraticProgram.maximize``. You can add a constant term as well as linear and quadratic objective function by specifying linear and quadratic terms with either list, matrix or dictionary."
msgstr "Anda dapat mengatur fungsi objektif dengan memanggil ``QuadraticProgram.minimize`` atau ``QuadraticProgram.maximize``. Anda dapat menambahkan faktor konstan serta fungsi objektif linear dan kuadrat dengan menentukan term linear dan kuadrat baik dengan list, matrik atau dictionary."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:437
msgid "Note that in the LP format the quadratic part has to be scaled by a factor :math:`1/2`. Thus, when printing as LP format, the quadratic part is first multiplied by 2 and then divided by 2 again."
msgstr "Perhatikan bahwa dalam format LP bagian kuadratik harus diskala oleh faktor :math:` 1/2 `. Dengan demikian, ketika mencetak sebagai format LP, bagian kuadratik pertama kali dikalikan 2 dan kemudian dibagi 2 lagi."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:439
msgid "For quadratic programs, there are 3 pieces that have to be specified: a constant (offset), a linear term (:math:`c^{T}x`), and a quadratic term (:math:`x^{T}Qx`)."
msgstr "Untuk program-program kuadrat, terdapat 3 bagian yang harus ditentukan: sebuah konstanta (offset), sebuah term linear (:math:` c ^{T}x `), dan sebuah term kuadrat (:math:` x ^{T}Qx `)."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:441
msgid "The cell below shows how to declare an objective function using a dictionary. For the linear term, keys in the dictionary correspond to variable names, and the corresponding values are the coefficients. For the quadratic term, keys in the dictionary correspond to the two variables being multiplied, and the values are again the coefficients."
msgstr "Sel di bawah ini menunjukkan bagaimana cara deklarasi fungsi objektif menggunakan dictionary. Untuk term linear, key dalam dictionary adalah nama variabel, dan nilainya adalah koefisien. Untuk term kuadrat, key dalam dictionary adalah dua variabel yang dikalikan, dan nilainya juga adalah koefisien."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:521
msgid "Another way to specify the quadratic program is using arrays. For the linear term, the array corresponds to the vector :math:`c` in the mathematical formulation. For the quadratic term, the array corresponds to the matrix :math:`Q`. Note that the ordering of the variables (:math:`x` in the mathematical formulation) is the order in which the variables were originally declared in the QuadraticProgram object."
msgstr "Cara lain untuk menentukan program kuadrat adalah dengan menggunakan array. Untuk term linear, array sesuai dengan vektor :math:` c ` dalam formulasi matematika. Untuk term kuadrat, array sesuai dengan matriks :math:` Q `. Perlu dicatat bahwa urutan variabel (:math:` x ` dalam formulasi matematika) adalah urutan di mana variabel-variabel awalnya dinyatakan dalam objek QuadraticProgram."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:601
msgid "You can access the constant, the linear term, and the quadratic term by looking at ``Quadratic.objective.{constant, linear, quadratic}``, respectively. As for linear and quadratic terms, you can get a dense matrix (``to_array``), a sparse matrix (``coefficients``), and a dictionary (``to_dict``). For dictionaries, you can specify whether to use variable indices or names as keys. Note that the quadratic terms are stored in a compressed way, e.g., ``{('x', 'y'): 1, ('y', 'x'): 2}`` is stored as ``{('x', 'y'): 3}``. You can get the quadratic term as a symmetric matrix by calling ``to_array(symmetric=True)`` or ``to_dict(symmetric=True)``. If you call ``to_dict(name=True)``, you can get a dictionary whose keys are pairs of variable names."
msgstr "Anda dapat mengakses konstanta, term linear, dan term kuadrat dari ``Quadratic.objective.{constant, linear, quadratic}` `, masing-masing. Sedangkan untuk term linear dan kuadratik, Anda dapat mendapatkan matriks padat (` ` to_array ` `), matriks jarang (` ` coefficients ` `), dan dictionary (` ` to_dict ` ` `). Untuk dictionary, Anda dapat menentukan apakah menggunakan indeks variabel atau nama sebagai kunci. Perhatikan bahwa term kuadrat disimpan dengan cara yang kompak, misalnya, ` ` {('x ',' y '): 1, ('y', 'x'): 2} ` ` disimpan sebagai ` ` {('x ',' y '): 3} ` `. Anda dapat memperoleh term kuadrat sebagai matriks simetrik dengan cara memanggil ` ` to_array (symmetric =True) ` ` atau ` ` to_dict (symmetric=True) ``. Jika Anda memanggil ` ` to_dict (name=True) ``, Anda dapat mendapatkan dictionary yang kunci-kuncinya adalah pasangan nama variabel."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:694
msgid "Adding/removing linear and quadratic constraints"
msgstr "Menambah/menghapus kondisi linear dan kuadrat"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:705
msgid "You can add linear constraints by setting name, linear expression, sense and right-hand-side value (rhs). You can use senses ‘EQ’, ‘LE’, and ‘GE’ as Docplex supports."
msgstr "Anda dapat menambah kondisi linear dengan menetapkan nama, ekspresi linear, arah atau sense dan nilai di sebelah kanan persamaan (rhs value). Anda dapat menggunakan arah 'EQ', 'LE', dan 'GE' seperti yang dipakai di Docplex."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:793
msgid "You can add quadratic constraints as well as objective function and linear constraints."
msgstr "Anda dapat menambah kondisi kuadrat serta fungsi obyektif dan kondisi linear."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:887
msgid "You can access linear and quadratic terms of linear and quadratic constraints as in the same way as the objective function."
msgstr "Anda dapat mengakses term linear dan kuadrat dari kondisi linear dan kuadratik dengan cara sama seperti fungsi objektif."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:932
msgid "You can also remove linear/quadratic constraints by ``remove_linear_constraint`` and ``remove_quadratic_constraint``."
msgstr "Anda juga dapat menghapus kondisi linear/kuadrat dengan ` ` remove_linear_constraint ` ` dan ` ` remove_quadratic_constraint ` `."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1021
msgid "You can substitute some of variables with constants or other variables. More precisely, ``QuadraticProgram`` has a method ``substitute_variables(constants=..., variables=...)`` to deal with the following two cases. - :math:`x \\leftarrow c`: when ``constants`` have a dictionary ``{x: c}``. - :math:`x \\leftarrow c y`: when ``variables`` have a dictionary ``{x: (y, c)}``."
msgstr ""

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1033
msgid "Substituting Variables"
msgstr "Substitusi Variabel"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1104
msgid "If the resulting problem is infeasible due to lower bounds or upper bounds, the methods returns the status ``Status.INFEASIBLE``. We try to replace variable ``x`` with -1, but -1 is out of range of ``x`` (0 <= ``x`` <= 1). So, it returns ``Status.INFEASIBLE``."
msgstr "Jika masalah yang diformulasi tidak bisa dipecahkan karena batas rendah atau batas atas, metode mengembalikan status ` `Status.INFEASIBLE ` `. Kami mencoba untuk mengganti variabel ` ` x ` ` dengan -1, tetapi -1 diluar dari jangka nilai ` ` x ` ` (0 < = ` ` x ` ` < = 1). Jadi, metode ini menghasilkan ` `Status.INFEASIBLE ` `."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1148
msgid "You cannot substitute variables multiple times. The method raises an error in such a case."
msgstr "Anda tidak bisa mengganti variabel lebih dari sekali. Metode ini melaporkan error dalam kasus seperti itu."

