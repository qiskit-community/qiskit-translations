msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-03-06 05:56\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/01_qsvm_classification.po\n"
"X-Crowdin-File-ID: 9464\n"
"Language: id_ID\n"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/01_qsvm_classification.ipynb`__."
msgstr "Halaman ini dibangkitkan dari `tutorials/machine_learning/01_qsvm_classification.ipynb`__."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/01_qsvm_classification.ipynb>`_."
msgstr "Jalankan secara interaktif di `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/01_qsvm_classification.ipynb>`_."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:9
msgid "Quantum-enhanced Support Vector Machine (QSVM)"
msgstr "Quantum-enhanced Support Vector Machine (QSVM)"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:11
msgid "Classification algorithms and methods for machine learning are essential for pattern recognition and data mining applications. Well known techniques such as support vector machines and neural networks have blossomed over the last two decades as a result of the spectacular advances in classical hardware computational capabilities and speed. This progress in computer power made it possible to apply techniques, that were theoretically developed towards the middle of the 20th century, on classification problems that were becoming increasingly challenging."
msgstr "Algoritma klasifikasi dan metode untuk pembelajaran mesin sangat penting untuk pengenalan pola dan aplikasi penambangan data. Teknik yang terkenal seperti vector support machine dan neural network telah berkembang selama dua dekade terakhir sebagai hasil dari kemajuan yang menakjubkan pada kemampuan dan kecepatan komputasi perangkat keras. Kemajuan kekuatan komputasi ini memungkinkan penerapan teknik-teknik yang dikembangkan secara teoretis menjelang pertengahan abad ke-20 pada masalah klasifikasi yang semakin menantang."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:14
msgid "A key concept in classification methods is that of a kernel. Data cannot typically be separated by a hyperplane in its original space. A common technique used to find such a hyperplane consists of applying a non-linear transformation function to the data. This function is called a feature map, as it transforms the raw features, or measurable properties, of the phenomenon or subject under study. Classifying in this new feature space -and, as a matter of fact, also in any other space, including the raw original one- is nothing more than seeing how close data points are to each other. This is the same as computing the inner product for each pair of data points in the set. So, in fact we do not need to compute the non-linear feature map for each datum, but only the inner product of each pair of data points in the new feature space. This collection of inner products is called the kernel and it is perfectly possible to have feature maps that are hard to compute but whose kernels are not."
msgstr "Sebuah konsep utama dalam metode klasifikasi adalah kernel. Data biasanya tidak dapat dipisahkan oleh suatu *hyperplane* pada ruang asalnya. Sebuah teknik yang umum digunakan untuk mendapatkan *hyperplane* tersebut melibatkan penerapan fungsi transformasi nonlinear terhadap data. Fungsi ini disebut peta fitur karena ia mengubah fitur mentah atau sifat yang dapat diukur dari sebuah fenomena atau subjek yang sedang diteliti. Melakukan klasifikasi dalam ruang fitur yang baru ini -dan sebenarnya dalam ruang apapun, termasuk ruang asal- tidaklah lebih dari melihat seberapa dekat satu titik data dengan yang lain. Hal ini sama dengan menghitung hasil kali dalam (*inner product*) untuk setiap pasang titik data pada himpunan tersebut. Jadi pada kenyataannya kita tidak perlu menghitung peta fitur nonlinear untuk setiap data, tetapi hanya hasil kali dalam untuk setiap pasang titik data pada ruang fitur yang baru. akumpulan hasil kali dalam ini disebut kernel dan sangat mungkin untuk memiliki peta fitur yang sulit dikomputasi namun kernelnya tidak."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:17
msgid "In this notebook we provide an example of a classification problem that requires a feature map for which computing the kernel is not efficient classically -this means that the required computational resources are expected to scale exponentially with the size of the problem. We show how this can be solved in a quantum processor by a direct estimation of the kernel in the feature space. The method we used falls in the category of what is called supervised learning, consisting of a training phase (where the kernel is calculated and the support vectors obtained) and a test or classification phase (where new unlabeled data is classified according to the solution found in the training phase)."
msgstr "Dalam Notebook ini kami memberikan sebuah contoh masalah klasifikasi yang membutuhkan peta fitur yang komputasi kernelnya secara klasik tidak efisien -ini berarti sumber daya komputasi yang dibutuhkan diprediksi akan meningkat secara eksponensial sesuai besarnya permasalahan. Kami menunjukkan bagaimana hal ini dapat diselesaikan dalam sebuah prosesor kuantum dengan estimasi langsung kernel di dalam ruang fitur. Metode yang kami gunakan termasuk dalam kategori *supervised learning*, yang terdiri dari fase *training* (di mana kernel dihitung dan *support vector* didapatkan) dan fase uji atau klasifikasi (di mana data baru yang belum diberikan label akan diklasifikasi menurut solusi yang didapat pada fase *training*)."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:20
msgid "References and additional details:"
msgstr "Referensi dan detail tambahan:"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:22
msgid "[1] Vojtech Havlicek, Antonio D. C´orcoles, Kristan Temme, Aram W. Harrow, Abhinav Kandala, Jerry M. Chow, and Jay M. Gambetta1, “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr "[1] Vojtech Havlicek, Antonio D. C´orcoles, Kristan Temme, Aram W. Harrow, Abhinav Kandala, Jerry M. Chow, dan Jay M. Gambetta1, “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:54
msgid "The ad hoc data set"
msgstr "Dataset ad hoc"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:56
msgid "As a first example we will use the ad hoc dataset as described in the above referenced paper. From the dataset we take samples for use as training, testing and the final prediction (datapoints)."
msgstr "Sebagai contoh pertama kita akan menggunakan dataset ad hoc seperti yang dijelaskan dalam paper referensi di atas. Dari dataset tersebut kita ambil sampel untuk *training*, pengujian, dan prediksi akhir (titik data)."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:117
msgid "With the dataset ready we can setup the `QSVM <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QSVM.html>`__ algorithm to do a classification. Here we use the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ data encoding circuit from the Qiskit circuit library."
msgstr "Jika dataset sudah siap kita dapat mempersiapkan algoritma `QSVM <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QSVM.html>`__ untuk melakukan klasifikasi. Di sini kita menggunakan sirkuit enkoding data `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ dari pustaka sirkuit Qiskit."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:119
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr "Di sini digunakan BasicAer ``qasm_simulator`` dengan 1024 *shot*."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:121
msgid "For the testing, the result includes the details and the success ratio. For the prediction, the result includes the predicted labels."
msgstr "Untuk pengujian, hasilnya termasuk detail dan rasio keberhasilan. Untuk prediksi, hasilnya termasuk label yang diprediksi."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:185
msgid "The following shows the kernel matrix that was built from the training sample of the dataset."
msgstr "Berikut ini merupakan matriks kernel yang dibangun dari sampel *training* dari dataset."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:215
msgid "Qiskit also has a classical SVM implementation that takes the same input data for classification. Let’s run this and do a comparison. Now the ad hoc data set was created to show that there can be datasets where quantum could give an advantage."
msgstr "Qiskit juga memiliki implementasi SVM klasik yang mengambil data masukan yang sama untuk klasifikasi. Mari kita jalankan dan bandingkan. Dataset ad hoc dibuat untuk menunjukkan bahwa terdapat dataset di mana kuantum bisa memberikan keuntungan."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:288
msgid "The breast cancer dataset"
msgstr "Dataset kanker payudara"

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:290
msgid "Now we run our algorithm with a real-world dataset: the breast cancer dataset, we use the first two principal components as features."
msgstr "Sekarang kita jalankan algoritma kita dengan sebuah dataset nyata: dataset kanker payudara, kita gunakan dua komponen utama yang pertama sebagai fitur."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:364
msgid "The kernel matrix that was built from the training sample of the dataset."
msgstr "Matriks kernel yang dibangun dari sampel *training* dari dataset."

#: ../../tutorials/machine_learning/01_qsvm_classification.ipynb:394
msgid "Again we are able to compare the result to a classical approach."
msgstr "Sekali lagi dapat kita bandingkan hasilnya dengan pendekatan klasik."

