msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 20:03\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/03_vqc.po\n"
"X-Crowdin-File-ID: 9468\n"
"Language: id_ID\n"

#: ../../tutorials/machine_learning/03_vqc.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/03_vqc.ipynb`__."
msgstr "Halaman ini dibangkitkan dari `tutorials/machine_learning/03_vqc.ipynb`__."

#: ../../tutorials/machine_learning/03_vqc.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."
msgstr "Jalankan secara interaktif di `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."

#: ../../tutorials/machine_learning/03_vqc.ipynb:9
msgid "Variational Quantum Classifier (VQC)"
msgstr "Variational Quantum Classifier (VQC)"

#: ../../tutorials/machine_learning/03_vqc.ipynb:11
msgid "The QSVM notebook demonstrated a kernel based approach. This notebook shows a variational method using the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm."
msgstr "Notebook QSVM menunjukkan pendekatan berbasis kernel. Notebook ini menunjukkan sebuah metode variasional menggunakan algoritma `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__."

#: ../../tutorials/machine_learning/03_vqc.ipynb:13
msgid "For further information see also the following reference, as given in the QSVM notebook, that also describes this approach: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr "Untuk informasi lebih lanjut lihat juga referensi berikut, seperti yang diberikan dalam Notebook QSVM, yang juga menjelaskan pendekatan ini: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"

#: ../../tutorials/machine_learning/03_vqc.ipynb:44
msgid "As per the QSVM notebook again we will use the ad hoc dataset as described in the above referenced paper. From the dataset we take samples for use as training, testing and the final prediction (datapoints)."
msgstr "Seperti pada Notebook QSVM, kita akan menggunakan dataset ad hoc seperti yang dijelaskan dalam paper referensi di atas. Dari dataset tersebut kita ambil sampel untuk *training*, pengujian, dan prediksi akhir (titik-titik data)."

#: ../../tutorials/machine_learning/03_vqc.ipynb:105
msgid "With the dataset ready we can setup the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm to do a classification. We use the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ data encoding circuit from the Qiskit circuit library, like we did with QSVM. But this is a variational algorithm so we need a variational form, i.e. parameterized circuit, whose parameters can be varied by an optimizer when computing VQC’s cost function. For this we choose `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ from the Qiskit circuit library. As the qasm_simulator has shot noise we choose to use `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ which is designed to perform under noisy conditions."
msgstr "Jika dataset sudah siap kita dapat mempersiapkan algoritma `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ untuk melakukan klasifikasi. Kita menggunakan sirkuit pengkodean data `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ dari pustaka sirkuit Qiskit, seperti yang kita lakukan dengan QSVM. Tetapi ini adalah algoritma variasional sehingga kita membutuhkan bentuk yang variasional, yaitu sirkuit terparametrisasi, yang parameter-parameternya dapat diubah oleh sebuah pengoptimisasi ketika menghitung *cost function* VQC. Untuk ini kita pilih `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ dari pustaka sirkuit Qiskit. Karena qasm_simulator memiliki derau *shot* kita memilih untuk menggunakan `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ yang dirancang untuk bekerja dalam kondisi dengan banyak derau."

#: ../../tutorials/machine_learning/03_vqc.ipynb:108
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr "Di sini digunakan BasicAer ``qasm_simulator`` dengan 1024 *shot*."

#: ../../tutorials/machine_learning/03_vqc.ipynb:174
msgid "Now VQC, as well as QSVM, have ``train``, ``test`` and ``predict`` methods. The ``run`` method, as used above, will call these in turn based on whatever data was supplied to the algorithm. But the methods called directly to say train a model and then do predict. Since the vqc instance has already been trained, lets predict another set of sample datapoints by directly calling ``predict``."
msgstr "VQC, sama halnya dengan QSVM, memiliki *method* ``train``, ``test``, dan ``predict``. *Method* ``run``, seperti yang digunakan di atas, akan memanggil ketiga *method* tersebut sesuai giliran berdasarkan data apapun yang diberikan kepada algoritma. Tetapi *method* tersebut dipanggil secara langsung untuk, sebagai contoh, men-*train* sebuah model lalu melakukan prediksi. Karena vqc telah di-*train*, mari kita prediksi sebuah himpunan lain dari sampel titik-titik data dengan memanggil ``predict`` secara langsung."

#: ../../tutorials/machine_learning/03_vqc.ipynb:228
msgid "Finally I will note that the Qiskit classifier algorithms can ``save_model`` after training and also ``load_model`` that had been previously saved."
msgstr "Akhirnya, perhatikan bawha algoritma-algoritma klasifikasi Qiskit dapat melakukan ``save_model`` setelah *training* dan ``load_model`` yang telah disimpan sebelumnya."

