msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-03-16 12:00\n"
"Last-Translator: \n"
"Language: id\n"
"Language-Team: Indonesian\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.po\n"
"X-Crowdin-File-ID: 9128\n"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."
msgstr "Halaman ini disadur dari `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:9
msgid "Transpiler Passes and Pass Manager"
msgstr "Transpiler Pass dan Manager Pass"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:21
msgid "Introduction"
msgstr "Pengantar"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:32
msgid "A central component of Qiskit Terra is the transpiler, which is designed for modularity and extensibility. The goal is to be able to easily write new circuit transformations (known as transpiler **passes**), and combine them with other existing passes. Which passes are chained together and in which order has a major effect on the final outcome. This pipeline is determined by a **pass manager**, which schedules the passes and also allows passes to communicate with each other by providing a shared space. In this way, the transpiler opens up the door for research into aggressive optimization of quantum circuits."
msgstr "Komponen sentral dari Qiskit Terra adalah transpiler, yang dirancang untuk modularitas dan extensibilitas. Tujuannya adalah untuk mudah menulis transformasi sirkuit baru (dikenal sebagai transpiler ** passes**), dan menggabungkannya dengan pass-pass yang ada. Pass-pass apa yang dirantai bersama dan dengan urutan apa memiliki efek besar pada hasil akhir. Baris pipeline ini ditentukan oleh ** pass manager * *, yang menjadwalkan pass dan juga memungkinkan pass untuk berkomunikasi satu sama lain melalui ruang bersama. Dengan cara ini, transpiler memungkinkan untuk riset optimisasi agresif tentang sirkuit kuantum."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:35
msgid "In this notebook, we look at the built-in passes, how to use the pass manager, and develop a simple custom transpiler pass. In order to do the latter, we first need to introduce the internal representation of quantum circuits in Qiskit, in the form of a Directed Acyclic Graph, or **DAG**. Then, we illustrate a simple swap mapper pass, which transforms an input circuit to be compatible with a limited-connectivity quantum device."
msgstr "Dalam notebook ini, kita akan melihat pass bawaan, cara menggunakan pengelola pass, dan membuat transpilator pass sederhana. Untuk membuat transpilator pass, pertama-tama kita perlu mengenalkan representasi internal dalam sirkuit kuantum di Qiskit, dalam bentuk Grafik Asiklik Terarah, atau **DAG** (Directed Acyclic Graph). Kemudian, kita akan mengilustrasikan swap mapper pass, yang mentransformasi sirkuit inputan menjadi cocok dengan perangkat kuantum dengan konektivitas terbatas."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:37
msgid "**Before you start**: You may need to install the ``pydot`` library and the ``graphviz`` library for the DAG plotting routines. If you are using Anaconda Python, you can install both with the ``conda`` command. If you use your system's native Python interpreter, install ``pydot`` using the ``pip`` command, and install ``graphviz`` using your system's native package manager (e.g. ``yum``, ``apt``, ``dnf``, ``brew``, etc.)."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:61
msgid "PassManager object"
msgstr "Object PassManager"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:63
msgid "Lets you specify the set of passes you want."
msgstr "Memungkinkan Anda menentukan set dari pass yang Anda inginkan."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:118
msgid "All of Qiskit's transpiler passes are accessible from ``qiskit.transpiler.passes``."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:433
msgid "Different Variants of the Same Pass"
msgstr "Perbedaan Jenis dari Pass yang Sama"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:435
msgid "There can be passes that do the same job, but in different ways. For example, the ``TrivialLayout``, ``DenseLayout`` and ``NoiseAdaptiveLayout`` all choose a layout (binding of virtual qubits to physical qubits), but use different algorithms and objectives. Similarly, the ``BasicSwap``, ``LookaheadSwap`` and ``StochasticSwap`` all insert swaps to make the circuit compatible with the coupling map. The modularity of the transpiler allows plug-and-play replacements for each pass."
msgstr "Terdapat pass yang melakukan kerja yang sama, tetapi dengan cara yang berbeda. Contohnya, ``TrivialLayout``, ``DenseLayout`` dan ``NoiseAdaptiveLayout`` semua memilih satu susunan (pengikatan qubit virtual ke qubit fisik), tetapi memakai algoritma dan objektif yang berbeda. Demikian pula ``BasicSwap``, ``LookaheadSwap`` dan ``StochasticSwap``, semua menambahkan swap untuk membuat sirkuit cocok dengan coupling map. Modularitas dari transpilator memperbolehkan pasang-dan-pakai dalam penggantian setiap pass."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:437
msgid "Below, we show the swapper passes all applied to the same circuit, to transform it to match a linear chain topology. You can see differences in performance, where the ``StochasticSwap`` is clearly the best. However, this can vary depending on the input circuit."
msgstr "Di bawah, kami memperlihatkan swap dari pass yang diaplikasikan ke satu sirkuit yang sama, untuk mentransformasi sirkuit untuk mencocokkan topologi rantai linear. Anda dapat melihat perbedaan performa, di mana ``StochasticSwap`` jelas adalah yang terbaik. Tetapi, ini dapat bervariasi tergantung sirkuit inputan."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:560
msgid "Preset Pass Managers"
msgstr "Manajer Pass Preset"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:562
msgid "Qiskit comes with several pre-defined pass managers, corresponding to various levels of optimization achieved through different pipelines of passes. Currently ``optimization_level`` 0 through 3 are supported; the higher the number, the more optimized it is, at the expense of more time. Choosing a good pass manager may take trial and error, as it depends heavily on the circuit being transpiled and the backend being targeted."
msgstr "Qiskit mempunyai beberapa manajer pass bawaan, sesuai dengan tingkat optimasi yang ciapai melalui jalur-jalur pass yang berbeda. Sekarang ini ``optimization_level`` 0 sampai 3 sudah didukung; semakin tinggi angkanya, semakin optimal, dengan harga waktu yang lebih lama. Memilih manajer pass yang baik membutuhkan banyak percobaan, karena sangat bergantung pada sirkuit yang ditranspilasikan dan backend yang dipakai."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:564
msgid "Here we illustrate the different levels by looking at a state synthesis circuit. We initialize four qubits to an arbitrary state, and then try to optimize the circuit that achieves this."
msgstr "Di sini kita menggambarkan tingkat-tingkat yang berbeda dengan melihat keadaan sintesis sirkuit. Kita menginisialisasi empat qubit kekeadaan apa saja, kemudian mencoba mengoptimasi sirkuit yang mencapai hal ini."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:566
msgid "``optimization_level=0``: just maps the circuit to the backend, with no explicit optimization (except whatever optimizations the mapper does)."
msgstr "``optimization_level=0``: hanya memetakan sirkuit ke backend, dengan tidak ada optimasi (kecuali optimasi yang dipakai pemeta)."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:568
msgid "``optimization_level=1``: maps the circuit, but also does light-weight optimizations by collapsing adjacent gates."
msgstr "``optimization_level=1``: memetakan sirkuit, tetapi juga melakukan optimasi ringan dengan menghilangkan gerbang yang berdekatan."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:570
msgid "``optimization_level=2``: medium-weight optimization, including a noise-adaptive layout and a gate-cancellation procedure based on gate commutation relationships."
msgstr "``optimization_level=2``: optimasi menengah, termasuk susunan gangguan-adaptif dan prosedur penghilangan gerbang berdasarkan hubungan komutasi gerbang."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:572
msgid "``optimization_level=3``: heavy-weight optimization, which in addition to previous steps, does resynthesis of two-qubit blocks of gates in the circuit."
msgstr "``optimization_level=3``: optimasi berat, semua yang ada di langkah sebelumnya, ditambah dengan resintesis dari gerbang blok dua qubit dalam sirkuit."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:829
msgid "Now map this to the 20-qubit Tokyo device, with different optimization levels:"
msgstr "Sekarang, petakan ini ke perangkat 20-qubit Tokyo, dengan tingkat optimasi berbeda:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:997
msgid "Introducing the DAG"
msgstr "Memperkenalkan DAG"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1008
msgid "In Qiskit, we represent circuits internally using a Directed Acyclic Graph (DAG). The advantage of this representation over a pure list of gates (i.e., *netlist*) is that the flow of information between operations are explicit, making it easier for passes to make transformation decisions without changing the semantics of the circuit."
msgstr "Di Qiskit, kami merepresentasikan internal sirkuit memakai Grafik Asiklik Terarah (DAG). Kelebihan dari representasi ini dibanding dengan daftar gerbang secara murni (i.e., *netlist*) adalah aliran informasi antara operasi menjadi eksplisit sehingga mempermudah pass untuk membuat keputusan mentransformasi tanpa mengubah semantik sirkuit."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1010
msgid "Let's start by building a simple circuit, and examining its DAG."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1049
msgid "In the DAG, there are three kinds of graph nodes: qubit/clbit input nodes (green), operation nodes (blue), and output nodes (red). Each edge indicates data flow (or dependency) between two nodes."
msgstr "Di DAG, terdapat tiga jenis simpul: simpul masukan qubit/clbit (hijau), simpul operasi (biru), dan simpul keluaran (merah). Setiap tepi mengindikasikan aliran data (atau keterkaitan) antar dua simpul."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1082
msgid "Therefore, writing a transpiler pass means using Qiskit's DAGCircuit API to analyze or transform the circuit. Let's see some examples of this."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1093
msgid "**a. Get all op nodes in the DAG:**"
msgstr "**a. Dapatkan semua simpul op di DAG:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1148
msgid "Each node is an instance of the ``DAGOpNode`` class. Let's examine the information stored in the second op node."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1210
msgid "**b. Add an operation to the back:**"
msgstr "**b. Tambahkan operasi ke belakang:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1242
msgid "**c. Add an operation to the front:**"
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1274
msgid "**d. Substitute a node with a subcircuit:**"
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1314
msgid "Finally, after all transformations are complete, we can convert back to a regular QuantumCircuit object. This is what the transpiler does! It takes a circuit, operates on it in DAG form, and outputs a transformed circuit."
msgstr "Akhirnya, setelah semua transformasi selesai, kita dapat mengonversi balik ke objek QuantumCircuit reguler. Inilah yang dilakukan transpiler! Transpiler mengambil sirkuit, mengoperasikannya dalam bentuk DAG, dan mengeluarkan sirkuit yang tertransformasi."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1347
msgid "Implementing a BasicMapper Pass"
msgstr "Menerapkan BasicMapper Pass"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1358
msgid "Now that we are familiar with the DAG, let's use it to write a transpiler pass. Here we will implement a basic pass for mapping an arbitrary circuit to a device with limited qubit connectivity. We call this the BasicMapper. This pass is included in Qiskit Terra as well."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1360
msgid "The first thing to do when writing a transpiler pass is to decide whether the pass class derives from a ``TransformationPass`` or ``AnalysisPass``. Transformation passes modify the circuit, while analysis passes only collect information about a circuit (to be used by other passes). Then, the ``run(dag)`` method is implemented, which does the main task. Finally, the pass is registered inside the ``qiskit.transpiler.passes`` module."
msgstr "Yang pertama perlu dilakukan saat menulis pass transpiler adalah memutuskan apakah kelas pass diperoleh dari ``TransformationPass`` atau ``AnalysisPass``. Pass transformasi mengubah sirkuit sementara pass analisis hanya mengambil informasi dari sebuah sirkuit (untuk dipakai pass lainnya). Kemudian, metode ``run(dag)`` diterapkan, yang berfungsi untuk melakukan pekerjaan utama. Akhirnya, pass sudah teregistrasi dalam modul ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1362
msgid "This pass functions as follows: it traverses the DAG layer-by-layer (each layer is a group of operations that does not act on independent qubits, so in theory all operations in a layer can be done independently). For each operation, if it does not already meet the coupling map constraints, the pass identifies a swap path and inserts swaps to bring the two qubits close to each other."
msgstr "Fungsi pass ini adalah sebagai berikut: melewati DAG lapisan demi lapisan (setiap lapisan adalah sebuah kelompok operasi yang tidak bertindak terhadap qubit independen, jadi dalam teori semua operasi dalam lapisan dapat dilakukan secara independen). Untuk setiap operasi, jika tidak memenuhi batasan coupling map, pass akan mengidentifikasi jalur swap dan menambahkan swap untuk membawa dua qubit dekat satu sama lain."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1364
msgid "Follow the comments in the code for more details."
msgstr "Ikuti komentar dalam kode untuk rincian lebih lanjut."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1480
msgid "Let's test this pass on a small example circuit."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1534
msgid "Now we construct a pass manager that contains our new pass. We pass the example circuit above to this pass manager, and obtain a new, transformed circuit."
msgstr "Sekarang kita membangun manajer pass yang berisi pass kita yang baru. Kita memberikan contoh sirkuit di atas kepada manajer pass, dan mendapatkan sirkuit baru yang telah ditransformasi."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1602
msgid "Note that this pass only inserts the swaps necessary to make every two-qubit interaction conform to the device coupling map. It does not, for example, care about the direction of interactions, or the native gate set supported by the device. This is a design philosophy of Qiskit's transpiler: every pass performs a small, well-defined action, and the aggressive circuit optimization is achieved by the pass manager through combining multiple passes."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1614
msgid "Transpiler Logging"
msgstr "Pencatatan Transpiler"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1616
msgid "Due to the complexity of the internal operations that the transpiler is performing it's likely that you'll end up in a situation where you'd like to debug an issue or just understand more of what is happening inside the transpiler when you call it. To facilitate this the transpiler emits log messages as part of its normal operation. This logging uses the Python standard library ``logging`` module to emit the log messages. Python's standard logging was used because it allows Qiskit-Terra's logging to integrate in a standard way with other applications and libraries."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1619
msgid "For a more thorough introduction to Python logging refer to the `official documentation <https://docs.python.org/3/library/logging.html>`__ and the tutorials and cookbook linked off of there."
msgstr "Untuk introduksi catatan Python lebih lengkap mengacu kepada `dokumentasi resmi <https://docs.python.org/3/library/logging.html>`__ dan tutorial dan intruksi detail terdapat di sana."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1634
msgid "Note: Most of the logging module functions used in this section adjust global settings. If you run commands in this section it might effect the output from other cells if they are run in a different order."
msgstr "Catatan: Sebagian besar fungsi modul pencatatan yang dipakai dalam bagian ini menyesuaikan pengaturan global. Jika Anda menjalankan perintah dalam bagian ini mungkin akan berdampak pada keluaran dari sel lainnya jika dijalankan dengan urutan yang berbeda."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1650
msgid "Configuring Python Standard Library Logging"
msgstr "Mengonfigurasi Pustaka Standar Pencatatan dari Python"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1652
msgid "By default Python Standard Logging only prints log messages at the ``WARNING``, ``ERROR``, or ``CRITICAL`` log levels. Since none of the logs emitted by the transpiler use these log levels (they're all informative) you need to configure logging."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1654
msgid "The simplest way to do this is to just run:"
msgstr "Cara paling sederhana untuk melakukannya adalah hanya menjalankan:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1677
msgid "The ``basicConfig()`` function (see the docs here: https://docs.python.org/3/library/logging.html#logging.basicConfig) configures a root handler and formatter. We also specify the `log level <https://docs.python.org/3/library/logging.html#levels>`__ to display with the ``level`` kwarg. Setting it to a level will also include and higher levels. For example, if you set it to ``'INFO'`` in addition to the ``INFO`` level this will also include the ``WARNING``, ``ERROR``, and ``CRITICAL`` log levels."
msgstr "Fungsi ``basicConfig()`` (lihat dokumentasinya di sini: https://docs.python.org/3/library/logging.html#logging.basicConfig) mengonfigurasi penangan dan pemformat dasar. Kita juga menentukan `tingkat log <https://docs.python.org/3/library/logging.html#levels>`__ untuk ditampilkan bersama kwarg ``level``. Mengatur itu ke suatu tingkat juga akan mencakup tingkatan yang lebih tinggi. Sebagai contoh, jika Anda mengatur itu ke ``'INFO'``, selain tingkat ``INFO`` akan juga dicakup tingkatan ``WARNING``, ``ERROR``, dan ``CRITICAL``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1679
msgid "Now the python environment in this notebook is configured to emit log messages to stderr when you run the transpiler. For example:"
msgstr "Sekarang lingkungan python dalam notebook ini dikonfigurasi untuk mengeluarkan pesan catatan ke stderr saat Anda menjalankan transpiler. Sebagai contoh:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1694
msgid "Note: basicConfig() will only work when called the first time it's called. It detects if a root handler and formatter have already been setup (either by using an earlier basicConfig() call or otherwise) and does nothing if they have. Further adjustments will have to by interacting with the handler directly."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2402
msgid "As you can clearly see here when calling ``transpile()`` it now prints 2 types of log messages. The first is at the ``INFO`` log level and come from the pass manager. These indicate each pass that was executed and how long that took. The second are at the ``DEBUG`` level and come from the StochasticSwap pass and describes the internal operation of that pass. It's useful for debugging issues in the pass's operation."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2414
msgid "Adjusting the log level for the transpiler"
msgstr "Menyesuakian tingkat log untuk transpiler"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2416
msgid "The qiskit transpiler uses a single namespace ``qiskit.transpiler``, as used by ``logging.getLogger('qiskit.transpiler')``. This makes it very easy to adjust the log level for just the transpiler. For example if you only wish to see log messages at the INFO level or above you can run:"
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2617
msgid "Setting up logging to deal with parallel execution"
msgstr "Mengatur pencatatan untuk menangani eksekusi paralel"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2619
msgid "When running the transpiler with multiple circuits by default these circuits are transpiled in parallel. If you want to do this with logging enabled and be able to understand the output some additional steps are required."
msgstr "Saat menjalakan transpiler dengan beberapa sirkuit lazimnya sirkuit-sirkuit ini akan ditranspilkan dalam paralel. Jika anda ingin melakukan ini dengan pencatatan yang diaktifkan dan mengerti keluarannya, diperlukan beberapa langkah tambahan."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2621
msgid "If you were just to enable logging as above and then pass ``transpile()`` multiple circuits you'll get results that are difficult to decipher. For example:"
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:3961
msgid "As you can see here we get log messages from all 3 circuits being transpiled together. There is no way to know which pass is part of which circuit's transpilation. Luckily Python logging provides tools to deal with this. The simplest one is to just change the `log formatter <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ so that includes additional information so we can associate a log message with the process it came from."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:3984
msgid "Then rerun the ``transpile()`` call and see the new log formatter."
msgstr "Kemudian jalankan kembali ``transpile()`` dan kita dapat melihat catatan peformat yang baru."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:5320
msgid "Now the format for the log messages has been changed and it includes a process name for each of the transpilation processes so it's at least clear which log messages go together."
msgstr ""

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:5322
msgid "There are many different options for how you can configure, this example is pretty limited. Refer to the documentation for more examples and options to build more sophisticated use cases that suit your specific use case or preferences."
msgstr "Ada banyak pilihan untuk bagaimana Anda mengonfigurasi, contoh di sini sangat terbatas. Anda dapat mengacu pada dokumentasi untuk contoh lebih banyak dan opsi untuk pembuatan lebih canggih yang sesuai dengan penggunaan yang Anda butuhkan atau inginkan."

