msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 20:03\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/07_asian_barrier_spread_pricing.po\n"
"X-Crowdin-File-ID: 9354\n"
"Language: id_ID\n"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/07_asian_barrier_spread_pricing.ipynb`__."
msgstr "Halaman ini dibuat dari ` tutorials/finance/07_asian_barrier_spread_pricing.ipynb ` __."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/07_asian_barrier_spread_pricing.ipynb>`_."
msgstr "Jalankan secara interaktif dalam ' IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/finance/07_asian_barrier_spread_pricing.ipynb>` _."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:9
msgid "*Pricing Asian Barrier Spreads*"
msgstr "*Penetapan Harga Sebaran Barrier Asia *"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:21
msgid "Introduction"
msgstr "Pendahuluan"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:23
msgid "An Asian barrier spread is a combination of 3 different option types, and as such, combines multiple possible features that the Qiskit Finance option pricing framework supports:"
msgstr "Penyebaran penghalang Asia (Asian Barrier Spread) adalah kombinasi dari 3 jenis pilihan yang berbeda, dan dengan demikian, menggabungkan beberapa fitur yang mungkin adalah kerangka kerja penetapan harga opsi Qiskit Finance yang mendukung:"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:25
msgid "Asian option: The payoff depends on the average price over the considered time horizon."
msgstr "Pilihan Asia: Payoff bergantung pada harga rata-rata atas horizon waktu yang dipertimbangkan."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:26
msgid "Barrier Option: The payoff is zero if a certain threshold is exceeded at any time within the considered time horizon."
msgstr "Opsi barrier: Payoff bernilai nol jika ambang batas tertentu terlewati pada suatu waktu dalam horizon waktu yang ditentukan."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:27
msgid "(Bull) Spread: The payoff follows a piecewise linear function (depending on the average price) starting at zero, increasing linear, staying constant."
msgstr "Sebaran (Bull): Payoff mengikuti fungsi linear sepenggal atau piecewise (tergantung harga rata-rata) mulai dari nol, meningkat secara linear, tetap konstan."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:29
msgid "Suppose strike prices :math:`K_1 < K_2` and time periods :math:`t=1,2`, with corresponding spot prices :math:`(S_1, S_2)` following a given multivariate distribution (e.g. generated by some stochastic process), and a barrier threshold :math:`B>0`. The corresponding payoff function is defined as"
msgstr "Misalkan harga strike :math:` K_1 < K_2 ` dan periode waktu :math:` t=1,2 `, dengan spot price yang sesuai :math:` (S_1, S_ 2) ` mengikuti distribusi multivariat yang diberikan (misalnya dihasilkan oleh beberapa proses stochastic), dan ambang penghalang :math:` B> 0 `. Fungsi payoff yang sesuai didefinisikan sebagai"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:31
msgid "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:40
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option"
msgstr "Pada bagian berikut, sebuah algoritma kuantum yang berdasarkan estimasi amplitudo digunakan untuk memperkirakan payoff yang diharapkan, yaitu harga wajar sebelum mendapat diskon, sebagai pilihan"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:42
msgid "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:44
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "Pendekatan fungsi objektif dan pengenalan umum untuk opsi penentuan harga dan analisis risiko pada komputer kuantum diberikan dalam jurnal berikut:"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:46
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Analisis Risiko Kuantum. Woerner, Egger. 2018."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:47
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:77
msgid "Uncertainty Model"
msgstr "Model Ketidakpastian"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:79
msgid "We construct a circuit factory to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit factory implements the following:"
msgstr "Kita membuat sebuah pabrik rangkaian untuk membuat sebuah distribusi acak log-normal multivariat ke dalam sebuah keadaan kuantum pada :math:`n` kubit. Untuk setiap dimensi :math:`j = 1,\\ldots,d`, distribusinya dipotong menjadi sebuah interval :math:`[\\text{low}_j, \\text{high}_j]` dan didiskritkan menggunakan :math:`2^{n_j}` titik jaringan, di mana :math:`n_j` menandakan jumlah kubit yang digunakan untuk merepresentasikan dimensi :math:`j`, yaitu :math:`n_1+\\ldots+n_d = n`. Operator uniter yang terkait dengan pabrik rangkaian mengimplementasikan hal berikut:"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:82
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:84
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "di mana :math:`p_{i_1\\ldots i_d}` ` menunjukkan probabilitas yang sesuai dengan distribusi yang dipotong dan didiskritkan dan dimana :math:`i_j` dipetakan ke interval yang tepat menggunakan peta affine:"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:86
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:88
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "Untuk menyederhanakannya, kita menganggap kedua harga saham tersebut independen dan terdistribusi secara identik. Asumsi ini hanya untuk menyederhanakan parameterisasi di bawah dan dapat dengan mudah dilonggarkan ke distribusi multivariat yang lebih kompleks dan sesuai. Satu-satunya asumsi yang penting untuk implementasi saat ini adalah bahwa jaringan diskritisasi dengan dimensi-dimensi yang berbeda memiliki ukuran langkah yang sama."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:173
msgid "Payoff Function"
msgstr "Fungsi Payoff"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:175
msgid "For simplicity, we consider the sum of the spot prices instead of their average. The result can be transformed to the average by just dividing it by 2."
msgstr "Untuk menyederhanakannya, kita menganggap jumlah dari spot price bukan rata-rata mereka. Hasilnya dapat ditransformasikan ke rata-rata dengan hanya membagi dengan 2."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:177
msgid "The payoff function equals zero as long as the sum of the spot prices :math:`(S_1 + S_2)` is less than the strike price :math:`K_1` and then increases linearly until the sum of the spot prices reaches :math:`K_2`. Then payoff stays constant to :math:`K_2 - K_1` unless any of the two spot prices exceeds the barrier threshold :math:`B`, then the payoff goes immediately down to zero. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_1 + S_2) \\geq K_1` and another comparator/ancilla to capture the case that :math:`(S_1 + S_2) \\geq K_2`. These ancillas are used to control the linear part of the payoff function."
msgstr "Fungsi payoff sama dengan nol selama jumlah harga-harga tunai :math:`(S_1 + S_2)` bernilai kurang dari harga kesepakatan :math:`K_1` dan kemudian meningkat secara linear hingga jumlah harga tunai mencapai :math:`K_2`. Selanjutnya payoff tetap konstan terhadap :math:`K_2 - K_1` kecuali jika salah satu dari antara kedua harga tunai melebihi ambang batas barrier :math:`B`, maka payoff langsung turun ke nol. Implementasi tersebut pertama menggunakan sebuah operator penjumlahan terbobot untuk menghitung jumlah harga-harga tunai ke dalam sebuah daftar ancilla, lalu menggunakan sebuah komparator, yang membalikkan sebuah kubit ancilla dari :math:`\\big|0\\rangle` menjadi :math:`\\big|1\\rangle` jika :math:`(S_1 + S_2) \\geq K_1` dan sebuah komparator/ancilla lain untuk menyimpan kasus di mana :math:`(S_1 + S_2) \\geq K_2`. Ancilla-ancilla ini digunakan untuk mengontrol bagian linear dari fungsi payoff tersebut."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:180
msgid "In addition, we add another ancilla variable for each time step and use additional comparators to check whether :math:`S_1`, respectively :math:`S_2`, exceed the barrier threshold :math:`B`. The payoff function is only applied if :math:`S_1, S_2 \\leq B`."
msgstr "Selain itu, kita menambahkan variabel ancilla lain untuk setiap langkah waktu dan menggunakan komparator tambahan untuk memeriksa apakah :math:`S_1`, masing-masing :math:`S_2`, melebihi ambang batas barrier :math:`B`. Fungsi payoff hanya diterapkan jika :math:`S_1, S_2 \\leq B`."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:182
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "Bagian linear itu sendiri diaproksimasi sebagai berikut: Kita memanfaatkan fakta bahwa :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` untuk nilai :math:`|y|` yang kecil. Dengan demikian, untuk sebuah faktor penskalaan perkiraan :math:`c_\\text{approx} \\in [0, 1]` dan :math:`x \\in [0, 1]` kita mempertimbangkan"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:184
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:186
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ untuk :math:` c_\\text{approx}` yang kecil."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:188
msgid "We can easily construct an operator that acts as"
msgstr "Kita dapat dengan mudah membangun operator yang bertindak sebagai"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:190
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr ""

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:192
msgid "using controlled Y-rotations."
msgstr "menggunakan kontrol Y-rotasi."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:194
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Pada akhirnya, kita tertarik pada kemungkinan mengukur :math:`big|1\\rangle` dalam kubit terakhir, yang sesuai dengan :math:`\\sin^2(a*x+b)`. Bersama dengan perkiraan di atas, hal ini memungkinkan perkiraan nilai bunga (interest). Semakin kecil :math:`c_\\text{approx}` yang dipilih, semakin baik perkiraannya. Namun, karena kita kemudian memperkirakan sebuah nilai yang diskalakan dengan :math:`c_\\text{approx}`, jumlah kubit evaluasi :math:`m` perlu disesuaikan."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:196
msgid "For more details on the approximation, we refer to: Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Untuk pendekatan lebih jelasnya, kita mengacu pada: Analisis Risiko Kuantum. Woerner, Egger. 2018."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:198
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "Karena operator penjumlahan terbobot (dalam implementasinya saat ini) hanya dapat menjumlahkan bilangan bulat, kita perlu memetakan dari rentang awal ke rentang yang dapat direpresentasikan untuk memperkirakan hasilnya, dan membalikkan pemetaan ini sebelum menginterpretasikan hasilnya. Pemetaan ini pada dasarnya berhubungan dengan pemetaan afin yang dideskripsikan dalam konteks model ketidakpastian di atas."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:591
msgid "Evaluate Expected Payoff"
msgstr "Evaluasi Hasil yang Diharapkan"

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:593
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "Pertama kita memverifikasi rangkaian kuantum dengan mensimulasikannya dan menganalisa probabilitas yang dihasilkan untuk mengukur keadaan :math:`|1\\rangle` dalam kubit objektif tersebut."

#: ../../tutorials/finance/07_asian_barrier_spread_pricing.ipynb:699
msgid "Next we use amplitude estimation to estimate the expected payoff. Note that this can take a while since we are simulating a large number of qubits. The way we designed the operator (asian_barrier_spread) implies that the number of actual state qubits is significantly smaller, thus, helping to reduce the overall simulation time a bit."
msgstr "Selanjutnya kita menggunakan estimasi amplitudo untuk memperkirakan harga yang diharapkan. Perhatikan bahwa hal ini dapat memerlukan waktu karena kita sedang mensimulasikan banyak kubit. Cara kita mendesain operator (asian_barrier_spread) mengimplikasikan bahwa jumlah kubit keadaan yang sebenarnya jauh lebih kecil, sehingga mampu sedikit mengurangi waktu simulasi keseluruhan."

