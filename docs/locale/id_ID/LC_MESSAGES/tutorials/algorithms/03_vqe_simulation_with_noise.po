msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-21 20:22+0000\n"
"PO-Revision-Date: 2021-03-04 03:06\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: id_ID\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "Halaman ini dibuat dari `tutorials/algoritms/03_vqe_simulation_with_noise.ipynb`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_."
msgstr "Jalankan secara interaktif di 'IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/03_vqe_simulation_with_noise.ipynb>`_."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "VQE di simulator Aer dengan derau"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``qasm_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr "Notebook ini mendemonstrasikan penggunaan ` Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>` __ ` ` qasm_simulator ` ` untuk menjalankan simulasi dengan noise, berdasarkan model noise yang diberikan. Ini berguna untuk menyelidiki perilaku di bawah kondisi noise yang berbeda. Aer tidak hanya memungkinkan Anda untuk mendefinisikan model noise kustom, tetapi juga memungkinkan model noise dibuat berdasarkan perangkat kuantum nyata. Yang terakhir adalah tujuan demonstrasi notebook untuk demonstrasi VQE dengan model noise dan bukan hal lebih rumit bagaimana membuat model noise kustom."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/documentation/the_elements.html#ignis>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr "` Qiskit Ignis <https://qiskit.org/documentation/the_elements.html#ignis>` __ menyediakan solusi untuk mitigasi error pengukuran ketika eksekusi dengan simulasi noise atau perangkat kuantum nyata. Solusi ini dimanfaatkan oleh modul ` ` QuantumInstance ` ` yang memungkinkan setiap algoritma secara otomatis memiliki mitigasi error pengukuran."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "Informasi lebih lanjut tentang model noise Qiskit Aer dapat ditemukan online di ` dokumentasi Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_noise.html>` __, juga ada tutorial untuk ` pembuatan model noise <../simulators/3_building_noise_models.ipynb> ` __."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "Informasi lebih lanjut tentang mitigasi error pengukuran di Qiskit Ignis dapat ditemukan di tutorial ` mitigasi pengukuran error <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>` __."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit Aqua."
msgstr "Simulasi noise akan ditunjukkan di sini dengan VQE, menemukan energi minimum (ground state) dari Hamiltonian, tetapi teknik ini berlaku untuk setiap algoritma kuantum dari Qiskit Aqua."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Chemistry, for an H2 molecule, so we can quickly create an Operator."
msgstr "Jadi untuk VQE kita butuh operator qubit sebagai input. Di sini, sekali lagi, kita akan mengambil satu set paulis yang awalnya dihitung dengan Qiskit Kimia, untuk molekul H2, sehingga kita dapat dengan cepat membuat sebuah Operator."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:95
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "Karena masalah di atas mudah dipecahkan secara klasik kita dapat menggunakan NumPyMinimumEigensolver untuk menghitung nilai referensi untuk membandingkan hasil nanti."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:139
msgid "Performance *without* noise"
msgstr "Kinerja *tanpa* derau"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:141
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "Pertama kita akan eksekusi di simulator tanpa noise untuk melihat hasilnya. Telah dibuat backend dan QuantumInstance, yang memegang backend serta berbagai konfigurasi runtime lainnya, yang menjadi acuan di sini, sehingga mudah untuk dibandingkan ketika kita sampai ke bagian berikutnya di mana noise ditambahkan. Tidak ada upaya untuk mengurangi noise atau apa pun di notebook ini sehingga pengaturan terakhir dan hasil eksekusi VQE adalah identik."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:200
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "Kami mendapat nilai energi seperti di atas ketika konvergensi sehingga kita dapat melihat apa yang terjadi di grafik di bawah ini."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:255
msgid "Performance *with* noise"
msgstr "Kinerja *dengan* derau"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:257
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr "Sekarang kita menambahkan noise. Di sini kita membuat model noise untuk Aer dari perangkat nyata. Anda dapat membuat model kustom noise dengan Aer tapi itu di luar cakupan notebook ini. Tautan ke informasi lebih lanjut tentang model noise Aer, bagi mereka yang mungkin tertarik, diberikan di atas."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:259
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "Pertama kita perlu mendapatkan backend perangkat nyata dan dari ` ` configuration ` ` dan ` `properties ` ` kita dapat mengatur pemetaan pasangan dan model noise sesuai dengan perangkat. Sementara kita bisa membiarkan simulator dengan default pemetaan semua-ke-semua, ini menunjukkan bagaimana mengatur pemetaan pasangan juga. Catatan: Kita juga dapat menggunakan pasangan pemetaan ini sebagai peta entanglement untuk bentuk variasional jika kita memilih."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:261
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:379
msgid "Note: simulation with noise will take longer than without noise."
msgstr "Catatan: simulasi dengan noise akan memakan waktu lebih lama daripada tanpa noise."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:263
msgid "Terra Mock Backends:"
msgstr "Backend Sederhana Terra:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:265
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "Kita akan menggunakan data derau nyata untuk perangkat IBM Quantum menggunakan data yang disimpan di Qiskit Terra. Khususnya, dalam tutorial ini, perangkat adalah ibmq_vigo."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:375
msgid "Performance *with* noise and measurement error mitigation"
msgstr "Kinerja *dengan* derau dan mitigasi galat pengukuran"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:377
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "Sekarang kita akan menambahkan metode untuk mitigasi error pengukuran, yang meningkatkan fidelity pengukuran. Di sini kita memilih ` ` CompleteMeasFitter ` ` untuk mitigasi error pengukuran. Matrik kalibrasi akan di perbarui otomatis setiap 30 menit (nilai default)."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:464
msgid "Lets bring the results together here for a summary."
msgstr "Mari kita kumpulkan hasilnya bersama - sama di sini sebagai ringkasan."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:466
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "Kami mendapatkan nilai referensi dari algoritma klasik dan kemudian menjalankan VQE pada simulator qasm. Walau simulasi ini ideal (tanpa noise) ada pengaruh shot-noise karena sampling- dan menambah jumlah shot mengurangi ini seiring banyaknya sampel diambil, tetapi shot ditetapkan nilai default 1024 dan kita melihat efek kecil dalam hasil."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:468
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "Kemudian kita menambah noise menggunakan model yang diambil dari perangkat nyata dan dapat melihat pengaruhnya. Akhirnya kita menambahkan mitigasi error pengukuran yang menyesuaikan hasil supaya pengaruh noise dalam peralatan klasik pengukur qubit dapat dikurangi."

