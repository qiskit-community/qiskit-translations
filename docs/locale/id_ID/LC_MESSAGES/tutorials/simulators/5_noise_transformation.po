msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:43\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/5_noise_transformation.po\n"
"X-Crowdin-File-ID: 9168\n"
"Language: id_ID\n"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:10
msgid "This page was generated from `tutorials/simulators/5_noise_transformation.ipynb`__."
msgstr "Halaman ini dibuat dari ` tutorials/algoritms/01_grover.ipynb ` __."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:9
msgid "Noise Transformation"
msgstr "Transformasi Derau"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:21
msgid "Introduction"
msgstr "Pengantar"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:23
msgid "This notebook shows how to use the Qiskit Aer utility functions ``approximate_quantum_error`` and ``approximate_noise_model`` to transform quantum noise channels into a different, more suitable, noise channel."
msgstr "Notebook ini menunjukkan cara penggunaan fungsi utilitas Qiskit Aer ` ` approximate_quantum_error ` ` dan ` ` approximate_noise_model ` ` untuk mengubah derau saluran kuantum ke derau saluran yang berbeda dan lebih cocok."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:25
msgid "Our guiding example is Clifford simulation. A Clifford simulator can efficiently simulate quantum computations which include gates only from a limited, non-universal set of gates (the Clifford gates). Not all quantum noises can be added to such simulations; hence, we aim to find a “close” noise channel which can be simulated in a Clifford simulator."
msgstr "Contoh pedoman kita adalah simulasi Clifford. Sebuah simulator Clifford dapat dengan efisien mensimulasikan komputasi kuantum yang mencakup set non-universal gate yang terbatas (atau, gate Clifford). Tidak semua noise kuantum dapat ditambahkan ke simulasi tersebut; karenanya, kita bertujuan untuk menemukan channel noise \"dekat\" yang dapat disimulasikan dengan simulator Clifford simulator."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:27
msgid "We begin by importing the transformation functions from the Aer provider utilities"
msgstr "Kita mulai dengan mengimpor fungsi transformasi dari utilitas provider Aer"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:49
msgid "The name “approximate” suggests that these functions generate the closest (in the Hilbert-Schmidt metric) error possible to the given one."
msgstr "Nama \"perkiraan\" menunjukkan bahwa fungsi-fungsi ini menghasilkan error yang paling dekat (dalam metrik Hilbert-Schmidt) kepada salah satu dari yang diberikan."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:51
msgid "We demonstrate the approximation using several standard error channels defined in Qiskit."
msgstr "Kita mendemonstrasikan aproksimasi dengan menggunakan beberapa error channel standar yang didefinisikan di Qiskit."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:78
msgid "Overview"
msgstr "Sekilas"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:80
msgid "A 1-qubit quantum channel is a function :math:`\\mathcal{C}:\\mathbb{C}^{2\\times2}\\to\\mathbb{C}^{2\\times2}` mapping density operators to density operators (to ensure the image is a density operator :math:`\\mathcal{C}` is required to be completely positive and trace preserving, **CPTP**)."
msgstr "Sebuah channel kuantum 1-qubit adalah fungsi :math:` \\mathcal{C}: \\mathbb{C}^ {2\\times2}\\to\\mathbb{C}^ {2\\times2} ` pemetaan operator density ke operator density (untuk memastikan hasil pemetaan adalah operator density :math:` \\mathcal{C}` harus complit positif dan trace preservasi, **CPTP* *)."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:82
msgid "Given quantum channels :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}`, and probabilities :math:`p_1, p_2, \\dots, p_r` such that :math:`0\\le p_i \\le 1` and :math:`p_1+\\dots +p_r = 1`, a new quantum channel :math:`\\mathcal{C}_\\mathcal{E}` can be constructed such that :math:`\\mathcal{C}_\\mathcal{E}(\\rho)` has the effect of choosing the channel :math:`\\mathcal{E}_i` with probability :math:`p_i` and applying it to :math:`\\rho`."
msgstr "Dari channel kuantum :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}`, dan probabilitas :math:`p_1, p_2, \\dots, p_r` sehingga :math:`0\\le p_i \\le 1` dan :math:`p_1+\\dots +p_r = 1`, satu channel quantum baru :math:`\\mathcal{C}_\\mathcal{E}` dapat dibuat sehingga :math:`\\mathcal{C}_\\mathcal{E}(\\rho)` berefek memilih channel :math:`\\mathcal{E}_i` dengan probabilitas :math:`p_i` dan diaplikasikan ke :math:`\\rho`."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:84
msgid "The noise transformation function solves the following optimization problem: Given a channel :math:`\\mathcal{C}` (“goal”) and a list of channels :math:`\\mathcal{E}_{1},\\dots,\\mathcal{E}_{r}`, find the probabilities :math:`p_1, p_2, \\dots, p_r` minimizing :math:`D(\\mathcal{C}, \\mathcal{C}_\\mathcal{E})` according to some distance metric :math:`D` (the Hilbert-Schmidt metric is currently used)."
msgstr "Fungsi transformasi noise adalah memecahkan masalah optimisasi berikut: Dari sebuah channel :math:` \\mathcal{C}` (\"goal\") dan sebuah daftar dari channel :math:` \\mathcal{E}_{1}, \\dots, \\mathcal{E}_{r}`, hitung probabilitas :math:` p_1, p_2, \\dots, p_r ` yang meminimalkan :math:` D (\\mathcal{C}, \\mathcal{C}_ \\mathcal{E}) ` menurut beberapa metrik jarak :math:` D ` (metrik Hilbert-Schmidt yang digunakan saat ini)."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:86
msgid "To ensure the approximation is honest, in the sense that the approximate error channel serves as an “upper bound” for the actual error channel, we add the additional honesty constraint:"
msgstr "Untuk memastikan perkiraan tersebut benar, dalam arti bahwa perkiraan channel error berfungsi sebagai \"batas atas\" untuk channel error yang sebenarnya, kita menambahkan batasan tambahan:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:88
msgid "\\text{F}(I,\\mathcal{C})\\ge F(I,\\mathcal{C}_\\mathcal{E})\n\n"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:90
msgid "Where :math:`\\text{F}` is a fidelity measure and :math:`I` is the identity channel."
msgstr "Dimana :math:`\\text{F}` adalah suatu ukuran fidelity dan :math:` I ` adalah channel identitas."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:102
msgid "Example: Approximating amplitude damping noise with reset noise."
msgstr "Contoh: Aproksimasi damping amplitudo noise dengan reset noise."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:104
msgid "**Amplitude damping** noise is described by a single parameter :math:`0\\le \\gamma \\le 1` and given by the Kraus operators:"
msgstr "** Amplitude damping * * noise digambarkan dengan sebuah parameter tunggal :math:` 0\\le \\gamma \\le 1 ` dan diberikan oleh operator Kraus:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:106
msgid "\\left(\\begin{array}{cc}\n"
"1 & 0\\\\\n"
"0 & \\sqrt{1-\\gamma}\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & \\sqrt{\\gamma}\\\\\n"
"0 & 0\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:116
msgid "**Reset** error is described by probabilities :math:`0\\le p, q\\le 1` such that :math:`p+q\\le 1` and given by the Kraus operators:"
msgstr "Error ** Reset** digambarkan dengan probabilitas :math:` 0\\le p, q\\le 1 ` sehingga :math:` p + q\\le 1 ` dan diberikan oleh operator Kraus:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:118
msgid "\\left(\\begin{array}{cc}\n"
"\\sqrt{p} & 0\\\\\n"
"0 & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & \\sqrt{p}\\\\\n"
"0 & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & 0\\\\\n"
"\\sqrt{q} & 0\n"
"\\end{array}\\right),\\left(\\begin{array}{cc}\n"
"0 & 0\\\\\n"
"0 & \\sqrt{q}\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:134
msgid "This can be thought of as “resetting” the quantum state of the affected qubit to :math:`\\left|0\\right\\rangle` with probability :math:`p`, to :math:`\\left|1\\right\\rangle` with probability :math:`q`, and do nothing with probability :math:`1-(p+q)`."
msgstr "Hal ini dapat dianggap sebagai \"reset\" state kuantum menjadi :math:` \\left | 0\\right\\rangle` dengan probabilitas :math:` p `, to :math:` \\left | 1\\right\\rangle ` dengan probabilitas :math:` q `, dan tidak berubah dengan probabilitas :math:` 1-(p + q) `."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:136
msgid "It is not too difficult to determine analytically the best values of :math:`p,q` to approximate a :math:`\\gamma` amplitude damping channel, see the details `here <https://arxiv.org/abs/1207.0046>`__. The best approximation is:"
msgstr "Tidak terlalu sulit untuk menentukan secara analisis nilai terbaik :math:` p, q ` untuk aproksimasi channel dampling amplitude :math:` \\gamma `, lihat detailnya `di sini <https://arxiv.org/abs/1207.0046>` __. Aproksimasi yang paling baik adalah:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:138
msgid "p=\\frac{1}{2}\\left(1+\\gamma-\\sqrt{1-\\gamma}\\right), q=0\n\n"
msgstr ""

#: ../../tutorials/simulators/5_noise_transformation.ipynb:161
msgid "We only needed the above code to perform the actual approximation."
msgstr "Kita hanya perlu kode di atas untuk aproksimasi aktual."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:235
msgid "We got the results predicted analytically."
msgstr "Kita mendapat hasil prediksi secara analitis."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:238
msgid "Different input types"
msgstr "Jenis input yang berbeda"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:240
msgid "The approximation function is given two inputs: The error channel to approximate, and a set of error channels that can be used in constructing the approximation."
msgstr "Fungsi aproksimasi didefinisikan dengan dua input: channel error untuk aproksimasi, dan satu set channel error yang dapat digunakan untuk membuat aproksimasi."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:242
msgid "The **error channel** to approximate can be given as any input that can be converted to the ``QuantumError`` object."
msgstr "** error channel * * untuk aproksimasi dapat diberikan sebagai input yang dapat dikonversi ke objek ` ` QuantumError ` `."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:244
msgid "As an example, we explicitly construct the Kraus matrices of amplitude damping and pass to the same approximation function as before:"
msgstr "Sebagai contoh, kita secara eksplisit membangun matriks Kraus dari amplitudo damping dan memberikan fungsi aproksimasi yang sama seperti sebelumnya:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:298
msgid "The **error operators** that are used to construct the approximating channel can be either given as a list, a dictionary or a string indicating hard-coded channels."
msgstr "** error operator ** yang digunakan untuk membangun channel aproksimasi dapat diberikan sebagai sebuah daftar, atau sebuah kamus, atau string yang mengindikasikan channel hard-coded."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:300
msgid "Any channel can be either a list of Kraus operators, or ‘QuantumError’ objects."
msgstr "Setiap channel dapat berupa daftar operator Kraus, atau objek 'QuantumError'."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:302
msgid "The identity channel does not need to be passed directly; it is always implicitly used."
msgstr "Channel identitas tidak perlu diberikan secara langsung; karena itu secara implisit selalu digunakan."

#: ../../tutorials/simulators/5_noise_transformation.ipynb:304
msgid "As an example, we approximate amplitude damping using an explicit Kraus representation for reset noises:"
msgstr "Sebagai contoh, kita aproksimasi amplitudo damping menggunakan representasi eksplisit Kraus untuk noise reset:"

#: ../../tutorials/simulators/5_noise_transformation.ipynb:367
msgid "Note the difference in the output channel: The probabilities are the same, but the input Kraus operators were converted to general Kraus channels, which cannot be used in a Clifford simulator. Hence, it is always better to pass a ``QuantumError`` object instead of the Kraus matrices, when possible."
msgstr "Perhatikan perbedaan di channel output: Probabilitasnya sama, tetapi operator input Kraus diubah menjadi channel umum Kraus, yang tidak dapat digunakan di sebuah simulator Clifford. Oleh karena itu, selalu lebih baik untuk memberikan objek ` ` QuantumError ` ` daripada Kraus matriks, bila memungkinkan."

