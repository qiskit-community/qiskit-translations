msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-06-28 18:42\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"
"Language: id_ID\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "Halaman ini dibuat dari ` tutorials/algoritms/01_grover.ipynb ` __."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "Menerapkan derau pada kustom gate"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "Pengantar"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "Notebook ini menunjukkan bagaimana untuk menambahkan gate kustom unitary untuk sirkuit kuantum, dan menggunakannya untuk simulasi derau di Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "Membuat operator matriks"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "Kita dapat menggunakan class ` ` Operator ` ` ` di ` `qiskit.quantum_info ` ` untuk mewakili berbagai operator matriks. Jika operator adalah unitary ia dapat ditambahkan ke sebuah sirkuit kuantum dan digunakan untuk simulasi dengan Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "Mari kita buat dua operator di bawah untuk gate CNOT dan gate iSWAP:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "** Note:** Matrik dispesifikasikan dengan produk tensor :math:` U_{b}\\otimes U_{a}` pada qubits yang dispesifikasikan oleh list ` ` [a, b] ` `."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "Menggunakan operator dalam sirkuit"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Mari kita demonstrasikan bagaimana itu dapat digunakan pada sebuah sirkuit. Kita akan melihat contoh penerapan gate CNOT terurai dalam gate qubit tunggal dan gate iSWAP sebagai berikut."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:177
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "Perhatikan bahwa kita telah menggunakan sebuah *label* opsional dari ` ` ' \"iswap\" ` ` ke unitary ketika dimasukkan. Hal ini memungkinkan kita untuk mengidentifikasi unitary ini di ``Noise Model`` Qiskit Aer ` sehingga kita dapat menambahkan noise ke gate unitary kustom ini pada simulasi sirkuit yang bernoise."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:188
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "Kita dapat mengkonfirmasi sirkuit ini menghasilkan output yang benar dengan menggunakan class ` ` Operator ` ` sebagai simulator untuk sirkuit:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:238
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "Dan untuk mengkonfirmasi output yang benar kita dapat menghitung rata-rata gate fidelity:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:280
msgid "Creating a custom unitary in a noise model"
msgstr "Membuat suatu kustom unitary dalam sebuah model noise"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:282
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:323
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "Hal ini memungkinkan kita untuk menambahkan model noise ke berbagai unitary dalam simulasi dengan mengidentifikasi mereka menggunakan argument opsional ` ` ` label ` ` dari ` `QuantumCircuit.unitary ` `."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:325
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "Kita sekarang akan melakukan hal ini dengan membuat ` ` NoiseModel ` ` yang mencakup channel error kuantum pada gerbang kustom iSWAP. Sebagai contoh kita akan membuat 2-qubit error yang terdiri dari dua single-qubit amplitude damping channel dengan parameter damping yang berbeda. Untuk saat ini kita mengasumsikan semua instruksi sirkuit yang lain adalah ideal."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:357
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "Perhatikan bahwa ketika kita menambahkan error pada label kustom seperti ` ` \"iswap\" ` ` ` ` NoiseModel ` ` tidak tahu gate apa yang berlaku untuk label ini. Jadi kita harus secara manual menambahkan string gate yang diinginkan ke model noise ` ` basis_gates ` `. Hal ini memastikan bahwa kompiler akan melepas ke gate dasar yang benar untuk simulasi noise model. Hal ini dapat dilakukan dengan menggunakan fungsi ` `NoiseModel.add_basis_gates ` ` `:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:398
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:410
msgid "Simulating a custom unitary noise model"
msgstr "Mensimulasikan kustom model noise unitary"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:421
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:479
msgid "Ideal output"
msgstr "Output ideal"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:481
msgid "Let’s first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "Mari kita lihat output yang ideal. Karena sirkuti ini menghasilkan sebuah Bell-state kita mengharapkan dua puncak di 00 dan 11."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:519
msgid "Noisy circuit execution"
msgstr "Eksekusi sirkuit yang bernoise"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:521
msgid "Finally, let’s now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "Akhirnya, mari kita simulasikan sirkuit itu dengan model kustom noise. Karena ada amplitudo kecil damping error pada gate dua qubit kita mengharapkan puncak kecil tambahan di probabilitas 01 dan 10."

