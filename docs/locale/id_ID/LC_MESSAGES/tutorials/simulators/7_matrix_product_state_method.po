msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-01 19:07+0000\n"
"PO-Revision-Date: 2022-11-01 19:51\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/7_matrix_product_state_method.po\n"
"X-Crowdin-File-ID: 9172\n"
"Language: id_ID\n"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:10
msgid "This page was generated from `tutorials/simulators/7_matrix_product_state_method.ipynb`__."
msgstr "Halaman ini dibuat dari ` tutorials/algoritms/01_grover.ipynb ` __."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:9
#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:26
msgid "Matrix product state simulation method"
msgstr "Metode simulasi state produk matriks"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Simulation methods"
msgstr "Metode simulasi"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:14
msgid "The ``AerSimulator`` has several simulation methods including ``statevector``, ``stabilizer``, ``extended_stabilizer`` and ``matrix_product_state``. Each of these determines the internal representation of the quantum circuit and the algorithms used to process the quantum operations. They each have advantages and disadvantages, and choosing the best method is a matter of investigation. In this tutorial, we focus on the ``matrix product state simulation method``."
msgstr ""

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:28
msgid "This simulation method is based on the concept of ``matrix product states``. This structure was initially proposed in the paper *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. There are additional papers that describe the structure in more detail, for example *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."
msgstr "Metode simulasi ini didasarkan pada konsep ` ` matrix product states ` `. Struktur ini awalnya diusulkan dalam makalah *Efficient classical simulation of slightly entangled quantum computations* oleh Vidal in https://arxiv.org/abs/quant-ph/0301063. Ada makalah tambahan yang menjelaskan struktur ini secara lebih rinci, misalnya *The density-matrix renormalization group in the age of matrix product states* oleh Schollwoeck https://arxiv.org/abs/1008.3477."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:39
msgid "A pure quantum state is usually described as a state vector, by the expression :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."
msgstr "Suatu state kuantum murni biasanya digambarkan sebagai state vector, dengan ekspresi :math:` | \\psi\\rangle = \\sum_ {i_1 = 0} ^ 1 {\\ldots} \\sum_ {i_n= 0} ^ 1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle `."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:41
msgid "The state vector representation implies an exponential size representation, regardless of the actual circuit. Every quantum gate operating on this representation requires exponential time and memory."
msgstr "Representasi state vector adalah representasi berukuran eksponensial, terlepas dari sirkuit aktual. Setiap gate kuantum yang beroperasi pada representasi ini membutuhkan waktu dan memori eksponensial."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:43
msgid "The matrix product state (MPS) representation offers a local representation, in the form: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, such that all the information contained in the :math:`c_{i_1 \\ldots i_n}`, can be generated out of the MPS representation."
msgstr "Representasi Matrix Product State (MPS) adalah representasi lokal, berbentuk: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, sehingga semua informasi ada di dalam :math:`c_{i_1 \\ldots i_n}`, dan dapat dibuat dari representasi MPS."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:54
msgid "Every :math:`\\Gamma^{[i]}` is a tensor of complex numbers that represents qubit :math:`i`. Every :math:`\\lambda^{[i]}` is a matrix of real numbers that is used to normalize the amplitudes of qubits :math:`i` and :math:`i+1`. Single-qubit gates operate only on the relevant tensor."
msgstr "Setiap :math:` \\Gamma ^ {[i]} ` adalah sebuah tensor dari bilangan kompleks yang mewakili qubit :math:` i `. Setiap :math:` \\lambda ^ {[i]} ` adalah sebuah matriks bilangan real yang digunakan untuk menormalkan amplitudo qubits :math:` i ` dan :math:` i + 1 `. Gate qubit tunggal hanya beroperasi pada tensor yang relevan."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:56
msgid "Two-qubit gates operate on consecutive qubits :math:`i` and :math:`i+1`. This involves a tensor-contract operation over :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` and :math:`\\lambda^{[i+1]}`, that creates a single tensor. We apply the gate to this tensor, and then decompose back to the original structure. This operation may increase the size of the respective tensors. Gates that involve two qubits that are not consecutive, require a series of swap gates to bring the two qubits next to each other and then the reverse swaps."
msgstr "Gate dua-qubit beroperasi pada qubit :math:` i ` dan :math:` i + 1 `. Ini melibatkan operasi tensor-kontrak di atas :math:` \\lambda ^ ^ {[i-1]} `, :math:` \\Gamma ^ {[i-1]} `, :math:` \\lambda ^ {[i]} `, :math:` \\Gamma ^ {[i + 1]} ` dan :math:` \\lambda ^ {[i + 1]} `, yang menciptakan tensor tunggal. Kita menerapkan gerbang ke tensor ini, dan kemudian menguraikan kembali ke struktur asli. Operasi ini dapat meningkatkan ukuran masing-masing tensor. Gate yang melibatkan dua qubit yang tidak berurutan, membutuhkan serangkaian gate swap untuk membawa dua qubit berdekatan satu sama lain dan mengembalikannya ke posisi semula."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:59
msgid "In the worst case, the tensors may grow exponentially. However, the size of the overall structure remains ‘small’ for circuits that do not have ‘many’ two-qubit gates. This allows much more efficient operations in circuits with relatively ‘low’ entanglement. Characterizing when to use this method over other methods is a subject of current research."
msgstr "Dalam kasus terburuk, tensor dapat tumbuh secara eksponensial. Namun, ukuran struktur keseluruhan tetap 'kecil' untuk sirkuit yang tidak memiliki 'banyak' gate dua qubit. Hal ini memungkinkan operasi yang jauh lebih efisien di sirkuit dengan tingkat entanglement yang relatif 'rendah'. Karakterisasi untuk kapan menggunakan metode ini dan bukan metode lain adalah masih menjadi subjek penelitian."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:71
msgid "Using the matrix product state simulation method"
msgstr "Menggunakan metode simulasi matrix product state"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:73
msgid "The matrix product state simulation method is invoked in the ``AerSimulator`` by setting the simulation method. Other than that, all operations are controlled by the ``AerSimulator`` itself, as in the following example:"
msgstr ""

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:138
msgid "To see the internal state vector of the circuit we can use the ``save_statevector`` instruction. To return the full internal MPS structure we can also use the ``save_matrix_product_state`` instruction."
msgstr ""

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:220
msgid "Running circuits using the matrix product state simulation method can be fast, relative to other methods. However, if we generate the state vector during the execution, then the conversion to state vector is, of course, exponential in memory and time, and therefore we don’t benefit from using this method. We can benefit if we only do operations that don’t require printing the full state vector. For example, if we run a circuit and then take measurement. The circuit below has 200 qubits. We create an ``EPR state`` involving all these qubits. Although this state is highly entangled, it is handled well by the matrix product state method, because there are effectively only two states."
msgstr "Sirkuit dapat dieksekusi dengan cepat dengan menggunakan metode simulasi matrix product state, relatif terhadap metode lain. Namun, jika kita menghasilkan state vector selama eksekusi, maka konversi ke state vector adalah, tentu saja, eksponensial dalam memori dan waktu, dan karena itu kita tidak mendapatkan manfaat dari menggunakan metode ini. Kita dapat manfaat jika hanya melakukan operasi yang tidak memerlukan pencetakan state vector penuh. Sebagai contoh, jika kita menjalankan sebuah sirkuit dan kemudian melakukan pengukuran. Sirkuit di bawah ini memiliki 200 qubit. Kita membuat sebuah ` ` EPR state ` ` melibatkan semua qubit. Meskipun state ini sangat entangled, hal ini ditangani dengan baik oleh metode matrix product state, karena secara efektif hanya ada dua state."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:223
msgid "We can handle more qubits than this, but execution may take a few minutes. Try running a similar circuit with 500 qubits! Or maybe even 1000 (you can get a cup of coffee while waiting)."
msgstr "Kita dapat menangani lebih banyak qubit daripada ini, tapi eksekusi mungkin memakan waktu beberapa menit. Coba jalankan sirkuit yang sama dengan 500 qubit! Atau mungkin bahkan 1000 (Anda bisa menikmati secangkir kopi sambil menunggu)."

