msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-08 17:23+0000\n"
"PO-Revision-Date: 2021-02-12 08:45\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/qc_intro.po\n"
"X-Crowdin-File-ID: 9418\n"
"Language: id_ID\n"

#: ../../qc_intro.rst:9
msgid "Quantum computing in a nutshell"
msgstr "Sekilas tentang komputasi kuantum"

#: ../../qc_intro.rst:11
msgid "Quantum computing represents a new paradigm in computation that utilizes the fundamental principles of quantum mechanics to perform calculations.  If you are reading this then you have undoubtedly heard that the promise of quantum computation lies in the possibility of efficiently performing a handful of tasks such as prime factorization, quantum simulation, and optimization; computations that at size are beyond the capabilities of even the largest of classical computers."
msgstr "Komputasi kuantum adalah paradigma baru dalam komputasi yang memanfaatkan prinsip-prinsip dasar mekanika kuantum untuk kalkulasi.  Jika Anda membaca ini maka Anda tidak diragukan lagi pernah mendengar potensi komputasi kuantum  yang dapat melakukan kalkulasi seperti faktorisasi prima, simulasi kuantum, dan optimasi secara efisien; komputasi yang ukurannya berada di luar kemampuan dari komputer klasik terbesar."

#: ../../qc_intro.rst:18
msgid "The power of quantum computing rests on two cornerstones of quantum mechanics, namely :ref:`superposition <qc-intro-superposition>` and :ref:`entanglement <qc-intro-entanglement>` that highlight the wave- and particle-like aspects of quantum computation, respectively.  Qiskit is an SDK for performing quantum computations that utilize these quantum mechanical principles using the language of :ref:`quantum circuits <qc-intro-circuits>`.  Comprised of quantum gates, instructions, and classical control logic, quantum circuits allow for expressing complex algorithms and applications in a abstract manner that can be executed on a quantum computer.  At its core, Qiskit is a quantum circuit construction, optimization, and execution engine. Additional algorithm and application layers leverage quantum circuits, often in concert with classical computing resources, to solve problems in optimization, quantum chemistry, physics, machine learning, and finance.  In what follows, we give a very brief overview of quantum computing, and how Qiskit is used at each step.  Interested readers are directed to additional in-depth materials for further insights."
msgstr "Kekuatan komputasi kuantum bertumpu pada dua landasan mekanika kuantum, yaitu :ref:`superposisi <qc-intro-superposition>` dan :ref:`entanglement <qc-intro-entanglement>` yang masing-masing menyoroti aspek gelombang dan partikel dari komputasi kuantum.  Qiskit adalah SDK untuk melakukan komputasi kuantum yang memanfaatkan prinsip mekanika kuantum ini dengan menggunakan bahasa dari :ref:`sirkuit kuantum <qc-intro-circuits>`. Terdiri dari gerbang kuantum, instruksi, dan logika kontrol klasik, sirkuit kuantum memungkinkan untuk mengekspresikan algoritma dan aplikasi kompleks dengan cara abstrak yang dapat dieksekusi pada komputer kuantum.  Pada intinya, Qiskit adalah konstruksi sirkuit quantum, optimasi, dan mesin eksekusi. Algoritma tambahan dan lapisan aplikasi memanfaatkan sirkuit kuantum, sering kali dalam sinergi dengan komputasi klasik, untuk memecahkan masalah dalam optimasi, kimia kuantum, fisika, pembelajaran mesin, dan keuangan.  Pada bagian berikutnya, kami memberikan pandangan ringkas tentang komputasi kuantum, dan bagaimana Qiskit digunakan pada tiap langkah.  Pembaca yang tertarik diarahkan ke bahan tambahan yang lebih mendalam untuk wawasan lebih lanjut."

#: ../../qc_intro.rst:37
msgid "Superposition"
msgstr "Superposisi"

#: ../../qc_intro.rst:39
msgid "Like a classical computer, a quantum computer operates on bits.  However, while classical bits can only be found in the states 0 and 1, a quantum bit, or qubit, can represent the values 0 and 1, or linear combinations of both.  These linear combinations are known as **superpositions** (or superposition states) and allow for representing, and processing, exponentially many logical states simultaneously."
msgstr "Seperti komputer klasik, komputer kuantum beroperasi pada bit.  Namun, bit klasik hanya dapat ditemukan dalam keadaan 0 dan 1, sedangkan sebuah bit kuantum, atau qubit, dapat mewakili nilai 0 dan 1, atau kombinasi linear dari keduanya.  Kombinasi linear ini dikenal sebagai **superposisi** (atau keadaan superposisi) dan memungkinkan untuk mewakili, dan pemrosesan, sangat banyak keadaan logika sekaligus."

#: ../../qc_intro.rst:45
msgid "To see how this resource is utilized in quantum computation we first turn to a classical analog: noise cancellation.  Noise cancellation, as done in noise cancelling headphones for example, is performed by employing the principle of superposition along with interference to reduce the amplitude of unwanted noise by generating a tone of approximately the same frequency and amplitude, but out of phase by a value of :math:`\\pi` (or any other odd integer of :math:`\\pi`)."
msgstr "Untuk melihat bagaimana sumber daya ini digunakan dalam komputasi kuantum kita pertama kali beralih ke analog klasik: pembatalan derau.  Pembatalan derau, seperti yang dilakukan dalam headphone berfitur pembatalan kebisingan misalnya, dilakukan dengan menggunakan prinsip superposisi dan interferensi untuk mengurangi amplitudo derau yang tidak diinginkan dengan menghasilkan nada berfrekuensi dan amplitudo yang hampir sama, tetapi berselisih fase dengan nilai :math:`\\pi` (atau kelipatan bilangan bulat ganjil lainnya dari :math:`\\pi`)."

#: ../../qc_intro.rst:56
msgid "Approximate cancellation of a noise signal by a tone of nearly equal amplitude and offset by a phase of :math:`\\sim \\pi`."
msgstr "Aproksimasi pembatalan sinyal derau oleh nada dengan amplitudo yang hampir sama dan offset fase sebesar :math:`\\sim\\pi`."

#: ../../qc_intro.rst:59
msgid "As shown above, when the phase difference is close to an odd multiple of :math:`\\pi`, the superposition of the two waves results in interference, and an output that is significantly reduced compared to the original.  The result is the signal of interest unincumbered by noise. Although this processing is done by digital circuits, the amplitude and phase are continuous variables that can never be matched perfectly, resulting in incomplete correction."
msgstr "Seperti di atas, ketika perbedaan fase mendekati kelipatan ganjil dari :math:`\\pi`, posisi superposisi dari dua gelombang tersebut menghasilkan interferensi, dan output yang secara signifikan berkurang dibandingkan dengan yang asli.  Hasilnya adalah sinyal yang diinginkan tanpa derau. Meskipun proses ini dilakukan oleh sirkuit digital, amplitudo dan fase adalah variabel kontinu yang tidak pernah dapat dicocokkan dengan sempurna, sehingga menghasilkan koreksi yang tidak lengkap."

#: ../../qc_intro.rst:66
msgid "A general computation on a quantum computer proceeds in very much the same way as noise cancellation. To begin, one prepares a superposition of all possible computation states.  This is then used as an input to a :ref:`quantum circuit <qc-intro-circuits>` that selectively interferes the components of the superposition according to a prescribed algorithm. What remains after cancelling the relative amplitudes and phases of the input state is the solution to the computation performed by the quantum circuit."
msgstr "Perhitungan umum pada komputer kuantum berlangsung sama seperti pembatalan kebisingan. Untuk memulai, seseorang menyiapkan superposisi dari semua keadaan komputasi yang mungkin.  Hal ini kemudian digunakan sebagai masukan ke sirkuit kuantum :ref:`<qc-intro-circuits>` yang secara selektif membuat interfensi komponen superposisi menurut resep algoritma. Apa yang tersisa setelah pembatalan amplitudo relatif dan fase-fase dari state input adalah solusi komputasi yang dihasilkan oleh sirkuit kuantum."

#: ../../qc_intro.rst:76
msgid "Quantum computation as an interference generation process."
msgstr "Komputasi kuantum sebagai proses pembuatan interferensi."

#: ../../qc_intro.rst:81
msgid "Entanglement"
msgstr "Entanglement"

#: ../../qc_intro.rst:83
msgid "The second principle of quantum mechanics that quantum computation can utilize is the phenomena of **entanglement**.  Entanglement refers to states of more than one qubit (or particles in general) in which the combined state of the qubits contains more information than the qubits do independently.  The overwhelming majority of multi-qubit quantum states are entangled, and represent a valuable resource.  For example, entangled states between qubits can be used for quantum teleportation, where a shared entangled state of two qubits can be manipulated to transfer information from one qubit to another, regardless of the relative physical proximity of the qubits. Entangled states, as natural states of quantum systems, are also of importance in disciplines such as quantum chemistry and quantum simulation where the solution(s) often take the form of entangled multi-qubit states.  One can also utilize highly-entangled quantum states of multiple qubits to, for example, generate certifiably random numbers.  There is even a `Qiskit package <https://qiskit-rng.readthedocs.io/en/latest/>`_ to do this!"
msgstr ""

#: ../../qc_intro.rst:101
msgid "Quantum circuits"
msgstr "Sirkuit kuantum"

#: ../../qc_intro.rst:103
msgid "Algorithms and applications that utilize quantum mechanical resources can be easily and efficiently written in the language of **quantum circuits**. A quantum circuit is a computational routine consisting of coherent quantum operations on quantum data, such as that held in qubits, and concurrent real-time classical computation. Each horizontal line, or wire in a circuit represents a qubit, with the left end of the wire being the initial quantum data, and the right being the final quantum data generated by the quantum circuit's computation. Operations on qubits can be placed on these wires, and are represented by boxes."
msgstr "Algoritma dan aplikasi yang memanfaatkan prinsip mekanika kuantum dapat dengan mudah dan efisien ditulis dalam bahasa **sirkuit kuantum**. Sebuah sirkuit kuantum adalah sebuah rutinitas komputasi yang terdiri dari operasi kuantum koheren pada data kuantum, seperti yang ada di qubit, dan komputasi klasik konkuren dalam waktu riil. Setiap garis horizontal, atau kawat dalam sebuah sirkuit mewakili sebuah qubit, dengan ujung kiri kawat menjadi data kuantum awal, dan ujung kanan adalah data kuantum akhir yang dihasilkan oleh komputasi sirkuit kuantum. Operasi pada qubit dapat ditempatkan pada kabel ini, dan direpresentasikan dengan kotak-kotak."

#: ../../qc_intro.rst:115
msgid "Quantum state teleportation circuit revisited."
msgstr "Menilik kembali sirkuit teleportasi keadaan kuantum."

#: ../../qc_intro.rst:117
msgid "Quantum circuits enable a quantum computer to take in classical information and output a classical solution, leveraging quantum principles such as :ref:`superposition <qc-intro-superposition>` and :ref:`entanglement <qc-intro-entanglement>` to perform the computation."
msgstr "Sirkuit kuantum memungkinkan komputer kuantum untuk menerima informasi klasik dan mengeluarkan solusi klasik, dengan memanfaatkan prinsip-prinsip kuantum seperti :ref:`superposisi <qc-intro-superposition>` dan :ref:`entanglement <qc-intro-entanglement>` untuk melakukan komputasi."

#: ../../qc_intro.rst:122
msgid "A typical quantum algorithm workflow consists of:"
msgstr "Alur kerja algoritma kuantum umumnya terdiri dari:"

#: ../../qc_intro.rst:124
msgid "The problem we want to solve,"
msgstr "Masalah yang ingin kita pecahkan,"

#: ../../qc_intro.rst:125
msgid "A classical algorithm that generates a description of a quantum circuit,"
msgstr "Sebuah algoritma klasik yang menghasilkan deskripsi dari sirkuit kuantum,"

#: ../../qc_intro.rst:126
msgid "The quantum circuit that needs to be run on quantum hardware,"
msgstr "Sirkuit kuantum yang perlu dijalankan pada perangkat keras (hardware) kuantum,"

#: ../../qc_intro.rst:127
msgid "And the output classical solution to the problem that it produces."
msgstr "Dan output solusi klasik untuk masalah yang dihasilkannya."

#: ../../qc_intro.rst:129
msgid "Quantum gates form the primitive operations on quantum data.  Quantum gates represent information preserving, reversible transformations on the quantum data stored in qubits. These \"unitary\" transformations represent the quantum mechanical core of a quantum circuit.  Some gates such as :math:`X` (also written as :math:`\\oplus`) and :math:`CX` have classical analogs such as bit-flip and :math:`XOR` operations, respectively, while others do not.  The Hadamand (:math:`H`) gate, along with the parameterized rotates :math:`rX(\\theta)` and :math:`rY(\\theta)`, generate non-classical superposition states, while gates such as :math:`Z`, :math:`rZ(\\theta)`, :math:`S`, and :math:`T` impart phases that can be used for interference.  Two-qubit gates like the :math:`CX` gate are used to generate entanglement between pairs of qubits, or to \"kick\" the phase from one qubit ot another.   In contrast to gates, operations like \"measurement\", represented by the meter symbol in a box with a line connecting to a \"target\" wire, extract enough information about a qubit's state, including the phase, to be able to represent it as a classical bit and write that classical bit onto the target wire (often a fully classical wire in some readout device). This is the typical way to take information from the quantum data into a classical device.  Note that with only :math:`H`, :math:`rZ(\\theta)`, :math:`CX`, and measurement gates, i.e. a universal gate set, we can construct any quantum circuit, including those efficiently computing the dynamics of any physical system in nature."
msgstr ""

#: ../../qc_intro.rst:148
msgid "Some workloads contain an extended sequence of interleaved quantum circuits and classical computation, for example variational quantum algorithms execute quantum circuits within an optimization loop. For these workloads, system performance increases substantially if the quantum circuits are parameterized, and transitions between circuit execution and non-current classical computation are made efficient. Consequently, we define **near-time computation** to refer to computations with algorithms that make repeated use of quantum circuits with hardware developed to speed up the computation time. In near-time computation, the classical computation occurs on a time scale longer than the coherence of the quantum computation. Contrast this with **real-time computation**, where the classical computation occurs within the decoherence time of the quantum device."
msgstr ""

#: ../../qc_intro.rst:159
msgid "Constructing complex quantum circuits with minimal effort is at the heart of Qiskit. With only a few lines of code, is it possible to construct complex circuits like the one above"
msgstr "Membangun sirkuit kuantum kompleks dengan usaha minimal adalah inti dari Qiskit. Dengan hanya beberapa baris kode, sudah memungkinkan untuk membangun sirkuit kompleks seperti yang ada di atas"

#: ../../qc_intro.rst:185
msgid "that support a rich feature set of operations, and can be passed to a range of :ref:`quantum computers <qc-intro-computers>` or classical simulators."
msgstr "yang mendukung set kaya fitur dari operasi, dan dapat diteruskan ke berbagai :ref:`komputer kuantum <qc-intro-computers>` atau simulator klasik."

#: ../../qc_intro.rst:191
msgid "Quantum computers"
msgstr "Komputer kuantum"

#: ../../qc_intro.rst:197
msgid "A view inside the IBM Quantum System One."
msgstr "Sebuah tampilan dalam dari IBM Quantum System One."

#: ../../qc_intro.rst:199
msgid "Quantum computers that are programmed using quantum circuits are called **gate-based quantum computers**. Such systems can be constructed out of any quantum technology that allows for defining qubit elements, and can implement single- and multi-qubit gate operations with high-fidelity. At present, architectures based on superconducting circuits, trapped-ions, semiconducting quantum-dots, photons, and neutral atoms, are actively being developed, and many are accessible to users over the internet. Qiskit is agnostic with respect to the underlying architecture of a given quantum system, and can compile a quantum circuit to match the entangling gate topology of a quantum device, map the circuit instructions into the native gate set of the device, and optimize the resulting quantum circuit for enhanced fidelity."
msgstr ""

#: ../../qc_intro.rst:210
msgid "As with the noise cancellation example above, the amplitude and phase of qubits are continuous degrees of freedom upon which operations can never be done exactly.  These gates errors, along with noise from the environment in which a quantum computer resides, can conspire to ruin a computation if not accounted for in the compilation process, and may require additional mitigation procedures in order to obtain a high-fidelity output on present day quantum systems susceptible to noise.  Qiskit is capable of taking into account a wide range of device calibration metrics (see figure below) in its compilation strategy, and can select an optimal set of qubits on which to run a given quantum circuit.  In addition, Qiskit hosts a collection of noise mitigation techniques for extracting a faithful representation of a quantum circuits output."
msgstr ""

#: ../../qc_intro.rst:224
msgid "Topology and error rates for the IBM Quantum *ibmq_manhattan* system."
msgstr "Topologi dan tingkat galat untuk sistem IBM Quantum *ibmq_manhattan*."

#: ../../qc_intro.rst:228
msgid "Where to go from here"
msgstr "Kemana selanjutnya setelah ini"

#: ../../qc_intro.rst:230
msgid "Hopefully we have given the reader a taste of what quantum computation has to offer and you are hungry for more.  If so, there are several resources that may be of interest:"
msgstr ""

#: ../../qc_intro.rst:234
msgid "`Getting started with Qiskit <getting_started.html>`_ - Dive right into Qiskit."
msgstr "`Memulai dengan Qiskit <getting_started.html>`_ - Mendalami Qiskit."

#: ../../qc_intro.rst:236
msgid "`Field guide to quantum computing <https://quantum-computing.ibm.com/docs/iqx/guide/>`_ : A gentle physics-based introduction written by some of the founders of quantum computation that makes use of the interactive circuit composer."
msgstr ""

#: ../../qc_intro.rst:240
msgid "`Qiskit textbook <https://qiskit.org/textbook>`_ : A university quantum algorithms/computation course supplement based on Qiskit."
msgstr "`Buku teks Qiskit <https://qiskit.org/textbook>`_ : Sebuah suplemen kursus algoritma kuantum/komputasi universitas berbasis Qiskit."

