msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-17 14:16+0000\n"
"PO-Revision-Date: 2023-09-02 06:07\n"
"Last-Translator: \n"
"Language: te\n"
"Language-Team: Telugu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: te\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9536\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "ప్రారంభించండి"

#: ../../getting_started.rst:10
msgid "Installation"
msgstr "Installation"

#: ../../getting_started.rst:12
msgid "Let's get started using Qiskit!  The first thing to do is choose how you're going to run and install the packages.  There are three main ways to do this:"
msgstr "Qiskit ఉపయోగించడం ప్రారంభించండి!  మీరు ప్యాకేజీలను ఎలా అమలు చేయబోతున్నారు మరియు ఇన్‌స్టాల్ చేయబోతున్నారో ఎంచుకోవడం మొదటి విషయం.  దీన్ని చేయడానికి మూడు ప్రధాన మార్గాలు ఉన్నాయి:"

#: ../../getting_started.rst
msgid "Start locally"
msgstr "స్థానికంగా ప్రారంభించండి"

#: ../../getting_started.rst:19
msgid "Qiskit supports Python 3.7 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "Qiskit python 3.7 లేదా తరువాతి వాటికి మద్దతు ఇస్తుంది. అయినప్పటికీ, python మరియు qiskit రెండూ పర్యావరణ వ్యవస్థలను అభివృద్ధి చేస్తున్నాయి మరియు కొన్నిసార్లు కొత్త విడుదలలు ఒకటి లేదా మరొకటి సంభవించినప్పుడు, అనుకూలతతో సమస్యలు ఉండవచ్చు."

#: ../../getting_started.rst:23
msgid "You will need to `download Python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ on your local system to get started. `Jupyter <https://jupyter.org/install>`__ is recommended for interacting with Qiskit."
msgstr "మీరు ప్రారంభించడానికి మీ స్థానిక సిస్టమ్‌లో python <https://wiki.python.org/moin/BeginnersGuide/Download>`__ని డౌన్‌లోడ్ చేయాలి. `Jupyter <https://jupyter.org/install>`__ Qiskitతో పరస్పర చర్య చేయడానికి సిఫార్సు చేయబడింది."

#: ../../getting_started.rst:27
msgid "We recommend using `Python virtual environments <https://docs.python.org/3.10/tutorial/venv.html>`__ to cleanly separate Qiskit from other applications and improve your experience."
msgstr "Qiskitని ఇతర అప్లికేషన్‌ల నుండి క్లీన్‌గా వేరు చేయడానికి మరియు మీ అనుభవాన్ని మెరుగుపరచడానికి `Python virtual ఎన్విరాన్‌మెంట్లు <https://docs.python.org/3.10/tutorial/venv.html>`__ని ఉపయోగించమని మేము సిఫార్సు చేస్తున్నాము."

#: ../../getting_started.rst:30
msgid "Create a minimal environment with only Python installed in it."
msgstr "పైథాన్ మాత్రమే ఇన్‌స్టాల్ చేసి కనీస వాతావరణాన్ని సృష్టించండి."

#: ../../getting_started.rst:36
msgid "Activate your new environment."
msgstr "మీ కొత్త వాతావరణాన్ని యాక్టివేట్ చేయండి."

#: ../../getting_started.rst:43
msgid "Note: if you are using Windows, use the following commands in PowerShell."
msgstr "గమనిక: మీరు Windows ఉపయోగిస్తుంటే, PowerShellలో కింది ఆదేశాలను ఉపయోగించండి."

#: ../../getting_started.rst:51
msgid "Next, install the Qiskit package."
msgstr "తరువాత, Qiskit ప్యాకేజీని ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst:57
msgid "If the packages were installed correctly, you can run ``pip list`` to see the active packages in your virtual environment."
msgstr "ప్యాకేజీలు సరిగ్గా ఇన్‌స్టాల్ చేయబడితే, మీ వర్చువల్ ఎన్విరాన్‌మెంట్‌లో సక్రియ ప్యాకేజీలను చూడటానికి మీరు ``pip list``ని అమలు చేయవచ్చు."

#: ../../getting_started.rst:60
msgid "If you intend to use visualization functionality or Jupyter notebooks it is recommended to install Qiskit with the extra ``visualization`` support:"
msgstr "మీరు విజువలైజేషన్ ఫంక్షనాలిటీ లేదా జూపిటర్ నోట్‌బుక్‌లను ఉపయోగించాలనుకుంటే అదనపు ``visualization`` మద్దతుతో Qiskitని ఇన్‌స్టాల్ చేయాలని సిఫార్సు చేస్తున్నాము:"

#: ../../getting_started.rst:67
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[visualization]`` in quotes:"
msgstr "మీరు zsh వినియోగదారు అయితే (ఇది macOS యొక్క కొత్త వెర్షన్‌లలో డిఫాల్ట్ షెల్), మీరు కోట్స్‌లో ``qiskit[visualization]``ని ఉంచాలి:"

#: ../../getting_started.rst
msgid "Start on the cloud"
msgstr "క్లౌడ్‌లో ప్రారంభించండి"

#: ../../getting_started.rst:76
msgid "The following cloud vendors have Qiskit pre-installed in their environments:"
msgstr "కింది క్లౌడ్ విక్రేతలు తమ పరిసరాలలో క్విస్కిట్‌ని ముందే ఇన్‌స్టాల్ చేసారు:"

#: ../../getting_started.rst
msgid "Install from source"
msgstr "సోర్స్ నుండి ఇన్‌స్టాల్ చేయండి"

#: ../../getting_started.rst:108
msgid "Installing the elements from source allows you to access the most recently updated version of Qiskit instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit code more efficiently."
msgstr "మూలాధారం నుండి మూలకాలను ఇన్‌స్టాల్ చేయడం వలన Python Package Index (PyPI) రిపోజిటరీలో సంస్కరణను ఉపయోగించకుండా Qiskit యొక్క అత్యంత ఇటీవల నవీకరించబడిన సంస్కరణను యాక్సెస్ చేయడానికి మిమ్మల్ని అనుమతిస్తుంది. ఇది Qiskit కోడ్ యొక్క తాజా వెర్షన్‌ను మరింత సమర్ధవంతంగా తనిఖీ చేసే మరియు పొడిగించే సామర్థ్యాన్ని మీకు అందిస్తుంది."

#: ../../getting_started.rst:113
msgid "When installing the elements and components from source, by default their ``development`` version (which corresponds to the ``master`` git branch) will be used, as opposed to the ``stable`` version (which contains the same codebase as the published ``pip`` packages). Since the ``development`` versions of an element or component usually include new features and changes, they generally require using the ``development`` version of the rest of the items as well."
msgstr "మూలం నుండి మూలకాలు మరియు భాగాలను ఇన్‌స్టాల్ చేస్తున్నప్పుడు, డిఫాల్ట్‌గా వాటి ``development`` వెర్షన్ (`master`` git బ్రాంచ్‌కు అనుగుణంగా ఉంటుంది) ఉపయోగించబడుతుంది, ఇది ``stable`` వెర్షన్‌కి విరుద్ధంగా (కోడ్‌బేస్ ప్రచురించబడిన ``pip`` ప్యాకేజీల వలె దీనిని కలిగి ఉంటుంది). ఎలిమెంట్ లేదా కాంపోనెంట్ యొక్క ``development`` వెర్షన్‌లు సాధారణంగా కొత్త ఫీచర్‌లు మరియు మార్పులను కలిగి ఉంటాయి కాబట్టి, వాటికి సాధారణంగా మిగిలిన ఐటెమ్‌ల ``development`` వెర్షన్‌ని ఉపయోగించడం అవసరం."

#: ../../getting_started.rst:120
msgid "Installing elements from source requires the following order of installation to prevent installing versions of elements that may be lower than those desired if the ``pip`` version is behind the source versions:"
msgstr "సోర్స్ నుండి మూలకాలను ఇన్‌స్టాల్ చేయడానికి మూలకాల సంస్కరణల వెనుక ``pip`` సంస్కరణ ఉన్నట్లయితే కావలసిన వాటి కంటే తక్కువగా ఉండే మూలకాల సంస్కరణలను ఇన్‌స్టాల్ చేయకుండా నిరోధించడానికి క్రింది ఇన్‌స్టాలేషన్ క్రమం అవసరం:"

#: ../../getting_started.rst:124
msgid ":ref:`qiskit-terra <install-qiskit-terra>`"
msgstr ":ref:`qiskit-terra <install-qiskit-terra>`"

#: ../../getting_started.rst:125
msgid ":ref:`qiskit-aer <install-qiskit-aer>`"
msgstr ":ref:`qiskit-aer <install-qiskit-aer>`"

#: ../../getting_started.rst:127
msgid "To work with several components and elements simultaneously, use the following steps for each element."
msgstr "అనేక భాగాలు మరియు మూలకాలతో ఏకకాలంలో పని చేయడానికి, ప్రతి మూలకం కోసం క్రింది దశలను ఉపయోగించండి."

#: ../../getting_started.rst:132
msgid "The Terra and Aer packages both require a compiler to build from source before you can install. Ignis, Aqua, and the IBM Quantum Provider backend do not require a compiler."
msgstr "Terra మరియు Aer ప్యాకేజీలు రెండింటికి మీరు ఇన్‌స్టాల్ చేయడానికి ముందు సోర్స్ నుండి నిర్మించడానికి కంపైలర్ అవసరం. Ignis, Aqua మరియు IBM Quantum Provider backendకు కంపైలర్ అవసరం లేదు."

#: ../../getting_started.rst:138
msgid "Due to the use of namespace packaging in Python, care must be taken in how you install packages. If you're planning to install any element from source, do not use the ``qiskit`` meta-package. Also, follow this guide and use a separate virtual environment for development. If you do choose to mix an existing installation with your development, refer to https://github.com/pypa/sample-namespace-packages/blob/master/table.md for the set of combinations of installation methods that work together."
msgstr "Pythonలో నేమ్‌స్పేస్ ప్యాకేజింగ్ ఉపయోగించడం వల్ల, మీరు ప్యాకేజీలను ఎలా ఇన్‌స్టాల్ చేయడంలో జాగ్రత్త తీసుకోవాలి. మీరు సోర్స్ నుండి ఏదైనా మూలకాన్ని ఇన్‌స్టాల్ చేయాలని ప్లాన్ చేస్తుంటే, ``qiskit`` మెటా-ప్యాకేజీని ఉపయోగించవద్దు. అలాగే, ఈ గైడ్‌ని అనుసరించండి మరియు అభివృద్ధి కోసం ప్రత్యేక వర్చువల్ వాతావరణాన్ని ఉపయోగించండి. మీరు ఇప్పటికే ఉన్న ఇన్‌స్టాలేషన్‌ను మీ డెవలప్‌మెంట్‌తో కలపాలని ఎంచుకుంటే, కలిసి పనిచేసే ఇన్‌స్టాలేషన్ పద్ధతుల కలయికల కోసం https://github.com/pypa/sample-namespace-packages/blob/master/table.mdని చూడండి."

#: ../../getting_started.rst:161
msgid "Installing from source requires that you have the Rust compiler on your system. To install the Rust compiler the recommended path is to use rustup, which is a cross-platform Rust installer. To use rustup you can go to:"
msgstr "సోర్స్ నుండి ఇన్‌స్టాల్ చేయడానికి మీరు మీ సిస్టమ్‌లో Rust కంపైలర్‌ని కలిగి ఉండాలి. Rust కంపైలర్‌ను ఇన్‌స్టాల్ చేయడానికి సిఫార్సు చేయబడిన మార్గం rustupని ఉపయోగించడం, ఇది క్రాస్-ప్లాట్‌ఫారమ్ Rust ఇన్‌స్టాలర్. rustupని ఉపయోగించడానికి మీరు దీనికి వెళ్లవచ్చు:"

#: ../../getting_started.rst:165
msgid "https://rustup.rs/"
msgstr "https://rustup.rs/"

#: ../../getting_started.rst:167
msgid "which will provide instructions for how to install rust on your platform. Besides rustup there are `other installation methods <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ available too."
msgstr "ఇది మీ ప్లాట్‌ఫారమ్‌లో Rustను ఎలా ఇన్‌స్టాల్ చేయాలో సూచనలను అందిస్తుంది. rustupతో పాటు `ఇతర ఇన్‌స్టాలేషన్ పద్ధతులు <https://forge.rust-lang.org/infra/other-installation-methods.html>`__ కూడా అందుబాటులో ఉన్నాయి."

#: ../../getting_started.rst:171
msgid "Once the Rust compiler is installed, you are ready to install Qiskit Terra."
msgstr "Rust కంపైలర్ ఇన్‌స్టాల్ చేయబడిన తర్వాత, మీరు Qiskit Terraని ఇన్‌స్టాల్ చేయడానికి సిద్ధంగా ఉన్నారు."

#: ../../getting_started.rst:173
msgid "Clone the Terra repository."
msgstr "Terra రిపోజిటరీని క్లోన్ చేయండి."

#: ../../getting_started.rst:179
msgid "Cloning the repository creates a local folder called ``qiskit-terra``."
msgstr "రిపోజిటరీని క్లోనింగ్ చేయడం ద్వారా ``qiskit-terra`` అనే స్థానిక ఫోల్డర్‌ని సృష్టిస్తుంది."

#: ../../getting_started.rst:185
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "మీరు టెస్ట్స్ లేదా లిన్టింగ్ చెక్స్ను అమలు చేయాలనుకుంటే, డెవలపర్ అవసరాలను ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst:191
msgid "Install ``qiskit-terra``."
msgstr "``qiskit-terra``ని ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst:197
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "మీరు దీన్ని సవరించగలిగే మోడ్‌లో ఇన్‌స్టాల్ చేయాలనుకుంటే, ప్రాజెక్ట్‌కి కోడ్ మార్పులకు మళ్లీ ఇన్‌స్టాల్ చేయాల్సిన అవసరం లేదు, మీరు దీన్ని దీనితో చేయవచ్చు:"

#: ../../getting_started.rst:204
msgid "Installing in editable mode will build the compiled extensions in debug mode without optimizations. This will affect the runtime performance of the compiled code. If you'd like to use editable mode and build the compiled code in release with optimizations enabled you can run:"
msgstr "ఎడిటెబుల్ మోడ్‌లో ఇన్‌స్టాల్ చేయడం వల్ల కంపైల్ చేసిన ఎక్స్‌టెన్షన్‌లు ఆప్టిమైజేషన్‌లు లేకుండా డీబగ్ మోడ్‌లో నిర్మించబడతాయి. ఇది కంపైల్డ్ కోడ్ యొక్క రన్‌టైమ్ పనితీరును ప్రభావితం చేస్తుంది. మీరు ఎడిటెబుల్ మోడ్‌ను ఉపయోగించాలనుకుంటే మరియు ఆప్టిమైజేషన్‌లను ప్రారంభించి విడుదలలో కంపైల్ చేసిన కోడ్‌ను రూపొందించాలనుకుంటే మీరు \n"
"ఇవి అమలు చేయవచ్చు:"

#: ../../getting_started.rst:213
msgid "after you run pip and that will rebuild the binary in release mode. If you are working on Rust code in Qiskit you will need to rebuild the extension code every time you make a local change. ``pip install -e .`` will only build the Rust extension when it's called, so any local changes you make to the Rust code after running pip will not be reflected in the installed package unless you rebuild the extension. You can leverage the above ``build_rust`` command to do this (with or without ``--release`` based on whether you want to build in debug mode or release mode)."
msgstr "మీరు pipని అమలు చేసిన తర్వాత మరియు అది బైనరీని విడుదల మోడ్‌లో పునర్నిర్మిస్తుంది. మీరు Qiskitలో Rust కోడ్‌పై పని చేస్తున్నట్లయితే, మీరు స్థానికంగా మార్పు చేసిన ప్రతిసారీ ఎక్స్టెన్షన్ కోడ్‌ను పునర్నిర్మించవలసి ఉంటుంది. ``pip install -e .`` Rust ఎక్స్‌టెన్షన్‌ని పిలిచినప్పుడు మాత్రమే నిర్మిస్తుంది, కాబట్టి మీరు పిప్‌ని అమలు చేసిన తర్వాత రస్ట్ కోడ్‌కి చేసే ఏవైనా స్థానిక మార్పులు మీరు పొడిగింపును పునర్నిర్మించకపోతే ఇన్‌స్టాల్ చేసిన ప్యాకేజీలో ప్రతిబింబించవు. మీరు దీన్ని చేయడానికి ఎగువ ``build_rust`` ఆదేశాన్ని ప్రభావితం చేయవచ్చు (మీరు డీబగ్ మోడ్‌లో లేదా విడుదల మోడ్‌లో నిర్మించాలనుకుంటున్నారా అనే దాని ఆధారంగా ``--release``తో లేదా లేకుండా)."

#: ../../getting_started.rst:222
msgid "You can then run the code examples after installing Terra. You can run the example with the following command."
msgstr "Terraను ఇన్‌స్టాల్ చేసిన తర్వాత మీరు కోడ్ ఉదాహరణలను అమలు చేయవచ్చు. మీరు కింది ఆదేశంతో ఉదాహరణను అమలు చేయవచ్చు."

#: ../../getting_started.rst:237
msgid "Clone the Aer repository."
msgstr "Aer రిపోజిటరీని క్లోన్ చేయండి."

#: ../../getting_started.rst:243
msgid "To install Aer depend on which operating system you are using. Since Aer is a compiled C++ program with a Python interface, there are non-Python dependencies for building the Aer binary which can't be installed universally depending on operating system."
msgstr "Aerని ఇన్‌స్టాల్ చేయడానికి మీరు ఉపయోగిస్తున్న ఆపరేటింగ్ సిస్టమ్‌పై ఆధారపడి ఉంటుంది. Aer అనేది Python ఇంటర్‌ఫేస్‌తో సంకలనం చేయబడిన C++ ప్రోగ్రామ్ కాబట్టి, Aer బైనరీని నిర్మించడానికి non-Python డిపెండెన్సీలు ఉన్నాయి, ఇవి ఆపరేటింగ్ సిస్టమ్‌పై ఆధారపడి విశ్వవ్యాప్తంగా ఇన్‌స్టాల్ చేయబడవు."

#: ../../getting_started.rst ../../getting_started.rst:417
msgid "Linux"
msgstr "Linux"

#: ../../getting_started.rst:250
msgid "Install compiler requirements."
msgstr "కంపైలర్ అవసరాలను ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst:252
msgid "Building Aer requires a C++ compiler and development headers."
msgstr "Aerని నిర్మించడానికి C++ కంపైలర్ మరియు డెవలప్‌మెంట్ హెడర్‌లు అవసరం."

#: ../../getting_started.rst:254 ../../getting_started.rst:269
msgid "If you're using Fedora or an equivalent Linux distribution, install using:"
msgstr "మీరు Fedora లేదా దానికి సమానమైన Linux పంపిణీని ఉపయోగిస్తుంటే, దీన్ని ఉపయోగించి ఇన్‌స్టాల్ చేయండి:"

#: ../../getting_started.rst:261 ../../getting_started.rst:276
msgid "For Ubuntu/Debian install it using:"
msgstr "Ubuntu/Debian కోసం దీన్ని ఉపయోగించి ఇన్‌స్టాల్ చేయండి:"

#: ../../getting_started.rst:267
msgid "Install OpenBLAS development headers."
msgstr "OpenBLAS డెవలప్‌మెంట్ హెడర్‌లను ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst
msgid "macOS"
msgstr "macOS"

#: ../../getting_started.rst:285
msgid "Install dependencies."
msgstr "డిపెండెన్సీలను ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst:287
msgid "To use the `Clang <https://clang.llvm.org/>`__ compiler on macOS, you need to install an extra library for supporting `OpenMP <https://www.openmp.org/>`__.  You can use `brew <https://brew.sh/>`__ to install this and other dependencies."
msgstr "MacOSలో `Clang <https://clang.llvm.org/>`__ కంపైలర్‌ని ఉపయోగించడానికి, మీరు `OpenMP <https://www.openmp.org/>`__కి మద్దతు ఇవ్వడానికి అదనపు లైబ్రరీని ఇన్‌స్టాల్ చేయాలి. దీన్ని మరియు ఇతర డిపెండెన్సీలను ఇన్‌స్టాల్ చేయడానికి మీరు `brew <https://brew.sh/>`__ని ఉపయోగించవచ్చు."

#: ../../getting_started.rst:295
msgid "Then install a BLAS implementation; `OpenBLAS <https://www.openblas.net/>`__ is the default choice."
msgstr "ఆపై BLAS అమలును ఇన్‌స్టాల్ చేయండి; `OpenBLAS <https://www.openblas.net/>`__ అనేది డిఫాల్ట్ ఎంపిక."

#: ../../getting_started.rst:302
msgid "Next, install ``Xcode Command Line Tools``."
msgstr "తర్వాత, ``Xcode Command Line Tools``ని ఇన్‌స్టాల్ చేయండి."

#: ../../getting_started.rst
msgid "Windows"
msgstr "విండోస్"

#: ../../getting_started.rst:310
msgid "All dependencies are added as part of the Visual C++ compiler installed above, so no additional setup is needed."
msgstr "పైన ఇన్‌స్టాల్ చేయబడిన విజువల్ C++ కంపైలర్‌లో భాగంగా అన్ని డిపెండెన్సీలు జోడించబడ్డాయి, కాబట్టి అదనపు సెటప్ అవసరం లేదు."

#: ../../getting_started.rst:314
msgid "Qiskit Aer is a high performance simulator framework for quantum circuits. It provides `several backends <apidoc/aer_provider.html#simulator-backends>`__ to achieve different simulation goals."
msgstr "Qiskit Aer అనేది క్వాంటం సర్క్యూట్‌ల కోసం అధిక పనితీరు గల సిమ్యులేటర్ ఫ్రేమ్‌వర్క్. ఇది విభిన్న సిములేషన్ లక్ష్యాలను సాధించడానికి `అనేక బ్యాకెండ్‌లను <apidoc/aer_provider.html#simulator-backends>`__ అందిస్తుంది."

#: ../../getting_started.rst:319
msgid "Build and install qiskit-aer directly"
msgstr "qiskit-aerని నేరుగా నిర్మించి, ఇన్‌స్టాల్ చేయండి"

#: ../../getting_started.rst:321
msgid "If you have pip <19.0.0 installed and your environment doesn't require a custom build, run:"
msgstr "మీరు pip <19.0.0 ఇన్‌స్టాల్ చేసి ఉంటే మరియు మీ పర్యావరణానికి అనుకూల బిల్డ్ అవసరం లేకుంటే, రన్ చేయండి:"

#: ../../getting_started.rst:329
msgid "This will both build the binaries and install Aer."
msgstr "ఇది బైనరీలను నిర్మిస్తుంది మరియు Aerని ఇన్‌స్టాల్ చేస్తుంది."

#: ../../getting_started.rst:331
msgid "Alternatively, if you have a newer pip installed, or have some custom requirement, you can build a Python wheel manually."
msgstr "ప్రత్యామ్నాయంగా, మీరు కొత్త pipని ఇన్‌స్టాల్ చేసి ఉంటే లేదా కొంత అనుకూల అవసరాలను కలిగి ఉంటే, మీరు python wheelను మాన్యువల్‌గా నిర్మించవచ్చు."

#: ../../getting_started.rst:339
msgid "If you need to set a custom option during the wheel build, refer to :ref:`Custom options <aer_wheel_build_options>`."
msgstr "మీరు వీల్ బిల్డ్ సమయంలో అనుకూల ఎంపికను సెట్ చేయాలనుకుంటే, :ref:`అనుకూల ఎంపికలు <aer_wheel_build_options>`ని చూడండి."

#: ../../getting_started.rst:342
msgid "After you build the Python wheel, it will be stored in the ``dist/`` dir in the Aer repository. The exact version will depend"
msgstr "మీరు పైథాన్ వీల్‌ను రూపొందించిన తర్వాత, అది ఏర్ రిపోజిటరీలోని ``dist/`` dirలో నిల్వ చేయబడుతుంది. ఖచ్చితమైన సంస్కరణ ఆధారపడి ఉంటుంది"

#: ../../getting_started.rst:350
msgid "The exact filename of the output wheel file depends on the current version of Aer under development."
msgstr "అవుట్‌పుట్ వీల్ ఫైల్ యొక్క ఖచ్చితమైన ఫైల్ పేరు అభివృద్ధిలో ఉన్న Aer యొక్క ప్రస్తుత వెర్షన్‌పై ఆధారపడి ఉంటుంది."

#: ../../getting_started.rst:359
msgid "The Aer build system uses `scikit-build <https://scikit-build.readthedocs.io/en/latest/index.html>`__ to run the compilation when building it with the Python interface. It acts as an interface for `setuptools <https://setuptools.readthedocs.io/en/latest/>`__ to call `CMake <https://cmake.org/>`__ and compile the binaries for your local system."
msgstr "Aer బిల్డ్ సిస్టమ్ python ఇంటర్‌ఫేస్‌తో కంపైలేషన్‌ను రూపొందించేటప్పుడు దాన్ని అమలు చేయడానికి `scikit-build <https://scikit-build.readthedocs.io/en/latest/index.html>`__ని ఉపయోగిస్తుంది. ఇది `CMake <https://cmake.org/>`__కి కాల్ చేయడానికి మరియు మీ స్థానిక సిస్టమ్ కోసం బైనరీలను కంపైల్ చేయడానికి `setuptools <https://setuptools.readthedocs.io/en/latest/>`__ కోసం ఇంటర్‌ఫేస్‌గా పనిచేస్తుంది."

#: ../../getting_started.rst:364
msgid "Due to the complexity of compiling the binaries, you may need to pass options to a certain part of the build process. The way to pass variables is:"
msgstr "బైనరీలను కంపైల్ చేయడంలో సంక్లిష్టత కారణంగా, మీరు బిల్డ్ ప్రాసెస్‌లో కొంత భాగానికి ఎంపికలను పాస్ చేయాల్సి రావచ్చు. వేరియబుల్స్ పాస్ మార్గం:"

#: ../../getting_started.rst:371
msgid "where the elements within square brackets `[]` are optional, and ``skbuild_opts``, ``cmake_opts``, ``build_tool_opts`` are to be replaced by flags of your choice. A list of *CMake* options is available here: https://cmake.org/cmake/help/v3.6/manual/cmake.1.html#options. For example, you could run something like:"
msgstr "ఇక్కడ చతురస్రాకార బ్రాకెట్లలోని మూలకాలు `[]` ఐచ్ఛికం మరియు ``skbuild_opts``, ``cmake_opts``, ``build_tool_opts`` మీ ఎంపిక ఫ్లాగ్‌లతో భర్తీ చేయబడతాయి. *CMake* ఎంపికల జాబితా ఇక్కడ అందుబాటులో ఉంది: https://cmake.org/cmake/help/v3.6/manual/cmake.1.html#options. ఉదాహరణకు, మీరు ఇలాంటి వాటిని రన్ చేయవచ్చు:"

#: ../../getting_started.rst:381
msgid "This is passing the flag `-j8` to the underlying build system (which in this case is `Automake <https://www.gnu.org/software/automake/>`__), telling it that you want to build in parallel using 8 processes."
msgstr "ఇది ఫ్లాగ్ `-j8`ని అంతర్లీన బిల్డ్ సిస్టమ్‌కి పంపుతోంది (ఈ సందర్భంలో `Automake<https://www.gnu.org/software/automake/>`__), మీరు దీన్ని 8 ప్రక్రియలను ఉపయోగించి సమాంతరంగా నిర్మించాలనుకుంటున్నారని తెలియజేస్తుంది."

#: ../../getting_started.rst:385
msgid "For example, a common use case for these flags on linux is to specify a specific version of the C++ compiler to use (normally if the default is too old):"
msgstr "ఉదాహరణకు, linuxలో ఈ ఫ్లాగ్‌ల కోసం ఒక సాధారణ ఉపయోగ సందర్భం ఏమిటంటే, C++ కంపైలర్ యొక్క నిర్దిష్ట వెర్షన్‌ని పేర్కొనడం (సాధారణంగా డిఫాల్ట్ చాలా పాతది అయితే):"

#: ../../getting_started.rst:393
msgid "which will tell CMake to use the g++-7 command instead of the default g++ when compiling Aer."
msgstr "ఇది Aerని కంపైల్ చేసేటప్పుడు డిఫాల్ట్ g++కి బదులుగా g++-7 కమాండ్‌ని ఉపయోగించమని CMakeకి చెబుతుంది."

#: ../../getting_started.rst:396
msgid "Another common use case for this, depending on your environment, is that you may need to specify your platform name and turn off static linking."
msgstr "దీని కోసం మరొక సాధారణ ఉపయోగ సందర్భం, మీ పర్యావరణంపై ఆధారపడి, మీరు మీ ప్లాట్‌ఫారమ్ పేరును పేర్కొనవలసి ఉంటుంది మరియు స్టాటిక్ లింకింగ్‌ను ఆఫ్ చేయాలి."

#: ../../getting_started.rst:404
msgid "Here ``--plat-name`` is a flag to setuptools, to specify the platform name to use in the package metadata, ``-DSTATIC_LINKING`` is a flag for using CMake to disable static linking, and ``-j8`` is a flag for using Automake to use 8 processes for compilation."
msgstr "ఇక్కడ ``--plat-name`` అనేది సెటప్‌టూల్స్‌కు ఫ్లాగ్, ప్యాకేజీ మెటాడేటాలో ఉపయోగించాల్సిన ప్లాట్‌ఫారమ్ పేరును పేర్కొనడానికి, ``-DSTATIC_LINKING` అనేది స్టాటిక్ లింకింగ్‌ని నిలిపివేయడానికి CMakeని ఉపయోగించడానికి మరియు ``-j8 `` అనేది కంపైలేషన్ కోసం 8 ప్రక్రియలను ఉపయోగించడానికి Automake కోసం ఉపయోగపడే ఫ్లాగ్."

#: ../../getting_started.rst:409
msgid "A list of common options depending on platform are:"
msgstr "ప్లాట్‌ఫారమ్ ఆధారంగా సాధారణ ఎంపికల జాబితా:"

#: ../../getting_started.rst:412
msgid "Platform"
msgstr "ప్లాట్ఫాం"

#: ../../getting_started.rst:412
msgid "Tool"
msgstr "పరికరం"

#: ../../getting_started.rst:412
msgid "Option"
msgstr "ఆప్షన్"

#: ../../getting_started.rst:412
msgid "Use Case"
msgstr "యూస్ కేస్"

#: ../../getting_started.rst:414
msgid "All"
msgstr "అన్ని"

#: ../../getting_started.rst:414
msgid "Automake"
msgstr "ఆటోమేక్"

#: ../../getting_started.rst:414
msgid "-j"
msgstr "-j"

#: ../../getting_started.rst:414
msgid "Followed by a number, sets the number of processes to use for compilation."
msgstr "ఒక సంఖ్యను అనుసరించి, కంపైలేషాన్ కోసం ఉపయోగించే ప్రక్రియల సంఖ్యను సెట్ చేస్తుంది."

#: ../../getting_started.rst:417 ../../getting_started.rst:424
msgid "CMake"
msgstr "CMake"

#: ../../getting_started.rst:417
msgid "-DCMAKE_CXX_COMPILER"
msgstr "-DCMAKE_CXX_COMPILER"

#: ../../getting_started.rst:417
msgid "Used to specify a specific C++ compiler; this is often needed if your default g++ is too old."
msgstr "నిర్దిష్ట C++ కంపైలర్‌ను పేర్కొనడానికి ఉపయోగించబడుతుంది; మీ డిఫాల్ట్ g++ చాలా పాతది అయితే ఇది తరచుగా అవసరమవుతుంది."

#: ../../getting_started.rst:421 ../../getting_started.rst:424
msgid "OSX"
msgstr "OSX"

#: ../../getting_started.rst:421
msgid "setuptools"
msgstr "setuptools"

#: ../../getting_started.rst:421
msgid "--plat-name"
msgstr "--plat-name"

#: ../../getting_started.rst:421
msgid "Used to specify the platform name in the output Python package."
msgstr "అవుట్పుట్ Python ప్యాకేజీలో ప్లాట్ఫార్ పేరు తెలుపుటకు ఉపయోగించబడుతుంది."

#: ../../getting_started.rst:424
msgid "-DSTATIC_LINKING"
msgstr "-DSTATIC_LINKING"

#: ../../getting_started.rst:424
msgid "Used to specify whether or not static linking should be used."
msgstr "స్టాటిక్ లింకింగ్ ఉపయోగించబడిందో లేదో తెలుపుటకు ఉపయోగించబడుతుంది."

#: ../../getting_started.rst:429
msgid "Some of these options are not platform-specific. These particular platforms are listed because they are commonly used in the environment. Refer to the tool documentation for more information."
msgstr "ఈ ఎంపికలలో కొన్ని ప్లాట్‌ఫారమ్-నిర్దిష్టమైనవి కావు. ఈ ప్రత్యేక ప్లాట్‌ఫారమ్‌లు సాధారణంగా ఎన్విరాన్మెంట్లో ఉపయోగించబడుతున్నందున జాబితా చేయబడ్డాయి. మరింత సమాచారం కోసం టూల్ డాక్యుమెంటేషన్‌ని చూడండి."

#: ../../getting_started.rst:436
msgid "Platform Support"
msgstr "ప్లాట్‌ఫారమ్ మద్దతు"

#: ../../getting_started.rst:438
msgid "Qiskit strives to support as many platforms as possible, but due to limitations in available testing resources and platform availability, not all platforms can be supported. Platform support for Qiskit is broken into 3 tiers with different levels of support for each tier. For platforms outside these, Qiskit is probably still installable, but it's not tested and you will have to build Qiskit (and likely Qiskit's dependencies) from source."
msgstr "Qiskit వీలైనన్ని ప్లాట్‌ఫారమ్‌లకు మద్దతు ఇవ్వడానికి ప్రయత్నిస్తుంది, అయితే అందుబాటులో ఉన్న టెస్ట్ వనరులు మరియు ప్లాట్‌ఫారమ్ లభ్యతలో పరిమితుల కారణంగా, అన్ని ప్లాట్‌ఫారమ్‌లకు మద్దతు ఇవ్వబడదు. Qiskit కోసం ప్లాట్‌ఫారమ్ మద్దతు ప్రతి శ్రేణికి వివిధ స్థాయిల మద్దతుతో 3 శ్రేణులుగా విభజించబడింది. వీటి వెలుపలి ప్లాట్‌ఫారమ్‌ల కోసం, Qiskit బహుశా ఇప్పటికీ ఇన్‌స్టాల్ చేయబడవచ్చు, కానీ ఇది పరీక్షించబడలేదు మరియు మీరు సోర్స్ నుండి Qiskit (మరియు బహుశా Qiskit యొక్క డిపెండెన్సీలను) నిర్మించవలసి ఉంటుంది."

#: ../../getting_started.rst:445
msgid "Additionally, Qiskit only supports CPython. Running with other Python interpreters isn't currently supported."
msgstr "అదనంగా, Qiskit CPythonకు మాత్రమే మద్దతు ఇస్తుంది. ఇతర python ఇంటర్ప్రెటర్లతో నడుపుటకు ప్రస్తుతం మద్దతు లేదు."

#: ../../getting_started.rst:449
msgid "Tier 1"
msgstr "Tier 1"

#: ../../getting_started.rst:451
msgid "Tier 1 supported platforms are fully tested upstream as part of the development processes to ensure any proposed change will function correctly. Pre-compiled binaries are built, tested, and published to PyPI as part of the release process. These platforms are expected to be installable with just a functioning Python environment as all dependencies are available on these platforms."
msgstr "ఏదైనా ప్రతిపాదిత మార్పు సరిగ్గా పనిచేస్తుందని నిర్ధారించడానికి డెవలప్‌మెంట్ ప్రాసెస్‌లలో భాగంగా టైర్ 1 మద్దతు ఉన్న ప్లాట్‌ఫారమ్‌లు పూర్తిగా అప్‌స్ట్రీమ్‌లో పరీక్షించబడతాయి. విడుదల ప్రక్రియలో భాగంగా ముందుగా కంపైల్ చేయబడిన బైనరీలు నిర్మించబడ్డాయి, పరీక్షించబడతాయి మరియు PyPIకి ప్రచురించబడతాయి. ఈ ప్లాట్‌ఫారమ్‌లలో అన్ని డిపెండెన్సీలు అందుబాటులో ఉన్నందున ఈ ప్లాట్‌ఫారమ్‌లు కేవలం పనిచేసే python వాతావరణంతో ఇన్‌స్టాల్ చేయగలవని భావిస్తున్నారు."

#: ../../getting_started.rst:457
msgid "Tier 1 platforms are currently:"
msgstr "ప్రస్తుతం ఉన్న టైర్ 1 ప్లాట్‌ఫారమ్‌లు:"

#: ../../getting_started.rst:459
msgid "Linux x86_64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)."
msgstr "Linux x86_64 (పంపిణీలు `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉంటాయి)."

#: ../../getting_started.rst:462
msgid "macOS x86_64 (10.9 or newer)"
msgstr "MacOS x86_64 (10.9 లేదా న్యూయర్)"

#: ../../getting_started.rst:463
msgid "Windows 64 bit"
msgstr "Windows 64 bit"

#: ../../getting_started.rst:466
msgid "Tier 2"
msgstr "Tier 2"

#: ../../getting_started.rst:468
msgid "Tier 2 platforms are not tested upstream as part of development process. However, pre-compiled binaries are built, tested, and published to PyPI as part of the release process and these packages can be expected to be installed with just a functioning Python environment."
msgstr "అభివృద్ధి ప్రక్రియలో భాగంగా టైర్ 2 ప్లాట్‌ఫారమ్‌లు అప్‌స్ట్రీమ్‌లో పరీక్షించబడవు. అయినప్పటికీ, విడుదల ప్రక్రియలో భాగంగా ముందుగా కంపైల్ చేయబడిన బైనరీలు నిర్మించబడతాయి, పరీక్షించబడతాయి మరియు PyPIకి ప్రచురించబడతాయి మరియు ఈ ప్యాకేజీలు కేవలం పనిచేసే python వాతావరణంతో ఇన్‌స్టాల్ చేయబడతాయని ఆశించవచ్చు."

#: ../../getting_started.rst:473
msgid "Tier 2 platforms are currently:"
msgstr "ప్రస్తుతం ఉన్న టైర్ 2 ప్లాట్‌ఫారమ్‌లు:"

#: ../../getting_started.rst:475
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python < 3.10"
msgstr "Linux i686 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉన్న పంపిణీలు) for Python < 3.10"

#: ../../getting_started.rst:478
msgid "Windows 32 bit for Python < 3.10"
msgstr "Windows 32 bit for Python < 3.10"

#: ../../getting_started.rst:479
msgid "Linux aarch64 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux aarch64(`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉన్న పంపిణీలు)"

#: ../../getting_started.rst:484
msgid "Tier 3"
msgstr "Tier 3"

#: ../../getting_started.rst:486
msgid "Tier 3 platforms are not tested upstream as part of the development process.  Pre-compiled binaries are built and published to PyPI as part of the release process, with no testing at all. They may not be installable with just a functioning Python environment and may require a C/C++ compiler or additional programs to build dependencies from source as part of the installation process. Support for these platforms are best effort only."
msgstr "అభివృద్ధి ప్రక్రియలో భాగంగా టైర్ 3 ప్లాట్‌ఫారమ్‌లు అప్‌స్ట్రీమ్‌లో పరీక్షించబడవు. ముందుగా సంకలనం చేయబడిన బైనరీలు ఎటువంటి పరీక్ష లేకుండా, విడుదల ప్రక్రియలో భాగంగా PyPIకి నిర్మించబడతాయి మరియు ప్రచురించబడతాయి. అవి కేవలం పనిచేసే పైథాన్ ఎన్విరాన్‌మెంట్‌తో ఇన్‌స్టాల్ చేయలేకపోవచ్చు మరియు ఇన్‌స్టాలేషన్ ప్రాసెస్‌లో భాగంగా సోర్స్ నుండి డిపెండెన్సీలను రూపొందించడానికి C/C++ కంపైలర్ లేదా అదనపు ప్రోగ్రామ్‌లు అవసరం కావచ్చు. ఈ ప్లాట్‌ఫారమ్‌లకు మద్దతు ఉత్తమ ప్రయత్నం మాత్రమే."

#: ../../getting_started.rst:493
msgid "Tier 3 platforms are currently:"
msgstr "ప్రస్తుతం ఉన్న టైర్ 3 ప్లాట్‌ఫారమ్‌లు:"

#: ../../getting_started.rst:495
msgid "Linux ppc64le (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux ppc64le(`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉన్న పంపిణీలు)"

#: ../../getting_started.rst:498
msgid "Linux s390x (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification)"
msgstr "Linux s390x(`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉన్న పంపిణీలు)"

#: ../../getting_started.rst:501
msgid "macOS arm64 (10.15 or newer)"
msgstr "macOS arm64 (10.15 లేదా కొత్తది)"

#: ../../getting_started.rst:502
msgid "Linux i686 (distributions compatible with the `manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ packaging specification) for Python >= 3.10"
msgstr "Linux i686 (`manylinux 2014 <https://www.python.org/dev/peps/pep-0599/>`__ ప్యాకేజింగ్ స్పెసిఫికేషన్‌కు అనుకూలంగా ఉన్న పంపిణీలు) for Python >= 3.10"

#: ../../getting_started.rst:505
msgid "Windows 32 bit for Python >= 3.10"
msgstr "Windows 32 bit for Python >= 3.10"

#: ../../getting_started.rst:508
msgid "Ready to get going?..."
msgstr "వెళ్ళడానికి సిద్ధంగా ఉన్నారా?..."

