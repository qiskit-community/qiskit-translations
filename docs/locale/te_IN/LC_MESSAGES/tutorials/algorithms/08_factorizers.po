msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-09-02 07:25\n"
"Last-Translator: \n"
"Language: te\n"
"Language-Team: Telugu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: te\n"
"X-Crowdin-File: /main/docs/locale/en/LC_MESSAGES/tutorials/algorithms/08_factorizers.po\n"
"X-Crowdin-File-ID: 9508\n"

#: ../../tutorials/algorithms/08_factorizers.ipynb:10
msgid "This page was generated from `tutorials/algorithms/08_factorizers.ipynb`__."
msgstr "ఈ పేజీ `tutorials/algorithms/08_factorizers.ipynb`__ నుండి రూపొందించబడింది."

#: ../../tutorials/algorithms/08_factorizers.ipynb:9
msgid "Shor's algorithms"
msgstr "షోర్ యొక్క అల్గోరిథంలు"

#: ../../tutorials/algorithms/08_factorizers.ipynb:11
msgid "Qiskit has an implementation of `Shor's algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."
msgstr "Qiskit `Shor's అల్గారిథమ్ <https://qiskit.org/textbook/ch-algorithms/shor.html>`__ అమలును కలిగి ఉంది."

#: ../../tutorials/algorithms/08_factorizers.ipynb:13
msgid "The preceding reference has detailed explanations and build-out of circuits whereas this notebook has examples with the pre-built algorithms in Qiskit that you can use for experimentation and education purposes."
msgstr "మునుపటి సూచనలో వివరణాత్మక వివరణలు మరియు బిల్డ్-అవుట్ సర్క్యూట్‌లు ఉన్నాయి, అయితే ఈ నోట్‌బుక్‌లో మీరు ప్రయోగాలు మరియు విద్య ప్రయోజనాల కోసం ఉపయోగించగల Qiskitలో ముందుగా నిర్మించిన అల్గారిథమ్‌లతో ఉదాహరణలు ఉన్నాయి."

#: ../../tutorials/algorithms/08_factorizers.ipynb:39
msgid "Shor's Factoring algorithm"
msgstr "షోర్స్ ఫ్యాక్టరింగ్ అల్గోరిథం"

#: ../../tutorials/algorithms/08_factorizers.ipynb:41
msgid "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ is one of the most well-known quantum algorithms and finds the prime factors for input integer :math:`N` in polynomial time. The algorithm implementation in Qiskit is simply provided a target integer to be factored and run, as follows:"
msgstr "`షోర్స్ ఫ్యాక్టరింగ్ అల్గోరిథం <https://qiskit.org/documentation/stubs/qiskit.algorithms.Shor.html>`__ అనేది అత్యంత ప్రసిద్ధ క్వాంటం అల్గారిథమ్‌లలో ఒకటి మరియు ఇన్‌పుట్ పూర్ణాంకం కోసం ప్రధాన కారకాలను కనుగొంటుంది :math:`N ` బహుపది సమయంలో. Qiskitలో అల్గోరిథం అమలు కేవలం క్రింది విధంగా కారకం మరియు అమలు చేయడానికి లక్ష్య పూర్ణాంకం అందించబడుతుంది:"

#: ../../tutorials/algorithms/08_factorizers.ipynb:91
msgid "Note: this implementation of Shor's algorithm uses :math:`4n + 2` qubits, where :math:`n` is the number of bits representing the integer in binary. So in practice, for now, this implementation is restricted to factorizing small integers. Given the above value of N we compute :math:`4n +2` below and confirm the size from the actual circuit."
msgstr "గమనిక: షోర్ యొక్క అల్గోరిథం యొక్క ఈ అమలు :math:`4n + 2` క్విట్‌లను ఉపయోగిస్తుంది, ఇక్కడ :math:`n` అనేది బైనరీలో పూర్ణాంకాన్ని సూచించే బిట్‌ల సంఖ్య. కాబట్టి ఆచరణలో, ప్రస్తుతానికి, ఈ అమలు చిన్న పూర్ణాంకాల కారకాలకు పరిమితం చేయబడింది. పైన ఉన్న N విలువను బట్టి మనం :math:`4n +2`ని గణిస్తాము మరియు వాస్తవ సర్క్యూట్ నుండి పరిమాణాన్ని నిర్ధారిస్తాము."

