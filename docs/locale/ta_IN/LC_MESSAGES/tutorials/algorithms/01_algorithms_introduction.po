msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-10 14:06+0000\n"
"PO-Revision-Date: 2021-06-10 14:49\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"
"Language: ta_IN\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/algorithms/08_grover_examples.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/01_algorithms_introduction.ipynb>`_."
msgstr "`IBM Quantum` ஆய்வகத்தில் ஊடாடும் வகையில் இயக்கவும். `<https://quantum-computing.ibm.com/jupyter/tutorial/finance/01_portfolio_optimization.ipynb>`_."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Qiskit உள்ள வழிமுறைகள் ஒரு அறிமுகம்"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr "இது Qiskit-ல் உள்ள வழிமுறைகளுக்கான அறிமுகம் மற்றும் தொடங்குவதற்கான செயல்பாட்டின் பல்வேறு அம்சங்களைப் புரிந்துகொள்ள உதவும் உயர் மட்ட கண்ணோட்டத்தை வழங்குகிறது. பிற பயிற்சிகள் கொடுக்கப்பட்ட வழிமுறைகள் மற்றும் அவற்றைப் பயன்படுத்துவதற்கான வழிகள் போன்றவற்றில் இன்னும் ஆழமான விஷயங்களை வழங்கும்."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "எப்படி வழிமுறை நூலகம் வடிவமைக்கப்பட்டுள்ளது?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Linear Solvers`` for linear systems of equations problems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let’s take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "VQE உதாரணத்தை உருவாக்க ஒரு எடுத்துக்காட்டைப் பார்ப்போம். இங்கே ``TwoLocal`` என்பது மாறுபட்ட வடிவம் (சோதனை அலை செயல்பாடு), அளவுருவாக்கப்பட்ட சுற்று, இது மாறுபடும், மற்றும் `` SLSQP`` ஒரு கிளாசிக்கல் ஆப்டிமைசர். இவை தனித்தனி நிகழ்வுகளாக உருவாக்கப்பட்டு, அது கட்டப்படும்போது VQE க்கு அனுப்பப்படும். எடுத்துக்காட்டாக, வேறுபட்ட கிளாசிக்கல் ஆப்டிமைசர் அல்லது மாறுபட்ட வடிவத்தை முயற்சிப்பது என்பது நீங்கள் விரும்பும் ஒரு நிகழ்வை உருவாக்கி அதை VQE க்கு அனுப்பும் ஒரு சந்தர்ப்பமாகும்."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:58
msgid "Let’s draw the ansatz so we can see it’s a QuantumCircuit where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We’ll come back to the parameters later in a working example below."
msgstr "அன்சாட்ஸை வரைவோம், இது ஒரு குவாண்டம் சிர்க்யூட் என்பதைக் காணலாம், அங்கு Q [0] முதல் θ [7] வரை அளவுருக்கள் மாறுபடும், இது VQE ஆப்டிமைசர் குறைந்தபட்ச ஈஜென்வெல்யூவைக் கண்டுபிடிப்பதால் மாறுபடும். கீழேயுள்ள ஒரு வேலை எடுத்துக்காட்டில் நாங்கள் பின்னர் அளவுருக்களுக்கு வருவோம்."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:124
msgid "But more is needed before we can run the algorithm so let’s get to that next."
msgstr "நாங்கள் வழிமுறையை இயக்குவதற்கு முன்பு இன்னும் பல தேவை, எனவே அடுத்ததைப் பெறுவோம்."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:136
msgid "How to run an algorithm?"
msgstr "ஒரு வழிமுறையை எவ்வாறு இயக்குவது?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:138
msgid "In order to run an algorithm we need to have backend, a simulator or real device, on which the circuits that comprise the algorithm can be run. So for example we can use the ``aer_simulator_statevector`` from the Aer provider."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:161
msgid "Now a backend on its own does not have information on how you might want to run the circuits etc. For example how many shots, do you want a noise model, even options around transpiling the circuits. For this Qiskit Terra has a `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ which is provided both the backend as well as various settings around the circuit processing and execution so for instance:"
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:185
msgid "Note: if you provide the backend directly then internally a QuantumInstance will be created from it, with default settings, so at all times the algorithms are working through a QuantumInstance."
msgstr "குறிப்பு: நீங்கள் பின்னணியை நேரடியாக தரும் என்றால் நேரடியாக ஒரு குவாண்டம் உதாரணம் உருவாக்கப்படும், முன்னிருப்பு அமைப்புகளுடன், அதனால் அனைத்து நேரத்தில் படிமங்கள் ஒரு குவாண்டம் உதாரணம் வழியாக இயங்குகின்றன."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:187
msgid "So now we would be able to call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:199
msgid "A complete working example"
msgstr "ஒரு முழுமையான பணி உதாரணம்"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:201
msgid "Let’s put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It’s a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:229
msgid "So let’s build a VQE instance passing a backend using a QuantumInstance, to the constructor. Now VQE does have setters so the QuantumInstance can also be passed later."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:231
msgid "Note: In order that you can run this notebook and see the exact same output the random number generator used throughout algorithms in algorithms_globals, as well as the transpiler and simulator, via the QuantumInstance, are seeded. You do not have to do this but if want to be able to reproduce the exact same outcome each time then this is how it’s done."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:233
msgid "So let’s run VQE and print the result object it returns."
msgstr "எனவே VQE ஐ இயக்கலாம் மற்றும் அதன் விளைவு பொருளை அச்சிடுக."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:316
msgid "From the above result we can see it took the optimizer ``65`` evaluations of parameter values until it found the minimum eigenvalue of ``-1.85727`` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:328
msgid "Using VQE setting QuantumInstance after Construction"
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:330
msgid "To close off let’s also create a VQE instance without supplying the QuantumInstance. We later set it as long as by the time VQE runs it has a QuantumInstance to use."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:413
msgid "As the identical seeding was used as the prior example the result can be seen to be the same."
msgstr "ஒத்திசைவு சேமிப்பு முந்தைய உதாரணமாக பயன்படுத்தப்பட்டதால் இதன் விளைவு ஒரே இருக்க முடியும்."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:424
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "இது Qiskit-ல் உள்ள வழிமுறைகளுக்கான இந்த அறிமுகத்தை முடிக்கிறது. இந்த தொடரின் பிற வழிமுறை பயிற்சிகளை பரந்த மற்றும் வழிமுறைகளின் ஆழமான கவரேஜில் பாருங்கள்."

