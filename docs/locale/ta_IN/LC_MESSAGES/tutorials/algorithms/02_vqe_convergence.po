msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:28\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_convergence.po\n"
"X-Crowdin-File-ID: 9446\n"
"Language: ta_IN\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/algorithms/02_vqe_convergence.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr "VQE குவிதலைக் கண்காணித்தல்"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid "Variational algorithms in Qiskit, like `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ and `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__, provide the option for a user to give a callback method that can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "`VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html>`__ மற்றும் `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.QAOA.html>`__ போன்ற Qiskit ல் உள்ள மாறுபட்ட வழிமுறைகள், ஒரு பயனர் ஒரு அழைப்பு முறையை வழங்குவதற்கான விருப்பத்தை வழங்கவும், இது வழிமுறை இயங்குவதோடு குறைந்தபட்சமாக மாறும்போது தேர்வுமுறை முன்னேற்றத்தைக் கண்காணிக்கப் பயன்படுகிறது. ஒவ்வொரு செயல்பாட்டு மதிப்பீட்டிற்கும் உகப்பாக்கி மூலம் அழைப்பு திரும்ப அழைக்கப்படுகிறது மற்றும் தற்போதைய உகப்பாக்கி மதிப்பு, மதிப்பீட்டு எண்ணிக்கை, தற்போதைய உகப்பாக்கி அளவுருக்கள் போன்றவற்றை வழங்குகிறது. குறிப்பிட்ட உகப்பாக்கியைப் பொறுத்து இது உகப்பாக்கியின் ஒவ்வொரு மறு செய்கை (படி) ஆக இருக்காது, எனவே ஒரு வரையறுக்கப்பட்ட வேறுபாடு அடிப்படையிலான சாய்வைக் கணக்கிடுவதற்கு உகப்பாக்கி செலவுச் செயல்பாட்டை அழைத்தால், இது திரும்பப்பெறுதல் வழியாகத் தெரியும்."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid "This notebook demonstrates using Qiskit’s VQE algorithm to plot graphs of the convergence path to ground state energy with a selected set of optimizers."
msgstr "இந்த காட்சிப் புத்தகம் Qiskit's VQE படிமுறையை பயன்படுத்தி வரையறுக்கப்பட்ட பாதையை வரையறுக்கிறது."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:43
msgid "First we create a qubit operator for VQE. Here we will use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Nature for an H2 molecule."
msgstr "முதலில் நாம் VQE க்காக ஒரு க்யூபிட் ஆபரேட்டரை உருவாக்குகிறோம். வழிமுறைகளின் அறிமுகத்தில் பயன்படுத்தப்பட்ட அதே ஆபரேட்டரை இங்கே பயன்படுத்துவோம், இது முதலில் H2 மூலக்கூறுக்கு Qiskit Nature வேதியியலால் கணக்கிடப்பட்டது."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:68
msgid "We will show the callback usage below over a set of optimizers for comparison. The minimum energy of the H2 Hamiltonian can be found quite easily so we are able to set maxiters to a small value"
msgstr "ஒப்பிடுவதற்கான உகப்பாக்கிகளின் தொகுப்பில் கீழே அழைப்பு பயன்பாட்டைக் காண்பிப்போம். H2 ஹாமில்டோனியனின் குறைந்தபட்ச ஆற்றலை மிக எளிதாகக் காணலாம், எனவே மாக்சிட்டர்களை ஒரு சிறிய மதிப்புக்கு அமைக்க முடியும்"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:133
msgid "Now from the callback data we stored we can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr "இப்போது நாங்கள் சேமித்த கால்பேக் தரவிலிருந்து ஒவ்வொரு உகப்பாக்கி செய்யும் ஒவ்வொரு புறநிலை செயல்பாடு அழைப்பிலும் ஆற்றல் மதிப்பைக் குறிக்கலாம். கம்ப்யூட்டிங் சாய்வுக்கான வரையறுக்கப்பட்ட வேறுபாடு முறையைப் பயன்படுத்தும் ஒரு உகப்பாக்கி சதி போன்ற சிறப்பியல்பு படி உள்ளது, அங்கு பல மதிப்பீடுகளுக்கு இது ஒரு சாய்வு நிறுவ புள்ளிகளுக்கு நெருக்கமான மதிப்பைக் கணக்கிடுகிறது (புள்ளிகளின் நெருக்கமான வேறுபாடுகளைக் காண முடியாத ஒத்த மதிப்புகளைக் கொண்ட புள்ளிகள் இங்கே வரைபடத்தின் அளவு)."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:168
msgid "Finally since the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value for the solution. We can now plot the difference from the resultant exact solution as the energy converges with VQE towards the minimum value which should be that exact classical solution."
msgstr "இறுதியாக மேலே உள்ள சிக்கல் இன்னும் எளிதில் பிரிக்கக்கூடியதாக இருப்பதால், தீர்வுக்கான குறிப்பு மதிப்பைக் கணக்கிட NumPyMinimumEigensolver ஐப் பயன்படுத்தலாம். ஆற்றல் துல்லியமான கிளாசிக்கல் தீர்வாக இருக்க வேண்டிய குறைந்தபட்ச மதிப்பை நோக்கி VQE உடன் ஒன்றிணைவதால், இதன் விளைவாக வரும் சரியான தீர்விலிருந்து வேறுபாட்டை நாம் இப்போது திட்டமிடலாம்."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:242
msgid "Using Gradient framework"
msgstr "கிரேடியெண்ட் வரைபடத்தை பயன்படுத்தி"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:244
msgid "Qiskit now has a Gradient framework as part of the Opflow capability. With the gradient computed for the optimizer we now see just the optimization steps themselves."
msgstr "ஆபரேட்டர் திறனின் ஒரு பகுதியாக Qiskit இப்போது ஒரு சாய்வு கட்டமைப்பைக் கொண்டுள்ளது. ஆப்டிமைசருக்காக கணக்கிடப்பட்ட சாய்வு மூலம், இப்போது தேர்வுமுறை தங்களைத் தாங்களே காண்கிறோம்."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:330
msgid "Monitoring via the logging"
msgstr "பதிவு வழியாக கண்காணித்தல்"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:332
msgid "Much of the code is instrumented with `Python logging <https://docs.python.org/3/library/logging.html>`__ statements. The logging is configurable to adjust level of logging etc. Here we set the logging level to ``INFO``"
msgstr "குறியீட்டின் பெரும்பகுதி `பைதான் பதிவு `Python logging <https://docs.python.org/3/library/logging.html>`__ அறிக்கைகளுடன் கருவியாக உள்ளது. பதிவுசெய்தல் அளவை சரிசெய்ய உள்நுழைவு கட்டமைக்கப்படுகிறது. இங்கே நாம் பதிவு நிலையை ``INFO`` என அமைத்துள்ளோம்"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:355
msgid "and at INFO level logging VQE will include information on the evaluations, as below."
msgstr "மற்றும் INFO அளவு லோகிங் VQE இன் மதிப்பீடுகளின் தகவல்களை கீழே உள்ளடக்குகிறது."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:357
msgid "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.43698938] - 4.05884 (ms), eval count: 2 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy evaluation returned [-1.75399268] - 6.61016 (ms), eval count: 4"
msgstr "INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy மதிப்பீடு வெளியீடு [-1.07392554] - 116.41884 (ms), eval count: 1 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy மதிப்பீடு வெளியீடு [-1.43698938]- 4.05884 (ms) eval count: 2 \n"
"INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy மதிப்பீடு வெளியீடு [-1.74596698] - 7.40194 (ms), eval count: 3 INFO:qiskit.algorithms.minimum_eigen_solvers.vqe:Energy மதிப்பீடு வெளியீடு [-1.75399268] - 6.61016 (ms), eval count: 4"

