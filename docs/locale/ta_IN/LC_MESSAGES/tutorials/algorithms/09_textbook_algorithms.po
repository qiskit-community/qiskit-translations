msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 00:19+0000\n"
"PO-Revision-Date: 2021-04-02 17:36\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/09_textbook_algorithms.po\n"
"X-Crowdin-File-ID: 9460\n"
"Language: ta_IN\n"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:10
msgid "This page was generated from `tutorials/algorithms/09_textbook_algorithms.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/algorithms/09_textbook_algorithms.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/09_textbook_algorithms.ipynb>`_."
msgstr "ஊடாடும் வகையில் `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/09_textbook_algorithms.ipynb>`_ இயக்கவும்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:9
msgid "Textbook and Shor’s algorithms"
msgstr "பாடநூல் மற்றும் ஷோரின் வழிமுறைகள்"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:11
msgid "Qiskit contains implementations of the well known textbook quantum algorithms such as the `Deutsch-Jozsa algorithm <https://qiskit.org/textbook/ch-algorithms/deutsch-jozsa.html>`__, the `Bernstein-Vazirani algorithm <https://qiskit.org/textbook/ch-algorithms/bernstein-vazirani.html>`__ and `Simon’s algorithm <https://qiskit.org/textbook/ch-algorithms/simon.html>`__."
msgstr "Qiskit-ல் நன்கு அறியப்பட்ட பாடநூல் குவாண்டம் வழிமுறைகளின் செயல்பாடுகள் உள்ளன `Deutsch-Jozsa algorithm <https://qiskit.org/textbook/ch-algorithms/deutsch-jozsa.html>`__, `Bernstein-Vazirani algorithm <https://qiskit.org/textbook/ch-algorithms/bernstein-vazirani.html>`__ மற்றும் `Simon’s algorithm <https://qiskit.org/textbook/ch-algorithms/simon.html>`__."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:13
msgid "Qiskit also has an implementation of `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__."
msgstr "Qiskit-ல் `Shor’s algorithm <https://qiskit.org/textbook/ch-algorithms/shor.html>`__ இன் செயல்பாடும் உள்ளது."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:15
msgid "The preceding references have detailed explanations and build-out of circuits whereas this notebook has examples with the pre-built algorithms in Qiskit that you can use for experimentation and education purposes."
msgstr "முந்தைய குறிப்புகள் விரிவான விளக்கங்கள் மற்றும் சர்க்யூட்களை உருவாக்குதல் ஆகியவற்றைக் கொண்டுள்ளன, அதேசமயம் இந்த நோட்புக்கில் Qiskit-ல் முன்பே கட்டப்பட்ட வழிமுறைகளுடன் எடுத்துக்காட்டுகள் உள்ளன, அவை நீங்கள் சோதனை மற்றும் கல்வி நோக்கங்களுக்காகப் பயன்படுத்தலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:42
msgid "Deutsch-Jozsa algorithm"
msgstr "Deutsch-Jozsa வழிமுறை"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:44
msgid "Lets start with the `Deutsch-Jozsa algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.DeutschJozsa.html>`__ which can determine if a function is ``'balanced'`` or ``'constant'`` given such a function as input. We can experiment with it in Qiskit using an oracles created from a truth tables. So for example, we can create a ``TruthTableOracle`` instance as follows."
msgstr "`Deutsch-Jozsa algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.DeutschJozsa.html>`__ உடன் தொடங்கலாம், இது ஒரு செயல்பாடு ``'balanced'`` அல்லது ``'constant'`` என்பது உள்ளீடு போன்ற ஒரு செயல்பாட்டைக் கொடுக்கும். ஒரு உண்மை அட்டவணையில் இருந்து உருவாக்கப்பட்ட ஆரக்கிள்களைப் பயன்படுத்தி Qiskit அதைப் பரிசோதிக்கலாம். எனவே எடுத்துக்காட்டாக, `` TruthTableOracle`` உதாரணத்தை பின்வருமாறு உருவாக்கலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:66
msgid "As shown, the truthtable is specified with the ``bitstr`` containing values of all entries in the table. It has length :math:`8`, so the corresponding truth table is of :math:`3` input bits. We can of course see that this truth table represents a ``'balanced'`` function as half of values are :math:`1` and the other half :math:`0`."
msgstr "காட்டப்பட்டுள்ளபடி, அட்டவணையில் உள்ள அனைத்து உள்ளீடுகளின் மதிப்புகளைக் கொண்ட ``bitstr`` உடன் உண்மைத்தொகை குறிப்பிடப்பட்டுள்ளது. இதன் நீளம் :math:`8`, எனவே அதனுடன் தொடர்புடைய உண்மை அட்டவணை :math:`3` உள்ளீட்டு பிட்கள். மதிப்புகளின் பாதி :math:`1` மற்றும் மற்ற பாதி :math:`0` என இந்த உண்மை அட்டவணை ஒரு `` 'balanced'` செயல்பாட்டைக் குறிக்கிறது என்பதை நாம் நிச்சயமாகக் காணலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:68
msgid "It might seem like a moot point running Deutsch-Jozsa on a truthtable as the function outputs are literally listed as the truthtable’s values. The intention is to create an oracle circuit whose groundtruth information is readily available to us but obviously not to the quantum Deutsch-Jozsa algorithm that is to act upon the oracle circuit. In more realistic situations, the oracle circuit would be provided as a blackbox to the algorihtm."
msgstr "செயல்பாட்டு வெளியீடுகள் உண்மையில் சத்தியத்தின் மதிப்புகளாக பட்டியலிடப்பட்டிருப்பதால், இது ஒரு சத்தியத்தில் Deutsch-Jozsa ஐ இயக்கும் ஒரு முக்கிய புள்ளியாகத் தோன்றலாம். ஆரக்கிள் சர்க்யூட்டை உருவாக்குவதே இதன் நோக்கம், அதன் அடிப்படை உண்மைத் தகவல் எங்களுக்கு உடனடியாகக் கிடைக்கிறது, ஆனால் வெளிப்படையாக ஆரக்கிள் சர்க்யூட்டில் செயல்பட வேண்டிய குவாண்டம் Deutsch-Jozsa வழிமுறைக்கு அல்ல. மிகவும் யதார்த்தமான சூழ்நிலைகளில், ஆரக்கிள் சர்யூட் வழிமுறைக்கு ஒரு கரும்பெட்டியாக வழங்கப்படும்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:70
msgid "Above said, we can inspect the circuit corresponding to the function encoded in the ``TruthTableOracle`` instance."
msgstr "மேலே சொன்னது போல, `` TruthTableOracle`` நிகழ்வில் குறியிடப்பட்ட செயல்பாட்டுடன் தொடர்புடைய சர்க்யூட்களை நாம் ஆய்வு செய்யலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:100
msgid "As seen, the :math:`v_i`\\ ’s correspond to the 3 input bits; the :math:`o_0` is the oracle’s output qubit; the :math:`a_0` is an ancilla qubit."
msgstr "பார்த்தபடி :math:`v_i`\\ ’s கள் 3 உள்ளீட்டு பிட்களுடன் ஒத்திருக்கும்; :math:`o_0` என்பது ஆரக்கிளின் வெளியீட்டு qubit; :math:`a_0` என்பது ஒரு ancilla qubit."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:102
msgid "Next we can simply create a ``DeutschJozsa`` instance using the oracle, and run it to check the result."
msgstr "அடுத்து, ஆரக்கிளைப் பயன்படுத்தி ``DeutschJozsa`` உதாரணத்தை உருவாக்கி, முடிவைச் சரிபார்க்க அதை இயக்கலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:145
msgid "We can of course quickly put together another example for a ``'constant'`` function, as follows."
msgstr "பின்வருமாறு, `` 'constant'`` செயல்பாட்டிற்கான மற்றொரு உதாரணத்தை விரைவாக ஒன்றிணைக்கலாம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:191
msgid "Bernstein-Vazirani algorithm"
msgstr "Bernstein-Vazirani வழிமுறை"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:193
msgid "Next the `Bernstein-Vazirani algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.BernsteinVazirani.html>`__ which tries to find a hidden string. Again, for the example, we create a TruthTableOracle instance."
msgstr "அடுத்து `Bernstein-Vazirani algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.BernsteinVazirani.html>`__ இது ஒரு மறைக்கப்பட்ட ஸ்ட்ரிங்கைக் கண்டுபிடிக்க முயற்சிக்கிறது. மீண்டும், எடுத்துக்காட்டாக, நாங்கள் ஒரு TruthTableOracle உதாரணத்தை உருவாக்குகிறோம்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:215
msgid "As shown, the truthtable is specified with the ``bitstr`` containing values of all entries in the table. It has length :math:`8`, so the corresponding truth table is of :math:`3` input bits. The truthtable represents the function mappings as follows:"
msgstr "காட்டப்பட்டுள்ளபடி, அட்டவணையில் உள்ள அனைத்து உள்ளீடுகளின் மதிப்புகளைக் கொண்ட ``bitstr`` உடன் உண்மை அட்டவணை குறிப்பிடப்பட்டுள்ளது. இதன் நீளம் :math:`8`, எனவே அதனுடன் தொடர்புடைய உண்மை அட்டவணை :math:`3` உள்ளீட்டு பிட்கள். உண்மைத்தொகை பின்வருமாறு செயல்பாட்டு வரைபடங்களைக் குறிக்கிறது:"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:217
msgid ":math:`\\mathbf{a} \\cdot 000 \\mod 2 = 0`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:218
msgid ":math:`\\mathbf{a} \\cdot 001 \\mod 2 = 0`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:219
msgid ":math:`\\mathbf{a} \\cdot 010 \\mod 2 = 1`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:220
msgid ":math:`\\mathbf{a} \\cdot 011 \\mod 2 = 1`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:221
msgid ":math:`\\mathbf{a} \\cdot 100 \\mod 2 = 1`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:222
msgid ":math:`\\mathbf{a} \\cdot 101 \\mod 2 = 1`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:223
msgid ":math:`\\mathbf{a} \\cdot 110 \\mod 2 = 0`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:224
msgid ":math:`\\mathbf{a} \\cdot 111 \\mod 2 = 0`"
msgstr ""

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:226
msgid "And obviously the goal is to find the bitstring :math:`\\mathbf{a}` that satisfies all the inner product equations."
msgstr "பிட்ஸ்ட்ரிங்கைக் கண்டுபிடிப்பதே குறிக்கோள் :math:`\\mathbf{a}`` இது அனைத்து உள் தயாரிப்பு சமன்பாடுகளையும் திருப்திப்படுத்துகிறது."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:228
msgid "Lets again look at the oracle circuit, that now corresponds to the binary function encoded in the ``TruthTableOracle`` instance."
msgstr "ஆரக்கிள் சர்க்யூட்டை மீண்டும் பார்ப்போம், இது இப்போது ``TruthTableOracle`` நிகழ்வில் குறியிடப்பட்ட பைனரி செயல்பாட்டிற்கு ஒத்திருக்கிறது."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:258
msgid "Again the :math:`v_i`\\ ’s correspond to the 3 input bits; the :math:`o_0` is the oracle’s output qubit; the :math:`a_0` is an ancilla qubit."
msgstr "மீண்டும் :math:`v_i`\\ ’s கள் 3 உள்ளீட்டு பிட்களுடன் ஒத்திருக்கும்; :math:`o_0` என்பது ஆரக்கிளின் வெளியீட்டு qubit; :math:`a_0` என்பது ஒரு ancilla qubit."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:260
msgid "Let us first compute the groundtruth :math:`\\mathbf{a}` classically:"
msgstr "முதலில் பாரம்பரியமாக அடிப்படை உண்மையை கணக்கிடுவோம் :math:`\\mathbf{a}`:"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:305
msgid "Next we can create a ``BernsteinVazirani`` instance using the oracle, and run it to check the result against the groundtruth."
msgstr "அடுத்து நாம் ஆரக்கிளைப் பயன்படுத்தி ஒரு ``BernsteinVazirani`` உதாரணத்தை உருவாக்கலாம், மேலும் அடிப்படை உண்மைக்கு எதிரான முடிவைச் சரிபார்க்க அதை இயக்கவும்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:350
msgid "Simon’s algorithm"
msgstr "Simon’s வழிமுறை"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:352
msgid "`Simon’s algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Simon.html>`__ is used to solve `Simon’s problem <https://en.wikipedia.org/wiki/Simon's_problem>`__. Once again, for the example, we create a TruthTableOracle instance, where the construction shows a different form."
msgstr "`Simon’s algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Simon.html>` __ ஆனது `Simon’s problem <https://en.wikipedia.org/wiki/Simon's_problem>`__ ஐ தீர்க்கப் பயன்படுகிறது. மீண்டும், எடுத்துக்காட்டாக, நாங்கள் ஒரு TruthTableOracle உதாரணத்தை உருவாக்குகிறோம், அங்கு கட்டுமானம் வேறு வடிவத்தைக் காட்டுகிறது."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:378
msgid "As shown, the truthtable is specified with three length-8 bitstrings, each containing the values of all entries for a particular output column in the table. Each bitstring has length :math:`8`, so the truthtable has :math:`3` input bits; There are :math:`3` bitstrings, so the truthtable has :math:`3` output bits."
msgstr "காட்டப்பட்டுள்ளபடி, உண்மை அட்டவனை மூன்று நீளம் -8 பிட்ஸ்ட்ரிங்ஸுடன் குறிப்பிடப்பட்டுள்ளது, ஒவ்வொன்றும் அட்டவணையில் ஒரு குறிப்பிட்ட வெளியீட்டு நெடுவரிசைக்கான அனைத்து உள்ளீடுகளின் மதிப்புகளைக் கொண்டுள்ளது. ஒவ்வொரு பிட்ஸ்ட்ரிங்கிற்கும் நீளம் உள்ளது :math:`8`, எனவே உண்மை அட்டவனையில் :math:`3` உள்ளீட்டு பிட்கள்; உள்ளன :math:`3` பிட்ஸ்ட்ரிங்ஸ், எனவே உண்மையுள்ளவர் :math:`3` வெளியீட்டு பிட்கள்."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:380
msgid "The function :math:`f` represented by the truthtable is promised to be either 1-to-1 or 2-to-1. Our goal is to determine which. For the case of 2-to-1, we also need to compute the mask :math:`\\mathbf{s}`, which satisfies :math:`\\forall \\mathbf{x},\\mathbf{y}`: :math:`\\mathbf{x} \\oplus \\mathbf{y} = \\mathbf{s}` iff :math:`f(\\mathbf{x}) = f(\\mathbf{y})`. Apparently, if :math:`f` is 1-to-1, the corresponding mask :math:`\\mathbf{s} = \\mathbf{0}`."
msgstr "உண்மை அட்டவணையில் குறிப்பிடப்படும் :math:`f` செயல்பாடு 1-to-1 வரை அல்லது 2-to-1 என உறுதியளிக்கப்படுகிறது. எது என்பதை தீர்மானிப்பதே எங்கள் குறிக்கோள். 2-to-1 ஐப் பொறுத்தவரை, முகமூடியையும் கணக்கிட வேண்டும் :math:`\\mathbf{s}`, which satisfies :math:`\\forall \\mathbf{x},\\mathbf{y}`: :math:`\\mathbf{x} \\oplus \\mathbf{y} = \\mathbf{s}` iff :math:`f(\\mathbf{x}) = f(\\mathbf{y})`. வெளிப்படையாக, :math:`f` 1-to-1 வரை இருந்தால், அதனுடன் தொடர்புடைய முகமூடி :math:`\\mathbf{s} = \\mathbf{0}`."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:382
msgid "Let us first compute the groundtruth mask :math:`\\mathbf{s}` classically:"
msgstr "முதலில் பாரம்பரியமாக அடிப்படை உண்மை முகமூடியைக் கணக்கிடுவோம்: :math:`\\mathbf{s}`:"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:468
msgid "We can also quickly try a truthtable that represents a 1-to-1 function (i.e., the corresponding mask is :math:`\\mathbf{0}`), as follows."
msgstr "1-to-1 செயல்பாட்டைக் குறிக்கும் ஒரு உண்மையை நாம் விரைவாக முயற்சி செய்யலாம் (அதாவது, தொடர்புடைய முகமூடி :math:`\\mathbf{0}`), பின்வருமாறு."

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:523
msgid "Shor’s Factoring algorithm"
msgstr "Shor’s காரணி வழிமுறை"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:525
msgid "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Shor.html>`__ is one of the most well-known quantum algorithms and finds the prime factors for input integer :math:`N` in polynomial time. The algorithm implementation in Qiskit is simply provided a target integer to be factored and run, as follows:"
msgstr "`Shor’s Factoring algorithm <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Shor.html>`__ என்பது மிகவும் அறியப்பட்ட குவாண்டம் வழிமுறைகளில் ஒன்றாகும் மற்றும் உள்ளீட்டு முழு எண் :math:`N` இன் பல்லுறுப்புக்கோவைக்கான பிரதான காரணிகளைக் காண்கிறது. Qiskit-ல் அல்காரிதம் செயல்படுத்தல் வெறுமனே பின்வருமாறு காரணி மற்றும் இயங்குவதற்கான இலக்கு முழு எண் வழங்கப்படுகிறது:"

#: ../../tutorials/algorithms/09_textbook_algorithms.ipynb:570
msgid "Note: this implementation of Shor’s algorithm uses :math:`4n + 2` qubits, where :math:`n` is the number of bits representing the integer in binary. So in practice, for now, this implementation is restricted to factorizing small integers. Given the above value of N we compute :math:`4n +2` below and confirm the size from the actual circuit."
msgstr "குறிப்பு: ஷோரின் வழிமுறையின் இந்த செயல்படுத்தல் பின்வருமாறு :math:`4n + 2` qubits, இங்கே :math:`n` என்பது பைனரியில் உள்ள முழு எண்ணைக் குறிக்கும் பிட்களின் எண்ணிக்கை. எனவே நடைமுறையில், இப்போதைக்கு, இந்த செயல்படுத்தல் சிறிய முழு எண்களைக் காரணியாக்குவதற்கு மட்டுப்படுத்தப்பட்டுள்ளது. மேலே உள்ள N இன் மதிப்பைக் கணக்கிடுகிறோம் :math:`4n +2` கீழே மற்றும் உண்மையான சர்க்யூட்டிலிருந்து அளவை உறுதிப்படுத்தவும்."

