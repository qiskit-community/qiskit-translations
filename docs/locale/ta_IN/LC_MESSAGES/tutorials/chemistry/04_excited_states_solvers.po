msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 15:32+0000\n"
"PO-Revision-Date: 2021-04-02 16:36\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/chemistry/04_excited_states_solvers.po\n"
"X-Crowdin-File-ID: 9406\n"
"Language: ta_IN\n"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:10
msgid "This page was generated from `tutorials/chemistry/04_excited_states_solvers.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/chemistry/04_excited_states_solvers.ipynb`__ இல் இருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/04_excited_states_solvers.ipynb>`_."
msgstr "ஊடாடும் வகையில் `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/04_excited_states_solvers.ipynb>`_ இயக்கவும்."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:9
msgid "Excited states solvers"
msgstr "கிளர்வுற்ற நிலை தீர்வுகள்"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:21
msgid "Introduction"
msgstr "முன்னுரை"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:23
msgid "|0eddd5758be64566a4986793efb73478|"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the excited states calculation interface of Qiskit Chemistry. The goal is to compute the excited states of a molecular Hamiltonian. This Hamiltonian can be electronic or vibronic. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibronic structure tutorials."
msgstr "இந்த பயிற்சியில் Qiskit வேதியியலின் கிளர்வுற்ற நிலைகளின் கணக்கீட்டு இடைமுகத்தைப் பற்றி விவாதிக்க உள்ளோம். ஒரு மூலக்கூறு ஹாமில்டோனியனின் கிளர்வுற்ற நிலைகளைக் கணக்கிடுவதே குறிக்கோள். இந்த ஹாமில்டோனியன் மின்னணு அல்லது வைப்ரோனிக் ஆகவும் இருக்கலாம். ஹாமில்டோனியனைத் தயாரிப்பது பற்றி மேலும் அறிய, மின்னணு அமைப்பு மற்றும் வைப்ரோனிக் கட்டமைப்பு பயிற்சிகளைப் பாருங்கள்."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "முதல் படியானது மூலக்கூறு அமைப்பை வரையறுப்பது. பின்வருவனவற்றில் ஒரு ஹைட்ரஜன் மூலக்கூறின் மின்னணு பகுதியைக் கேட்கிறோம்."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:80
msgid "The Solver"
msgstr "தீர்வி"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:82
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr "நாம் ஒரு தீர்வியை வரையறுக்க வேண்டும். தீர்வி என்பது அடி நிலை கணக்கிடப்படும் வழிமுறையாகும்."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:84
msgid "Let’s first start with a purely classical example: the NumPy eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badely, it can be used on small systems to check the results of the quantum algorithms. Here, we are only interested to look at eigenstates with a given number of particle. To compute only those states a filter function can be passed to the NumPy eigensolver. A default filter function is already implemented in Qiskit and can be used in this way:"
msgstr "முதலில் முற்றிலும் சிறந்த எடுத்துக்காட்டுடன் ஆரம்பிக்கலாம்: NumPy eigensolver. இந்த வழிமுறை சரியாக ஹாமில்டோனியனை குறுக்காகக் கொண்டுள்ளது. இது அளவுகோலாக இருந்தாலும், குவாண்டம் வழிமுறைகளின் முடிவுகளை சரிபார்க்க சிறிய கணினிகளில் இதைப் பயன்படுத்தலாம். இங்கே, ஒரு குறிப்பிட்ட எண்ணிக்கையிலான துகள்களுடன் eigenstate-களைப் பார்க்க மட்டுமே நாங்கள் ஆர்வமாக உள்ளோம். அந்த நிலைகளை மட்டுமே கணக்கிட ஒரு வடிகட்டி செயல்பாட்டை NumPy eigensolver க்கு அனுப்ப முடியும். இயல்புநிலை வடிகட்டி செயல்பாடு ஏற்கனவே Qiskit-ல் செயல்படுத்தப்பட்டுள்ளது, இதை இந்த வழியில் பயன்படுத்தலாம்:"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:107
msgid "The excitation energies can also be accessed with the qEOM algorithm [arXiv preprint arXiv:1910.12890 (2019)]. The EOM method finds the excitation energies (differences in energy between the ground state and all :math:`n`\\ th excited states) by solving the following pseudo-eigenvalue problem."
msgstr "கிளர்வுற்ற ஆற்றல்களை qEOM வழிமுறை [arXiv preprint arXiv: 1910.12890 (2019)] உடன் அணுகலாம். பின்வரும் pseudo-eigenvalue சிக்கலைத் தீர்ப்பதன் மூலம் கிளர்வுற்ற ஆற்றல்களை (அடி நிலைக்கும் எல்லாவற்றிற்கும் இடையிலான ஆற்றலில் உள்ள வேறுபாடுகள் :math: `n`\\ th கிளர்வுற்ற நிலைகள்) EOM முறை காண்கிறது."

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:109
msgid "\\begin{pmatrix}\n"
"    \\text{M} & \\text{Q}\\\\\n"
"    \\text{Q*} & \\text{M*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}\n"
"= E_{0n}\n"
"\\begin{pmatrix}\n"
"    \\text{V} & \\text{W}\\\\\n"
"    -\\text{W*} & -\\text{V*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:130
msgid "with"
msgstr "உடன்"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:132
msgid "M_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger},\\hat{\\text{H}}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:137
msgid "Q_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{H}}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:142
msgid "V_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:147
msgid "W_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_\\alpha}^{(\\alpha)})^{\\dagger}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr ""

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:152
msgid "Although the previous equation can be solved classically, each matrix element must be measured on the quantum computer with the corresponding ground state. To use the qEOM as a solver in Qiskit, we have to define a ground state calculation first, explaining the algorithms how to find the ground state. With this the qEOM solver can be initialized:"
msgstr "முந்தைய சமன்பாட்டை சிறப்பாக தீர்க்க முடியும் என்றாலும், ஒவ்வொரு மேட்ரிக்ஸ் உறுப்புகளும் குவாண்டம் கணினியில் அதனுடன் தொடர்புடைய அடி நிலையுடன் அளவிடப்பட வேண்டும். Qiskit-ல் qEOM-ஐ ஒரு தீர்வாகப் பயன்படுத்த, நாம் முதலில் ஒரு அடி நிலைக் கணக்கீட்டை வரையறுக்க வேண்டும், இது அடி நிலையை எவ்வாறு கண்டுபிடிப்பது என்பதற்கான வழிமுறைகளை விளக்குகிறது. இதன் மூலம் qEOM தீர்வி துவக்கப்படலாம்:"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:187
msgid "The calculation and results"
msgstr "கணக்கீடு மற்றும் முடிவுகள்"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:189
msgid "The results are computed and printed"
msgstr "முடிவுகள் கணக்கிடப்பட்டு அச்சிடப்படுகின்றன"

#: ../../tutorials/chemistry/04_excited_states_solvers.ipynb:420
msgid "One can see from these results that one state is missing from the NumPy results. The reason for this is because the spin is also used as a filter and only singlet states are shown. In the following we use a custom filter function to check consistently our results and only filter out states with incorrect number of particle (in this case the number of particle is 2)."
msgstr "இந்த முடிவுகளிலிருந்து ஒரு நிலையை NumPy முடிவுகளில் காணவில்லை என்பதை ஒருவர் காணலாம். இதற்குக் காரணம், சுழல் ஒரு வடிப்பானாகவும் பயன்படுத்தப்படுகிறது மற்றும் ஒற்றை நிலைகள் மட்டுமே காட்டப்படுகின்றன. பின்வருவனவற்றில் எங்கள் முடிவுகளை தொடர்ச்சியாக சரிபார்க்க தனிப்பயன் வடிகட்டி செயல்பாட்டைப் பயன்படுத்துகிறோம் மற்றும் தவறான எண்ணிக்கையிலான துகள்களைக் கொண்ட நிலைகளை மட்டுமே வடிகட்டுகிறோம் (இந்த விஷயத்தில் துகள்களின் எண்ணிக்கை 2)."

