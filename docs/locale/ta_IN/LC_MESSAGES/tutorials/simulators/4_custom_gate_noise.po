msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 01:12+0000\n"
"PO-Revision-Date: 2021-04-22 19:43\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"
"Language: ta_IN\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/simulators/4_custom_gate_noise.ipynb`__ இலிருந்து உருவாக்கப்பட்டது.பயிற்சிகள்."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/4_custom_gate_noise.ipynb>`_."
msgstr "`IBM குவாண்டம் ஆய்வகத்தில் <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/4_custom_gate_noise.ipynb>` _."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "தனிப்பயன் ஒற்றுமை வாயில்களுக்கு சத்தம் பயன்படுத்துதல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "முன்னுரை"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "இந்த நோட்புக் ஒரு குவாண்டம் சுற்றுக்கு தனிப்பயன் ஒற்றுமை வாயில்களை எவ்வாறு சேர்ப்பது என்பதைக் காட்டுகிறது, மேலும் அவற்றை Qiskit ஏரில் சத்தம் உருவகப்படுத்துதல்களுக்குப் பயன்படுத்தலாம்."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:51
msgid "Creating matrix operators"
msgstr "மேட்ரிக்ஸ் ஆபரேட்டர்களை உருவாக்குதல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:53
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:55
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "ஒரு CNOT கேட் மற்றும் iSWAP கேட் ஆகியவற்றிற்காக கீழே இரண்டு ஆபரேட்டர்களை உருவாக்கலாம்:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:57
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:101
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:113
msgid "Using operators in circuits"
msgstr "சுற்றுகளில் ஆபரேட்டர்களைப் பயன்படுத்துதல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:115
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:177
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "யூனிட்டரி செருகப்படும்போது `` \"iswap\" `` இன் விருப்பமான * லேபிளை * ஒதுக்கியுள்ளோம் என்பதை நினைவில் கொள்க. Qiskit ஏர் `` NoiseModel`` இந்த ஒற்றுமையை அடையாளம் காண இது நம்மை அனுமதிக்கிறது, இதன்மூலம் சத்தமில்லாத சுற்று உருவகப்படுத்துதல்களில் இந்த தனிப்பயன் ஒற்றுமை வாயில்களில் பிழைகளைச் சேர்க்கலாம்."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:188
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "இந்த சுற்று சுற்றுக்கான சிமுலேட்டராக ``Operator`` வகுப்பைப் பயன்படுத்தி சரியான வெளியீட்டை அளிக்கிறது என்பதை நாங்கள் உறுதிப்படுத்த முடியும்:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:238
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "வெளியீடு சரியானது என்பதை உறுதிப்படுத்த, சராசரி வாயில் நம்பகத்தன்மையை நாம் கணக்கிடலாம்:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:280
msgid "Creating a custom unitary in a noise model"
msgstr "இரைச்சல் மாதிரியில் தனிப்பயன் ஒற்றுமையை உருவாக்குதல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:282
msgid "The Qiskit Aer ``AerSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "Qiskit ஏர் ``AerSimulator`` தன்னிச்சையான ஒற்றையாட்சி ஆபரேட்டர்களை உருவகப்படுத்துவதை ஆதரிக்கிறது."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:323
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "``QuantumCircuit.unitary`` இன் விருப்பமான `` label`` வாதத்தைப் பயன்படுத்தி அடையாளம் காணும்போது, ​​எங்கள் உருவகப்படுத்துதலில் தன்னிச்சையான யூனிடரிகளுக்கு சத்தம் மாதிரிகள் சேர்க்க இது நம்மை அனுமதிக்கிறது."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:325
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:357
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "`` \"iswap\" போன்ற தனிப்பயன் லேபிளில் பிழையைச் சேர்க்கும்போது, ​​`` NoiseModel`` இந்த லேபிள் எந்த வாயிலுக்குப் பொருந்தும் என்று தெரியவில்லை, எனவே நாம் விரும்பிய கேட் சரத்தை கைமுறையாக சேர்க்க வேண்டும் சத்தம் மாதிரி ``basis_gates``. இரைச்சல் மாதிரி உருவகப்படுத்துதலுக்கான சரியான அடிப்படை வாயில்களுக்கு கம்பைலர் அவிழும் என்பதை இது உறுதி செய்கிறது. `` NoiseModel.add_basis_gates`` செயல்பாட்டைப் பயன்படுத்தி இதைச் செய்யலாம்:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:398
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``AerSimulator`` basis gates that are added to the noise model."
msgstr "இயல்பாகவே ஒரு சத்தம் மாதிரியின் அடிப்படை வாயில்கள் `` ['cx', 'id', 'u3'] `` மற்றும் சத்தம் மாதிரியில் சேர்க்கப்படும் எந்தவொரு நிலையான ``AerSimulator`` அடிப்படை வாயில்கள்."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:410
msgid "Simulating a custom unitary noise model"
msgstr "தனிப்பயன் ஒற்றுமை இரைச்சல் மாதிரியை உருவகப்படுத்துதல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:421
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``AerSimulator`` both for the ideal and noisy case:"
msgstr "முதலில் எங்கள் முந்தைய சிஎக்ஸ் சுற்று எடுத்து, ஒரு ஆரம்ப ஹடாமார்ட் கேட் மற்றும் இறுதி அளவீட்டைச் சேர்ப்போம், பெல்-ஸ்டேட் தயாரிப்பு சுற்று ஒன்றை உருவாக்கலாம், இது சிறந்த மற்றும் சத்தமில்லாத வழக்குக்கு ``AerSimulator`` சிமுலேட்டராக இருக்கலாம்:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:479
msgid "Ideal output"
msgstr "சிறந்த வெளியீடு"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:481
msgid "Let’s first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "முதலில் சிறந்த வெளியீட்டைப் பார்ப்போம். இது ஒரு பெல்-நிலையை உருவாக்குவதால், 00 மற்றும் 11 க்கு இரண்டு சிகரங்களை எதிர்பார்க்கிறோம்."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:519
msgid "Noisy circuit execution"
msgstr "சத்தம் சுற்று செயல்படுத்தல்"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:521
msgid "Finally, let’s now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "இறுதியாக, இப்போது அதை எங்கள் தனிப்பயன் இரைச்சல் மாதிரியுடன் உருவகப்படுத்தலாம். இரண்டு-குவிட் வாயில்களில் ஒரு சிறிய வீச்சு தணிக்கும் பிழை இருப்பதால், 01 மற்றும் 10 விளைவு நிகழ்தகவுகளுக்கு சிறிய கூடுதல் சிகரங்களை எதிர்பார்க்கிறோம்."

