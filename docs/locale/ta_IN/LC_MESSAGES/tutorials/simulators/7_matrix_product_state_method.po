msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-24 10:41+0000\n"
"PO-Revision-Date: 2022-11-24 11:28\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/7_matrix_product_state_method.po\n"
"X-Crowdin-File-ID: 9172\n"
"Language: ta_IN\n"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:10
msgid "This page was generated from `tutorials/simulators/7_matrix_product_state_method.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/simulators/7_matrix_product_state_method.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:9
#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:26
msgid "Matrix product state simulation method"
msgstr "மேட்ரிக்ஸ் ப்ராடக்ட் ஸ்டேட் சிமுலேஷன் முறை"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Simulation methods"
msgstr "சிமுலேஷன் முறைகள்"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:14
msgid "The ``AerSimulator`` has several simulation methods including ``statevector``, ``stabilizer``, ``extended_stabilizer`` and ``matrix_product_state``. Each of these determines the internal representation of the quantum circuit and the algorithms used to process the quantum operations. They each have advantages and disadvantages, and choosing the best method is a matter of investigation. In this tutorial, we focus on the ``matrix product state simulation method``."
msgstr "``AerSimulator`` -ல் பல சிமுலேஷன் முறைகள் உள்ளன ``statevector``, ``stabilizer``, ``extended_stabilizer`` மற்றும் ``matrix_product_state`` உட்பட. இவை ஒவ்வொன்றும் குவாண்டம் சர்க்யூட்களின் உள் பிரதிநிதித்துவத்தையும், குவாண்டம் செயல்பாடுகளை செயலாக்கப் பயன்படுத்தப்படும் வழிமுறைகளையும் தீர்மானிக்கிறது. அவை ஒவ்வொன்றும் நன்மைகள் மற்றும் தீமைகள் உள்ளன, மேலும் சிறந்த முறையைத் தேர்ந்தெடுப்பது விசாரணைக்குரிய விஷயம். இந்த டுடோரியலில், ``matrix product state simulation method`` இல் கவனம் செலுத்துகிறோம்."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:28
msgid "This simulation method is based on the concept of ``matrix product states``. This structure was initially proposed in the paper *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. There are additional papers that describe the structure in more detail, for example *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."
msgstr "இந்த சிமுலேஷன் முறை ``matrix product states`` என்ற கருத்தை அடிப்படையாகக் கொண்டது. இந்த அமைப்பு ஆரம்பத்தில் இந்த ஆய்வில் முன்மொழியப்பட்டது *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. கட்டமைப்பை இன்னும் விரிவாக விவரிக்கும் கூடுதல் ஆவணங்கள் இங்கு உள்ளன, எடுத்துக்காட்டாக *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:39
msgid "A pure quantum state is usually described as a state vector, by the expression :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."
msgstr "ஒரு தூய்மையான குவாண்டம் நிலை பொதுவாக ஒரு ஸ்டேட் வெக்டர் ஆக விவரிக்கப்படுகிறது :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:41
msgid "The state vector representation implies an exponential size representation, regardless of the actual circuit. Every quantum gate operating on this representation requires exponential time and memory."
msgstr "ஸ்டேட் வெக்டர் பிரதிநிதித்துவம் உண்மையான சர்க்யூட்களைப் பொருட்படுத்தாமல் ஒரு அதிவேக அளவு பிரதிநிதித்துவத்தைக் குறிக்கிறது. இந்த பிரதிநிதித்துவத்தில் இயங்கும் ஒவ்வொரு குவாண்டம் கேட்டுக்கும் அதிவேக நேரம் மற்றும் நினைவகம் தேவைப்படுகிறது."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:43
msgid "The matrix product state (MPS) representation offers a local representation, in the form: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, such that all the information contained in the :math:`c_{i_1 \\ldots i_n}`, can be generated out of the MPS representation."
msgstr "மேட்ரிக்ஸ் ப்ராடக்ட் நிலை (MPS) பிரதிநிதித்துவம் ஒரு உள்ளூர் பிரதிநிதித்துவத்தை வழங்குகிறது, இந்த வடிவத்தில் :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, அதுபோல் :math:`c_{i_1 \\ldots i_n}` இல் உள்ள அனைத்து தகவல்களும் MPS பிரதிநிதித்துவத்திலிருந்து உருவாக்கப்படலாம்."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:54
msgid "Every :math:`\\Gamma^{[i]}` is a tensor of complex numbers that represents qubit :math:`i`. Every :math:`\\lambda^{[i]}` is a matrix of real numbers that is used to normalize the amplitudes of qubits :math:`i` and :math:`i+1`. Single-qubit gates operate only on the relevant tensor."
msgstr "ஒவ்வொரு :math:`\\Gamma^{[i]}` என்பது சிக்கலான எண்களின் டென்சார் ஆகும், இது :math:`i` கியூபிட்டைக் குறிக்கும். ஒவ்வொரு :math:`\\lambda^{[i]}` என்பது உண்மையான எண்களின் மேட்ரிக்ஸ், இது :math:`i` மற்றும் :math:`i+1` கியூபிட்களின் வீச்சுகளை இயல்பாக்குவதற்குப் பயன்படுகிறது. ஒற்றை-கியூபிட் கேட்கள் தொடர்புடைய டென்சாரில் மட்டுமே இயங்குகின்றன."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:56
msgid "Two-qubit gates operate on consecutive qubits :math:`i` and :math:`i+1`. This involves a tensor-contract operation over :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` and :math:`\\lambda^{[i+1]}`, that creates a single tensor. We apply the gate to this tensor, and then decompose back to the original structure. This operation may increase the size of the respective tensors. Gates that involve two qubits that are not consecutive, require a series of swap gates to bring the two qubits next to each other and then the reverse swaps."
msgstr "இரண்டு-கியூபிட் கேட்கள் தொடர்ச்சியான கியூபிட்களில் இயங்குகின்றன :math:`i` மற்றும் :math:`i+1`. இது ஒரு டென்சார்-ஒப்பந்த செயல்பாட்டை உள்ளடக்கியது :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` மற்றும் :math:`\\lambda^{[i+1]}`, இது ஒற்றை டென்சாரை உருவாக்குகிறது. இந்த டென்சாருக்கு நாங்கள் கேட்டைப் பயன்படுத்துகிறோம், பின்னர் அசல் கட்டமைப்பிற்கு சிதைக்கிறோம். இந்த செயல்பாடு அந்தந்த டென்சார்களின் அளவை அதிகரிக்கக்கூடும். தொடர்ச்சியாக இல்லாத இரண்டு கியூபிட்களை உள்ளடக்கிய கேட்கள், இரண்டு கியூபிட்களையும் ஒருவருக்கொருவர் கொண்டு வர தொடர்ச்சியான இடமாற்று கேட்கள் தேவை, பின்னர் தலைகீழ் இடமாற்றங்கள்."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:59
msgid "In the worst case, the tensors may grow exponentially. However, the size of the overall structure remains ‘small’ for circuits that do not have ‘many’ two-qubit gates. This allows much more efficient operations in circuits with relatively ‘low’ entanglement. Characterizing when to use this method over other methods is a subject of current research."
msgstr "மோசமான நிலையில், டென்சார்கள் அதிவேகமாக வளரக்கூடும். இருப்பினும், ஒட்டுமொத்த கட்டமைப்பின் அளவு ‘பல’ இரண்டு-கியூபிட் கேட்கள் இல்லாத சர்க்யூட்களுக்கு ‘சிறியதாக’ உள்ளது. இது ஒப்பீட்டளவில் ‘குறைந்த’ என்டாங்கில்மென்ட்டுடன் சர்க்யூட்களில் மிகவும் திறமையான செயல்பாடுகளை அனுமதிக்கிறது. மற்ற முறைகளில் இந்த முறையை எப்போது பயன்படுத்த வேண்டும் என்பதைக் குறிப்பிடுவது தற்போதைய ஆராய்ச்சியின் ஒரு விடயமாகும்."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:71
msgid "Using the matrix product state simulation method"
msgstr "மேட்ரிக்ஸ் ப்ரோடக்ட் நிலை சிமுலஷன் முறையைப் பயன்படுத்துதல்"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:73
msgid "The matrix product state simulation method is invoked in the ``AerSimulator`` by setting the simulation method. Other than that, all operations are controlled by the ``AerSimulator`` itself, as in the following example:"
msgstr "சிமுலேஷன் முறையை அமைப்பதன் மூலம் மேட்ரிக்ஸ் ப்ரோடக்ட் நிலை சிமுலேஷன் முறை ``AerSimulator`` பயன்படுத்தப்படுகிறது. இது தவிர, அனைத்து செயல்பாடுகளும் பின்வரும் எடுத்துக்காட்டில் உள்ளதைப் போலவே ``AerSimulator`` கட்டுப்படுத்தப்படுகின்றன:"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:138
msgid "To see the internal state vector of the circuit we can use the ``save_statevector`` instruction. To return the full internal MPS structure we can also use the ``save_matrix_product_state`` instruction."
msgstr "சர்க்யூட்களின் உள் ஸ்டேட் வெக்டரைக் காண நாம் ``save_statevector`` அறிவுறுத்தலைப் பயன்படுத்தலாம். முழு ஒருங்கிணைந்த MPS கட்டமைப்பைத் திருப்பித் தர நாம் ``save_matrix_product_state`` அறிவுறுத்தலையும் பயன்படுத்தலாம்."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:220
msgid "Running circuits using the matrix product state simulation method can be fast, relative to other methods. However, if we generate the state vector during the execution, then the conversion to state vector is, of course, exponential in memory and time, and therefore we don’t benefit from using this method. We can benefit if we only do operations that don’t require printing the full state vector. For example, if we run a circuit and then take measurement. The circuit below has 200 qubits. We create an ``EPR state`` involving all these qubits. Although this state is highly entangled, it is handled well by the matrix product state method, because there are effectively only two states."
msgstr "மேட்ரிக்ஸ் ப்ரோடக்ட் நிலை சிமுலேஷன் முறையைப் பயன்படுத்தி சர்க்யூட்களை இயக்குவது மற்ற முறைகளுடன் ஒப்பிடும்போது வேகமாக இருக்கும். எவ்வாறாயினும், செயல்படுத்தும் போது நாம் ஸ்டேட் வெக்டரை உருவாக்கினால், ஸ்டேட் வெக்டருக்கான மாற்றம் நிச்சயமாக நினைவகத்திலும் நேரத்திலும் அதிவேகமானது, எனவே இந்த முறையைப் பயன்படுத்துவதால் நாம் பயனடைய மாட்டோம். முழு ஸ்டேட் வெக்டரை அச்சிடத் தேவையில்லாத செயல்பாடுகளை மட்டுமே செய்தால் நாம் பயனடையலாம். உதாரணமாக, நாம் ஒரு சர்க்யூட் இயக்கி பின்னர் அளவீடு எடுத்தால். கீழே உள்ள சர்க்யூட் 200 கியூபிட்களைக் கொண்டுள்ளது. இந்த வினாக்கள் அனைத்தையும் உள்ளடக்கிய ஒரு ``EPR state`` ஐ உருவாக்குகிறோம். இந்த நிலை மிகவும் என்டாங்கில்டாக இருந்தாலும், மேட்ரிக்ஸ் ப்ரோடக்ட் நிலை முறையால் இது நன்கு கையாளப்படுகிறது, ஏனெனில் திறம்பட இரண்டு நிலைகள் மட்டுமே உள்ளன."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:223
msgid "We can handle more qubits than this, but execution may take a few minutes. Try running a similar circuit with 500 qubits! Or maybe even 1000 (you can get a cup of coffee while waiting)."
msgstr "இதை விட அதிகமான வினாடிகளை நாம் கையாள முடியும், ஆனால் செயல்படுத்த சில நிமிடங்கள் ஆகலாம். இதேபோன்ற 500 கியூபிட்களுடன் உள்ள சர்க்யூட்டை இயக்க முயற்சிக்கவும்! அல்லது 1000 கூட இருக்கலாம் (காத்திருக்கும்போது ஒரு கப் காபி பெறலாம்)."

