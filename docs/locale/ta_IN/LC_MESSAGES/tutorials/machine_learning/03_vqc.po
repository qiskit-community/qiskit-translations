msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 00:19+0000\n"
"PO-Revision-Date: 2021-04-26 07:39\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/machine_learning/03_vqc.po\n"
"X-Crowdin-File-ID: 9468\n"
"Language: ta_IN\n"

#: ../../tutorials/machine_learning/03_vqc.ipynb:10
msgid "This page was generated from `tutorials/machine_learning/03_vqc.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/machine_learning/03_vqc.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/machine_learning/03_vqc.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_."
msgstr "`IBM Quantum ஆய்வகத்தில்<https://quantum-computing.ibm.com/jupyter/tutorial/machine_learning/03_vqc.ipynb>`_ இல் ஊடாடும் வகையில் இயக்கவும்."

#: ../../tutorials/machine_learning/03_vqc.ipynb:9
msgid "Variational Quantum Classifier (VQC)"
msgstr "விரிவான Quantum Classifier (VQC)"

#: ../../tutorials/machine_learning/03_vqc.ipynb:11
msgid "The QSVM notebook demonstrated a kernel based approach. This notebook shows a variational method using the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm."
msgstr "QSVM notebook ஒரு கெர்னல் சார்ந்த அணுகல் தெரிவித்தது. இந்த நூல் `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>` __ வழிமுறையைப் பயன்படுத்தி ஒரு வேற்றுமை முறையை காட்டுகிறது."

#: ../../tutorials/machine_learning/03_vqc.ipynb:13
msgid "For further information see also the following reference, as given in the QSVM notebook, that also describes this approach: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"
msgstr "மேலும் தகவல்களுக்கு, QSVM குறிப்பு புத்தகத்தில் கொடுக்கப்பட்ட பின்வரும் குறிப்புகளையும் பார்க்கவும், அத்துடன் இந்த அணுகுதலையும் விளக்குகிறது: “Supervised learning with quantum enhanced feature spaces,” `arXiv: 1804.11326 <https://arxiv.org/pdf/1804.11326.pdf>`__"

#: ../../tutorials/machine_learning/03_vqc.ipynb:44
msgid "As per the QSVM notebook again we will use the ad hoc dataset as described in the above referenced paper. From the dataset we take samples for use as training, testing and the final prediction (datapoints)."
msgstr "QSVM நூலின் படி, மேலே குறிப்பிடப்பட்ட தாளில் விவரிக்கப்பட்டுள்ளபடி ஆட் ஹாக் தரவுத்தொகுப்பைப் பயன்படுத்துவோம். தரவுத்தொகுப்பிலிருந்து பயிற்சி, சோதனை மற்றும் இறுதி முன்கணிப்பு (தரவு புள்ளிகள்) என பயன்படுத்த மாதிரிகளை எடுத்துக்கொள்கிறோம்."

#: ../../tutorials/machine_learning/03_vqc.ipynb:105
msgid "With the dataset ready we can setup the `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ algorithm to do a classification. We use the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ data encoding circuit from the Qiskit circuit library, like we did with QSVM. But this is a variational algorithm so we need a variational form, i.e. parameterized circuit, whose parameters can be varied by an optimizer when computing VQC’s cost function. For this we choose `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ from the Qiskit circuit library. As the qasm_simulator has shot noise we choose to use `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ which is designed to perform under noisy conditions."
msgstr "தரவுத்தொகுப்பு தயாராக இருப்பதால், ஒரு வகைப்பாடு செய்ய `VQC <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQC.html>`__ வழிமுறையை அமைக்கலாம். QSVM உடன் நாங்கள் செய்ததைப் போலவே, Qiskit சர்க்யூட் நூலகத்திலிருந்து `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ தரவு குறியாக்க சர்க்யூட் பயன்படுத்துகிறோம். ஆனால் இது ஒரு மாறுபட்ட வழிமுறை, எனவே நமக்கு ஒரு மாறுபட்ட வடிவம் தேவை, அதாவது அளவுருவாக்கப்பட்ட சர்க்யூட், VQC-இன் செலவு செயல்பாட்டைக் கணக்கிடும்போது அதன் அளவுருக்கள் ஒரு தேர்வாளரால் மாறுபடும். இதற்காக Qiskit சர்க்யூட் நூலகத்திலிருந்து `TwoLocal <https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html>`__ ஐ தேர்வு செய்கிறோம். இங்கு qasm_simulator, சுற்றுகளின் சத்தத்தைக் கொண்டுள்ளதால் `SPSA <https://qiskit.org/documentation/stubs/qiskit.aqua.components.optimizers.SPSA.html>`__ ஐப் பயன்படுத்த நாங்கள் தேர்வு செய்கிறோம், இது சத்தமில்லாத சூழ்நிலையில் செயல்பட வடிவமைக்கப்பட்டுள்ளது."

#: ../../tutorials/machine_learning/03_vqc.ipynb:108
msgid "Here the BasicAer ``qasm_simulator`` is used with 1024 shots."
msgstr "இங்கு BasicAer ``qasm_ simulator`` 1024 சுற்றுகளுடன் பயன்படுகிறது."

#: ../../tutorials/machine_learning/03_vqc.ipynb:174
msgid "Now VQC, as well as QSVM, have ``train``, ``test`` and ``predict`` methods. The ``run`` method, as used above, will call these in turn based on whatever data was supplied to the algorithm. But the methods called directly to say train a model and then do predict. Since the vqc instance has already been trained, lets predict another set of sample datapoints by directly calling ``predict``."
msgstr "இப்போது VQC, மற்றும் QSVM, ` ` train ` ` மற்றும் ` ` predict` `. மேலே பயன்படுத்தப்பட்ட ` ` run ` ` வழிமுறை, இதை அடிப்படையாகக் கொடுத்தால், எந்த தகவல்களை அலாகரிதத்துக்கு கொடுக்கப்பட்டது. எனினும் நேரடியாக அழைக்கப்படும் வழிமுறைகள் ஒரு மாதிரியான ஒரு மாதிரிகளைத் தவிர்த்து அப்பொழுது புரிந்துகொள்ளும். Vqc உதாரணம் ஏற்கனவே பயிற்சி செய்யப்பட்டதால், நேரடியாக அழைப்பு ` ` predict ` `."

#: ../../tutorials/machine_learning/03_vqc.ipynb:228
msgid "Finally I will note that the Qiskit classifier algorithms can ``save_model`` after training and also ``load_model`` that had been previously saved."
msgstr "இறுதியாக, Qiskit வகைப்படுத்தி வழிமுறைகள் பயிற்சியின் பின்னர் `` save_model`` மற்றும் முன்னர் சேமிக்கப்பட்ட `` load_model`` ஆகியவற்றையும் செய்ய முடியும் என்பதை நான் கவனிக்கிறேன்."

