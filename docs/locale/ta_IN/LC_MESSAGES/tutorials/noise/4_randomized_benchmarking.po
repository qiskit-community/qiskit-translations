msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-06-26 12:09\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/4_randomized_benchmarking.po\n"
"X-Crowdin-File-ID: 9138\n"
"Language: ta_IN\n"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:10
msgid "This page was generated from `tutorials/noise/4_randomized_benchmarking.ipynb`__."
msgstr "இந்த பக்கம் `tutorials/noise/4_randomized_benchmarking.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/noise/4_randomized_benchmarking.ipynb>`_."
msgstr "ஊடாடும் வகையில் இயக்கவும் `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/noise/4_randomized_benchmarking.ipynb>`_."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:9
msgid "Randomized Benchmarking"
msgstr "சீரற்ற தரப்படுத்தல்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:12
msgid "Introduction"
msgstr "முன்னுரை"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:14
msgid "**Randomization benchmarking (RB)** is a well-known technique to measure average gate performance by running sequences of random Clifford gates that should return the qubits to the initial state. Qiskit Ignis has tools to generate one- and two-qubit Clifford gate sequences simultaneously."
msgstr "**Randomization benchmarking (RB)** என்பது சீரற்ற கிளிஃபோர்ட் வாயில்களின் காட்சிகளை இயக்குவதன் மூலம் சராசரி வாயில் செயல்திறனை அளவிடுவதற்கான ஒரு நன்கு அறியப்பட்ட நுட்பமாகும். Qiskit இக்னிஸ் ஒன்று மற்றும் இரண்டு-qubit கிளிஃபோர்ட் கேட் காட்சிகளை ஒரே நேரத்தில் உருவாக்கும் கருவிகளைக் கொண்டுள்ளது. "

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:16
msgid "This notebook gives an example for how to use the ``ignis.verification.randomized_benchmarking`` module. This particular example shows how to run 2-qubit randomized benchmarking (RB) simultaneous with 1-qubit RB. There are also examples on how to use some of the companion functions for predicting RB fidelity."
msgstr "``ignis.verification.randomized_benchmarking`` தொகுதியை எவ்வாறு பயன்படுத்துவது என்பதற்கு இந்த நோட்புக் ஒரு எடுத்துக்காட்டு அளிக்கிறது. இந்த குறிப்பிட்ட எடுத்துக்காட்டு 1-qubit RB உடன் ஒரே நேரத்தில் 2-qubit சீரற்ற தரப்படுத்தல் (RB) ஐ எவ்வாறு இயக்குவது என்பதைக் காட்டுகிறது. RB நம்பகத்தன்மையை கணிக்க சில துணை செயல்பாடுகளை எவ்வாறு பயன்படுத்துவது என்பதற்கான எடுத்துக்காட்டுகள் உள்ளன."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:49
msgid "1) Select the Parameters of the RB Run"
msgstr "1) RB இயக்கத்தின் அளவுருக்களைத் தேர்ந்தெடுக்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:51
msgid "First, we need to choose the following parameters:"
msgstr "முதலில், பின்வரும் அளவுருக்களை நாம் தேர்வு செய்ய வேண்டும்:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:53
msgid "**nseeds:** The number of seeds. For each seed you will get a separate list of output circuits in rb_circs."
msgstr "**nseeds:** விதைகளின் எண்ணிக்கை. ஒவ்வொரு விதைக்கும் நீங்கள் rb_circ களில் வெளியீட்டு சுற்று களின் தனி பட்டியலைப் பெறுவீர்கள்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:54
msgid "**length_vector:** The length vector of Clifford lengths. Must be in ascending order. RB sequences of increasing length grow on top of the previous sequences."
msgstr "**length_vector:** கிளிஃபோர்டு நீளங்களின் நீள திசையன். ஏறுவரிசையில் இருக்க வேண்டும். அதிகரிக்கும் நீளத்தின் RB வரிசைமுறைகள் முந்தைய வரிசைமுறைகளின் மேல் வளரும்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:55
msgid "**rb_pattern:** A list of the form [[i,j],[k],…] which will make simultaneous RB sequences where Qi,Qj are a 2-qubit RB sequence and Qk is a 1-qubit sequence, etc. The number of qubits is the sum of the entries. For ‘regular’ RB the qubit_pattern is just [[0]],[[0,1]]."
msgstr "**rb_pattern:** படிவத்தின் பட்டியல் [[i, j], [k],…] ஒரே நேரத்தில் RB வரிசைகளை உருவாக்கும், அங்கு Qi, Qj 2-க்யூபிட் RB வரிசை மற்றும் Qk 1-க்யூபிட் வரிசை, முதலியன. க்யூபிட்ஸ்களின் எண்ணிக்கை உள்ளீடுகளின் தொகை. ‘வழக்கமான’ RB க்கு, qubit_pattern என்பது வெறும் [[0]], [[0,1]]."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:56
msgid "**length_multiplier:** If this is an array it scales each rb_sequence by the multiplier."
msgstr "** length_multiplier: ** இது ஒரு வரிசை என்றால், அது ஒவ்வொரு rb_sequence - ஐ அடுத்து பெருக்கினால் அளவிடுகிறது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:57
msgid "**seed_offset:** What to start the seeds at (e.g. if we want to add more seeds later)."
msgstr "**seed_offset:** விதைகளை எதைத் தொடங்குவது (எ.கா. நாம் பின்னர் அதிக விதைகளைச் சேர்க்க விரும்பினால்)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:58
msgid "**align_cliffs:** If true adds a barrier across all qubits in rb_pattern after each set of cliffords."
msgstr "**align_cliffs:** உண்மை என்றால், ஒவ்வொரு கிளிஃபோர்டுகளுக்கும் பிறகு rb_pattern இல் உள்ள அனைத்து qubitகளிலும் ஒரு தடையை சேர்க்கிறது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:60
msgid "In this example we have 3 qubits Q0,Q1,Q2. We are running 2Q RB (on qubits Q0,Q2) and 1Q RB (on qubit Q1) simultaneously, where there are twice as many 1Q Clifford gates."
msgstr "இந்த எடுத்துக்காட்டில் Q3, Q1, Q2 என்ற 3 க்யூபிட்கள் உள்ளன. நாங்கள் ஒரே நேரத்தில் 2Q RB (க்யூபிட்ஸ் Q0, Q2 இல்) மற்றும் 1Q RB (க்யூபிட் Q1 இல்) ஆகியவற்றை இயக்குகிறோம், அங்கு 1Q கிளிஃபோர்ட் வாயில்கள் இரு மடங்கு அதிகம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:92
msgid "2) Generate the RB sequences"
msgstr "2) RB வரிசைகளை உருவாக்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:94
msgid "We generate RB sequences. We start with a small example (so it doesn’t take too long to run)."
msgstr "நாங்கள் RB காட்சிகளை உருவாக்குகிறோம். நாங்கள் ஒரு சிறிய எடுத்துக்காட்டுடன் தொடங்குகிறோம் (எனவே இயங்க அதிக நேரம் எடுக்காது)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:96
msgid "In order to generate the RB sequences **rb_circs**, which is a list of lists of quantum circuits, we run the function ``rb.randomized_benchmarking_seq``."
msgstr "குவாண்டம் சுற்றுகளின் பட்டியல்களின் பட்டியலான RB காட்சிகளை **rb_circs** உருவாக்க, ``rb.randomized_benchmarking_seq`` செயல்பாட்டை இயக்குகிறோம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:98
msgid "This function returns:"
msgstr "இந்த செயல்பாடு இவ்வாறு விடை தரும்:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:100
msgid "**rb_circs:** A list of lists of circuits for the rb sequences (separate list for each seed)."
msgstr "**rb_circs:** rb காட்சிகளுக்கான சுற்றுகளின் பட்டியல்களின் பட்டியல் (ஒவ்வொரு விதைக்கும் தனி பட்டியல்)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:101
msgid "**xdata:** The Clifford lengths (with multiplier if applicable)."
msgstr "**xdata:** கிளிஃபோர்ட் நீளம் (பொருந்தினால் பெருக்கத்துடன்)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:127
msgid "As an example, we print the circuit corresponding to the first RB sequence:"
msgstr "உதாரணமாக, முதல் RB வரிசைக்கு ஒத்த சுற்றுகளை அச்சிடுகிறோம்:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:218
msgid "Look at the Unitary for 1 Circuit"
msgstr "1 சுற்றுக்கான யூனிட்டரியைப் பாருங்கள்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:229
msgid "The Unitary representing each RB circuit should be the identity (with a global phase), since we multiply random Clifford elements, including a computed reversal gate. We simulate this using an Aer unitary simulator."
msgstr "ஒவ்வொரு RB சுற்றுகளையும் குறிக்கும் ஒற்றுமை அடையாளமாக இருக்க வேண்டும் (உலகளாவிய கட்டத்துடன்), ஏனெனில் நாம் கணக்கிடப்பட்ட தலைகீழ் வாயில் உட்பட சீரற்ற கிளிஃபோர்ட் கூறுகளை பெருக்குகிறோம். ஏர் யூனிட்டரி சிமுலேட்டரைப் பயன்படுத்தி இதை உருவகப்படுத்துகிறோம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:301
msgid "Define the noise model"
msgstr "இரைச்சல் மாதிரியை வரையறுக்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:312
msgid "We define a noise model for the simulator. To simulate decay, we add depolarizing error probabilities to the CNOT and U gates."
msgstr "ஒப்புருவாக்கிக்கான இரைச்சல் மாதிரியை நாங்கள் வரையறுக்கிறோம். சிதைவை உருவகப்படுத்த, CNOT மற்றும் U கேட்களில் depolarizing பிழை நிகழ்தகவுகளைச் சேர்க்கிறோம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:339
msgid "3) Execute the RB sequences on Aer simulator"
msgstr "3) ஏர் ஒப்புருவாக்கியில் RB காட்சிகளை இயக்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:341
msgid "We can execute the RB sequences either using a Qiskit Aer Simulator (with some noise model) or using an IBMQ provider, and obtain a list of results, ``result_list``."
msgstr "ஒரு Qiskit ஏர் ஒப்புருவாக்கியைப் பயன்படுத்தி (சில இரைச்சல் மாதிரியுடன்) அல்லது ஒரு IBMQ வழங்குநரைப் பயன்படுத்தி RB காட்சிகளை இயக்கலாம், மேலும் ``result_list`` முடிவுகளின் பட்டியலைப் பெறலாம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:415
msgid "4) Fit the RB results and calculate the gate fidelity"
msgstr "4) RB முடிவுகளைப் பொருத்தி, வாயில் நம்பகத்தன்மையைக் கணக்கிடுங்கள்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:418
msgid "Get statistics about the survival probabilities"
msgstr "உயிர்வாழும் நிகழ்தகவுகள் பற்றிய புள்ளிவிவரங்களைப் பெறுங்கள்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:420
msgid "The results in **result_list** should fit to an exponentially decaying function :math:`A \\cdot \\alpha ^ m + B`, where :math:`m` is the Clifford length."
msgstr "**result_list** இல் உள்ள முடிவுகள் அதிவேகமாக அழுகும் செயல்பாட்டிற்கு பொருந்த வேண்டும் :math:`A\\cdot\\alpha^m+B`, இதில் :math:`m` என்பது கிளிஃபோர்ட் நீளம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:422
msgid "From :math:`\\alpha` we can calculate the **Error per Clifford (EPC)**:"
msgstr ":math:`\\alpha` இல் இருந்து, நாம் **Error per Clifford (EPC)** ஐ கணக்கிடலாம்:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:424
msgid "EPC = \\frac{2^n-1}{2^n} (1-\\alpha)\n\n"
msgstr ""

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:426
msgid "(where :math:`n=nQ` is the number of qubits)."
msgstr "(அதில் :math:`n=nQ` என்பது qubitகளின் எண்ணிக்கை)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:449
msgid "Plot After 1 Seed"
msgstr "வரைதல் விதை 1-க்குப்பின்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:491
msgid "Plot with the Rest of the Seeds"
msgstr "மீதமுள்ள விதைகளுடன் வரைதல்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:493
msgid "The plot is being updated after each seed."
msgstr "ஒவ்வொரு விதைக்கும் பிறகு வரைதல் புதுப்பிக்கப்படுகிறது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:547
msgid "Add more shots to the data"
msgstr "தரவுக்கு கூடுதல் காட்சிகளைச் சேர்க்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:652
msgid "Predicted Gate Fidelity"
msgstr "கணிக்கப்பட்ட கேட் நம்பகத்தன்மை"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:663
msgid "From the known depolarizing errors on the simulation we can predict the **fidelity**. First we need to count the number of **gates per Clifford**."
msgstr "உருவகப்படுத்துதலில் அறியப்பட்ட டிப்போலரைசிங் பிழைகளிலிருந்து **நம்பகத்தன்மையை** கணிக்க முடியும். முதலில் நாம் **கிளிஃபோர்டுக்கு வாயில்களின்** எண்ணிக்கையை அறிய வேண்டும்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:665
msgid "The function **gates_per_clifford** takes a list of transpiled RB circuits and outputs the number of basis gates in each circuit."
msgstr "**gates_per_clifford** செயல்பாடு பரிமாற்றப்பட்ட RB சுற்றுகளின் பட்டியலை எடுத்து ஒவ்வொரு சுற்றிலும் அடிப்படை வாயில்களின் எண்ணிக்கையை வெளியிடுகிறது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:716
msgid "The function **calculate_2q_epc** gives measured errors in the basis gates that were used to construct the Clifford. It assumes that the error in the underlying gates is depolarizing. It outputs the error per a 2-qubit Clifford."
msgstr "**calculate_2q_epc** செயல்பாடு கிளிஃபோர்டை உருவாக்க பயன்படுத்தப்பட்ட அடிப்படை வாயில்களில் அளவிடப்பட்ட பிழைகளை வழங்குகிறது. அடிப்படை வாயில்களில் உள்ள பிழை நீக்கம் செய்யப்படுவதாக அது கருதுகிறது. இது 2-குவிட் கிளிஃபோர்டுக்கு பிழையை வெளியிடுகிறது."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:718
msgid "The input to this function is: - **gate_per_cliff:** dictionary of gate per Clifford. - **epg_2q:** EPG estimated by error model. - **qubit_pair:** index of two qubits to calculate EPC. - **list_epgs_1q:** list of single qubit EPGs of qubit listed in ``qubit_pair``. - **two_qubit_name:** name of two qubit gate in ``basis gates`` (default is ``cx``)."
msgstr "இந்த செயல்பாட்டிற்கான உள்ளீடு: - **gate_per_cliff:** கிளிஃபோர்டுக்கு வாயிலின் அகராதி. - **epg_2q:** EPG பிழை மாதிரியால் மதிப்பிடப்பட்டுள்ளது. - **qubit_pair:** EPC ஐக் கணக்கிட இரண்டு Qubitகளின் அட்டவணை. - **list_epgs_1q:** ``qubit_pair`` இல் பட்டியலிடப்பட்டுள்ள qubitடின் ஒற்றை qubit EPG களின் பட்டியல். -**two_qubit_name:** ``அடிப்படை வாயில்களில்`` இரண்டு qubit வாயிலின் பெயர் (இயல்புநிலை ``cx``)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:769
msgid "Run an RB Sequence with T1,T2 Errors"
msgstr "T1, T2 பிழைகள் கொண்ட RB வரிசையை இயக்கவும்"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:771
msgid "We now choose RB sequences that contain only 2-qubit Cliffords."
msgstr "2-qubit கிளிஃபோர்ட்ஸை மட்டுமே கொண்டிருக்கும் RB காட்சிகளை இப்போது தேர்வு செய்கிறோம்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:773
msgid "We execute these sequences as before, but with a noise model extended with T1/T2 thermal relaxation error, and fit the exponentially decaying curve."
msgstr "இந்த காட்சிகளை நாங்கள் முன்பு போலவே இயக்குகிறோம், ஆனால் T1/T2 வெப்ப தளர்வு பிழையுடன் நீட்டிக்கப்பட்ட சத்தம் மாதிரியுடன், அதிவேகமாக அழுகும் வளைவுக்கு பொருந்தும்."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:900
msgid "We count again the number of **gates per Clifford** as before, and calculate the **two-qubit Clifford gate error**, using the predicted primitive gate errors from the coherence limit."
msgstr "முன்பு போலவே கிளிஃபோர்டுக்கு **gates per Clifford** மீண்டும் எண்ணுகிறோம், மேலும் ஒத்திசைவு வரம்பிலிருந்து கணிக்கப்பட்ட பழமையான கேட் பிழைகளைப் பயன்படுத்தி **two-qubit Clifford gate error** கணக்கிடுகிறோம்."

