msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-05-09 12:18+0000\n"
"PO-Revision-Date: 2020-06-11 16:18\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/install.po\n"
"Language: ko_KR\n"

#: ../../install.rst:2
msgid "Installing Qiskit"
msgstr "키스킷 설치하기"

#: ../../install.rst:5
msgid "Requirements"
msgstr "요구 사항"

#: ../../install.rst:7
msgid "Qiskit supports Python 3.5 or later. However, both Python and Qiskit are evolving ecosystems, and sometimes when new releases occur in one or the other, there can be problems with compatibility."
msgstr "키스킷은 파이선 3.5나 이후 버전을 지원한다. 그러나 파이썬과 키스킷은 상호 진화하는 생태계를 이루기 때문에 때때로 어느 한쪽에서 새로운 버전이 출시되면, 호환성에 문제가 발생할 수도 있다."

#: ../../install.rst:11
msgid "If you're having trouble installing or using Qiskit after updating Python, check the `Qiskit Package metadata <https://pypi.org/project/qiskit/>`__ for **Programming Language** to see which specific versions of Python are supported."
msgstr "만약 파이썬을 업데이트 하고 나서 키스킷을 사용하거나 설치하는데 문제가 발생한다면, 특정한 버전의 파이쎤이 지원되는지 확인을 위해 **프로그래밍 언어**을 위한 `Qiskit Package metadata <https://pypi.org/project/qiskit/>`을 참조하라."

#: ../../install.rst:15
msgid "We recommend installing `Anaconda <https://www.anaconda.com/download/>`__, a cross-platform Python distribution for scientific computing. Jupyter, included in Anaconda, is recommended for interacting with Qiskit."
msgstr "과학 계산을 위해서 교차 사용이 가능한 파이썬 배포본인 `아나콘다 (Anaconda) <https://www.anaconda.com/download/>`를 설치하는 것을 추천한다. 아나콘다에 포함된 주피터(Jupyter) 패키지는 키스킷과 상호 작용하는 프로그래밍을 위해 사용되면 좋다."

#: ../../install.rst:19
msgid "Qiskit is tested and supported on the following 64-bit systems:"
msgstr "키스킷은 다음의 64비트 시스템들에서 실행되고 지원되는지 확인하였다."

#: ../../install.rst:21
msgid "Ubuntu 16.04 or later"
msgstr "우분투 16.04 혹은 최신 버전"

#: ../../install.rst:22
msgid "macOS 10.12.6 or later"
msgstr "맥오에스 (macOS) 10.12.6 혹은 최신 버전"

#: ../../install.rst:23
msgid "Windows 7 or later"
msgstr "윈도우 7 혹은 최신 버전"

#: ../../install.rst:26
msgid "Install"
msgstr "설치하기"

#: ../../install.rst:28
msgid "We recommend using Python virtual environments to cleanly separate Qiskit from other applications and improve your experience."
msgstr "키스킷을 다른 응용 프로그램과 분리해서 설치하고 사용자 경험을 증진시키기 위해서 파이썬을 가상 환경에 설치하는 것을 추천한다."

#: ../../install.rst:31
msgid "The simplest way to use environments is by using the ``conda`` command, included with Anaconda. A Conda environment allows you to specify a specific version of Python and set of libraries. Open a terminal window in the directory where you want to work."
msgstr "가상 환경을 사용하기 위한 가장 손쉬운 방법은 아나콘다(Anaconda) 에 포함되어 있는 ``conda`` 명령어를 사용하는 것이다. 콘다(Conda) 환경은 특정 버전의 파이썬이나 라이브러리 등을 선택할 수 있게 해준다. 작업하고자 하는 디렉토리에서 터미널 창을 연다."

#: ../../install.rst:36
msgid "Create a minimal environment with only Python installed in it."
msgstr "오직 파이썬만 설치한 최소한의 환경을 만드시오."

#: ../../install.rst:47
msgid "Or, if you're using Windows"
msgstr "또는, 만약 윈도우를 사용하고 있다면"

#: ../../install.rst:49
msgid "Install Anaconda"
msgstr "아나콘다를 설치하시오"

#: ../../install.rst:50
msgid "Search for Anaconda Prompt"
msgstr "아나콘다 프롬프트를 찾으시오."

#: ../../install.rst:51
msgid "Open Anaconda Prompt"
msgstr "아나콘다 프롬프트 열기"

#: ../../install.rst:53
msgid "Use the following commands"
msgstr "다음 명령어들을 사용 합니다."

#: ../../install.rst:63
msgid "Next, install the Qiskit package, which includes Terra, Aer, Ignis, and Aqua."
msgstr "다음으로 테라, 아르, 이그니스, 아쿠아를 포함하고 있는 키스킷 패키지를 설치합니다."

#: ../../install.rst:71
msgid "Starting with Qiskit 0.13.0 pip 19 or newer is needed to install qiskit-aer from precompiled binary on Linux. If you do not have pip 19 installed you can run ``pip install -U pip`` to upgrade it. Without pip 19 or newer this command will attempt to install qiskit-aer from sdist (source distribution) which will try to compile aer locally under the covers."
msgstr "키스킷 0.13.0 버전부터는 리눅스에서 미리 컴파일된 바이너리 파일로 키스킷-아르를 설치하기 위해서는 핍(pip) 19 혹은 최신의 버전이 필요합니다. 만약 19 버전의 핍이 설치되어 있지 않다면 다음의 명령어 ``pip install -U pip``로 업그레이드 할 수 있습니다. 핍 19 혹은 최신 버전이 없다면 이 명령어는 소스 배포본(sdist) 로부터 키스킷-아르를 설치하기 위해 현재 사용하는 컴퓨터에서 아르를 소스 컴파일하려고 할 것이다."

#: ../../install.rst:77
msgid "If the packages installed correctly, you can run ``conda list`` to see the active packages in your virtual environment."
msgstr "만약 패키지들이 제대로 설치되었다면, 이 명령어 ``conda list``를 실행시켜서 현재 가상 환경에서 설치된 패키지들을 볼 수 있다."

#: ../../install.rst:80
msgid "To simplify your experience we also recommend installing the following"
msgstr "경험을 단순화하려면 다음을 설치하는 것이 좋습니다"

#: ../../install.rst:92
msgid "After you've installed and verified the Qiskit packages you want to use, import them into your environment with Python to begin working."
msgstr "사용하고자 하는 키스킷 패키지들을 다 설치하고 확인하였다면, 시작하기 위해서 파이썬 환경에 그것들을 임포트해야 한다."

#: ../../install.rst:103
msgid "If you want to contribute to the Qiskit community by developing and contributing code with the most recently updated Qiskit code, see :ref:`Build Qiskit packages from source <install_install_from_source_label>`."
msgstr "만약 최신 버전의 키스킷 코드에 새로운 코드를 개발하여 키스킷 공동체에 기여를 하고 싶다면, 다음 :ref:`소스 코드로부터 키스킷 설치하기 <install_install_from_source_label>` 을 참조하시오."

#: ../../install.rst:108
msgid "Access IBM Quantum Systems"
msgstr "IBM 양자 시스템에 접근하기"

#: ../../install.rst:110
msgid "IBM Quantum offers several real quantum computers and high-performance classical computing simulators through its IBM Quantum Experience with Qiskit. Follow these steps to set up your Qiskit environment to send jobs to IBM Quantum systems."
msgstr "아이비엠 양자 시스템은 키스킷을 이용하여 아이비엠 양자 경험 소프트웨어를 통해 고성능의 고전적인 연산 시뮬레이터와 실제 양자 컴퓨터를 사용할 수 있는 기회를 제공한다. 아이비엠 양자 시스템에서 연산 작업을 실행하기 위해서는 다음의 과정을 통해 키스킷 환경을 설정하라."

#: ../../install.rst:116
msgid "With the release of Qiskit 0.11, if you had previously saved your IBM Quantum credentials locally, you might need to update your IBM Quantum Experience credentials so that you can use the new IBM Quantum Experience V2. See `Updating your IBM Quantum Experience Credentials <https://github.com/Qiskit/qiskit-ibmq-provider/#updating-your-ibm-q-experience-credentials>`__."
msgstr "키스킷 0.11 버전부터는 만약 이전 버전의 아이비엠 양자 시스템 증명서를 자신의 컴퓨터에 저장하였다면, 아마도 새로운 양자 경험 시스템 V2를 사용하기 위해서 아이비엠 양자 시스템 증명서를 업데이트해야 할 것이다. 다음을 참조하라. `아이비엠 양자 경험 증명서 업데이트하기 <https://github.com/Qiskit/qiskit-ibmq-provider/#updating-your-ibm-q-experience-credentials>`__."

#: ../../install.rst:121
msgid "To configure your account, you create a local configuration file which includes an API key"
msgstr "계정을 설정하기 위해 API 키를 포함하는 설정 파일을 생성해야 한다."

#: ../../install.rst:123
msgid "**1.** `Create a free IBM Quantum Experience account <https://quantum-computing.ibm.com/login>`__."
msgstr "**1.** `무료 아이비엠 양자 경험 시스템 계정 만들기<https://quantum-computing.ibm.com/login>`__."

#: ../../install.rst:125
msgid "**2.**  Navigate to **My Account** to view your account settings."
msgstr "**2.**  계정 설정을 보기 위해서 **My Account** 항목을 열기."

#: ../../install.rst:130
msgid "**3.** Click on **Copy token** to copy the token to your clipboard. Temporarily paste this API token into your favorite text editor so you can use it later to create an account configuration file."
msgstr "**3.** 다음 **Copy token**를 선택하여 토큰을 클립보드로 복사하라. 임시로 이 응용 프로그램 인터페이스 토큰을 자주 사용하는 문서 편집기에 저장해 놓고 나중에 계정 설정 파일을 만들때 사용하도록 하라."

#: ../../install.rst:137
msgid "**4.** Run the following commands to store your API token locally for later use in a configuration file called ``qiskitrc``. Replace ``MY_API_TOKEN`` with the API token value that you stored in your text editor."
msgstr "**4.** 다음 명령어를 실행하여서 API 토큰을 저장하고 나중에 ``qiskitrc``인 설정 파일에 사용하도록 하라. ``MY_API_TOKEN``을 문서 편집기에 저장해 놓았던 토큰값으로 교체하라."

#: ../../install.rst:147
msgid "For more details, such as how to manage multiple IBM Quantum account credentials, refer to this tutorial titled `The IBM Quantum Account <https://github.com/Qiskit/qiskit-tutorials/blob/master/qiskit/fundamentals/3_the_ibmq_account.ipynb>`__."
msgstr "여러개의 아이비엠 양자 시스템 계정 증명서를 관리하기 등과 같은 자세한 내용에 관해서는 사용 지침 프로그램 `아이엠 양자 시스템 계정 <https://github.com/Qiskit/qiskit-tutorials/blob/master/qiskit/fundamentals/3_the_ibmq_account.ipynb>`__ 을 참조하도록 하라."

#: ../../install.rst:153
msgid "Checking Which Version is Installed"
msgstr "어느 버전의 키스킷이 설치되어 있는지 확인하기"

#: ../../install.rst:155
msgid "Since the Qiskit package includes a constellation of different elements, simply printing the version by running ``qiskit.__version__`` can be misleading as it returns only the version for the ``qiskit-terra`` package. This is because the ``qiskit`` namespace in Python doesn't come from the Qiskit package, but instead is part of the ``qiskit-terra`` package."
msgstr "키스킷 패키지에는 유명한 여러 개의 구성 요소를 가지고 있기 때문에, 단순히 ``qiskit.__version__`` 명령어가 출력하는 결과는 오해의 소지가 있다. 참고로 이 명령어는 ``키스킷-테라`` (qiskit-terra) 의 버전만을 알려준다. 왜냐하면 파이썬에서 ``키스킷`` 명칭 공간 (namespace) 는 전체 키스킷 패키지에서 오지 않고 ``키스킷-테라`` 패키지에서 오기 때문이다."

#: ../../install.rst:167
msgid "To see the versions of all the Qiskit elements in your environment you can use the ``__qiskit_version__`` attribute. For example, running the following command will return a dictionary that includes the versions for each of the installed Qiskit packages."
msgstr "지금 환경에서의 모든 키스킷 구성 요소의 버전을 보기 위해서는 ``__qiskit_version__`` 속성을 이용해야 한다. 예를 들어, 다음의 명령어를 실행하면 설치된 키스킷 패키지 각각의 버전을 담고 있는 딕셔너리 변수를 돌려준다."

#: ../../install.rst:179
msgid "If you're filing an issue or need to share your installed Qiskit versions for something, use the ``__qiskit_version__`` attribute."
msgstr "만약 특정한 이유로 설치된 키스킷 버전을 공유하거나 이슈를 항목별로 철하기 위해서는 ``__qiskit_version__`` 속성을 이용하라."

