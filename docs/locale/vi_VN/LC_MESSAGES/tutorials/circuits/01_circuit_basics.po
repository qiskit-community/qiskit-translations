msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-21 23:33\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/01_circuit_basics.po\n"
"X-Crowdin-File-ID: 9498\n"
"Language: vi_VN\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:10
msgid "This page was generated from `tutorials/circuits/01_circuit_basics.ipynb`__."
msgstr ""

#: ../../tutorials/circuits/01_circuit_basics.ipynb:9
msgid "Circuit Basics"
msgstr "Nguyên lý cơ bản của mạch lượng tử"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:11
msgid "Here, we provide an overview of working with Qiskit. Qiskit provides the basic building blocks necessary to program quantum computers. The fundamental unit of Qiskit is the `quantum circuit <https://en.wikipedia.org/wiki/Quantum_circuit>`__. A basic workflow using Qiskit consists of two stages: **Build** and **Run**. **Build** allows you to make different quantum circuits that represent the problem you are solving, and **Run** that allows you to run them on different backends. After the jobs have been run, the data is collected and postprocessed depending on the desired output."
msgstr "Tại đây, chúng tôi cung cấp thông tin tổng quát về cách làm việc với Qiskit. Qiskit cung cấp các khối xây dựng cơ bản và cần thiết để lập trình máy tính lượng tử. Đơn vị cơ bản của Qiskit là `mạch lượng tử <https://en.wikipedia.org/wiki/Quantum_circuit>`__. Quy trình làm việc cơ bản khi sử dụng Qiskit bao gồm hai giai đoạn: **Xây dựng** và **Chạy**. **Xây dựng** cho phép bạn tạo ra những mạch lượng tử khác nhau biểu diễn cho vấn đề bạn đang giải quyết, và **Chạy** cho phép bạn chạy những mạch lượng tử này trên những backends khác nhau. Sau khi các công việc đã được chạy, dữ liệu sẽ được thu thập và xử lý sau đó tùy thuộc vào kết quả đầu ra mong muốn của bạn."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:36
msgid "Building the circuit"
msgstr "Xây dựng mạch lượng tử"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:38
msgid "The basic element needed for your first program is the QuantumCircuit. We begin by creating a ``QuantumCircuit`` comprised of three qubits."
msgstr "Thành phần cơ bản cần thiết cho chương trình đầu tiên của bạn là QuantumCircuit. Chúng ta bắt đầu với việc tạo một ``QuantumCircuit`` bao gồm ba qubit."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:60
msgid "After you create the circuit with its registers, you can add gates (“operations”) to manipulate the registers. As you proceed through the tutorials you will find more gates and circuits; below is an example of a quantum circuit that makes a three-qubit GHZ state"
msgstr "Sau khi tạo mạch với các thanh ghi của nó, bạn có thể thêm các cổng (\"thao tác\") để tác động các thanh ghi. Khi bạn xem qua các hướng dẫn bạn sẽ tìm thấy nhiều cổng và mạch hơn nữa; dưới đây là một ví dụ của một mạch lượng tử tạo ra trạng thái GHZ của 3 qubit"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:62
msgid "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"
msgstr "|\\psi\\rangle = \\left(|000\\rangle+|111\\rangle\\right)/\\sqrt{2}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:64
msgid "To create such a state, we start with a three-qubit quantum register. By default, each qubit in the register is initialized to :math:`|0\\rangle`. To make the GHZ state, we apply the following gates: - A Hadamard gate :math:`H` on qubit 0, which puts it into the superposition state :math:`\\left(|0\\rangle+|1\\rangle\\right)/\\sqrt{2}`. - A Controlled-NOT operation (:math:`C_{X}`) between qubit 0 and qubit 1. - A Controlled-NOT operation between qubit 0 and qubit 2."
msgstr ""

#: ../../tutorials/circuits/01_circuit_basics.ipynb:66
msgid "On an ideal quantum computer, the state produced by running this circuit would be the GHZ state above."
msgstr "Trên một máy tính lượng tử lý tưởng, trạng thái được tạo ra bằng cách chạy mạch này sẽ là trạng thái GHZ ở trên."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:68
msgid "In Qiskit, operations can be added to the circuit one by one, as shown below."
msgstr ""

#: ../../tutorials/circuits/01_circuit_basics.ipynb:121
msgid "Visualize Circuit"
msgstr "Hiển thị mạch lượng tử"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:123
msgid "You can visualize your circuit using Qiskit ``QuantumCircuit.draw()``, which plots the circuit in the form found in many textbooks."
msgstr "Bạn có thể xem mạch của mình bằng Qiskit ``QuantumCircuit.draw()``, vẽ sơ đồ mạch ở dạng có thể được tìm thấy trong nhiều sách tham khảo."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:153
msgid "In this circuit, the qubits are put in order, with qubit zero at the top and qubit two at the bottom. The circuit is read left to right (meaning that gates that are applied earlier in the circuit show up further to the left)."
msgstr ""

#: ../../tutorials/circuits/01_circuit_basics.ipynb:168
msgid "When representing the state of a multi-qubit system, the tensor order used in Qiskit is different than that used in most physics textbooks. Suppose there are :math:`n` qubits, and qubit :math:`j` is labeled as :math:`Q_{j}`. Qiskit uses an ordering in which the :math:`n^{\\mathrm{th}}` qubit is on the left side of the tensor product, so that the basis vectors are labeled as :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."
msgstr "Khi biểu diễn trạng thái của một hệ nhiều qubit, thứ tự tensor được sử dụng trong Qiskit khác với thứ tự được sử dụng trong hầu hết các sách vật lý. Giả sử ta có :math:`n` qubit, và qubit :math:`j` được đánh dấu là :math:`Q_{j}`. Qiskit sử dụng thứ tự trong đó qubit :math:`n^{\\mathrm{th}}` ở bên trái tích tensor, do đó những vector cơ sở được đánh dấu là :math:`Q_{n-1}\\otimes \\cdots \\otimes Q_1\\otimes Q_0`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:170
msgid "For example, if qubit zero is in state 0, qubit 1 is in state 0, and qubit 2 is in state 1, Qiskit would represent this state as :math:`|100\\rangle`, whereas many physics textbooks would represent it as :math:`|001\\rangle`."
msgstr "Ví dụ, nếu qubit 0 ở trạng thái 0, qubit 1 ở trạng thái 0 và qubit 2 ở trạng thái 1, Qiskit sẽ biểu diễn trạng thái này dưới dạng :math:`|100\\rangle`, trong khi nhiều sách tham khảo vật lý sẽ biểu diễn nó dưới dạng :math:`|001\\rangle`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:172
msgid "This difference in labeling affects the way multi-qubit operations are represented as matrices. For example, Qiskit represents a controlled-X (:math:`C_{X}`) operation with qubit 0 being the control and qubit 1 being the target as"
msgstr "Sự khác biệt về cách đánh dấu này ảnh hưởng đến cách các phép toán đa qubit được biểu diễn dưới dạng ma trận. Ví dụ, Qiskit biểu diễn một cổng điều khiển-X (controlled-X)(:math:`C_{X}`) với qubit 0 để điều khiển và qubit 1 là mục tiêu như sau"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:174
msgid "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"
msgstr "C_X = \\begin{pmatrix} 1 & 0 & 0 & 0 \\\\  0 & 0 & 0 & 1 \\\\ 0 & 0 & 1 & 0 \\\\ 0 & 1 & 0 & 0 \\\\\\end{pmatrix}.\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:190
msgid "Simulating circuits"
msgstr "Mô phỏng mạch lượng tử"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:192
msgid "To simulate a circuit we use the quant_info module in Qiskit. This simulator returns the quantum state, which is a complex vector of dimensions :math:`2^n`, where :math:`n` is the number of qubits (so be careful using this as it will quickly get too large to run on your machine)."
msgstr "Để mô phỏng một mạch lượng tử, chúng ta sử dụng module quant-info trong Qiskit. Trình mô phỏng này trả về những trạng thái lượng tử, là những vector phức :math:`2^n` chiều, với :math:`n` là số qubit (vì vậy hãy cẩn thận khi sử dụng vì nó sẽ nhanh chóng trở nên quá lớn để chạy trên máy của bạn)."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:194
msgid "There are two stages to the simulator. The first is to set the input state and the second to evolve the state by the quantum circuit."
msgstr "Có hai giai đoạn cho trình mô phỏng. Đầu tiên là thiết lập trạng thái đầu vào và sau đó phát triển trạng thái bằng mạch lượng tử."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:224
#: ../../tutorials/circuits/01_circuit_basics.ipynb:254
msgid "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{\\sqrt{2}}  \\\\\n"
" \\end{bmatrix}\n"
"$$"
msgstr "$$\n\n"
"\\begin{bmatrix}\n"
"\\tfrac{1}{\\sqrt{2}} & 0 & 0 & 0 & 0 & 0 & 0 & \\tfrac{1}{\\sqrt{2}}  \\\\\n"
" \\end{bmatrix}\n"
"$$"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:271
msgid "Qiskit also provides a visualization toolbox to allow you to view the state."
msgstr "Qiskit cũng cung cấp một toolbox về trực quan hóa để cho phép bạn xem trạng thái."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:273
msgid "Below, we use the visualization function to plot the qsphere and a hinton representing the real and imaginary components of the state density matrix :math:`\\rho`."
msgstr "Ở dưới, chúng tôi sử dụng hàm trực quan hóa để vẽ đồ thị qsphere và một hinton đại diện cho phần thực và ảo của một trạng thái, ma trận mật độ :math:`\\rho`."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:323
msgid "Unitary representation of a circuit"
msgstr "Biểu diễn dưới dạng đơn nhất (unitary) của một mạch lượng tử"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:334
msgid "Qiskit’s quant_info module also has an operator method which can be used to make a unitary operator for the circuit. This calculates the :math:`2^n \\times 2^n` matrix representing the quantum circuit."
msgstr "Module quant_info của Qiskit cũng có một phương thức toán tử có thể được dùng để tạo một toán tử đơn nhất (unitary) cho mạch lượng tử. Nó tính toán ma trận :math:`2^n \\times 2^n` biểu diễn mạch lượng tử."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:454
msgid "OpenQASM backend"
msgstr "Backend OpenQASM"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:465
msgid "The simulators above are useful because they provide information about the state output by the ideal circuit and the matrix representation of the circuit. However, a real experiment terminates by *measuring* each qubit (usually in the computational :math:`|0\\rangle, |1\\rangle` basis). Without measurement, we cannot gain information about the state. Measurements cause the quantum system to collapse into classical bits."
msgstr "Các trình mô phỏng trên rất hữu ích vì chúng cung cấp thông tin về trạng thái đầu ra của mạch lý tưởng và biểu diễn ma trận của mạch. Tuy nhiên, một thí nghiệm thực sẽ kết thúc bằng cách *đo* mỗi qubit ( thường trong cơ sở tính toán :math:`|0\\rangle, |1\\rangle`). Nếu không có phép đo, chúng ta không thể có được thông tin về trạng thái. Các phép đo khiến hệ thống lượng tử sụp đổ thành các bit cổ điển."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:467
msgid "For example, suppose we make independent measurements on each qubit of the three-qubit GHZ state"
msgstr "Ví dụ, giả sử chúng ta thực hiện các phép đo độc lập trên mỗi qubit của trạng thái GHZ ba qubit"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:469
msgid "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"
msgstr "|\\psi\\rangle = (|000\\rangle +|111\\rangle)/\\sqrt{2},\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:471
msgid "and let :math:`xyz` denote the bitstring that results. Recall that, under the qubit labeling used by Qiskit, :math:`x` would correspond to the outcome on qubit 2, :math:`y` to the outcome on qubit 1, and :math:`z` to the outcome on qubit 0."
msgstr "và để :math:`xyz` biểu thị chuỗi bit kết quả. Nhớ lại , cách qubit được đánh nhãn mà Qiskit đã sử dụng, :math:`x` sẽ ứng với kết quả của qubit 2, :math:`y` sẽ ứng với kết quả của qubit 1, và :math:`z` sẽ ứng với kết quả của qubit 0."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:477
msgid "Note: This representation of the bitstring puts the most significant bit (MSB) on the left, and the least significant bit (LSB) on the right. This is the standard ordering of binary bitstrings. We order the qubits in the same way (qubit representing the MSB has index 0), which is why Qiskit uses a non-standard tensor product order."
msgstr "Lưu ý: Việc biểu diễn chuỗi bit này đặt bit quan trọng nhất (MSB) ở bên trái và bit ít quan trọng nhất (LSB) ở bên phải. Đây là thứ tự tiêu chuẩn của chuỗi bit nhị phân. Chúng tôi sắp xếp thứ tự các qubit theo cùng một cách (qubit đại diện cho MSB có chỉ số 0), đó là lý do tại sao Qiskit sử dụng thứ tự sản phẩm tensor không theo chuẩn thông thường."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:483
msgid "Recall the probability of obtaining outcome :math:`xyz` is given by"
msgstr "Nhớ lại rằng xác suất đạt được kết quả :math:`xyz` được cho bởi"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:485
msgid "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"
msgstr "\\mathrm{Pr}(xyz) = |\\langle xyz | \\psi \\rangle |^{2}\n\n"

#: ../../tutorials/circuits/01_circuit_basics.ipynb:487
msgid "and as such for the GHZ state probability of obtaining 000 or 111 are both 1/2."
msgstr "và như vậy đối với trạng thái GHZ xác suất thu được 000 hoặc 111 đều là 1/2."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:489
msgid "To simulate a circuit that includes measurement, we need to add measurements to the original circuit above, and use a different Aer backend."
msgstr "Để mô phỏng một mạch bao gồm phép đo, chúng ta cần thêm các phép đo vào mạch gốc ở trên và sử dụng một backend Aer khác."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:531
msgid "This circuit adds a classical register, and three measurements that are used to map the outcome of qubits to the classical bits."
msgstr "Mạch này bổ sung một thanh ghi cổ điển, và ba phép đo được sử dụng để ánh xạ kết quả của qubit tới các bit cổ điển."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:533
msgid "To simulate this circuit, we use the ``qasm_simulator`` in Qiskit Aer. Each run of this circuit will yield either the bitstring 000 or 111. To build up statistics about the distribution of the bitstrings (to, e.g., estimate :math:`\\mathrm{Pr}(000)`), we need to repeat the circuit many times. The number of times the circuit is repeated can be specified in the ``execute`` function, via the ``shots`` keyword."
msgstr "Để mô phỏng mạch này, chúng tôi sử dụng ``qasm_simulator`` trong Qiskit Aer. Mỗi lần chạy mạch này sẽ mang lại kết quả là chuỗi bit 000 hoặc 111. Để xây dựng thống kê về sự phân bố của các chuỗi bit (ví dụ như để ước tính :math:`\\mathrm{Pr}(000)`), chúng ta phải lặp lại mạch nhiều lần. Số lần mạch được lặp lại có thể được chỉ định trong hàm ``execute``, thông qua từ khóa ``shots``."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:574
msgid "Once you have a result object, you can access the counts via the function ``get_counts(circuit)``. This gives you the *aggregated* binary outcomes of the circuit you submitted."
msgstr "Khi bạn có một đối tượng kết quả, bạn có thể truy cập số lượng(counts) thông qua hàm ``get_counts(circuit)``. Hàm này cung cấp cho bạn kết quả nhị phân * tổng hợp * của mạch bạn đã gửi."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:619
msgid "Approximately 50 percent of the time, the output bitstring is 000. Qiskit also provides a function ``plot_histogram``, which allows you to view the outcomes."
msgstr "Xấp xỉ 50% thời gian, kết quả của chuỗi bit đầu ra là 000. Qiskit cũng cung cấp một hàm ``plot_histogram``, cho phép bạn xem kết quả."

#: ../../tutorials/circuits/01_circuit_basics.ipynb:650
msgid "The estimated outcome probabilities :math:`\\mathrm{Pr}(000)` and :math:`\\mathrm{Pr}(111)` are computed by taking the aggregate counts and dividing by the number of shots (times the circuit was repeated). Try changing the ``shots`` keyword in the ``execute`` function and see how the estimated probabilities change."
msgstr "Xác suất ước tính của kết quả :math:`\\mathrm{Pr}(000)` và :math:`\\mathrm{Pr}(111)` được tính bằng cách lấy số tổng hợp các lần đếm và chia cho số tổng số lần (shots) (số lần lặp lại mạch). Hãy thử thay đổi từ khóa ``shots`` trong hàm ``execute`` và xem các xác suất ước tính thay đổi như thế nào."

