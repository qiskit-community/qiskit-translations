msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 19:59\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/06_qaoa.po\n"
"X-Crowdin-File-ID: 9454\n"
"Language: vi_VN\n"

#: ../../tutorials/algorithms/06_qaoa.ipynb:10
msgid "This page was generated from `tutorials/algorithms/06_qaoa.ipynb`__."
msgstr "Trang này được tạo từ `tutorials/algorithms/06_qaoa.ipynb`__."

#: ../../tutorials/algorithms/06_qaoa.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/06_qaoa.ipynb>`_."
msgstr "Chạy tương tác trực tiếp trong `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/02_vqe_convergence.ipynb>`_."

#: ../../tutorials/algorithms/06_qaoa.ipynb:9
msgid "Quantum Approximate Optimization Algorithm"
msgstr "Thuật toán Tối ưu hóa xấp xỉ lượng tử"

#: ../../tutorials/algorithms/06_qaoa.ipynb:11
msgid "Qiskit has an implementation of the Quantum Approximate Optimization Algorithm `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ and this notebook demonstrates using it for a graph partition problem."
msgstr "Qiskit có triển khai Thuật toán Tối ưu hóa xấp xỉ lượng tử `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__ và cuốn sổ này thể hiện cách sử dụng nó cho bài toán phân vùng đồ thị."

#: ../../tutorials/algorithms/06_qaoa.ipynb:13
msgid "While QAOA can be directly used it often more convenient to use it in conjunction with the Optimization module. See the Optimization tutorials for more information."
msgstr "Tuy QAOA có thể được sử dụng trực tiếp, sẽ thuận tiện hơn khi sử dụng nó kết hợp với mô-đun tối ưu hóa. Xem các Hướng dẫn Tối ưu hóa để biết thêm chi tiết."

#: ../../tutorials/algorithms/06_qaoa.ipynb:40
msgid "First we create a random graph and draw it so it can be seen."
msgstr "Đầu tiên chúng ta tạo ra một đồ thị ngẫu nhiên và vẽ nó để nó được hiển thị."

#: ../../tutorials/algorithms/06_qaoa.ipynb:111
msgid "The brute-force method is as follows. Basically, we exhaustively try all the binary assignments. In each binary assignment, the entry of a vertex is either 0 (meaning the vertex is in the first partition) or 1 (meaning the vertex is in the second partition). We print the binary assignment that satisfies the definition of the graph partition and corresponds to the minimal number of crossing edges."
msgstr "Phương pháp brute-force như sau: về cơ bản, chúng ta thử hoàn toàn tất cả các phép gán nhị phân. Trong mỗi phép gán nhị phân, mục nhập của đỉnh là 0 (có nghĩa là đỉnh nằm trong phân hoạch đầu tiên) hoặc 1 (có nghĩa là đỉnh nằm trong phân hoạch thứ hai). Chúng ta in ra phép gán nhị phân thỏa mãn định nghĩa của phân hoạch đồ thị và tương ứng với số cạnh chéo nhỏ nhất."

#: ../../tutorials/algorithms/06_qaoa.ipynb:173
msgid "The graph partition problem can be converted to an Ising Hamiltonian. Qiskit has different capabilities in the Optimization module to do this. Here, since the goal is to show QAOA, the module is used without further explanation to create the operator. The paper `Ising formulations of many NP problems <https://arxiv.org/abs/1302.5843>`__ may be of interest if you would like to understand the technique further."
msgstr ""

#: ../../tutorials/algorithms/06_qaoa.ipynb:194
msgid "So lets use the QAOA algorithm to find the solution."
msgstr "Hãy sử dụng thuật toán QAOA để tìm lời giải."

#: ../../tutorials/algorithms/06_qaoa.ipynb:252
msgid "The outcome can be seen to match to the value computed above by brute force. But we can also use the classical ``NumPyMinimumEigensolver`` to do the computation, which may be useful as a reference without doing things by brute force."
msgstr "Kết quả có thể được hiển thị sao cho phù hợp với giá trị được tính bởi brute-force bên trên. Nhưng chúng ta cũng có thể dùng ``NumPyimumeigensolver`` cổ điển để làm tính toán và sử dụng nó như một tham chiếu mà không làm với brute-force."

#: ../../tutorials/algorithms/06_qaoa.ipynb:301
msgid "It is also possible to use VQE as is shown below"
msgstr "Cũng có thể sử dụng VQE như cách dưới đây"

