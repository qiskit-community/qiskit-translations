msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 21:02+0000\n"
"PO-Revision-Date: 2022-01-05 22:41\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/03_vqe_simulation_with_noise.po\n"
"X-Crowdin-File-ID: 9448\n"
"Language: vi_VN\n"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:10
msgid "This page was generated from `tutorials/algorithms/03_vqe_simulation_with_noise.ipynb`__."
msgstr "Trang này được tạo ra từ `tutorials/algorithms/03_vqe_convergence.ipynb`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:9
msgid "VQE on Aer simulator with noise"
msgstr "VQE trên bộ mô phỏng Aer với nhiễu"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:11
msgid "This notebook demonstrates using the `Qiskit Aer <https://qiskit.org/documentation/the_elements.html#aer>`__ ``aer_simulator`` to run a simulation with noise, based on a given noise model. This can be useful to investigate behavior under different noise conditions. Aer not only allows you to define your own custom noise model, but also allows a noise model to be easily created based on the properties of a real quantum device. The latter is what this notebook will demonstrate since the goal is to show VQE with noise and not the more complex task of how to build custom noise models."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:14
msgid "`Qiskit Ignis <https://qiskit.org/documentation/apidoc/ignis.html>`__ provides a solution to mitigate the measurement error when running on a noisy simulation or a real quantum device. This solution is leveraged by the ``QuantumInstance`` module which allows any algorithm using it to automatically have measurement noise mitigation applied."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:16
msgid "Further information on Qiskit Aer noise model can be found in the online `Qiskit Aer documentation <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, also there is tutorial for `building noise models <../simulators/3_building_noise_models.ipynb>`__."
msgstr "Thông tin chi tiết về mô hình nhiễu Qiskit Aer có thể được tìm thấy trong tài liệu trực tuyến `Qiskit Aer <https://qiskit.org/documentation/apidoc/aer_noise.html>`__, đồng thời cũng có hướng dẫn cho `xây dựng mô hình nhiễu <../simulators/3_building_noise_moduls.ipynb>`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:18
msgid "Further information on measurement error mitigation in Qiskit Ignis can be found in the tutorial for `measurement error mitigation <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."
msgstr "Thông tin chi tiết về giảm thiểu sai số đo lường trong Qiskit Ignis có thể được tìm thấy trong hướng dẫn cho `giảm thiếu sai số đo lường <https://qiskit.org/documentation/tutorials/noise/3_measurement_error_mitigation.html>`__."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:47
msgid "Noisy simulation will be demonstrated here with VQE, finding the minimum (ground state) energy of an Hamiltonian, but the technique applies to any quantum algorithm from Qiskit."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:49
msgid "So for VQE we need a qubit operator as input. Here, once again, we will take a set of paulis that were originally computed by Qiskit Nature, for an H2 molecule, so we can quickly create an Operator."
msgstr ""

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:99
msgid "As the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value so we can compare later the results."
msgstr "Vì vấn đề trên vẫn dễ dàng giải được bằng máy tính cổ điển, chúng ta có thể sử dụng NumPyMinimumEigensolver để tính ra một giá trị tham chiếu để chúng ta có thể so sánh các kết quả sau này."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:147
msgid "Performance *without* noise"
msgstr "Hiệu suất *khi không có* nhiễu"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:149
msgid "First we will run on the simulator without adding noise to see the result. I have created the backend and QuantumInstance, which holds the backend as well as various other run time configuration, which are defaulted here, so it easy to compare when we get to the next section where noise is added. There is no attempt to mitigate noise or anything in this notebook so the latter setup and running of VQE is identical."
msgstr "Đầu tiên chúng ta sẽ chạy trên trình giả lập mà không cần thêm nhiễu để xem kết quả. Tôi đã tạo backend và QuantumInstance, cái sẽ giữ phần backend cũng như các cấu hình thời gian chạy khác được mặc định ở đây, vì vậy sẽ dễ dàng so sánh khi chúng ta đến phần tiếp theo khi mà nhiễu được thêm vào. Không có bất kì nỗ lực nào để giảm nhiễu hoặc bất cứ thứ gì trong notebook này để lần thiết lập và thực thi sau của VQE là giống hệt."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:213
msgid "We captured the energy values above during the convergence so we can see what went on in the graph below."
msgstr "Chúng ta đã thu được giá trị năng lượng ở trên trong suốt quá trình hội tụ để có thể thấy những gì diễn ra trong đồ thị bên dưới."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:272
msgid "Performance *with* noise"
msgstr "Hiệu suất *khi có* nhiễu"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:274
msgid "Now we will add noise. Here we will create a noise model for Aer from an actual device. You can create custom noise models with Aer but that goes beyond the scope of this notebook. Links to further information on Aer noise model, for those that may be interested in doing this, were given above."
msgstr "Bây giờ chúng ta sẽ thêm nhiễu vào. Tại đây chúng ta sẽ tạo một model nhiễu cho Aer trong một thiết bị thực tế. Bạn có thể tạo một bản nhiễu tùy chỉnh với Aer nhưng điều đó vượt ra ngoài phạm vi của notebook này. Đường dẫn đến các model nhiều trong Aer, cho những ai hứng thú sẽ được để ở phía trên."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:276
msgid "First we need to get an actual device backend and from its ``configuration`` and ``properties`` we can setup a coupling map and a noise model to match the device. While we could leave the simulator with the default all to all map, this shows how to set the coupling map too. Note: We can also use this coupling map as the entanglement map for the variational form if we choose."
msgstr "Đầu tiên, chúng ta cần lấy một backend của thiết bị thực tế và từ ``cấu hình`` và ``thuộc tính`` của nó, chúng ta có thể thiết lập một coupling map để kết nối và tạo mô hình nhiễu cho phù hợp với thiết bị. Trong khi chúng ta có thể để trình mô phỏng theo mặc định cho tất cả các map, điều này cho thấy làm thế nào để đặt một coupling map. Lưu ý: Chúng ta cũng có thể sử dụng coupling map như là một entanglement map cho biểu mẫu thay đổi nếu chúng ta chọn."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:278
#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:406
msgid "Note: simulation with noise will take longer than without noise."
msgstr "Chú ý: Mô phỏng với nhiễu sẽ chậm hơn so với khi không có nhiễu."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:280
msgid "Terra Mock Backends:"
msgstr "Terra Mock Backends:"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:282
msgid "We will use real noise data for an IBM Quantum device using the date stored in Qiskit Terra. Specifically, in this tutorial, the device is ibmq_vigo."
msgstr "Chúng ta sẽ sử dụng dữ liệu nhiễu thực tế cho các thiết bị lượng tử IBM sử dụng dữ liệu lưu trữ trong Qiskit Terra. Chi tiết hơn, trong hướng dẫn này, thiết bị được sử dụng là ibmq_vigo."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:402
msgid "Performance *with* noise and measurement error mitigation"
msgstr "Hiệu suật *với* nhiễu và đo đạc sự giảm thiểu sai số"

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:404
msgid "Now we will add method for measurement error mitigation, which increases the fidelity of measurement. Here we choose ``CompleteMeasFitter`` to mitigate the measurement error. The calibration matrix will be auto-refresh every 30 minute (default value)."
msgstr "Bây giờ chúng ta sẽ thêm phương thức (method) cho việc đo lường sự giảm thiểu sai số, điều mà sẽ tăng fidelity của phép đo. Ở đây chúng ta chọn ``CompleteMeasFitter`` để giảm thiểu các sai số phép đo. Ma trận hiệu chuẩn sẽ được làm mới mỗi 30 phút (giá trị mặc định)."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:496
msgid "Lets bring the results together here for a summary."
msgstr "Hãy xem các kết quả cùng nhau cho một bản tóm tắt."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:498
msgid "We produced a reference value using a classical algorithm and then proceeded to run VQE on a qasm simulator. While the simulation is ideal (no noise) there is so called shot-noise due to sampling - increasing the number of shots reduces this as more and more samples are taken, but shots was left at the default of 1024 and we see a small effect in the outcome."
msgstr "Chúng ta đã tạo ra một giá trị tham chiếu bằng cách sử dụng một thuật toán cổ điển và sau đó tiến hành chạy VQE trên một trình mô phỏng qasm. Khi mô phỏng lý tưởng (không có nhiễu) vẫn có thứ được gọi là shot-noise do lấy mẫu - tăng số lượng shot làm giảm nó nhiều hơn khi nhiều mẫu được lấy, nhưng số lượng shot được để ở mặc định là 1024 và chúng ta thấy một hiệu ứng nhỏ trong kết quả."

#: ../../tutorials/algorithms/03_vqe_simulation_with_noise.ipynb:500
msgid "Then we added noise using a model taken off a real device and can see the result is affected. Finally we added measurement noise mitigation which adjusts the results in an attempt to alleviate the affect of noise in the classical equipment measuring the qubits."
msgstr "Và sau đó chúng ta thêm nhiễu vào và sử dụng model trên một thiết bị thực tế và chúng ta có thể thấy kết quả bị ảnh hưởng. Cuối cùng chúng ta đã thêm môt phép đo giảm thiếu sai số để có thể điều chỉnh kết quả trong một nỗ lực để giảm bớt ảnh hưởng của nhiễu trong các thiết bị cổ điển trong việc đo lường các qubit."

