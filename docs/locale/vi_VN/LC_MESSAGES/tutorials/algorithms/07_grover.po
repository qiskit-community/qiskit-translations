msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 00:19+0000\n"
"PO-Revision-Date: 2021-04-09 05:10\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/07_grover.po\n"
"X-Crowdin-File-ID: 9456\n"
"Language: vi_VN\n"

#: ../../tutorials/algorithms/07_grover.ipynb:10
msgid "This page was generated from `tutorials/algorithms/07_grover.ipynb`__."
msgstr "Trang này được tạo từ `tutorials/algorithms/06_qaoa.ipynb`__."

#: ../../tutorials/algorithms/07_grover.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/07_grover.ipynb>`_."
msgstr "Chạy tương tác trực tiếp trong `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/02_vqe_convergence.ipynb>`_."

#: ../../tutorials/algorithms/07_grover.ipynb:9
msgid "Grover’s Algorithm and Amplitude Amplification"
msgstr "Thuật toán và Khuếch đại biên độ Grover"

#: ../../tutorials/algorithms/07_grover.ipynb:11
msgid "Grover’s algorithm is one of the most famous quantum algorithms introduced by Lov Grover in 1996 [1]. It has initially been proposed for unstructured search problems, i.e. for finding a marked element in a unstructured database. However, Grover’s algorithm is now a subroutine to several other algorithms, such as Grover Adaptive Search [2]. For the details of Grover’s algorithm, please see `Grover’s Algorithm <https://qiskit.org/textbook/ch-algorithms/grover.html>`__ in the Qiskit textbook."
msgstr "Thuật toán của Grover là một trong những thuật toán lượng tử nổi tiếng nhất được tạo ra bởi Lov Grover năm 1996 [1]. Mục đích ban đầu của nó là dành cho các vấn đề tìm kiếm không sắp xếp, ví dụ như tìm một phần tử dược đánh dấu trong một cơ sở dữ liệu không được sắp xếp. Tuy nhiên, thuật toán của Grover giờ đóng vai trò chương trình con cho các thuật toán khác, điển hình là thuật toán tìm kiếm thích ứng Grover [2]. Để biết thêm chi tiết về thuật toán của Grover, xin hãy truy cập `Grover’s Algorithm <https://qiskit.org/textbook/ch-algorithms/grover.html>`__ ở trong sách giáo khoa Qiskit."

#: ../../tutorials/algorithms/07_grover.ipynb:13
msgid "Qiskit implements Grover’s algorithm in the ``Grover`` class. This class also includes the generalized version, Amplitude Amplification [3], and allows setting individual iterations and other meta-settings to Grover’s algorithm."
msgstr "Qiskit thực hiện thuật toán Grover trong class ``Grover``. Class này còn bao gồm phiên bản tổng quát, khuếch đại biên độ [3], và cho phép thiết lập các lần chạy riêng lẻ và các thiết lập meta khác của thuật toán Grover."

#: ../../tutorials/algorithms/07_grover.ipynb:15
#: ../../tutorials/algorithms/07_grover.ipynb:723
msgid "**References:**"
msgstr "**Tài liệu tham khảo:**"

#: ../../tutorials/algorithms/07_grover.ipynb:17
msgid "[1]: L. K. Grover, A fast quantum mechanical algorithm for database search. Proceedings 28th Annual Symposium on the Theory of Computing (STOC) 1996, pp. 212-219. https://arxiv.org/abs/quant-ph/9605043"
msgstr "[1]: L. K. Grover, môt thuật toán cơ học lương tử để tìm kiếm cơ sở dữ liệu. Kết quả của hội thảo học thuật hằng năm về nguyên lí điện toán lần thứ 28 (STOC) 1996, trang 212-219. https://arxiv.org/abs/quant-ph/9605043"

#: ../../tutorials/algorithms/07_grover.ipynb:19
msgid "[2]: A. Gilliam, S. Woerner, C. Gonciulea, Grover Adaptive Search for Constrained Polynomial Binary Optimization. https://arxiv.org/abs/1912.04088"
msgstr "[2] A. Gilliam, S. Woerner, C. Gonciulea, thuật toán tìm kiếm thích ứng Grover dành cho Tối ưu hóa nhị phân có ràng buộc. https://arxiv.org/abs/1912/04088"

#: ../../tutorials/algorithms/07_grover.ipynb:21
msgid "[3]: Brassard, G., Hoyer, P., Mosca, M., & Tapp, A. (2000). Quantum Amplitude Amplification and Estimation. http://arxiv.org/abs/quant-ph/0005055"
msgstr "[3]: Brassard, G., Hoyer, P., Mosca, M., & Tappm A. (2000). Khuếch đại biên độ lượng tử và Ước tính. http://arxiv.org/abs/quant-ph/0005055"

#: ../../tutorials/algorithms/07_grover.ipynb:33
msgid "Grover’s algorithm"
msgstr "Thuật toán Grover"

#: ../../tutorials/algorithms/07_grover.ipynb:35
msgid "Grover’s algorithm uses the Grover operator :math:`\\mathcal{Q}` to amplify the amplitudes of the good states:"
msgstr "Thuật toán Grover sử dụng toán tử :math:`\\mathcal{Q}` để khuếch đại biên độ của các trạng thái tốt:"

#: ../../tutorials/algorithms/07_grover.ipynb:37
msgid "\\mathcal{Q} = \\mathcal{A}\\mathcal{S_0}\\mathcal{A}^\\dagger \\mathcal{S_f}"
msgstr ""

#: ../../tutorials/algorithms/07_grover.ipynb:42
msgid "Here, \\* :math:`\\mathcal{A}` is the initial search state for the algorithm, which is just Hadamards, :math:`H^{\\otimes n}` for the textbook Grover search, but can be more elaborate for Amplitude Amplification \\* :math:`\\mathcal{S_0}` is the reflection about the all 0 state"
msgstr "Ở đây, \\* :math:`\\mathcal{A}` là trạng thái tìm kiếm ban đầu của thuật toán, mà căn bản chỉ là Hadamards, :math:`H^{\\otimes n}`đối với tìm kiếm Grover đơn thuần, nhưng có thể chi tiết hơn đối với Khuếch đại Biên độ \\* :math:`\\mathcal{S_0}` là việc đối xứng qua tất cả trạng thái 0"

#: ../../tutorials/algorithms/07_grover.ipynb:44
msgid "|x\\rangle \\mapsto \\begin{cases} -|x\\rangle, &x \\neq 0 \\\\ |x\\rangle, &x = 0\\end{cases}"
msgstr ""

#: ../../tutorials/algorithms/07_grover.ipynb:49
msgid "\\* :math:`\\mathcal{S_f}` is the oracle that applies"
msgstr "\\* :math:`\\mathcal{S_f}` là phép tiên đoán được áp dụng"

#: ../../tutorials/algorithms/07_grover.ipynb:51
msgid "|x\\rangle \\mapsto (-1)^{f(x)}|x\\rangle"
msgstr ""

#: ../../tutorials/algorithms/07_grover.ipynb:56
msgid "where :math:`f(x)` is 1 if :math:`x` is a good state and otherwise 0."
msgstr "khi :math:`f(x)` bằng 1 nếu :math:`x` là một trạng thái tốt còn ngược lại thì bằng 0."

#: ../../tutorials/algorithms/07_grover.ipynb:58
msgid "In a nutshell, Grover’s algorithm applies different powers of :math:`\\mathcal{Q}` and after each execution checks whether a good solution has been found."
msgstr "Nói tóm lại, thuật toán Grover sử dụng nhiều chức năng của :math:`\\mathcal{Q}` và sau mỗi lần chạy kiểm tra xem một phương án tốt đã được tìm ra hay chưa."

#: ../../tutorials/algorithms/07_grover.ipynb:61
msgid "Running Grover’s algorithm"
msgstr "Chạy thuật toán Grover"

#: ../../tutorials/algorithms/07_grover.ipynb:63
msgid "To run Grover’s algorithm with the ``Grover`` class, firstly, we need to specify an oracle for the circuit of Grover’s algorithm. In the following example, we use ``QuantumCircuit`` as the oracle of Grover’s algorithm. However, there are several other class that we can use as the oracle of Grover’s algorithm. We talk about them later in this tutorial."
msgstr "Để chạy thuật toán Grover cùng với lớp ``Grover``, trước tiên, chúng ta cần xác định một công cụ đối xứng cho mạch lượng tử của thuật toán Grover. Trong ví dụ dưới đây, ta sử dụng ``QuantumCircuit`` làm công cụ đối xứng cho thuật toán Grover. Tuy nhiên, có nhiều lớp khác có thể được sử dụng làm công cụ đối xứng của thuật toán Grover. Chúng ta sẽ đề cập đến chúng trong hướng dẫn này."

#: ../../tutorials/algorithms/07_grover.ipynb:65
msgid "Note that the oracle for ``Grover`` must be a *phase-flip* oracle. That is, it multiplies the amplitudes of the of “good states” by a factor of :math:`-1`. We explain later how to convert a *bit-flip* oracle to a phase-flip oracle."
msgstr "Lưu ý rằng tiên tri cho ``Grover`` phải là một công cụ đối xứng *lật pha*. Nó nhân biên độ của các \"trạng thái tốt\" với :math:`-1`. Chúng ta sẽ giải thích cách để biến một công cụ đối xứng *lật bit* thành một công cụ đối xứng *lật pha* sau ."

#: ../../tutorials/algorithms/07_grover.ipynb:120
msgid "Then, we specify a backend and call the ``run`` method of ``Grover`` with a backend to execute the circuits. The returned result type is a ``GroverResult``."
msgstr "Sau đấy, chúng ta xác định một backend và thực hiện phương pháp ``run`` của ``Grover`` trên một backend để chạy các mạch. Kết quả được trả về dưới loại ``GroverResult``."

#: ../../tutorials/algorithms/07_grover.ipynb:122
msgid "If the search was successful, the ``oracle_evaluation`` attribute of the result will be ``True``. In this case, the most sampled measurement, ``top_measurement``, is one of the “good states”. Otherwise, ``oracle_evaluation`` will be False."
msgstr "Nếu việc tìm kiếm thành công, thuộc tính ``oracle_evaluation`` của kết quả sẽ là ``True``. Trong trường hợp này, phép đo được lấy mẫu nhiều nhất, ``top_measurement``, là một trong những \"trạng thái tốt\". Nếu không, ``oracle_evaluation sẽ là False."

#: ../../tutorials/algorithms/07_grover.ipynb:176
msgid "In the example, the result of ``top_measurement`` is ``11`` which is one of “good state”. Thus, we succeeded to find the answer by using ``Grover``."
msgstr "Trong ví dụ này, kết quả ``11`` của ``top_measurement`` là một trong những \"trạng thái tốt\". Vì vậy, ta đã thành công trong việc tìm đáp án bằng cách sử dụng ``Grover``."

#: ../../tutorials/algorithms/07_grover.ipynb:188
msgid "Using the different types of classes as the oracle of ``Grover``"
msgstr "Sử dụng cái kiểu lớp khác nhau làm công cụ đối xứng của ``Grover``"

#: ../../tutorials/algorithms/07_grover.ipynb:190
msgid "In the above example, we used ``QuantumCircuit`` as the oracle of ``Grover``. However, we can also use ``qiskit.aqua.components.oracles.Oracle``, and ``qiskit.quantum_info.Statevector`` as oracles. All the following examples are when :math:`|11\\rangle` is “good state”"
msgstr "Trong ví dụ trên, chúng ta đã sử dụng ``QuantumCircuit`` làm tiên tri của ``Grover``. Tuy nhiên, ta cũng có thể sử dụng ``qiskit.aqua.components.oracles.Oracle``, và ``qiskit.quantum_info.Statevector`` làm công cụ đối xứng. Tất cả các ví dụ sau đều trong trường hợp :math:`|11\\rangle` là \"trạng thái tốt\""

#: ../../tutorials/algorithms/07_grover.ipynb:244
msgid "Internally, the statevector is mapped to a quantum circuit:"
msgstr "Ở bên trong, vector trạng thái được biểu diễn trên một mạch lượng tử:"

#: ../../tutorials/algorithms/07_grover.ipynb:274
msgid "The ``Oracle`` components in Qiskit Aqua allow for an easy construction of more complex oracles. The ``Oracle`` type has the interesting subclasses: \\* ``LogicalExpressionOracle``: for parsing logical expressions such as ``'~a | b'``. This is especially useful for solving 3-SAT problems and is shown in the accompanying `Grover Examples <08_grover_examples.ipynb>`__ tutorial. \\* ``TrutheTableOracle``: for converting binary truth tables to circuits"
msgstr "Các thành phần của ``Oracle`` trong Qiskit Aqua cho phép việc xây dựng dễ dàng các công cụ đối xứng phức tạp hơn. Loại ``Oracle`` có các lớp con: \\* ``LogicalExpressionOracle``: phân tích các biểu thức logic như ``'~a | b'``. Việc này đặc biệt hữu dụng cho việc giải quyết các vấn đề 3-SAT và được minh họa ở hướng dẫn `Grover Examples <08_grover_examples.ipynb>`__. \\* ``TrutheTableOracle``: biến đổi các bảng chân lý nhị phân thành các mạch"

#: ../../tutorials/algorithms/07_grover.ipynb:276
msgid "Here we’ll use the ``LogicalExpressionOracle`` for the simple example of finding the state :math:`|11\\rangle`, which corresponds to ``'a & b'``."
msgstr "Chúng ta sẽ sử dụng ``LogicalExpressionOracle`` trong một ví dụ đơn giản về việc tìm trạng thái :math:`|11\\rangle`, tương đương với ``'a & b'``."

#: ../../tutorials/algorithms/07_grover.ipynb:312
msgid "You can observe, that this oracle is actually implemented with three qubits instead of two!"
msgstr "Bạn có thể thấy rằng công cụ đối xứng này thực chất được triển khai với ba qubit thay vì là hai!"

#: ../../tutorials/algorithms/07_grover.ipynb:314
msgid "That is because the ``LogicalExpressionOracle`` is not a phase-flip oracle (which flips the phase of the good state) but a bit-flip oracle. This means it flips the state of an auxiliary qubit if the other qubits satisfy the condition. For Grover’s algorithm, however, we require a phase-flip oracle. To convert the bit-flip oracle to a phase-flip oracle we sandwich the controlled-NOT by :math:`X` and :math:`H` gates, as you can see in the circuit above."
msgstr "Điều này là do ``LogicalExpressionOracle`` không phải là một công cụ đối xứng lật pha (lật pha của trạng thái tốt) mà là một tiên tri lật bit. Nó đồng nghĩa với việc lật trạng thái của một qubit phụ trợ nếu các qubit khác thỏa mãn điều kiện. Tuy nhiên riêng với thuật toán Grover, chúng ta cần một công cụ đối xứng lật pha. Để biến đổi công cụ đối xứng lật bit thành công cụ đối xứng lật pha ta sẽ kẹp cổng NOT được điều khiển giữa các cổng :math:`X` và :math:`H`, như bạn có thể thấy ở mạch phía trên."

#: ../../tutorials/algorithms/07_grover.ipynb:316
msgid "**Note:** This transformation from a bit-flip to a phase-flip oracle holds generally and you can use this to convert your oracle to the right representation."
msgstr "**Lưu ý:** Việc chuyển đổi từ tiên tri lật bit sang lật pha này có thể được áp dụng một cách nói chung và có thể được dùng để biến đổi tiên tri sang loại đúng."

#: ../../tutorials/algorithms/07_grover.ipynb:328
msgid "Amplitude amplification"
msgstr "Khuếch đại biên độ"

#: ../../tutorials/algorithms/07_grover.ipynb:330
msgid "Grover’s algorithm uses Hadamard gates to create the uniform superposition of all the states at the beginning of the Grover operator :math:`\\mathcal{Q}`. If some information on the good states is available, it might be useful to not start in a uniform superposition but only initialize specific states. This, generalized, version of Grover’s algorithm is referred to *Amplitude Amplification*."
msgstr "Thuật toán Grover sử dụng cổng Hadamard để tạo sự chồng chập các trạng thái lúc khai triển toán tử Grover :math:`\\mathcal{Q}`. Nếu tồn tại thông tin về các trạng thái tốt, ta có thể chỉ khai triển một số trạng thái nhất định. Phiên bản tổng quát này của thuật toán Grover được gọi là *Khuếch đại biên độ*."

#: ../../tutorials/algorithms/07_grover.ipynb:332
msgid "In Qiskit, the initial superposition state can easily be adjusted by setting the ``state_preparation`` argument."
msgstr "Trong Qiskit, trạng thái chồng chập ban đầu có thể được điều chỉnh bằng cách thay đổi tham số ``state_preparation``."

#: ../../tutorials/algorithms/07_grover.ipynb:335
msgid "State preparation"
msgstr "Chuẩn bị trạng thái"

#: ../../tutorials/algorithms/07_grover.ipynb:337
msgid "A ``state_preparation`` argument is used to specify a quantum circuit that prepares a quantum state for the start point of the amplitude amplification. By default, a circuit with $H^{:nbsphinx-math:`\\otimes `n} $ is used to prepare uniform superposition (so it will be Grover’s search). The diffusion circuit of the amplitude amplification reflects ``state_preparation`` automatically."
msgstr "Tham số ``state_preparation`` được sử dụng để xác định một mạch lượng tử, mạch này chuẩn bị một trạng thái lượng tử cho điểm bắt đầu của việc khuếch đại biên độ. Ở trạng thái mặc định, một mạch với $H^{:nbsphinx-math:`\\otimes `n} $ được dùng để chuẩn bị chồng chập đồng bộ (để nó là tìm kiếm Grover). Mạch khuếch tán của bộ khuếch đại biên độ tự động phản chiếu ``state_preparation``."

#: ../../tutorials/algorithms/07_grover.ipynb:442
msgid "Full flexibility"
msgstr "Linh động tuyệt đối"

#: ../../tutorials/algorithms/07_grover.ipynb:444
msgid "For more advanced use, it is also possible to specify the entire Grover operator by setting the ``grover_operator`` argument. This might be useful if you know more efficient implementation for :math:`\\mathcal{Q}` than the default construction via zero reflection, oracle and state preparation."
msgstr "Với các công việc phức tạp hơn, ta cũng có thể xác định toán tử Grover bằng cách thay đổi tham số ``grover_operator``. Việc này có thể hữu dụng nếu bạn biết các cách áp dụng :math:`\\mathcal{Q}` hiệu quả hơn cách mặc định thông qua phản chiếu qua gốc, công cụ đối xứng và chuẩn bị trạng thái."

#: ../../tutorials/algorithms/07_grover.ipynb:446
msgid "The ``qiskit.circuit.library.GroverOperator`` can be a good starting point and offers more options for an automated construction of the Grover operator. You can for instance \\* set the ``mcx_mode`` \\* ignore qubits in the zero reflection by setting ``reflection_qubits`` \\* explicitly exchange the :math:`\\mathcal{S_f}, \\mathcal{S_0}` and :math:`\\mathcal{A}` operations using the ``oracle``, ``zero_reflection`` and ``state_preparation`` arguments"
msgstr "``qiskit.circuit.library.GroverOperator`` là một điểm khởi đầu tốt và đưa ra nhiều lựa chọn cho việc xây dựng tự động của một toán tử Grover. Ví dụ: bạn có thể \\* đặt ``mcx_mode \\* bỏ quá các qubit trong phản xạ qua gốc bằng cách thay đổi ``reflection_qubits \\* tráo đổi các toán tử :math:`\\mathcal{S_f}, \\mathcal{S_0}` và :math:`\\mathcal{A}` bằng các tham số ``oracle``, ``zero_reflection`` và ``state_preparation``"

#: ../../tutorials/algorithms/07_grover.ipynb:457
msgid "For instance, imagine the good state is a three qubit state :math:`|111\\rangle` but we used 2 additional qubits as auxiliary qubits."
msgstr "Ví dụ, tưởng tượng trạng thái tốt và trạng thái có 3 qubit :math:`|111\\rangle` nhưng ta sử dụng thêm 2 qubit làm qubit phụ trợ."

#: ../../tutorials/algorithms/07_grover.ipynb:491
msgid "Then, per default, the Grover operator implements the zero reflection on all five qubits."
msgstr "Sau đó, như mặc định, toán tử Grover thực hiện phản chiếu gốc trên cả năm qubit."

#: ../../tutorials/algorithms/07_grover.ipynb:522
msgid "But we know that we only need to consider the first three:"
msgstr "Nhưng chúng ta biết rằng chỉ cần xem xét 3 cái đầu tiên:"

#: ../../tutorials/algorithms/07_grover.ipynb:554
msgid "Dive into other arguments of ``Grover``"
msgstr "Đi sâu vào các tham số khác của ``Grover``"

#: ../../tutorials/algorithms/07_grover.ipynb:556
msgid "``Grover`` has arguments other than ``oracle`` and ``state_preparation``. We will explain them in this section."
msgstr "``Grover`` có các tham số khác ngoài ``oracle`` và ``state_preparation``. Chúng ta sẽ giải thích chúng trong phần này."

#: ../../tutorials/algorithms/07_grover.ipynb:559
msgid "Specifying ``good_state``"
msgstr "Xác định ``good_state``"

#: ../../tutorials/algorithms/07_grover.ipynb:561
msgid "``good_state`` is used to check whether the measurement result is correct or not internally. It can be a list of binary strings, a list of integer, ``Statevector``, and Callable. If the input is a list of bitstrings, each bitstrings in the list represents a good state. If the input is a list of integer, each integer represent the index of the good state to be :math:`|1\\rangle`. If it is a ``Statevector``, it represents a superposition of all good states."
msgstr "``good_state`` được dùng để kiểm tra nội bộ xem kết quả đo là đúng hay không. Nó có thể là một danh sách các chuỗi nhị phân, một dãy số nguyên, ``Statevector``, và Callable. Nếu đầu vào là một chuỗi xâu bit, mỗi chuỗi bit trong dãy biểu diễn một trạng thái tốt. Nếu đầu vào là một dãy số nguyên, mỗi số nguyên biểu diễn cho vị trí của trạng thái tốt là :math:`|1\\rangle`. Nếu đầu vào lại là một ``Statevector``, nó biểu diễn cho sự chồng chập của tất cả các trạng thái tốt."

#: ../../tutorials/algorithms/07_grover.ipynb:715
msgid "The number of ``iterations``"
msgstr "Số lượng ``iterations``"

#: ../../tutorials/algorithms/07_grover.ipynb:717
msgid "The number of repetition of applying the Grover operator is important to obtain the correct result with Grover’s algorithm. The number of iteration can be set by the ``iteration`` argument of ``Grover``. The following inputs are supported: \\* an integer to specify a single power of the Grover operator that’s applied \\* or a list of integers, in which all these different powers of the Grover operator are run consecutively and after each time we check if a correct solution has been found"
msgstr "Số lần lặp lại việc áp dụng các toán tử Grover là rất quan trọng trong việc thu được kết quả đúng đối với thuật toán Grover. Số lần lặp lại có thể được đặt bởi tham số ``iteration`` của ``Grover``. Các đầu vào sau được hỗ trợ: \\* một số nguyên để xác định một số mũ duy nhất được áp dụng của toán tử Grover \\* hoặc một dãy số nguyên, trong đó các số mũ khác nhau của toán tử Grover được chạy liên tiếp nhau và sau mỗi lần chạy ta kiểm tra xem có tìm ra giải pháp đúng hay không"

#: ../../tutorials/algorithms/07_grover.ipynb:719
msgid "Additionally there is the ``sample_from_iterations`` argument. When it is ``True``, instead of the specific power in ``iterations``, a random integer between 0 and the value in ``iteration`` is used as the power Grover’s operator. This approach is useful when we don’t even know the number of solution."
msgstr "Ngoài ra còn có tham số ``sample_from_iterations``. Khi nó là ``True``, một số nguyên bất kì từ 0 đến giá trị ở trong ``iteration`` được dùng làm số mũ của toán tử Grover thay cho chức năng cụ thể ở trong ``iterations``. Cách làm này khá hữu ích nếu chúng ta không biết số lượng giải pháp."

#: ../../tutorials/algorithms/07_grover.ipynb:721
msgid "For more details of the algorithm using ``sample_from_iterations``, see [4]."
msgstr "Để biết thêm chi tiết về thuật toán sử dụng ``sample_from_iterations`` xem [4]."

#: ../../tutorials/algorithms/07_grover.ipynb:725
msgid "[4]: Boyer et al., Tight bounds on quantum searching `arxiv:quant-ph/9605034 <https://arxiv.org/abs/quant-ph/9605034>`__"
msgstr "[4]: Boyer et al., Giới hạn chặt chẽ đối với tìm kiếm lượng tử `arxiv:quant-ph/9605034 <https://arxiv.org/abs/quant-ph/9605034>`__"

#: ../../tutorials/algorithms/07_grover.ipynb:775
msgid "When the number of solutions is known, we can also use a static method ``optimal_num_iterations`` to find the optimal number of iterations. Note that the output iterations is an approximate value. When the number of qubits is small, the output iterations may not be optimal."
msgstr "Khi chúng ta biết số lượng giải pháp, ta có thể sự dụng phương pháp tĩnh ``optimal_num_operations`` để tìm số lần lặp lại tối ưu. Lưu ý rằng các đầu ra là một giá trị xấp xỉ. Khi số lượng qubit bé, các lần lặp lại đầu ra có thể không tối ưu."

#: ../../tutorials/algorithms/07_grover.ipynb:818
msgid "Applying ``post_processing``"
msgstr "Áp dụng ``post_processing``"

#: ../../tutorials/algorithms/07_grover.ipynb:820
msgid "We can apply an optional post processing to the top measurement for ease of readability. It can be used e.g. to convert from the bit-representation of the measurement ``[1, 0, 1]`` to a DIMACS CNF format ``[1, -2, 3]``."
msgstr "Ta có thể tùy chọn áp dụng việc xử lý sau vào phép đo hàng đầu để tăng sự dễ đọc. Nó có thể được dùng, ví dụ, để chuyển đổi từ biểu diễn bit của phép đo ``[1, 0, 1]`` sang dạng DIMACS CNF ``[1, -2, 3]``."

