msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-02 00:19+0000\n"
"PO-Revision-Date: 2021-04-09 04:09\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_convergence.po\n"
"X-Crowdin-File-ID: 9446\n"
"Language: vi_VN\n"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_convergence.ipynb`__."
msgstr "Trang này được tạo ra từ `tutorials/algorithms/02_vqe_convergence.ipynb`__."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/02_vqe_convergence.ipynb>`_."
msgstr "Chạy tương tác trong `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/02_vqe_convergence.ipynb>`_."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:9
msgid "Monitoring VQE convergence"
msgstr "Giám sát sự hội tụ của VQE"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:11
msgid "Variational algorithms in Qiskit, like `VQE <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQE.html>`__ and `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__, provide the option for a user to give a callback method that can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "Thuật toán biến phân (variational) trong Qiskit như `VQE <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.VQE.html>`__ và `QAOA <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.QAOA.html>`__, cung cấp lựa chọn cho người dùng một phương thức callback có thể dùng để giám sát quá trình tối ưu khi thuật toán chạy và hội tụ về cực tiểu. Callback được gọi đến cho mỗi đánh giá hàm với optimizer và cung cấp giá trị optimizer hiện tại, số lượng đánh giá, tham số đánh giá hiện tại optimizer parameters, vân vân. Chú ý rằng phụ thuộc vào optimizer cụ thể, nó có thể không là các bước lặp của optimizer, ví dụ nếu optimizer gọi hàm mất mát để tính gradient dựa trên sai phân hữu hạn, nó sẽ hiển thị được qua callback."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:14
msgid "This notebook demonstrates using Qiskit’s VQE algorithm to plot graphs of the convergence path to ground state energy with a selected set of optimizers."
msgstr "Notebook này minh họa sử dụng thuật toán VQE của Qiskit vẽ các đồ thị đường hội tụ đến trạng thái cơ bản với tập các optimizers được lựa chọn."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:44
msgid "First we create a qubit operator for VQE. Here we will use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Chemistry for an H2 molecule."
msgstr "Đầu tiên, ta tạo một toán tử qubit cho VQE. Ở đây, ta sẽ sử dụng toán tử như đã dùng ở phần giới thiệu thuật toán mà ban đầu được tính ở Qiskit Chemistry cho một phân tử H2."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:69
msgid "We will show the callback usage below over a set of optimizers for comparison. The minimum energy of the H2 Hamiltonian can be found quite easily so we are able to set maxiters to a small value"
msgstr "Ta sẽ biểu diễn việc sử dụng callback dưới đây qua một tập hợp các optimizers để so sánh. Giá trị cực tiểu năng lượng của Hamilton H2 có thể tìm được dễ dàng, do đó ta có thể đặt maxiters bằng một giá trị nhỏ"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:129
msgid "Now from the callback data we stored we can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr "Bây giờ từ dữ diệu callback đã lưu, ta có thể vẽ giá trị năng lượng tại mỗi lần gọi hàm mục tiêu (objective function) mỗi optimizer tạo ra. Một optimizer sử dụng phương pháp sai phân hữu hạn để tính gradient có đường đặc trưng như đồ thị, trong đó với một số lượng các đánh giá, nó tính giá trị các điểm gần sát nhau để dựng gradient (các điểm gần sát nhau có giá trị rất gần nhau mà sai phân không thể nhìn đối với thang của đồ thị ở đây)."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:164
msgid "Finally since the above problem is still easily tractable classically we can use NumPyMinimumEigensolver to compute a reference value for the solution. We can now plot the difference from the resultant exact solution as the energy converges with VQE towards the minimum value which should be that exact classical solution."
msgstr "Cuối cùng, do bài toán trên dễ dàng giải được một cách cổ điển, ta có thể sử dụng NumPyMinimumEigensolver để tính giá trị tham chiếu (reference) cho nghiệm tìm được. Bây giờ, ta có thể vẽ sự khác biệt từ nghiệm chính xác cuối cùng khi năng lượng hội tụ với VQE tới giá trị cực tiểu thu được với nghiệm cổ điển chính xác."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:233
msgid "Using Gradient framework"
msgstr "Sử dụng Gradient framework"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:235
msgid "Qiskit now has a Gradient framework as part of the Operator capability. With the gradient computed for the optimizer we now see just the optimization steps themselves."
msgstr "Qiskit hiện nay có Gradient framework như một phần của Operator capability. Với gradient tính từ optimizer ta có thể quan sát các bước tối ưu."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:316
msgid "Monitoring via the logging"
msgstr "Giám sát thông qua logging"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:318
msgid "Much of the code is instrumented with `Python logging <https://docs.python.org/3/library/logging.html>`__ statements. The logging is configurable to adjust level of logging etc. An easy way to enable logging in the ``qiskit.aqua`` module is to run the following code, where here we set the logging level to ``INFO``"
msgstr "Phần lớn mã được thiết kế với ` Python logging <https://docs.python.org/3/library/logging.html>` __ statements. Logging có thể cấu hình để điều chỉnh mức v.v... Một cách dê ̃ dàng để kích hoạt logging trong ̀ Qiskit.aqua ` ` mô-đun là chạy mã sau đây, ở đây chúng tôi đặt mức logging là ` ` INFO ` `"

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:343
msgid "and at INFO level logging VQE will include information on the evaluations, as below."
msgstr "và tại mức logging INFO, VQE sẽ bao gồm thông tin của các đánh giá như dưới đây."

#: ../../tutorials/algorithms/02_vqe_convergence.ipynb:345
msgid "``020-11-04 16:55:33,450:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-8.88931977] - 6801.61572 (ms), eval count: 1 2020-11-04 16:55:34,463:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-8.88931977] - 1012.12025 (ms), eval count: 2 2020-11-04 16:55:35,483:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-8.88931977] - 1019.99474 (ms), eval count: 3 2020-11-04 16:55:36,646:qiskit.aqua.algorithms.minimum_eigen_solvers.vqe:INFO: Energy evaluation returned [-8.88931977] - 1162.09555 (ms), eval count: 4``"
msgstr ""

