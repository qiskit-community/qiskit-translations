msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-04-21 22:19+0000\n"
"PO-Revision-Date: 2022-04-21 23:33\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/01_algorithms_introduction.po\n"
"X-Crowdin-File-ID: 9444\n"
"Language: vi_VN\n"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:10
msgid "This page was generated from `tutorials/algorithms/01_algorithms_introduction.ipynb`__."
msgstr "Trang này được tạo từ `tutorials/algorithms/01_algorithms_introduction.ipynb`__."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:9
msgid "An Introduction to Algorithms in Qiskit"
msgstr "Mở đầu về thuật toán trong Qiskit"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:11
msgid "This is an introduction to algorithms in Qiskit and provides a high-level overview to help understand the various aspects of the functionality to get started. Other tutorials will provide more in-depth material, on given algorithms, and ways to use them etc."
msgstr "Phần mở đầu này giới thiệu về các thuật toán trong Qiskit và cung cấp một cái nhìn tổng quan để giúp hiểu rõ các khía cạnh khác nhau của cách vận hành để có thể bắt đầu làm việc. Các hướng dẫn khác sẽ cung cấp nhiều chi tiết sâu hơn, trên những thuật toán nhất định, và cách sử dụng chúng, vv."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:23
msgid "How is the algorithm library structured?"
msgstr "Thư viện thuật toán được tổ chức thế nào?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:25
msgid "Qiskit provides a number of `Algorithms <https://qiskit.org/documentation/apidoc/algorithms.html>`__ and they are grouped by category according to the task they can perform. For instance ``Minimum Eigensolvers`` to find the smallest eigen value of an operator, for example ground state energy of a chemistry Hamiltonian or a solution to an optimization problem when expressed as an Ising Hamiltonian. There are ``Linear Solvers`` for linear systems of equations problems and ``Amplitude Estimators`` for value estimation that can be used say in financial applications. The full set of categories can be seen in the Algorithms documentation link above."
msgstr "Qiskit cung cấp một số `Thuật toán <https://qiskit.org/documentation/apidoc/qiskit.aqua.algorithms.html>` __ và chúng được sắp xếp thành các danh mục dựa vào hành động mà chúng có thể thực hiện. Trong trường hợp của ``Minimum Eigensolvers`` chúng ta có thể tìm trị riêng nhỏ nhất của một toán tử, ví dụ như năng lượng của trạng thái cơ bản của một Hamiltonian hóa học, hoặc đáp số cho bài toán tối ưu hóa được viết dưới dạng mô hình Ising. Chúng ta cũng có ``Linear Solvers`` để giải các hệ phương trình tuyến tính và ``Amplitude Estimators`` để ước lượng giá trị có thể được sử dụng trong các ứng dụng tài chính. Danh sách đầy đủ của các danh mục ở trong đường link về thuật toán ở trên."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:28
msgid "Algorithms are configurable and often part of the configuration will be in the form of smaller building blocks, of which different instances of the building block type can be given. For instance with ``VQE``, the Variational Quantum Eigensolver, it takes a trial wavefunction, in the form of a ``QuantumCircuit`` and a classical optimizer among other things."
msgstr "Các thuật toán có thể được thiết lập và thường thì một phần của sự thiết lập sẽ ở dưới dạng cài đặt các khối nhỏ hơn, trong đó mỗi thực thể khác nhau của khối sẽ được cho sẵn. Ví dụ như trong trường hợp của ``VQE``, thuật toán lượng tử dùng để tìm giới hạn trên của trị riêng nhỏ nhất, chúng cần một hàm sóng thử nghiệm, dưới dạng một mạch lượng tử và một phép tối ưu hóa cổ điển trong số những thứ khác."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:30
msgid "Let’s take a look at an example to construct a VQE instance. Here ``TwoLocal`` is the variational form (trial wavefunction), a parameterized circuit which can be varied, and ``SLSQP`` a classical optimizer. These are created as separate instances and passed to VQE when it is constructed. Trying, for example, a different classical optimizer, or variational form is simply a case of creating an instance of the one you want and passing it into VQE."
msgstr "Hãy xem một ví dụ để xây dựng một VQE. Ở đây ``TwoLocal`` là dạng biến đổi (hàm sóng thử nghiệm), một mạch tham số có thể thay đổi, và ``SLSQP`` một bộ tối ưu cổ điển. Chúng được tạo như là các đơn vị riêng biệt và đưa cho VQE khi nó được xây dựng. Thử, ví dụ, một bộ tối ưu hóa cổ điển khác, hoặc dạng biến đổi (variational form) chỉ đơn giản là một một thực thể của mạch mà bạn muốn và đưa nó vào VQE."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:58
msgid "Let’s draw the ansatz so we can see it’s a QuantumCircuit where θ[0] through θ[7] will be the parameters that are varied as VQE optimizer finds the minimum eigenvalue. We’ll come back to the parameters later in a working example below."
msgstr "Chúng ta hãy vẽ ansatz để có thể thấy nó là một mạch với từ θ[0] đến θ[7] là các tham số để VQE tìm trị riêng nhỏ nhất. Chúng ta sẽ quay lại với các tham số sau, khi làm việc với một ví dụ dưới đây."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:132
msgid "But more is needed before we can run the algorithm so let’s get to that next."
msgstr "Nhưng cần nhiều hơn nữa trước khi chúng ta có thể chạy thuật toán, nên hãy tiếp tục đã."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:144
msgid "How to run an algorithm?"
msgstr "Làm thế nào để chạy một thuật toán?"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:146
msgid "In order to run an algorithm we need to have backend, a simulator or real device, on which the circuits that comprise the algorithm can be run. So for example we can use the ``aer_simulator_statevector`` from the Aer provider."
msgstr "Để chạy một thuật toán chúng ta cần phải có phần sau, một phép mô phỏng hoặc một thiết bị thực, mà trên đó các mạch biểu diễn một thuật toán có thể chạy được. Ví dụ, chúng ta có thể sử dụng ``statevector_simulator`` từ Aer provider."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:169
msgid "Now a backend on its own does not have information on how you might want to run the circuits etc. For example how many shots, do you want a noise model, even options around transpiling the circuits. For this Qiskit Terra has a `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ which is provided both the backend as well as various settings around the circuit processing and execution so for instance:"
msgstr "Một phần sau không thể tự có thông tin về cách bạn muốn mạch được chạy. Ví dụ như bao nhiêu lần chạy, hay bạn có muốn thêm một mô hình nhiễu động không, và cả các lựa chọn khác về việc biên dịch mạch. Qiskit Terra có `QuantumInstance <https://qiskit.org/documentation/stubs/qiskit.utils.QuantumInstance.html>`__ dành cho điều này, cung cấp cả phần sau lẫn những cài đặt xung quanh việc xử lý và thực thi các mạch, ví dụ như:"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:193
msgid "Note: if you provide the backend directly then internally a QuantumInstance will be created from it, with default settings, so at all times the algorithms are working through a QuantumInstance."
msgstr "Lưu ý: nếu sau đó bạn cung cấp backend trực tiếp thì một QuantumInstance sẽ được tạo từ nó, với thiết lập mặc định, vì vậy các thuật toán đang hoạt động thông qua một QuantumInstance mọi lúc."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:195
msgid "So now we would be able to call the `compute_mininum_eigenvalue() <https://qiskit.org/documentation/stubs/qiskit.algorithms.VQE.html#qiskit.algorithms.VQE.compute_minimum_eigenvalue>`__ method. The latter is the interface of choice for the application modules, such as Nature and Optimization, in order that they can work interchangeably with any algorithm within the specific category."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:207
msgid "A complete working example"
msgstr "Một ví dụ hoàn chỉnh"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:209
msgid "Let’s put what we have learned from above together and create a complete working example. VQE will find the minimum eigenvalue, i.e. minimum energy value of a Hamiltonian operator and hence we need such an operator for VQE to work with. Such an operator is given below. This was originally created by the Nature application module as the Hamiltonian for an H2 molecule at 0.735A interatomic distance. It’s a sum of Pauli terms as below, but for now I am not going to say anything further about it since the goal is to run the algorithm, but further information on operators can be found in other tutorials."
msgstr "Hãy tổng hợp lại những gì chúng ta đã học được ở trên và tạo ra một ví dụ hoàn chỉnh. VQE sẽ tìm giá trị riêng tối thiểu, tức là giá trị năng lượng tối thiểu của một toán tử Hamiltonian, do đó chúng ta cần một toán tử như vậy để VQE có thể hoạt động. Toán tử như vậy được đưa ra dưới đây. Điều này ban đầu được tạo ra bởi mô-đun ứng dụng Nature như là toán tử Hamiltonian dành cho cho một phân tử H2 với khoảng cách giữa các nguyên tử là 0.735A. Đó là tổng của các toán tử Pauli như bên dưới, tôi sẽ không đi sâu vào điều này vì mục tiêu là chạy thuật toán, nhưng bạn có thể tìm thấy thêm thông tin về các toán tử trong các hướng dẫn khác."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:237
msgid "So let’s build a VQE instance passing a backend using a QuantumInstance, to the constructor. Now VQE does have setters so the QuantumInstance can also be passed later."
msgstr "Vậy ta hãy xây dựng một thực thể VQE đi qua một phần sau sử dụng QuantumInstance, đến hàm tạo. Bây giờ VQE đã có các cài đặt cần thiết để QuantumInstance cũng có thể được thông qua sau đó."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:239
msgid "Note: In order that you can run this notebook and see the exact same output the random number generator used throughout algorithms in algorithms_globals, as well as the transpiler and simulator, via the QuantumInstance, are seeded. You do not have to do this but if want to be able to reproduce the exact same outcome each time then this is how it’s done."
msgstr "Lưu ý: Để bạn có thể chạy notebook này và luôn quan sát được cùng một kết quả thì bộ tạo số ngẫu nhiên sử dụng xuyên suốt các thuật toán của algorithms_globals, cũng như trình vận chuyển và trình mô phỏng, thông qua QuantumInstance, phải được tái lập lại (gieo hạt). Bạn không cần phải làm điều này nhưng nếu bạn muốn có thể tái tạo lại cùng một kết quả chính xác mỗi lần, đây là cách nó được thực hiện."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:241
msgid "So let’s run VQE and print the result object it returns."
msgstr "Do đó, hãy cùng chạy VQE và xuất đối tượng kết quả trả về."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:345
msgid "From the above result we can see it took the optimizer ``65`` evaluations of parameter values until it found the minimum eigenvalue of ``-1.85727`` which is the electronic ground state energy of the given H2 molecule. The optimal parameters of the ansatz can also be seen which are the values that were in the ansatz at the minimum value."
msgstr ""

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:357
msgid "Using VQE setting QuantumInstance after Construction"
msgstr "Sử dụng VQE thiết lập QuantumInstance sau khi xây dựng"

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:359
msgid "To close off let’s also create a VQE instance without supplying the QuantumInstance. We later set it as long as by the time VQE runs it has a QuantumInstance to use."
msgstr "Để kết thúc chúng ta cũng cần tạo ra một thực thể VQE mà không cung cấp QuantumInstance. Sau đó, chúng tôi đã đặt nó một thời gian dài bằng thời gian VQE điều hành nó có một QuantumInstance để sử dụng."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:463
msgid "As the identical seeding was used as the prior example the result can be seen to be the same."
msgstr "Vì các seeding giống nhau đã được sử dụng làm ví dụ như trước, kết quả có thể được xem là như nhau."

#: ../../tutorials/algorithms/01_algorithms_introduction.ipynb:474
msgid "This concludes this introduction to algorithms in Qiskit. Please check out the other algorithm tutorials in this series for both broader as well as more in depth coverage of the algorithms."
msgstr "Phần này kết thúc mục giới thiệu về các thuật toán trong Qiskit. Vui lòng xem các hướng dẫn thuật toán khác trong loạt bài này để biết cả phạm vi rộng hơn cũng như chuyên sâu hơn về các thuật toán."

