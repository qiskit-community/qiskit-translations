msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-05 12:11+0000\n"
"PO-Revision-Date: 2023-06-05 13:30\n"
"Last-Translator: \n"
"Language: de\n"
"Language-Team: German\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/deprecation_policy.po\n"
"X-Crowdin-File-ID: 9836\n"

#: ../../deprecation_policy.rst:3
msgid "Deprecation Policy"
msgstr "Deprecation-Richtlinie"

#: ../../deprecation_policy.rst:5
msgid "Many users and other packages depend on different parts of Qiskit.  We must make sure that whenever we make changes to the code, we give users ample time to adjust without breaking code that they have already written."
msgstr "Viele Benutzer und andere Pakete hängen von verschiedenen Teilen von Qiskit ab.  Wir müssen daher sicherstellen, dass wir den Benutzern bei jeder Änderung des Codes ausreichend Zeit geben, notwendige Anpassungen durchzuführen, damit ihr bereits geschriebener Code weiter funktioniert."

#: ../../deprecation_policy.rst:9
msgid "Most importantly: *do not* change any interface that is public-facing unless we absolutely have to.  Adding things is ok, taking things away is annoying for users but can be handled reasonably with plenty notice, but changing behavior generally means users cannot write code that will work with two subsequent versions of Qiskit, which is not acceptable."
msgstr "Wichtig ist:  Ändern Sie *keine*  Schnittstelle, die öffentlich zugänglich ist, es sei denn, wir müssen es unbedingt tun. Hinzufügen ist in Ordnung, Dinge wegnehmen ist lästig für Benutzer, kann aber mit viel Vorsicht gehandhabt werden. Aber das Ändern des Verhaltens einer Schnittstelle bedeutet in der Regel, dass Benutzer keinen Code schreiben können, der mit zwei späteren Versionen von Qiskit funktioniert, was nicht akzeptabel ist."

#: ../../deprecation_policy.rst:15
msgid "Beware that users will often be using functions, classes and methods that we, the Qiskit developers, may consider internal or not widely used.  Do not make assumptions that \"this is buried, so nobody will be using it\"; if it is public, it is subject to the policy.  The only exceptions here are functions and modules that are explicitly internal, *i.e.* those whose names begin with a leading underscore (``_``)."
msgstr "Beachten Sie, dass Benutzer häufig Funktionen, Klassen und Methoden verwenden werden, die wir, die Qiskit-Entwickler, als intern oder nicht weit verbreitet ansehen. Gehen Sie nicht davon aus, dass diese Funktionen etc so versteckt sind, dass sie niemand verwenden wird;  wenn sie öffentlich sind, unterliegen sie den üblichen Regeln.  Die einzigen Ausnahmen sind hier Funktionen und Module, die explizit intern sind, d. h. diejenigen, deren Namen mit einem führenden Unterstrich beginnen (``_``)."

#: ../../deprecation_policy.rst:22
msgid "The guiding principles are:"
msgstr "Die Leitprinzipien sind:"

#: ../../deprecation_policy.rst:24
msgid "we must not remove or change code without active warnings for least three months or two complete version cycles;"
msgstr "wir dürfen mindestens drei Monate oder zwei vollständige Versionszyklen lang keinen Code ohne aktive Warnungen entfernen oder ändern;"

#: ../../deprecation_policy.rst:27
msgid "there must always be a way to achieve valid goals that does not issue any warnings;"
msgstr "es muss immer eine Möglichkeit geben, gültige Ziele zu erreichen, die keine Warnungen auslösen;"

#: ../../deprecation_policy.rst:30
msgid "never assume that a function that isn't explicitly internal isn't in use;"
msgstr "gehen Sie nicht davon aus, dass eine Funktion, die nicht ausdrücklich intern ist, nicht verwendet wird;"

#: ../../deprecation_policy.rst:32
msgid "all deprecations, changes and removals are considered API changes, and can only occur in minor releases not patch releases, per the :ref:`stable branch policy <stable_branch_policy>`."
msgstr "alle Abkündigungen, Änderungen und Entfernungen werden als API-Änderungen betrachtet und können nur in untergeordneten Versionen, nicht in Patch-Versionen auftreten, gemäß der :ref:` stable branch policy <stable_branch_policy>`."

#: ../../deprecation_policy.rst:39
msgid "Removing a feature"
msgstr "Eine Funktion entfernen"

#: ../../deprecation_policy.rst:41
msgid "When removing a feature (for example a class, function or function parameter), we will follow this procedure:"
msgstr "Beim Entfernen einer Funktion (z. B. einer Klasse, einer Funktion oder eines Funktionsparameters) folgen wir dieser Prozedur:"

#: ../../deprecation_policy.rst:44
msgid "The alternative path must be in place for one minor version before any warnings are issued.  For example, if we want to replace the function ``foo()`` with ``bar()``, we must make at least one release with both functions before issuing any warnings within ``foo()``.  You may issue ``PendingDeprecationWarning``\\ s from the old paths immediately."
msgstr "Der alternative Pfad muss für eine untergeordnetete Version vorhanden sein, bevor Warnungen ausgegeben werden. Zum Beispiel, wenn wir die Funktion ``foo()`` durch ``bar()`` ersetzen wollen, müssen wir mindestens eine Version mit beiden Funktionen veröffentlichen, bevor wir in ``foo()`` Warnungen ausgeben. Du kannst ``PendingDeprecationWarning``\\ s von den alten Pfaden auch sofort anzeigen lassen."

#: ../../deprecation_policy.rst:50
msgid "*Reason*: we need to give people time to swap over without breaking their code as soon as they upgrade."
msgstr "*Grund*: Wir müssen den Benutzern Zeit zum Anpassen geben, ohne ihren Code unbrauchbar zu machen, sobald sie aktualisieren."

#: ../../deprecation_policy.rst:53
msgid "After the alternative path has been in place for at least one minor version, :ref:`issue the deprecation warnings <issuing-deprecation-warnings>`.  Add a release note with a ``deprecations`` section listing all deprecated paths, their alternatives, and the reason for deprecation.  :ref:`Update the tests to test the warnings <testing-deprecated-functionality>`."
msgstr "Nachdem der alternative Pfad für mindestens eine kleine Version vorhanden ist, gibt :ref:`die Deprecation Warnungen <issuing-deprecation-warnings>` aus. Füge eine Versionsnotiz mit einem ``deprecations`` Hinweis hinzu, die alle veralteten Pfade, ihre Alternativen und den Grund für die Deprecation auflistet.  :ref:`Aktualisiere die Tests, um die Warnungen <testing-deprecated-functionality> ` zu testen."

#: ../../deprecation_policy.rst:59
msgid "*Reason*: removals must be highly visible for at least one version, to minimize the surprise to users when they actually go."
msgstr "*Grund*: Entfernungen müssen für mindestens eine Version sehr sichtbar sein, um die Überraschung für Benutzer zu minimieren, wenn die Entfernungen dann tatsächlich durchgeführt wurden."

#: ../../deprecation_policy.rst:62
msgid "Set a removal date for the old feature, and remove it (and the warnings) when reached.  This must be at least three months after the version with the warnings was first released, and cannot be the minor version immediately after the warnings.  Add an ``upgrade`` release note that lists all the removals.  For example, if the alternative path was provided in ``0.19.0`` and the warnings were added in ``0.20.0``, the earliest version for removal is ``0.22.0``, even if ``0.21.0`` was released more than three months after ``0.20.0``."
msgstr "Legen Sie ein Entfernungsdatum für das alte Feature fest und entfernen Sie es (und die Warnungen), wenn das Datum erreicht ist. Dies muss mindestens drei Monate nach der ersten Veröffentlichung der Version mit den Warnungen geschehen und kann nicht die untergeordnete Version nach den Warnungen sein. Füge eine ``Upgrade`` Release Notiz hinzu, die alle Entfernungen auflistet. Wenn zum Beispiel der alternative Pfad in ``0.19.0`` angegeben wurde und die Warnungen in ``0.20.0`` hinzugefügt wurden. 0.0``, dann ist die früheste Version für das Entfernen die Version ``0.22.0``, auch wenn ``0.21.0`` mehr als drei Monate nach ``0.20.0`` veröffentlicht wurde."

#: ../../deprecation_policy.rst:73
msgid "These are *minimum* requirements.  For removal of significant or core features, give users at least an extra minor version if not longer."
msgstr "Dies sind *Mindest* Anforderungen. Um signifikante oder Kernfunktionen zu entfernen, geben Sie den Benutzern mindestens eine zusätzliche untergeordnete Version Zeit, oder sogar länger."

#: ../../deprecation_policy.rst:76
msgid "*Reason*: there needs to be time for users to see these messages, and to give them time to adjust.  Not all users will update their version of Qiskit immediately, and some may skip minor versions."
msgstr "*Grund*: Es muss Zeit für die Benutzer geben, diese Nachrichten zu sehen und ihnen Zeit für die Anpassung zu geben. Nicht alle Benutzer werden ihre Version von Qiskit sofort aktualisieren, und einige könnten kleinere Versionen überspringen."

#: ../../deprecation_policy.rst:80
msgid "When a feature is marked as deprecated it is slated for removal, but users should still be able to rely on it to work correctly.  We consider a feature marked \"deprecated\" as frozen; we commit to maintaining it with critical bug fixes until it is removed, but we won't merge new functionality to it."
msgstr "Wenn eine Funktion als veraltet markiert wird, ist sie zur Entfernung vorgemerkt, aber die Benutzer sollten sich trotzdem darauf verlassen können, dass sie noch korrekt funktioniert. Wir betrachten eine mit \"veraltet\" markierte Funktion als eingefroren. Wir verpflichten uns, weiterhin kritische Fehlerkorrekturen für die Funktion durchzuführen, bis sie entfernt wird. Wir werden aber keine neuen Funktionen mit ihr zusammenführen."

#: ../../deprecation_policy.rst:87
msgid "Changing behavior"
msgstr "Verhaltensweise"

#: ../../deprecation_policy.rst:89
msgid "Changing behavior without a removal is particularly difficult to manage, because we need to have both options available for two versions, and be able to issue warnings.  For example, changing the type of the return value from a function will almost invariably involve making an API break, which is frustrating for users and makes it difficult for them to use Qiskit."
msgstr "Eine Verhaltensweise ohne Entfernung ist besonders schwer zu handhaben, weil wir beide Optionen für zwei Versionen haben und in der Lage sein müssen, Warnungen auszusprechen. Zum Beispiel bedeutet das Ändern des Typs des Rückgabewerts von einer Funktion fast ausnahmslos einen API-Bruch, was für Benutzer frustrierend ist und es ihnen erschwert, Qiskit zu verwenden."

#: ../../deprecation_policy.rst:95
msgid "The best solution here is often to make a new function, and then use :ref:`the procedures for removal <removing-features>` above."
msgstr "Die beste Lösung ist hier oftmals, eine neue Funktion zu erstellen und dann :ref:`die Prozeduren für das Entfernen von Funktionen <removing-features>` zu verwenden."

#: ../../deprecation_policy.rst:98
msgid "If you absolutely must change the behavior of existing code (other than fixing bugs), you will need to use your best judgment to apply the guiding principles at the top of this document.  The most appropriate warning for behavioral changes is usually ``FutureWarning``.  Some possibilities for how to effect a change:"
msgstr "Wenn Sie unbedingt das Verhalten von existierendem Code ändern müssen (abgesehen von der Beseitigung von Fehlern), müssen Sie nach bestem Wissen und Gewissen vorgehen, um die Richtlinien vom Anfang dieses Dokuments anzuwenden.  Die am besten geeignete Warnung für Veränderungen der Funktionsweise ist normalerweise ``FutureWarning``.  Einige Möglichkeiten, wie man eine Änderung durchführen kann:"

#: ../../deprecation_policy.rst:104
msgid "If you are changing the default behavior of a function, consider adding a keyword argument to select between old and new behaviors.  When it comes time, you can issue a ``FutureWarning`` if the keyword argument is not given (*e.g.* if it is ``None``), saying that the new value will soon become the default.  You will need to go through the normal deprecation period for removing this keyword argument after you have made the behavior change.  This will take at least six months to go through both cycles."
msgstr "Wenn Sie das Standardverhalten einer Funktion ändern, sollten Sie ein Keyword-Argument hinzufügen, um zwischen altem und neuem Verhalten zu wählen. Beim Aufruf der Funktion kann eine ``FutureWarning`` ausgegeben, werden, wenn das Keyword-Argument nicht angegeben wird (z.B. wenn es ``None`` ist) mit dem Hinweis, dass der neue Wert bald zur Standardeinstellung wird. Sie müssen die normale Deprecation Periode durchlaufen, um das Keyword-Argument zu entfernen, nachdem Sie die Änderung der Funktionsweise vorgenommen haben. Dies wird mindestens sechs Monate dauern, bis beide Zyklen durchlaufen sind."

#: ../../deprecation_policy.rst:112
msgid "If you need to change the return type of a function, consider adding a new function that returns the new type, and then follow the procedures for deprecating the old function."
msgstr "Wenn Sie den Rückgabetyp einer Funktion ändern möchten, sollten Sie eine neue Funktion hinzufügen, die den neuen Typ zurückgibt, und folgen Sie dann den Prozeduren für das Entfernen der alten Funktion."

#: ../../deprecation_policy.rst:116
msgid "If you need to accept a new input that you cannot distinguish from an existing possibility because of its type, consider letting it be passed by a different keyword argument, or add a second function that only accepts the new form."
msgstr "Wenn Sie eine neue Eingabe akzeptieren müssen, die Sie wegen ihres Typs nicht von einer bestehenden Möglichkeit unterscheiden können, sollten Sie die Eingabe durch ein anderes Keyword-Argument erwägen oder eine zweite Funktion hinzuzufügen, die nur das neue Formular akzeptiert."

#: ../../deprecation_policy.rst:124
msgid "Issuing deprecation warnings"
msgstr "Ausgabe von Warnhinweisen zur Abkündigung"

#: ../../deprecation_policy.rst:126
msgid "The proper way to raise a deprecation warning is to use the decorators ``@deprecate_arg`` and ``@deprecate_func`` from ``qiskit.utils.deprecation``. These will generate a standardized message and and add the deprecation to that function's docstring so that it shows up in the docs."
msgstr ""

#: ../../deprecation_policy.rst:142
msgid "Usually, you should set ``additional_msg: str `` with the format ``\"Instead, use ...\"`` so that people know how to migrate. Read those functions' docstrings for additional arguments like ``pending: bool`` and ``predicate``."
msgstr ""

#: ../../deprecation_policy.rst:146
msgid "If you are deprecating in a non-Terra repo, set ``package_name``, e.g. to ``qiskit-nature``. Alternatively, if you prefer to use your own decorator helpers, then have them call ``add_deprecation_to_docstring`` from ``qiskit.utils.deprecation``."
msgstr ""

#: ../../deprecation_policy.rst:150
msgid "If ``@deprecate_func`` and ``@deprecate_arg`` cannot handle your use case, consider improving them. Otherwise, you can directly call the ``warn`` function from the `warnings module in the Python standard library <https://docs.python.org/3/library/warnings.html>`__, using the category ``DeprecationWarning``.  For example:"
msgstr ""

#: ../../deprecation_policy.rst:170
msgid "Make sure you include the version of the package that introduced the deprecation warning (so maintainers can easily see when it is valid to remove it), and what the alternative path is."
msgstr "Vergewissern Sie sich, dass Sie die Version des Pakets mit einbeziehen, die die Deprecation-Warnung einführte (damit die Betreuer leichter sehen können, wann es möglich ist, das Paket zu entfernen) und was der alternative Pfad ist."

#: ../../deprecation_policy.rst:174
msgid "Take note of the ``stacklevel`` argument.  This controls which function is accused of being deprecated.  Setting ``stacklevel=1`` (the default) means the warning will blame the ``warn`` function itself, while ``stacklevel=2`` will correctly blame the containing function.  It is unusual to set this to anything other than ``2``, but can be useful if you use a helper function to issue the same warning in multiple places."
msgstr "Beachten Sie das ``stacklevel`` Argument. Damit wird gesteuert, welche Funktion abgekündigt wird. ``stacklevel=1`` (der Standard) bedeutet, dass die Warnung die ``warn`` Funktion selbst betrifft, während ``stacklevel=2`` die enthaltene Funktion korrekt angibt. Es ist ungewöhnlich, den Wert auf etwas anderes als ``2`` zu setzen, kann aber nützlich sein, wenn Sie eine Helfer-Funktion verwenden, um die gleiche Warnung an mehreren Orten auszulösen."

#: ../../deprecation_policy.rst:185
msgid "Testing deprecated functionality"
msgstr "Testen veralteter Funktionen"

#: ../../deprecation_policy.rst:187
msgid "Whenever you add deprecation warnings, you will need to update tests involving the functionality.  The test suite should fail otherwise, because of the new warnings.  We must continue to test deprecated functionality throughout the deprecation period, to ensure that it still works."
msgstr "Immer wenn Sie Warnhinweise auf Abkündigung einer Funktion hinzufügen, müssen Sie die Tests aktualisieren, die die Funktionalität betreffen. Die Testsuite sollte andernfalls wegen der neuen Warnungen fehlschlagen. Die veraltete Funktionalität muss auch während der Abkündigungsperiode getestet werden, um sicherzustellen, dass sie weiterhin funktioniert."

#: ../../deprecation_policy.rst:192
msgid "To update the tests, you need to wrap each call of deprecated behavior in its own assertion block.  For subclasses of ``unittest.TestCase`` (which all Qiskit test cases are), this is done by:"
msgstr "Um die Tests zu aktualisieren, müssen Sie jeden Aufruf veralteter Funktionsverhalten in einen eigenen \"assertion\"-Block platzieren. Für Unterklassen von ``unittest.TestCase`` (was alle Qiskit-Testfälle sind), geschieht dies durch:"

#: ../../deprecation_policy.rst:206
msgid "Documenting deprecations and breaking changes"
msgstr "Dokumentation von Abkündigungen und grundlegenden Änderungen"

#: ../../deprecation_policy.rst:208
msgid "It is important to warn the user when your breaking changes are coming."
msgstr ""

#: ../../deprecation_policy.rst:210
msgid "``@deprecate_arg`` and ``@deprecate_func`` will automatically add the deprecation to the docstring for the function so that it shows up in docs."
msgstr ""

#: ../../deprecation_policy.rst:213
msgid "If you are not using those decorators, you should directly add a `Sphinx deprecated directive <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#directive-deprecated>`__ ::"
msgstr ""

#: ../../deprecation_policy.rst:229
msgid "def deprecated_function():"
msgstr ""

#: ../../deprecation_policy.rst:219
msgid "\"\"\" Short description of the deprecated function."
msgstr ""

#: ../../deprecation_policy.rst:222
msgid "The function qiskit.deprecated_function() is deprecated since Qiskit Terra 0.20.0, and will be removed 3 months or more later. Instead, you should use qiskit.other_function()."
msgstr ""

#: ../../deprecation_policy.rst:227
msgid "<rest of the docstring> \"\"\" # ... the rest of the function ..."
msgstr ""

#: ../../deprecation_policy.rst:231
msgid "You should also document the deprecation in the changelog by using Reno. Explain the deprecation and how to migrate."
msgstr ""

#: ../../deprecation_policy.rst:234
msgid "In particular situations where a deprecation or change might be a major disruptor for users, a *migration guide* might be needed. Once the migration guide is written and published, deprecation messages and documentation should link to it (use the ``additional_msg: str`` argument for ``@deprecate_arg`` and ``@deprecate_func``)."
msgstr ""

