msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-16 11:25+0000\n"
"PO-Revision-Date: 2023-03-16 11:54\n"
"Last-Translator: \n"
"Language: de\n"
"Language-Team: German\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/02_vqe_advanced_options.po\n"
"X-Crowdin-File-ID: 9931\n"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:10
msgid "This page was generated from `tutorials/algorithms/02_vqe_advanced_options.ipynb`__."
msgstr "Diese Seite wurde aus `tutorials/circuits_advanced/1_advanced_circuits.ipynb`__ generiert."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:9
msgid "Advanced VQE Options"
msgstr "Erweiterte WQE Einstellungen"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:11
msgid "In the first algorithms tutorial, you learned how to set up a basic `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.minimum_eigensolvers.VQE.html>`__ algorithm. Now, you will see how to provide more advanced configuration parameters to explore the full range of capabilities of Qiskit's variational algorithms: `VQE <https://qiskit.org/documentation/stubs/qiskit.algorithms.minimum_eigensolvers.VQE.html>`__, `QAOA <https://qiskit.org/documentation/stubs/qiskit.algorithms.minimum_eigensolvers.QAOA.html>`__ and `VQD <https://qiskit.org/documentation/stubs/qiskit.algorithms.eigensolvers.VQD.html>`__ among others. In particular, this tutorial will cover how to set up a ``callback`` to monitor convergence and the use of custom ``initial point``\\ s and ``gradient``\\ s."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:24
msgid "Callback"
msgstr "Callback"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:35
msgid "Callback methods can be used to monitor optimization progress as the algorithm runs and converges to the minimum. The callback is invoked for each functional evaluation by the optimizer and provides the current optimizer value, evaluation count, current optimizer parameters etc. Note that, depending on the specific optimizer this may not be each iteration (step) of the optimizer, so for example if the optimizer is calling the cost function to compute a finite difference based gradient this will be visible via the callback."
msgstr "Rückrufmethoden können zur Überwachung der Optimierungsfortschritte verwendet werden, da der Algorithmus ausgeführt wird und auf das Minimum konvergiert. Der Callback wird für jede funktionale Auswertung durch das Optimierungsprogramm aufgerufen und stellt den aktuellen Optimierungsprogrammwert, die Auswertungsanzahl, die aktuellen Optimierungsparameter des Optimierungsprogramms usw. bereit. Beachten Sie, dass dies, abhängig vom jeweiligen Optimierungsprogramm, nicht jede Iteration (Schritt) des Optimierungsprogramms sein kann, so dass zum Beispiel, wenn das Optimierungsprogramm die Kostenfunktion aufruft, um einen endlichen Unterschied basierten Gradienten zu berechnen, dies über den Callback sichtbar ist."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:38
msgid "This section demonstrates how to leverage callbacks in ``VQE`` to plot the convergence path to the ground state energy with a selected set of optimizers."
msgstr "Dieser Abschnitt zeigt, wie man Callbacks in ``VQE`` nutzen kann, um den Konvergenzpfad zur Grundzustandsenergie mit einem ausgewählten Satz von Optimierern zu plotten."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:49
msgid "First, you need a qubit operator for VQE. For this example, you can use the same operator as used in the algorithms introduction, which was originally computed by Qiskit Nature for an H2 molecule."
msgstr "Zunächst benötigen Sie einen Qubit-Operator für VQE. Für dieses Beispiel können Sie den gleichen Operator wie in der Einführung der Algorithmen verwenden, der ursprünglich von Qiskit Nature für ein H2-Molekül berechnet wurde."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:80
msgid "The next step is to instantiate the ``Estimator`` of choice for the evaluation of expectation values within ``VQE``. For simplicity, you can select the ``qiskit.primitives.Estimator`` shipped with the default Qiskit Terra installation."
msgstr "Der nächste Schritt besteht darin, den ``Estimator`` der Wahl für die Auswertung der Erwartungswerte innerhalb von ``VQE`` zu instanziieren. Der Einfachheit halber können Sie den ``qiskit.primitives.Estimator`` wählen, der mit der Standardinstallation von Qiskit Terra geliefert wird."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:103
msgid "You are now ready to compare a set of optimizers through the ``VQE`` callback. The minimum energy of the H2 Hamiltonian can be found quite easily, so the maximum number of iterations (``maxiter``) does not have to be very large. You can once again use ``TwoLocal`` as the selected trial wavefunction (i.e. ansatz)."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:176
msgid "Now, from the callback data you stored, you can plot the energy value at each objective function call each optimizer makes. An optimizer using a finite difference method for computing gradient has that characteristic step-like plot where for a number of evaluations it is computing the value for close by points to establish a gradient (the close by points having very similar values whose difference cannot be seen on the scale of the graph here)."
msgstr "Anhand der gespeicherten Rückrufdaten können Sie nun den Energiewert bei jedem Aufruf der Zielfunktion durch den Optimierer aufzeichnen. Ein Optimierer, der eine Finite-Differenzen-Methode zur Berechnung des Gradienten verwendet, hat diese charakteristische schrittweise Darstellung, bei der er für eine Reihe von Auswertungen den Wert für nahe beieinander liegende Punkte berechnet, um einen Gradienten zu ermitteln (die nahe beieinander liegenden Punkte haben sehr ähnliche Werte, deren Unterschied auf der Skala des Diagramms hier nicht zu sehen ist)."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:213
msgid "Finally, since the above problem is still easily tractable classically, you can use ``NumPyMinimumEigensolver`` to compute a reference value for the solution."
msgstr "Da das obige Problem klassisch immer noch leicht lösbar ist, können Sie ``NumPyMinimumEigensolver`` verwenden, um einen Referenzwert für die Lösung zu berechnen."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:264
msgid "You can now plot the difference between the ``VQE`` solution and this exact reference value as the algorithm converges towards the minimum energy."
msgstr "Sie können nun die Differenz zwischen der ``VQE``- Lösung und diesem exakten Referenzwert darstellen, während der Algorithmus gegen das Energieminimum konvergiert."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:305
msgid "Gradients"
msgstr "Gradienten"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:307
msgid "In Qiskit's variational algorithms, if the provided optimizer uses a gradient-based technique, the default gradient method will be finite differences. However, these classes include an option to pass custom gradients via the ``gradient`` parameter, which can be any of the provided methods within Qiskit's `gradient <https://qiskit.org/documentation/stubs/qiskit.algorithms.gradients.html>`__ framework, which fully supports the use of primitives. This section shows how to use custom gradients in the VQE workflow."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:310
msgid "The first step is to initialize both the corresponding primitive and primitive gradient:"
msgstr "Der erste Schritt besteht darin, sowohl das entsprechende Primitiv als auch den primitiven Gradienten zu initialisieren:"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:334
msgid "Now, you can inspect an SLSQP run using the ``FiniteDiffEstimatorGradient`` from above:"
msgstr "Nun können Sie einen SLSQP-Lauf mit Hilfe des ``FiniteDiffEstimatorGradient`` von oben untersuchen:"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:422
msgid "Initial point"
msgstr "Anfangspunkt"

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:424
msgid "By default, the optimization begins at a random point within the bounds defined by the ansatz. The ``initial_point`` option allows to override this point with a custom list of values that match the number of ansatz parameters."
msgstr "Standardmäßig beginnt die Optimierung an einem zufälligen Punkt innerhalb der durch den Ansatz definierten Grenzen. Die Option ``initial_point`` erlaubt es, diesen Punkt mit einer benutzerdefinierten Liste von Werten zu überschreiben, die der Anzahl der Ansatzparameter entspricht."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:426
msgid "You might wonder... *Why set a custom initial point?* Well, this option can come in handy if you have a guess for a reasonable starting point for the problem, or perhaps know information from a prior experiment."
msgstr ""

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:428
msgid "To demonstrate this feature, let's look at the results from our previous VQE run:"
msgstr ""

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:525
msgid "Now, you can take the ``optimal_point`` from the above result and use it as the ``initial_point`` for a follow-up computation."
msgstr "Nun können Sie den ``optimalen_Punkt`` aus dem obigen Ergebnis nehmen und ihn als ``Initial_Punkt`` für eine weitere Berechnung verwenden."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:527
msgid "**Note:** ``initial_point`` is now a keyword-only argument of the ``VQE`` class (i.e, it must be set following the ``keyword=value`` syntax)."
msgstr "**Anmerkung:** ``initial_point`` ist jetzt ein reines Schlüsselwort-Argument der Klasse ``VQE`` (d.h. es muss nach der Syntax ``keyword=value`` gesetzt werden)."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:676
msgid "By looking at the ``cost_function_evals`` you can notice how the initial point helped the algorithm converge faster (in just 1 iteration, as we already provided the optimal solution)."
msgstr "Wenn man sich die ``cost_function_evals`` ansieht, kann man feststellen, wie der Ausgangspunkt dem Algorithmus geholfen hat, schneller zu konvergieren (in nur 1 Iteration, da wir bereits die optimale Lösung geliefert haben)."

#: ../../tutorials/algorithms/02_vqe_advanced_options.ipynb:678
msgid "This can be particularly useful in cases where we have two closely related problems, and the solution to one problem can be used to guess the other's. A good example might be plotting dissociation profiles in chemistry, where we change the inter-atomic distances of a molecule and compute its minimum eigenvalue for each distance. When the distance changes are small, we expect the solution to still be close to the prior one. Thus, a popular technique is to simply use the optimal point from one solution as the starting point for the next step. There also exist more complex techniques, where we can apply extrapolation to compute an initial position based on prior solution(s) rather than directly use the prior solution."
msgstr ""

