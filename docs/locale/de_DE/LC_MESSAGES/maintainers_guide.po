msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 21:04+0000\n"
"PO-Revision-Date: 2023-03-08 11:05\n"
"Last-Translator: \n"
"Language: de\n"
"Language-Team: German\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/maintainers_guide.po\n"
"X-Crowdin-File-ID: 9838\n"

#: ../../maintainers_guide.rst:4
msgid "Maintainers Guide"
msgstr "Leitfaden für Maintainer"

#: ../../maintainers_guide.rst:6
msgid "This document defines a *maintainer* as a contributor with merge privileges. The information detailed here is mostly related to Qiskit releases and other internal processes."
msgstr "Dieses Dokument definiert einen *Maintainer* als einen Beitragenden mit Zusammenführungsrechten. Die hier beschriebenen Informationen beziehen sich hauptsächlich auf Qiskit-Releases und andere interne Prozesse."

#: ../../maintainers_guide.rst:12
msgid "Stable Branch Policy"
msgstr "Stable-Branch-Policy"

#: ../../maintainers_guide.rst:14
msgid "The stable branch is intended to be a safe source of fixes for high-impact bugs and security issues that have been fixed on master since a release. When reviewing a stable branch PR, we must balance the risk of any given patch with the value that it will provide to users of the stable branch. Only a limited class of changes are appropriate for inclusion on the stable branch. A large, risky patch for a major issue might make sense, as might a trivial fix for a fairly obscure error-handling case. A number of factors must be weighed when considering a change:"
msgstr "Der Stable-Branch ist als sichere Quelle für die Behebung von schwerwiegenden Fehlern und Sicherheitsproblemen gedacht, die seit einem Release auf Master-Branch behoben wurden. Bei der Überprüfung eines PRs für den stabilen Branch müssen wir das Risiko eines jeden Patches gegen den Wert abwägen, den er für die Benutzer des stabilen Branchs hat. Nur eine begrenzte Anzahl von Änderungen ist für die Aufnahme in den stabilen Branch geeignet. Ein großer, riskanter Patch für ein großes Problem könnte Sinn machen, ebenso wie ein trivialer Fix eines Code-Branchs zur Behandlung von relativ selten auftretenden Fehlern. Bei einer Änderung muss eine Reihe von Faktoren abgewogen werden:"

#: ../../maintainers_guide.rst:24
msgid "The risk of regression: even the tiniest changes carry some risk of breaking something, and we really want to avoid regressions on the stable branch."
msgstr "Das Risiko des Rückschritts: Selbst die kleinste Änderung bringt das Risiko mit sich, Fehler zu verursachen. Solche Rückschritte wollen wir auf dem Stable-Branch definitiv vermeiden."

#: ../../maintainers_guide.rst:27
msgid "The user visibility benefit: are we fixing something that users might actually notice, and if so, how important is it?"
msgstr "Der Vorteil verbesserter Sichtbarkeit für Benutzer: Beheben wir etwas, was die Benutzer tatsächlich bemerken werden, und wenn ja, wie wichtig ist es?"

#: ../../maintainers_guide.rst:29
msgid "How self-contained the fix is: if it fixes a significant issue but also refactors a lot of code, it's probably worth thinking about what a less risky fix might look like."
msgstr "Wie autark ist die Änderung: Wenn eine Änderung ein wichtiges Problem löst aber auch jede Menge Code überarbeitet, sollte man wahrscheinlich darüber nachdenken, wie ein weniger riskanter Fix aussehen könnte."

#: ../../maintainers_guide.rst:32
msgid "Whether the fix is already on master: a change must be a backport of a change already merged onto master, unless the change simply does not make sense on master."
msgstr "Gibt es die Korrektur bereits auf dem Master: Eine Änderung muss eine Rückportierung einer Änderung sein, die bereits auf dem Master zusammengeführt wurde, es sei denn, die Änderung ist auf dem Master einfach nicht sinnvoll."

#: ../../maintainers_guide.rst:39
msgid "Backporting procedure:"
msgstr "Rückportierungsverfahren:"

#: ../../maintainers_guide.rst:41
msgid "When backporting a patch from master to stable, we want to keep a reference to the change on master. When you create the branch for the stable PR, use::"
msgstr "Bei der Rückportierung einer Änderung vom Master in den Stable-Branch, wollen wir eine Referenz auf die Änderung im Master-Branch behalten. Beim Erstellen des Branches für den Pull-Request verwendet man::"

#: ../../maintainers_guide.rst:47
msgid "However, this only works for small self-contained patches from master. If you need to backport a subset of a larger commit (from a squashed PR, for example) from master, do this manually. In these cases, add::"
msgstr "Das funktioniert jedoch nur für kleine, in sich geschlossene Änderungen vom Master-Branch. Wenn man einen Teil eines größeren Commits (z. B. eines zusammengefassten Pull-Requests) vom Master rückportieren möchte, macht man dies manuell. In solchen Fällen fügt man dies hinzu::"

#: ../../maintainers_guide.rst:53
msgid "so that we can track the source of the change subset, even if a strict cherry-pick doesn\\'t make sense."
msgstr "um die Quelle der Änderungen nachvollziehen zu können - selbst wenn ein cherry-pick nicht sinnvoll wäre."

#: ../../maintainers_guide.rst:56
msgid "If the patch you're proposing will not cherry-pick cleanly, you can help by resolving the conflicts yourself and proposing the resulting patch. Please keep Conflicts lines in the commit message to help review of the stable patch."
msgstr "Wenn ein Cherry-Pick des Patches, den man vorschlägt, nicht ohne Konflikte verläuft, kann man diese selbst beheben und dann den resultierenden Patch vorschlagen. Um die Prüfung des Stable-Branch zu vereinfachen, belässt man dabei die Conflicts-Zeilen in der Commit-Nachricht."

#: ../../maintainers_guide.rst:64
msgid "Backport labels"
msgstr "Backport-Labels"

#: ../../maintainers_guide.rst:66
msgid "Bugs or PRs tagged with ``stable backport potential`` are bugs that apply to the stable release too and may be suitable for backporting once a fix lands in master. Once the backport has been proposed, the tag should be removed."
msgstr "Bugs oder Pull-Requests, welche mit dem Label ``stable backport potential`` gekennzeichnet wurden, kommen für eine Rückportierung in den Stable-Branch in Frage, sobald dafür ein Patch im Master-Branch ist. Sobald die Rückportierung geplant ist, sollte das Tag entfernt werden."

#: ../../maintainers_guide.rst:71
msgid "Include ``[Stable]`` in the title of the PR against the stable branch, as a sign that setting the target branch as stable was not a mistake. Also, reference to the PR number in master that you are porting."
msgstr "Um zu zeigen, dass die Auswahl des Stable-Branch als Ziel eines Pull-Requests kein Fehler war, verwenden Sie ``[Stable]`` im Titel. Zusätzlich geben Sie eine Referenz zum Pull-Request der Änderung im Master-Branch an, welche Sie rückportieren."

#: ../../maintainers_guide.rst:80
msgid "Qiskit Versioning"
msgstr "Qiskit-Versionierung"

#: ../../maintainers_guide.rst:82
msgid "The Qiskit project is made up of several elements each performing different functionality. Each is independently useful and can be used on their own, but for convenience we provide this repository and meta-package to provide a single entrypoint to install all the elements at once. This is to simplify the install process and provide a unified interface to end users. However, because each Qiskit element has its own releases and versions, some care is needed when dealing with versions between the different repositories. This document outlines the guidelines for dealing with versions and releases of both Qiskit elements and the meta-package."
msgstr "Das Qiskit-Projekt setzt sich aus mehreren Elementen zusammen, die jeweils unterschiedliche Funktionen ausführen. Jedes ist unabhängig nutzbar und kann für sich alleine verwendet werden. Dieses Repository und Meta-Paket wird aus Gründen der Vereinfachung zur Verfügung gestellt, um einen einzelnen Startpunkt zur Verfügung zu stellen alle Elemente auf einmal zu installieren. Durch die Bereitstellung einer einheitlichen Schnittstelle für die Endnutzer wird der Installationsvorgang vereinfacht. Da jedes Qiskit-Element seine eigenen Releases und Versionen hat, ist jedoch eine gewisse Pflege erforderlich, wenn es um Versionen zwischen den verschiedenen Repositorys geht. In diesem Dokument werden die Richtlinien für den Umgang mit Versionen und Releases von Qiskit-Elementen und dem Meta-Paket beschrieben."

#: ../../maintainers_guide.rst:92
msgid "For the rest of this guide the standard Semantic Versioning nomenclature will be used of: ``Major.Minor.Patch`` to refer to the different components of a version number. For example, if the version number was ``0.7.1``, then the major version is ``0``, the minor version ``7``, and the patch version ``1``."
msgstr "Für den Rest dieses Handbuchs wird die Standardnomenklatur Semantic Versioning verwendet werden: ``Major.Minor.Patch``, um auf die verschiedenen Komponenten einer Versionsnummer zu verweisen. Wenn z. B. die Versionsnummer ``0.7.1`` ist, dann ist die Hauptversion ``0``, die Nebenversion ``7`` und die Patch-Version ``1``."

#: ../../maintainers_guide.rst:99
msgid "Meta-package Version"
msgstr "Meta-Paketversion"

#: ../../maintainers_guide.rst:101
msgid "The Qiskit meta-package version is an independent value that is determined by the releases of each of the elements being tracked. Each time we push a release to a tracked component (or add an element) the meta-package requirements, and version will need to be updated and a new release published. The timing should be coordinated with the release of elements to ensure that the meta-package releases track with element releases."
msgstr "Die Metapaket-Version von Qiskit ist eine unabhängigere Einheit, die von den Releases der einzelnen Elemente bestimmt wird. Jedes Mal, wenn wir ein Release zu einer Tracking-Komponente bringen (oder ein Element hinzufügen) müssen die Meta-Paketanforderungen und Version aktualisiert, und ein neues Release veröffentlicht werden. Der Zeitpunkt sollte mit der Veröffentlichung von Elementen koordiniert werden, um sicherzustellen, dass die Meta-Paket-Releases mit den Elementversionen übereinstimmen."

#: ../../maintainers_guide.rst:109
msgid "Adding New Tracked Elements"
msgstr "Neue Elemente hinzufügen"

#: ../../maintainers_guide.rst:111
msgid "When a new Qiskit element is being added to the meta-package requirements, we need to increase the **Minor** version of the meta-package."
msgstr "Wenn ein neues Qiskit-Element zu den Meta-Paket-Anforderungen hinzugefügt wird, müssen wir die ** Minor** Version des Meta-Pakets erhöhen."

#: ../../maintainers_guide.rst:114
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-aer`` and ``qiskit-terra`` and its version is ``0.7.4``. Then we release a new element ``qiskit-new`` that we intend to also have included in the meta-package. When we add the new element to the meta-package we increase the version to ``0.8.0``."
msgstr "Beispiel: Ein Meta-Paket mit 2 Elementen ``qiskit-aer`` und ``qiskit-terra`` und der Version ``0.7.4``. Nun wird ein neues Element ``qiskit-neu`` veröffentlicht, das dann auch in das Meta-Paket aufgenommen werden soll. Wenn dieses neue Element zu dem Meta-Paket hinzugefügt wird, erhöht sich die Version auf ``0.8.0``."

#: ../../maintainers_guide.rst:122
msgid "Patch Version Increases"
msgstr "Patch-Version erhöhen"

#: ../../maintainers_guide.rst:124
msgid "When any Qiskit element that is being already tracked by the meta-package releases a patch version to fix bugs in a release, we need also bump the requirement in the ``setup.py`` and then increase the patch version of the meta-package."
msgstr "Wenn ein Qiskit-Element, das bereits vom Meta-Paket verfolgt wird, eine Patch-Version veröffentlicht, um Fehler in einem Release zu beheben, müssen wir auch die Anforderung im ``setup.py`` anpassen und dann die Patch-Version des Meta-Pakets erhöhen."

#: ../../maintainers_guide.rst:129
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.8.1`` and ``qiskit-aer==0.2.1``, with the current version ``0.9.6``. When qiskit-terra release a new patch version to fix a bug ``0.8.2`` the meta-package will also need to increase its patch version and release, becoming ``0.9.7``."
msgstr "Wenn zum Beispiel das Meta-Paket 2 Elemente ``qiskit-terra==0.8.1`` und ``qiskit-aer==0.2.1`` mit der aktuellen Version ``0.9.6`` verfolgt. Wenn qiskit-terra eine neue Patch-Version veröffentlicht, um einen Fehler ``0.8.2`` zu beheben. dann muss das Meta-Paket auch seine Patch-Version und -Veröffentlichung erhöhen und wird zu ``0.9.7``."

#: ../../maintainers_guide.rst:135
msgid "Additionally, there are occasionally packaging or other bugs in the meta-package itself that need to be fixed by pushing new releases. When those are encountered we should increase the patch version to differentiate it from the broken release. Do **not** delete the broken or any old releases from pypi in any situation, instead just increase the patch version and upload a new release."
msgstr "Zusätzlich gibt es gelegentlich Pakete oder andere Fehler im Meta-Paket selbst, die durch Veröffentlichung neuer Releases behoben werden müssen. Wenn diese aufgetreten sind, soll die Patchversion erhöht werden, um sie von der defekten Version zu unterscheiden. Defekte oder alte Versionen von pypi sollen **nicht** gelöscht werden. Stattdessen soll die Patch Version erhöht und eine entsprechend höhere Version hochgeladen werden."

#: ../../maintainers_guide.rst:143
msgid "Minor Version Increases"
msgstr "Geringfügige Versionserhöhungen"

#: ../../maintainers_guide.rst:145
msgid "Besides when adding a new element to the meta-package, the minor version of the meta-package should also be increased anytime a minor version is increased in a tracked element."
msgstr "Neben dem Hinzufügen eines neuen Elements zum Meta-Paket sollte auch die Nebenversion des Meta-Pakets erhöht werden, wenn eine Nebenversion in einem überwachten Element erhöht wird."

#: ../../maintainers_guide.rst:149
msgid "For example, if the meta-package is tracking 2 elements ``qiskit-terra==0.7.0`` and ``qiskit-aer==0.1.1`` and the current version is ``0.7.5``. When the ``qiskit-aer`` element releases ``0.2.0`` then we need to increase the meta-package version to be ``0.8.0`` to correspond to the new release."
msgstr "Zum Beispiel, wenn das Meta-Paket 2 Elemente ``qiskit-terra == 0.7.0 `` und ``qiskit-aer == 0.1.1 `` und die aktuelle Version ``0.7.5`` verfolgt. Wenn das `` qiskit-aer `` -Element ``0.2.0`` freigibt, müssen die Meta-Paket-Version auf ``0.8.0`` erhöht werden, um dem neuen Release zu entsprechen."

#: ../../maintainers_guide.rst:155
msgid "Major Version Increases"
msgstr "Eine Erhöhung der Hauptversion"

#: ../../maintainers_guide.rst:157
msgid "The major version is different from the other version number components. Unlike the other version number components, which are updated in lock step with each tracked element, the major version is only increased when all tracked versions are bumped (at least before ``1.0.0``). Right now, all the elements still have a major version number component of ``0``, and until each tracked element in the meta-repository is marked as stable by bumping the major version to be ``>=1``, then the meta-package version should not increase the major version."
msgstr "Die Hauptversion unterscheidet sich von den anderen Versionen. Im Gegensatz zu den anderen Versionen, die unmittelbar mit jedem verfolgten Element aktualisiert werden, wird die Hauptversion nur erhöht, wenn alle verfolgten Versionen abgestoßen werden (mindestens vor \"1.0.0\"). Im Moment haben alle Elemente noch eine Hauptversionsnummernkomponente von \"0\" und bis jedes verfolgte Element im Meta-Repository als stabil markiert wird, indem die Hauptversion auf \"> = 1\" gesetzt wird, sollte die Meta-Version die Paketversion der Hauptversion nicht erhöhen."

#: ../../maintainers_guide.rst:165
msgid "The behavior of the major version number component tracking after when all the elements are at >=1.0.0 has not been decided yet."
msgstr "Das Verhalten der Haupt-Versionsnummer-Komponentenverfolgung, nachdem alle Elemente bei >=1.0.0 liegen, wurde noch nicht entschieden."

#: ../../maintainers_guide.rst:169
msgid "Optional Extras"
msgstr "Optionale Extras"

#: ../../maintainers_guide.rst:171
msgid "In addition to the tracked elements, there are additional packages built on top of Qiskit which are developed in tandem with Qiskit, for example, the application repositories like qiskit-optimization. For convienence these packages are tracked by the Qiskit metapackage as optional extras that can be installed with Qiskit. Releases of these optional downstream projects do not trigger a metapackage release as they are unpinned and do not affect the metapackage version. If there is a compatibility issue between Qiskit and these downstream optional dependencies and the minimum version needs to be adjusted in a standalone release, this will only be done as a patch version release as it's a packaging bugfix."
msgstr "Zusätzlich zu den verfolgten Elementen gibt es zusätzliche Pakete, die auf Qiskit aufgebaut sind, die im Tandem mit Qiskit entwickelt werden, zum Beispiel die Anwendungsrepositorys wie qiskit-optimization. Für den Komfort werden diese Pakete mit dem Qiskit-Metapaket als optionale Extras nachgeführt, die mit Qiskit installiert werden können. Die Releases dieser optionalen Downstream-Projekte lösen kein Metapaket-Release aus, da sie nicht gepinnt werden und die Metapaketversion nicht beeinflussen. Wenn es ein Kompatibilitätsproblem zwischen Qiskit und diesen nachgelagerten optionalen Abhängigkeiten gibt und die Mindestversion in einem eigenständigen Release angepasst werden muss, wird dies nur als Patch-Version-Release ausgeführt, da es sich dabei um ein 'packaging bugfix' handelt."

#: ../../maintainers_guide.rst:183
msgid "Qiskit Element Requirement Tracking"
msgstr "Qiskit-Element-Anforderungs-Tracking"

#: ../../maintainers_guide.rst:185
msgid "While not strictly related to the meta-package and Qiskit versioning, how we track the element versions in the meta-package's requirements list is important. Each element listed in the ``setup.py`` should be pinned to a single version. This means that each version of Qiskit should only install a single version for each tracked element. For example, the requirements list at any given point should look something like::"
msgstr "Obwohl kein strenger Zusammenhang mit dem Meta-Paket und der Qiskit-Versionierung besteht, ist es wichtig, wie wir die Element-Versionen in den Voraussetzungen des Meta-Pakets tracken. Jedes Element, das im ``setup.py`` aufgeführt ist, sollte auf eine einzige Version angeheftet werden. Dies bedeutet, dass jede Version von Qiskit nur eine einzige Version für jedes überwachte Element installieren sollte. Die Liste an Voraussetzungen an einem beliebigen Punkt sollte beispielsweise wie folgt aussehen::"

#: ../../maintainers_guide.rst:197
msgid "This is to aid in debugging, but also make tracking the versions across multiple elements more transparent."
msgstr "Dies soll beim Debuggen helfen, aber auch den Überblick über die Versionen mehrerer Elemente transparenter machen."

#: ../../maintainers_guide.rst:201
msgid "Documentation Structure"
msgstr "Aufbau der Dokumentation"

#: ../../maintainers_guide.rst:203
msgid "The way documentation is structured in Qiskit is to push as much of the actual documentation into the docstrings as possible. This makes it easier for additions and corrections to be made during development, because the majority of the documentation lives near the code being changed. There are three levels in the normal documentation structure in Terra:"
msgstr "Die Dokumentation in Qiskit ist so aufgebaut, so viel wie möglich der eigentlichen Dokumentation über Docstrings abzubilden. Das macht das Ergänzen und Korrigieren der Dokumentation während der Entwicklung einfacher, weil der größte Teil der Dokumentation in der Nähe des zu ändernden Codes liegt.. Im Aufbau der Dokumentation von Terra gibt es drei Ebenen:"

#: ../../maintainers_guide.rst:231
msgid "The ``.rst`` files in the ``docs/apidocs``"
msgstr "Die ``.rst`` Dateien in ``docs/apidocs``"

#: ../../maintainers_guide.rst:210
msgid "These files are used to tell Sphinx which modules to include in the rendered documentation. This contains two pieces of information: an `internal reference <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#reference-names>`__ or `cross reference <https://www.sphinx-doc.org/en/master/usage/restructuredtext/roles.html#ref-role>`__ to the module, which can be used for internal links inside the documentation, and an `automodule directive <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ used to parse the module docstrings from a specified import path. For example, the ``dagcircuit.rst`` file contains::"
msgstr "Diese Dateien werden verwendet, um Sphinx mitzuteilen, welche Module in die Dokumentation aufgenommen werden sollen. Dabei gibt es zwei Arten von Information: Eine `Interne Referenz <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#reference-names>`__ oder einen `Querverweis <https://www.sphinx-doc.org/en/latest/usage/restructuredtext/roles.html#ref-role>`__ zu dem Modul, welches die interne Verlinkung innerhalb der Dokumentation beschreibt und eine `Auto-Modul Direktive <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ um die Docstrings des Moduls aus dem spezifizierten Import-Pfad zu parsen. Als Beispiel ein Ausschnitt der Datei dagcircuit.rst::"

#: ../../maintainers_guide.rst:228
msgid "The only ``.rst`` file outside of this is ``qiskit.rst``, which contains the table of contents. If you're adding a new ``.rst`` file for a new module's documentation, make sure to add it to the `toctree <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents>`__ in that file."
msgstr "Die einzige außerhalb liegende ``.rst``-Datei ist ``qiskit.rst``. Sie enthält das Inhaltsverzeichnis. Wenn man eine neue ``.rst``-Datei für die Dokumentation eines neuen Moduls anlegt, muss diese dort unter `toctree <https://www.sphinx-doc.org/en/master/usage/restructuredtext/directives.html#table-of-contents>`__ hinzugefügt werden."

#: ../../maintainers_guide.rst:276
msgid "The module-level docstring"
msgstr "Der Docstring auf Modul-Ebene"

#: ../../maintainers_guide.rst:234
msgid "This docstring is at the module level for the module specified in the ``automodule`` directive in the rst file. If the module specified is a directory/namespace, the docstring should be specified in the ``__init__.py`` file for that directory. This module-level docstring contains more details about the module being documented. The normal structure to this docstring is to outline all the classes and functions of the public API that are contained in that module. This is typically done using the `autosummary directive <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>`__ (or `autodoc directives <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>`__ directly if the module is simple, such as in the case of ``qiskit.execute``). The autosummary directive is used to autodoc a list of different Python elements (classes, functions, etc.) directly without having to manually call out the autodoc directives for each one. The module-level docstring is where to provide a high-level overview of what functionality the module provides. This is normally done by grouping the different components of the public API together into multiple subsections."
msgstr "Dieser Docstring befindet sich auf der Modulebene für das Modul, welches in der Anweisung ``automodule`` in der rst-Datei angegeben ist. Wenn es sich bei dem angegebenen Modul um ein Verzeichnis/Namespace handelt, sollte der Docstring in der Datei ``__init__.py`` für dieses Verzeichnis angegeben werden. Dieser Docstring auf Modulebene enthält weitere Details zu dem Modul, das dokumentiert wird. Die normale Struktur zu diesem Docstrings ist eine Beschreibung aller Klassen und Funktionen der öffentlichen API, die in diesem Modul enthalten ist. Dies geschieht in der Regel mit der `autosummary Direktive <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>` __ (oder `autodoc Direktiven <http://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html>` __ direkt, falls das Modul einfach ist, wie zum Beispiel im Fall ``qiskit.execute ``). Die Autosummary-Direktive wird verwendet, um eine Liste mit verschiedenen Python-Elementen (Klassen, Funktionen, etc.) direkt automatisch zu dokumentieren, ohne die Autodoc-Anweisungen für die einzelnen Elemente manuell aufrufen zu müssen. Der Modulebene Docstring gibt einen Überblick über die Funktionalität, die das Modul bereitstellt. Dies geschieht normalerweise, indem die verschiedenen Komponenten der öffentlichen API in mehrere Unterabschnitte gruppiert werden."

#: ../../maintainers_guide.rst:251
msgid "For example, as in the previous dagcircuit module example, the contents of the module docstring for ``qiskit/dagcircuit/__init__.py`` would be::"
msgstr "Anhand des vorherigen Beispiels zum dagcircuit-Modul könnte der Inhalt des Modul-Docstrings in ``qiskit/dagcircuit/__init__.py`` etwa so aussehen::"

#: ../../maintainers_guide.rst:275
msgid "This is just an example and the actual module docstring for the dagcircuit module might diverge from this."
msgstr "Dies ist nur ein Beispiel und der tatsächliche Docstring des dagcircuit-Moduls kann abweichen."

#: ../../maintainers_guide.rst:293
msgid "The actual docstring for the elements listed in the module docstring"
msgstr "Der eigentliche Docstring der Objekte, die im Modul-Docstring aufgeführt sind"

#: ../../maintainers_guide.rst:279
msgid "You should strive to document thoroughly all the public interfaces exposed using examples when necessary. For docstrings, `Google Python Style Docstrings <https://google.github.io/styleguide/pyguide.html?showone=Comments#38-comments-and-docstrings>`__ are used. This is parsed using the `napoleon sphinx extension <https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html>`__. The `napoleon documentation <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__ contains a good example of how docstrings should be formatted."
msgstr "Alle öffentlichen Schnittstellen sollten nach Möglichkeit mit Beispielen dokumentiert sein. Für Docstrings werden dabei `Google-Python-Style Docstrings <https://google.github.io/styleguide/pyguide.html?showone=Comments#38-comments-and-docstrings>`__ verwendet. Diese werden mit der `Napoleon Sphinx-Erweiterung <https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html>`__ verarbeitet. Die `Napoleon Dokumentation <https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html>`__ enthält gute Beispiele, wie Docstrings formatiert werden sollten."

#: ../../maintainers_guide.rst:288
msgid "You can use any Sphinx directive or rst formatting in a docstring as it makes sense. For example, one common extension used is the ``jupyter-execute`` directive, which is used to execute a code block in Jupyter and display both the code and output. This is particularly useful for visualizations."
msgstr "Jede Sphinx-Direktive und jede rst-Formatierung kann in Docstrings verwendet werden, soweit dies sinnvoll ist. Eine oft genutzte Erweiterung ist z. B. die ``jupyter-execute`` Direktive. Mit ihr kann man einen Code-Block in Jupyter ausführen und sowohl den Code als auch dessen Ausgabe anzeigen. Das ist gerade für Visualisierungen sehr hilfreich."

#: ../../maintainers_guide.rst:296
msgid "Documentation Integration"
msgstr "Integration der Dokumentation"

#: ../../maintainers_guide.rst:298
msgid "The hosted documentation at https://qiskit.org/documentation/ covers the entire Qiskit project; Terra is just one component of that. As such, the documentation builds for the hosted version are built by the Qiskit meta-package repository https://github.com/Qiskit/qiskit. When commits are merged to that repo, the output of Sphinx builds are uploaded to the qiskit.org website. Those Sphinx builds are configured to pull in the documentation from the version of the Qiskit elements installed by the meta-package at that point. For example, if the meta-package version is currently 0.13.0, then that will copy the documentation from Terra's 0.10.0 release. When the meta-package's requirements are bumped, then it will start pulling documentation from the new version. This means that fixes for incorrect API documentation will need to be included in a new release. Documentation fixes are valid backports for a stable patch release per the stable branch policy (see :ref:`stable_branch_policy`)."
msgstr "Die Dokumentation unter https://qiskit.org/documentation/ deckt das komplette Qiskit Projekt ab; Terra ist davon nur eine Komponente. Daher wird die Dokumentation für die Webseite aus dem Qiskit Meta-Paket Repository https://github.com/Qiskit/qiskit erstellt. Wenn Commits in dieses Repository übernommen werden, wird das Ergebnis des Sphinx-Builds auf qiskit.org hochgeladen. Die Sphinx-Builds sind so konfiguriert, dass sie die Dokumentation der einzelnen Qiskit-Elemente mit der Version, welche im Meta-Paket angegeben ist verwenden. Wenn das Meta-Paket bspw. in Version 0.13.0 ist, wird die Dokumentation der 0.10.0 Version von Terra verwendet. Wenn die Versionsnummern in den Abhängigkeiten des Meta-Pakets aktualisiert werden, wird auch die Dokumentation der neuen Versionen übernommen. Das bedeutet, dass Korrekturen für eine fehlerhafte API Dokumentation ein neues Release benötigen. Korrekturen an der Dokumentation sind valide Rückportierungen für ein Stable Patch Release anhand der Stable Branch Regelung (siehe :ref:`stable_branch_policy`)."

#: ../../maintainers_guide.rst:312
msgid "During the build process, the contents of each element's ``docs/apidocs/`` are recursively copied into a shared copy of ``doc/apidocs/`` in the meta-package repository along with all the other elements. This means that what is in the root of docs/apidocs on each element at a release will end up on the root of https://qiskit.org/documentation/apidoc/."
msgstr "Während des Build-Prozesses werden die Inhalte aus ``docs/apidocs/`` aller Module rekursiv in eine Kopie von ``doc/apidocs/`` im Meta-Paket-Repository kopiert, inklusive aller anderen Elemente. Das bedeutet, dass was direkt unter docs/apidocs eines Elements liegt, bei einem Release auch direkt unter https://qiskit.org/documentation/apidoc/ liegt."

