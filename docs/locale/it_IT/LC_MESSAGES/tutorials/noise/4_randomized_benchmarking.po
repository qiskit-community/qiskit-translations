msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-12 21:20+0000\n"
"PO-Revision-Date: 2021-01-27 07:38\n"
"Last-Translator: \n"
"Language-Team: Italian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: it\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/noise/4_randomized_benchmarking.po\n"
"X-Crowdin-File-ID: 9138\n"
"Language: it_IT\n"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:10
msgid "This page was generated from `tutorials/noise/4_randomized_benchmarking.ipynb`__."
msgstr "Questa pagina è stata generata da `tutorials/noise/4_randomized_benchmarking.ipynb`__."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/noise/4_randomized_benchmarking.ipynb>`_."
msgstr "Esegui in maniera interattiva su `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/noise/4_randomized_benchmarking.ipynb>`_."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:9
msgid "Randomized Benchmarking"
msgstr "Benchmarking Casuale"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:12
msgid "Introduction"
msgstr "Introduzione"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:14
msgid "**Randomization benchmarking (RB)** is a well-known technique to measure average gate performance by running sequences of random Clifford gates that should return the qubits to the initial state. Qiskit Ignis has tools to generate one- and two-qubit Clifford gate sequences simultaneously."
msgstr "**Randomization benchmarking (RB)** è una nota tecnica di misurazione della prestazione media dei gate che consiste nell'eseguire una sequenza casuale di gate di Clifford che dovrebbe riportare i qubit allo stato iniziale. Qiskit Ignis fornisce gli strumenti per generare contemporanemente sequenze di gate di Clifford per uno e due qubit."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:16
msgid "This notebook gives an example for how to use the ``ignis.verification.randomized_benchmarking`` module. This particular example shows how to run 2-qubit randomized benchmarking (RB) simultaneous with 1-qubit RB. There are also examples on how to use some of the companion functions for predicting RB fidelity."
msgstr "Questo notebook fornisce un esempio su come utilizzare il modulo ``ignis.verification.randomized_benchmarking``. In particolare, mostra come eseguire contemporaneamente il randomized benchmarking (RB) a 2 e 1 qubit. Ci sono anche esempi su come utilizzare alcune funzioni di accompagnamento per la previsione della fidelity del RB."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:49
msgid "1) Select the Parameters of the RB Run"
msgstr "1) Selezionare i Parametri dell'esecuzione del RB"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:51
msgid "First, we need to choose the following parameters:"
msgstr "Per prima cosa si devono scegliere i seguenti parametri:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:53
msgid "**nseeds:** The number of seeds. For each seed you will get a separate list of output circuits in rb_circs."
msgstr "**nseeds:** Il numero di semi (seed). Per ogni seme si otterrà una lista separata di circuiti di output in rb_circs."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:54
msgid "**length_vector:** The length vector of Clifford lengths. Must be in ascending order. RB sequences of increasing length grow on top of the previous sequences."
msgstr "**length_vector:** Il vettore contenente il numero di gate di Clifford. Deve essere ordinato in ordine crescente. Le sequenze RB di lunghezza crescente sono in aggiunta a quelle precedenti."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:55
msgid "**rb_pattern:** A list of the form [[i,j],[k],…] which will make simultaneous RB sequences where Qi,Qj are a 2-qubit RB sequence and Qk is a 1-qubit sequence, etc. The number of qubits is the sum of the entries. For ‘regular’ RB the qubit_pattern is just [[0]],[[0,1]]."
msgstr "**rb_pattern:** Una lista della forma [[i,j],[k],…] che permette di eseguire sequenze di RB contemporaneamente, dove Qi,Qj sono una sequenza di RB a 2 qubit e Qk è una sequenza a un 1 qubit, ecc. Il numero di qubit è la somma delle voci. Nel caso di RB tradizionale, il qubit\\_pattern è semplicemente [[0]],[[0,1]]."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:56
msgid "**length_multiplier:** If this is an array it scales each rb_sequence by the multiplier."
msgstr "**length_multiplier:** Nel caso in cui venga passato un vettore, riscala ogni rb_sequence per il moltiplicatore."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:57
msgid "**seed_offset:** What to start the seeds at (e.g. if we want to add more seeds later)."
msgstr "**seed_offset:** Da cosa iniziare i semi (ad esempio, se vogliamo aggiungere altri semi in seguito)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:58
msgid "**align_cliffs:** If true adds a barrier across all qubits in rb_pattern after each set of cliffords."
msgstr "**align_cliffs:** Se impostato a true, dopo ogni insieme di gate di Clifford aggiunge una barriera in rb_pattern su tutti i qubit."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:60
msgid "In this example we have 3 qubits Q0,Q1,Q2. We are running 2Q RB (on qubits Q0,Q2) and 1Q RB (on qubit Q1) simultaneously, where there are twice as many 1Q Clifford gates."
msgstr "In questo esempio abbiamo 3 qubit Q0, Q1, Q2. Stiamo eseguendo simultaneamente 2Q RB (sui qubit Q0,Q2) e 1Q RB (sul qubit Q1) dove ci sono il doppio di gate di Clifford ad 1 qubit."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:92
msgid "2) Generate the RB sequences"
msgstr "2) Generare le sequenze di RB"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:94
msgid "We generate RB sequences. We start with a small example (so it doesn’t take too long to run)."
msgstr "Generiamo le sequenze RB. Partiamo con un piccolo esempio (così da non impiegare molto tempo nell'esecuzione)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:96
msgid "In order to generate the RB sequences **rb_circs**, which is a list of lists of quantum circuits, we run the function ``rb.randomized_benchmarking_seq``."
msgstr "Per generare le sequenze di RB **rb_circs**, che è una lista di liste di circuiti quantistici, si esegue la funzione ``rb.randomized_benchmarking_seq``."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:98
msgid "This function returns:"
msgstr "Questa funzione restituisce:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:100
msgid "**rb_circs:** A list of lists of circuits for the rb sequences (separate list for each seed)."
msgstr "**rb_circs:** Una lista di liste di circuiti per le sequenze di rb (una lista separata per ogni seme utilizzato)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:101
msgid "**xdata:** The Clifford lengths (with multiplier if applicable)."
msgstr "**xdata:** Le lunghezze di Clifford (con un fattore moltiplicativo se applicabile)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:127
msgid "As an example, we print the circuit corresponding to the first RB sequence:"
msgstr "Come esempio, visualizziamo il circuito corrispondente alla prima sequenza di RB:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:218
msgid "Look at the Unitary for 1 Circuit"
msgstr "Visualizzare la Matrice Unitaria di 1 Circuito"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:229
msgid "The Unitary representing each RB circuit should be the identity (with a global phase), since we multiply random Clifford elements, including a computed reversal gate. We simulate this using an Aer unitary simulator."
msgstr "La matrice Unitaria che rappresenta ciascun circuito di RB dovrebbe essere l'identità (a meno di una fase globale), dato che stiamo semplicemente moltiplicando casualmente elementi di Clifford, incluso in gate calcolato di inversione. Andiamo ad utilizzare un simulatore lo unitary simulator di Aer."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:301
msgid "Define the noise model"
msgstr "Definire il modello di rumore"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:312
msgid "We define a noise model for the simulator. To simulate decay, we add depolarizing error probabilities to the CNOT and U gates."
msgstr "Definiamo un modello di rumore da utilizzare nel simulatore. Per simulare il decadimento, aggiungiamo probabilità che avvenga un errore di depolarizzazione nei gate CNOT e U."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:339
msgid "3) Execute the RB sequences on Aer simulator"
msgstr "3) Eseguire la sequenza di RB sul simulatore Aer"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:341
msgid "We can execute the RB sequences either using a Qiskit Aer Simulator (with some noise model) or using an IBMQ provider, and obtain a list of results, ``result_list``."
msgstr "Possiamo eseguire le sequenze di RB sia utilizzando un Simulatore di Qiskit Aer (associato ad un modello di rumore), sia un provider IBMQ, ottenendo una lista di risultati, ``result_list``."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:415
msgid "4) Fit the RB results and calculate the gate fidelity"
msgstr "4) Calcolare la fidelity dei gate utilizzando i risultati del RB"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:418
msgid "Get statistics about the survival probabilities"
msgstr "Ottenere statistiche sulle probabilità di sopravvivenza"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:420
msgid "The results in **result_list** should fit to an exponentially decaying function :math:`A \\cdot \\alpha ^ m + B`, where :math:`m` is the Clifford length."
msgstr "Il risultato salvato in **result_list** dovrebbe essere descritto da una funzione che decade esponenzialmente :math:`A \\cdot \\alpha ^ m + B`, dove :math:`m` è la lunghezza di Clifford."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:422
msgid "From :math:`\\alpha` we can calculate the **Error per Clifford (EPC)**:"
msgstr "Da :math:`\\alpha` è possibile calcolare l'**Error per Clifford (EPC)**:"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:424
msgid "EPC = \\frac{2^n-1}{2^n} (1-\\alpha)\n\n"
msgstr ""

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:426
msgid "(where :math:`n=nQ` is the number of qubits)."
msgstr "(dove :math:`n=nQ` è il numero di qubit)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:449
msgid "Plot After 1 Seed"
msgstr "Grafico Dopo 1 Seme"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:491
msgid "Plot with the Rest of the Seeds"
msgstr "Grafico con il Resto dei Semi"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:493
msgid "The plot is being updated after each seed."
msgstr "Il grafico è stato aggiornato dopo ogni seme."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:547
msgid "Add more shots to the data"
msgstr "Aggiungere più shot ai dati"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:652
msgid "Predicted Gate Fidelity"
msgstr "Predire la Fidelity dei Gate"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:663
msgid "From the known depolarizing errors on the simulation we can predict the **fidelity**. First we need to count the number of **gates per Clifford**."
msgstr "Utilizzando gli errori di depolarizzazione che abbiamo ricavato dalla simulazione, è possibile predire la **fidelity**. Per prima cosa è necessario contare il numero di **gate per Clifford**."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:665
msgid "The function **gates_per_clifford** takes a list of transpiled RB circuits and outputs the number of basis gates in each circuit."
msgstr "La funzione **gates_per_clifford** accetta in input una lista di circuiti di RB passati per il transpiler e produce il numero di gate di base in ogni circuito."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:716
msgid "The function **calculate_2q_epc** gives measured errors in the basis gates that were used to construct the Clifford. It assumes that the error in the underlying gates is depolarizing. It outputs the error per a 2-qubit Clifford."
msgstr "La funzione **calculate_2q_epc** fornisce gli errori misurati nei gate di base che sono stati utilizzati per costruire i gate di Clifford. Si presuppone che l'errore nei gate sottostanti sia di depolarizzazione. L'output della funzione è l'errore per un gate di Clifford a 2 qubit."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:718
msgid "The input to this function is: - **gate_per_cliff:** dictionary of gate per Clifford. - **epg_2q:** EPG estimated by error model. - **qubit_pair:** index of two qubits to calculate EPC. - **list_epgs_1q:** list of single qubit EPGs of qubit listed in ``qubit_pair``. - **two_qubit_name:** name of two qubit gate in ``basis gates`` (default is ``cx``)."
msgstr "La funzione accetta in input: - **gate_per_cliff:** dizionario di gate per Clifford. - **epg_2q:** EPG stimato utilizzando il modello di errore. - **qubit_pair:**- indice di due qubit per calcolare EPC. - **list_epgs_1q:** lista dell'EPG di singolo qubit per i qubit in ``qubit_pair``. - **two_qubit_name:** nome del gate a due qubit in ``basis gates`` (il default è ``cx``)."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:769
msgid "Run an RB Sequence with T1,T2 Errors"
msgstr "Eseguire una Sequenza RB includendo gli errori T1, T2"

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:771
msgid "We now choose RB sequences that contain only 2-qubit Cliffords."
msgstr "Selezioniamo solo sequenze di RB che contengono solo gate di Clifford a 2 qubit."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:773
msgid "We execute these sequences as before, but with a noise model extended with T1/T2 thermal relaxation error, and fit the exponentially decaying curve."
msgstr "Eseguiamo le sequenze come in precedenza, ma utilizzando un modello di rumore esteso che comprende T1 e T2, l'errore di rilassamento termico, effettuando un fit con una curva di decadimento esponenziale."

#: ../../tutorials/noise/4_randomized_benchmarking.ipynb:900
msgid "We count again the number of **gates per Clifford** as before, and calculate the **two-qubit Clifford gate error**, using the predicted primitive gate errors from the coherence limit."
msgstr "Contiamo di nuovo il numero di **porte per Clifford** come fatto precedentemente, e calcoliamo l'**errore del gate di Clifford a 2 qubit**, utilizzando gli errori di gate primitivi previsti dal limite di coerenza."

