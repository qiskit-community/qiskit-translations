msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-14 09:35+0000\n"
"PO-Revision-Date: 2020-07-25 14:46\n"
"Last-Translator: \n"
"Language-Team: Italian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: it\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits/2_plotting_data_in_qiskit.po\n"
"X-Crowdin-File-ID: 9116\n"
"Language: it_IT\n"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:10
msgid "This page was generated from `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."
msgstr "Questa pagina è stata generata a partire da `tutorials/circuits/2_plotting_data_in_qiskit.ipynb`__."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:9
msgid "Qiskit Visualizations"
msgstr "Visualizzazioni in Qiskit"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:33
msgid "Plot histogram"
msgstr "Creare un istogramma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:35
msgid "To visualize the data from a quantum circuit run on a real device or ``qasm_simulator`` we have made a simple function"
msgstr "Per visualizzare i risultati dell'esecuzione di un circuito quantistico sia su un dispositivo reale che sul simulatore ``qasm_simulator``, si può fare uso della seguente funzione"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:37
msgid "``plot_histogram(data)``"
msgstr "``plot_histogram(data)``"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:39
msgid "As an example we make a 2-qubit Bell state"
msgstr "Ecco un esempio che realizza uno stato di Bell a 2 qubit"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:112
msgid "Options when plotting a histogram"
msgstr "Opzioni nella creazione di un istogramma"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:114
msgid "The ``plot_histogram()`` has a few options to adjust the output graph. The first option is the ``legend`` kwarg. This is used to provide a label for the executions. It takes a list of strings use to label each execution's results. This is mostly useful when plotting multiple execution results in the same histogram. The ``sort`` kwarg is used to adjust the order the bars in the histogram are rendered. It can be set to either ascending order with ``asc`` or descending order with ``dsc``. The ``number_to_keep`` kwarg takes an integer for the number of terms to show, the rest are grouped together in a single bar called rest. You can adjust the color of the bars with the ``color`` kwarg which either takes a string or a list of strings for the colors to use for the bars for each execution. You can adjust whether labels are printed above the bars or not with the ``bar_labels`` kwarg. The last option available is the ``figsize`` kwarg which takes a tuple of the size in inches to make the output figure."
msgstr "La funzione ``plot_histogram()`` ha diversi parametri che permettono di personalizzare il grafico che si sta creando. Il primo parametro è il kwarg ``legend``, utilizzato per aggiungere etichette ai risultati di diverse esecuzioni. Il parametro si aspetta una lista di stringhe che utilizza per aggiungere le etichette ai risultati di ogni esecuzione. Questa opzione è molto utile quando si vogliono rappresentare più risultati nello stesso istogramma. Il kwarg ``sort`` viene invece usato per regolare l'ordine in cui le diverse barre dell'istogramma vengono visualizzate. Può essere impostato in ordine crescente con ``asc`` o in ordine decrescente con ``dsc``. Si può anche definire il numero di esecuzioni da visualizzare con il parametro kwarg ``number_to_keep``, che si aspetta un intero, il resto dei risultati viene raggruppato in una singola barra chiamata rest (altro). È possibile regolare il colore delle barre con il kwarg ``color`` che si aspetta come parametro una stringa o una lista di stringhe con i colori da usare per ogni esecuzione. Anche la posizione stessa della legenda è modificabile con il parametro kwarg ``bar_labels``. Infine, l'ultima opzione disponibile è il kwarg ``figsize`` che richiede una tupla che indica la dimensione del grafico di output espressa in pollici."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:172
msgid "Using the output from plot\\_histogram()"
msgstr "Utilizzo dell'output di plot\\_histogram ()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:174
msgid "When using the plot\\_histogram() function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object from ``plot_histogram()`` to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png``. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "La funzione plot\\_histogram() restituisce una istanza di ``matplotlib.Figure`` per la visualizzazione. I notebook Jupyter riconoscono questo tipo di istanza e rendono, come in questo tutorial, la visualizzazione automatica. Questa funzionalità non è automaticamente presente quando non si utilizzano i notebook Jupyter. Tuttavia, la classe ``matplotlib.Figure`` possiede nativamente dei metodi che permettono di mostrare e di salvare la visualizzazione. Usando il metodo ``.show()`` sull'oggetto risultato del comando ``plot_histogram()`` è possibile aprire l'immagine in una nuova finestra (assumendo che il backend configurato di matplotlib sia interattivo). Usando invece il metodo ``.savefig('out.png')`` è possibile salvare l'immagine in ``out.png``. Il parametro richiesto dal metodo ``savefig()`` corrisponde al path e al nome del file dove si vuole salvare l'immagine di output."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:187
msgid "Plot State"
msgstr "Visualizzare lo Stato"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:198
msgid "In many situations you want to see the state of a quantum computer. This could be for debugging. Here we assume you have this state (either from simulation or state tomography) and the goal is to visualize the quantum state. This requires exponential resources, so we advise to only view the state of small quantum systems. There are several functions for generating different types of visualization of a quantum state"
msgstr "In molte situazioni può essere utile visualizzare lo stato di un computer quantistico. Ad esempio in fase di debug. Supponiamo di avere un determinato stato quantistico (ad esempio risultato di una simulazione o di una tomografia quantistica) e di volerlo visualizzare. A tale scopo esistono diverse funzioni che permettono di generare diversi tipi di visualizzazione. Queste operazioni richiedono risorse esponenziali, per cui è sempre consigliato visualizzare solo lo stato di piccoli sistemi quantistici"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:208
msgid "A quantum state is either a state matrix :math:`\\rho` (Hermitian matrix) or statevector :math:`|\\psi\\rangle` (complex vector). The state matrix is related to the statevector by"
msgstr "Uno stato quantistico può essere rappresentato come una matrice di stato :math:`\\rho` (matrice Hermitiana) o come un vettore di stato :math:`|\\psi\\rangle` (un vettore complesso). La matrice è legata al vettore di stato da"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:210
msgid "\\rho = |\\psi\\rangle\\langle \\psi|,"
msgstr "\\rho = |\\psi\\rangle\\langle \\psi|,"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:212
msgid "and is more general as it can represent mixed states (positive sum of statevectors)"
msgstr "ed è più generale in quanto può rappresentare stati misti (somma positiva dei vettori di stato)"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:214
msgid "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |."
msgstr "\\rho = \\sum_k p_k |\\psi_k\\rangle\\langle \\psi_k |."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:216
msgid "The visualizations generated by the functions are: - ``'plot_state_city'``: The standard view for quantum states where the real and imaginary (imag) parts of the state matrix are plotted like a city."
msgstr "Le visualizzazioni generate dalle funzioni sono: - ``'plot_state_city'``: La vista standard degli stati quantistici dove la parte reale ed immaginaria (imag) vengono rappresentate come una città."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:218
msgid "``'plot_state_qsphere'``: The Qiskit unique view of a quantum state where the amplitude and phase of the state vector are plotted in a spherical ball. The amplitude is the thickness of the arrow and the phase is the color. For mixed states it will show different ``'qsphere'`` for each component."
msgstr "``'plot_state_qsphere'``: La vista unica di Qiskit in cui l'ampiezza e la fase del vettore di stato sono rappresentate in una sfera. Lo spessore della freccia ne indica l'ampiezza ed il colore la fase. Nel caso di stati misti vengono mostrati diversi ``'qsphere'`` per ogni componente."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:220
msgid "``'plot_state_paulivec'``: The representation of the state matrix using Pauli operators as the basis :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."
msgstr "``'plot_state_paulivec'``: Rappresenta la matrice di stato utilizzando come base gli operatori di Pauli :math:`\\rho=\\sum_{q=0}^{d^2-1}p_jP_j/d`."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:222
msgid "``'plot_state_hinton'``: Same as ``'city'`` but where the size of the element represents the value of the matrix element."
msgstr "``'plot_state_hinton'``: Simile a ``'city'`` con la differenza che la dimensione dell'elemento rappresenta il valore dell'elemento di matrice."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:224
msgid "``'plot_bloch_multivector'``: The projection of the quantum state onto the single qubit space and plotting on a bloch sphere."
msgstr "``'plot_bloch_multivector'``: Viene proiettato lo stato quantistico sullo spazio del singolo qubit e rappresentato su una sfera di bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:355
msgid "Here we see that there is no information about the quantum state in the single qubit space as all vectors are zero."
msgstr "Qui possiamo vedere che non ci sono informazioni sullo stato quantistico nello spazio del singolo qubit perchè tutti i vettori sono nulli."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:367
msgid "Options when using state plotting functions"
msgstr "Personalizzazione quando si utilizzano le funzioni di visualizzazione dello stato"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:369
msgid "The various functions for plotting quantum states provide a number of options to adjust how the plots are rendered. Which options are available depends on the function being used."
msgstr "Le diverse funzioni per la visualizzazione degli stati quantistici forniscono una serie di opzioni che permettono di personalizzare l'aspetto dei grafici che vengono creati. Le opzioni disponibili dipendono dalla funzione utilizzata."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:380
msgid "**plot\\_state\\_city()** options"
msgstr "Le opzioni di **plot\\_state\\_city()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:382
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:416
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:449
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:496
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:685
msgid "**title** (str): a string that represents the plot title"
msgstr "**title** (str): una stringa che definisce il titolo del grafico"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:383
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:417
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:450
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:483
#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:497
msgid "**figsize** (tuple): figure size in inches (width, height)."
msgstr "**figsize** (tuple): definisce la dimensione della figura in pollici (larghezza, altezza)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:384
msgid "**color** (list): a list of len=2 giving colors for real and imaginary components of matrix elements."
msgstr "**color** (list): una lista di len=2 che definisce i colori da usare per le componenti reale ed immaginaria della matrice densità."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:414
msgid "**plot\\_state\\_hinton()** options"
msgstr "Le opzioni di **plot\\_state\\_hinton()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:447
msgid "**plot\\_state\\_paulivec()** options"
msgstr "Le opzioni di **plot\\_state\\_paulivec()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:451
msgid "**color** (list or str): color of the expectation value bars."
msgstr "**color** (list o str): definisce il colore delle barre che rappresentano il valore di aspettazione."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:481
msgid "**plot\\_state\\_qsphere()** options"
msgstr "Le opzioni di **plot\\_state\\_qsphere()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:494
msgid "**plot\\_bloch\\_multivector()** options"
msgstr "Le opzioni di **plot\\_bloch\\_multivector()**"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:528
msgid "Using the output from state plotting functions"
msgstr "Utilizzo dell'output delle funzioni di visualizzazione dello stato"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:530
msgid "When using any of the state plotting functions it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "L'utilizzo di una qualsiasi di queste funzioni restituisce un'istanza ``matplotlib.Figure`` per la visualizzazione. I notebook Jupyter riconoscono questo tipo di istanza e la visualizzazione avviene in automatico, come in questo tutorial. Nel caso in cui lo stesso codice venisse utilizzato fuori da Jupyter, si perderebbe questa funzionalità di visualizzazione automatica. Tuttavia, la classe ``matplotlib.Figure`` possiede nativamente dei metodi che permettono di mostrare e di salvare la visualizzazione. Usando il metodo ``.show()`` è possibile aprire l'immagine in una nuova finestra (assumendo che il backend configurato di matplotlib sia interattivo). Usando invece il metodo ``.savefig('out.png')`` è possibile salvare l'immagine come ``out.png`` nella cartella di lavoro. Il parametro del metodo ``savefig()`` corrisponde al path e al nome del file e permette di decidere dove si vuole salvare l'immagine di output."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:543
msgid "Interactive State Plots for Jupyter Notebooks"
msgstr "Visualizzazione interattiva degli stati nei Notebook Jupyter"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:545
msgid "Just like with ``plot_histogram()`` there is a second set of functions for each of the functions to plot the quantum state. These functions have the same name but with a prepended ``i``:"
msgstr "Proprio come con la funzione ``plot_histogram()`` esiste un secondo set di funzioni per ciascuna delle funzione appena descritte che permette di tracciare lo stato quantistico interattivamente. Queste funzioni hanno lo stesso nome ma con l'aggiunta di una ``i`` davanti:"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:555
msgid "These functions are made using an externally hosted JS library for use in Jupyter notebooks. The interactive plot can only be used if you're running inside a Jupyter notebook and only if you have external connectivity to the host with the JS library. If you use these functions outside of a Jupyter notebook it will fail."
msgstr "Queste funzioni sono realizzate utilizzando una libreria JS esterna che ne permette l'utilizzo nei notebook Jupyter. Il grafico interattivo può essere utilizzato solo all'interno di un notebook Jupyter e solo se si dispone di una connettività verso l'host che espone la libreria JS. Non è possibile utilizzare queste funzioni fuori da un notebook Jupyter."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:638
msgid "Plot Bloch Vector"
msgstr "Visualizzazione del vettore di Bloch"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:640
msgid "A standard way of plotting a quantum system is using the Bloch vector. This only works for a single qubit and takes as input the Bloch vector."
msgstr "Un modo standard di visualizzare un sistema quantistico è quello di utilizzare il vettore di Bloch. Questa visualizzazione funziona solo per un singolo qubit e si aspetta come input il vettore di Bloch."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:642
msgid "The Bloch vector is defined as :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, where :math:`X`, :math:`Y`, and :math:`Z` are the Pauli operators for a single qubit and :math:`\\rho` is the state matrix."
msgstr "Il vettore di Bloch è definito come :math:`[x = \\mathrm{Tr}[X \\rho], y = \\mathrm{Tr}[Y \\rho], z = \\mathrm{Tr}[Z \\rho]]`, dove :math:`X`, :math:`Y`, e :math:`Z` sono gli operatori Pauli per un singolo qubit e :math:`\\rho` è la matrice di densità."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:683
msgid "Options for plot\\_bloch\\_vector()"
msgstr "Le opzioni di plot\\_bloch\\_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:686
msgid "**figsize** (tuple): Figure size in inches (width, height)."
msgstr "**figsize** (tuple): definisce la dimensione della figura in pollici (larghezza, altezza)."

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:717
msgid "Adjusting the output from plot\\_bloch\\_vector()"
msgstr "Come regolare l'output di plot\\_bloch\\_vector()"

#: ../../tutorials/circuits/2_plotting_data_in_qiskit.ipynb:719
msgid "When using the ``plot_bloch_vector`` function it returns a ``matplotlib.Figure`` for the rendered visualization. Jupyter notebooks understand this return type and render it for us in this tutorial, but when running outside of Jupyter you do not have this feature automatically. However, the ``matplotlib.Figure`` class natively has methods to both display and save the visualization. You can call ``.show()`` on the returned object to open the image in a new window (assuming your configured matplotlib backend is interactive). Or alternatively you can call ``.savefig('out.png')`` to save the figure to ``out.png`` in the current working directory. The ``savefig()`` method takes a path so you can adjust the location and filename where you're saving the output."
msgstr "L'utilizzo della funzione ``plot_bloch_vector`` restituisce un'istanza ``matplotlib.Figure`` per la visualizzazione. I notebook Jupyter riconoscono questo tipo di istanza e la visualizzazione avviene in automatico, come in questo tutorial. Nel caso in cui lo stesso codice venisse utilizzato fuori da Jupyter, si perderebbe questa funzionalità di visualizzazione automatica. Tuttavia, la classe ``matplotlib.Figure`` possiede nativamente dei metodi che permettono di mostrare e di salvare la visualizzazione. Usando il metodo ``.show()`` è possibile aprire l'immagine in una nuova finestra (assumendo che il backend configurato di matplotlib sia interattivo). Usando invece il metodo ``.savefig('out.png')`` è possibile salvare l'immagine come ``out.png`` nella cartella di lavoro. Il parametro del metodo ``savefig()`` corrisponde al path e al nome del file e permette di decidere dove si vuole salvare l'immagine di output."

