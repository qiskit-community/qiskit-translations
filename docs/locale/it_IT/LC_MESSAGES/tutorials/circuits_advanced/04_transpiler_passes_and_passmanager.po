msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-06-28 17:09+0000\n"
"PO-Revision-Date: 2021-09-05 11:30\n"
"Last-Translator: \n"
"Language-Team: Italian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: it\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.po\n"
"X-Crowdin-File-ID: 9128\n"
"Language: it_IT\n"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:10
msgid "This page was generated from `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."
msgstr "Questa pagina è stata generata da `tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb`__."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:9
msgid "Transpiler Passes and Pass Manager"
msgstr "Transpiler Pass e Pass Manager"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:21
msgid "Introduction"
msgstr "Introduzione"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:32
msgid "A central component of Qiskit Terra is the transpiler, which is designed for modularity and extensibility. The goal is to be able to easily write new circuit transformations (known as transpiler **passes**), and combine them with other existing passes. Which passes are chained together and in which order has a major effect on the final outcome. This pipeline is determined by a **pass manager**, which schedules the passes and also allows passes to communicate with each other by providing a shared space. In this way, the transpiler opens up the door for research into aggressive optimization of quantum circuits."
msgstr "Uno dei componenti centrali di Qiskit Terra è il transpiler, che è stato disegnato per garantire modularità ed estensibilità. L'obiettivo è quello di poter facilmente scrivere nuove trasformazioni dei circuiti (note come transpiler **pass**), e combinarle con pass esistenti. Come le pass sono concatenate tra loro ed in quale ordine ha un importante effetto sul risultato finale. La pipeline è determinata da un **pass manager** che pianifica le pass e permette a diverse pass di comunicare tra di loro mettendo a disposizione uno spazio condiviso. In questo modo, il transpiler apre la strada alla ricerca di ottimizzazioni efficaci dei circuiti quantistici."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:35
msgid "In this notebook, we look at the built-in passes, how to use the pass manager, and develop a simple custom transpiler pass. In order to do the latter, we first need to introduce the internal representation of quantum circuits in Qiskit, in the form of a Directed Acyclic Graph, or **DAG**. Then, we illustrate a simple swap mapper pass, which transforms an input circuit to be compatible with a limited-connectivity quantum device."
msgstr "In questo notebook, si andranno a mostrare le pass integrate, come utilizzare il pass manager e si andrà a sviluppare una semplice transpiler pass personalizzata. Per poter raggiungere quest'ultimo punto, è prima necessario introdurre la rappresentazione interna dei circuiti quantistici in Qiskit, nella forma di un Directed Acyclic Graph, o **DAG**. Poi si mostrerà una semplice swap mapper pass, che rende un circuito di input compatibile con un dispositivo quantistico a connettività limitata."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:37
msgid "**Before you start**: You may need to install the ``pydot`` library and the ``graphviz`` library for the DAG plotting routines. If you are using Anaconda Python, you can install both with the ``conda`` command. If you use your system’s native Python interpreter, install ``pydot`` using the ``pip`` command, and install ``graphviz`` using your system’s native package manager (e.g. ``yum``, ``apt``, ``dnf``, ``brew``, etc.)."
msgstr "***Prima di iniziare***: Potrebbe essere necessario installare le librerie ``pydot``e ``graphviz`` per il corretto funzionamento delle routine di visualizzazione dei grafici DAG. Se si utilizza Python Anaconda, è possibile installare le due librerie con il comando ``conda``. Se si utilizza invece l'interprete Python nativo del sistema operativo, la libreria ``pydot`` si può installare utilizzando il comando ``pip``, mentre ``graphviz`` utilizzando il manager di pacchetti nativo del sistema (come ad esempio ``yum``, ``apt``, ``dnf``, ``brew``, etc.)."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:61
msgid "PassManager object"
msgstr "L'oggetto PassManager"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:63
msgid "Lets you specify the set of passes you want."
msgstr "Consente di specificare l'insieme di pass che si desidera utilizzare."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:118
msgid "All of Qiskit’s transpiler passes are accessible from ``qiskit.transpiler.passes``."
msgstr "Tutte le pass di Qiskit sono accessibili utilizzando ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:255
msgid "Different Variants of the Same Pass"
msgstr "Diverse Varianti della Stessa Pass"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:257
msgid "There can be passes that do the same job, but in different ways. For example, the ``TrivialLayout``, ``DenseLayout`` and ``NoiseAdaptiveLayout`` all choose a layout (binding of virtual qubits to physical qubits), but use different algorithms and objectives. Similarly, the ``BasicSwap``, ``LookaheadSwap`` and ``StochasticSwap`` all insert swaps to make the circuit compatible with the coupling map. The modularity of the transpiler allows plug-and-play replacements for each pass."
msgstr "Potrebbero esistere pass che fanno lo stesso lavoro, ma in modi differenti. Per esempio, ``TrivialLayout``, ``DenseLayout`` e ``NoiseAdaptiveLayout`` scelgono tutte un layout (associazione di qubit vituali a qubit fisici) ma utilizzando algoritmi ed obiettivi diversi. Analogamente, ``BasicSwap``, ``LookaheadSwap`` e ``StochasticSwap`` inseriscono scambi per rendere un circuito compatibile con la coupling map. La modularità del transpiler permette sostituzioni plug-and-play per ogni pass."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:259
msgid "Below, we show the swapper passes all applied to the same circuit, to transform it to match a linear chain topology. You can see differences in performance, where the ``StochasticSwap`` is clearly the best. However, this can vary depending on the input circuit."
msgstr "Di seguito mostriamo le swapper pass tutte applicate allo stesso circuito, per trasformarlo in modo da adattarsi ad una topologia a catena lineare. Si può notare una differenza nelle performance, dove la ``StochasticSwap`` è chiaramente la migliore. Tuttavia, questo può variare al variare del circuito di input."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:382
msgid "Preset Pass Managers"
msgstr "Pass Manager Predefiniti"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:384
msgid "Qiskit comes with several pre-defined pass managers, corresponding to various levels of optimization achieved through different pipelines of passes. Currently ``optimization_level`` 0 through 3 are supported; the higher the number, the more optimized it is, at the expense of more time. Choosing a good pass manager may take trial and error, as it depends heavily on the circuit being transpiled and the backend being targeted."
msgstr "Qiskit fornisce numerosi pass manager predefiniti, corrispondenti a diversi livelli di ottimizzazione raggiunti attraverso diverse sequenze di pass. Attualmente, i valori supportati per ``optimization_level`` vanno da 0 a 3; più il numero è alto, più il circuito è ottimizzato, a scapito del tempo di esecuzione. Scegliere un buon pass manager potrebbe richiedere diversi tentativi ed errori, in quanto dipende sia dal circuito che dal backend scelto."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:386
msgid "Here we illustrate the different levels by looking at a state synthesis circuit. We initialize four qubits to an arbitrary state, and then try to optimize the circuit that achieves this."
msgstr "Qui vengono illustrati i diversi livelli utilizzando un circuito di sintesi degli stati. Inizializziamo quattro qubit ad uno stato arbitrario, e andiamo poi a provare ad ottimizzare il circuito risultante."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:388
msgid "``optimization_level=0``: just maps the circuit to the backend, with no explicit optimization (except whatever optimizations the mapper does)."
msgstr "``optimization_level=0``: effettua solo una mappatura del circuito sul backend, senza una ottimizzazione esplicita (ad eccezione di quella effettuata dal mapper)."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:390
msgid "``optimization_level=1``: maps the circuit, but also does light-weight optimizations by collapsing adjacent gates."
msgstr "``optimization_level=1``: mappa il circuito ma effettua anche ottimizzazioni di peso leggero, andando a collassare gate adiacenti."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:392
msgid "``optimization_level=2``: medium-weight optimization, including a noise-adaptive layout and a gate-cancellation procedure based on gate commutation relationships."
msgstr "``optimization_level=2``: ottimizzazione di medio peso, che include un layout adattivo rispetto al rumore e una procedura di cancellazione dei gate basata sulle loro relazioni di commutazione."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:394
msgid "``optimization_level=3``: heavy-weight optimization, which in addition to previous steps, does resynthesis of two-qubit blocks of gates in the circuit."
msgstr "``optimization_level=3``: ottimizzazione spinta, che oltre agli step sopra elencati, effettua la risintesi dei blocchi di gate a due qubit presenti nel circuito."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:605
msgid "Now map this to the 20-qubit Tokyo device, with different optimization levels:"
msgstr "Ora andiamo a mappare il circuito sul device Tokyo a 20 qubit, utilizzando i diversi livelli di ottimizzazione:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:749
msgid "Introducing the DAG"
msgstr "Introduzione al DAG"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:760
msgid "In Qiskit, we represent circuits internally using a Directed Acyclic Graph (DAG). The advantage of this representation over a pure list of gates (i.e., *netlist*) is that the flow of information between operations are explicit, making it easier for passes to make transformation decisions without changing the semantics of the circuit."
msgstr "In Qiskit, i circuiti sono internamente rappresentati utilizzando un Directed Acyclic Graph (DAG). Il vantaggio di questa rappresentazione rispetto ad una lista di gate (ovvero *netlist*) è che il flusso di informazioni tra le operazioni è esplicito, e questo rende più semplice alle pass decidere come applicare le trasformazioni senza modificare le semantiche del circuito."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:762
msgid "Let’s start by building a simple circuit, and examining its DAG."
msgstr "Iniziamo costruendo un semplice circuito ed esaminando il suo DAG."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:801
msgid "In the DAG, there are three kinds of graph nodes: qubit/clbit input nodes (green), operation nodes (blue), and output nodes (red). Each edge indicates data flow (or dependency) between two nodes."
msgstr "Nel DAG, ci sono tre tipi di rappresentazione grafica dei nodi: i nodi di input dei qubit/clbit (in verde), i nodi che rappresentano operazioni (in blu), e i nodi di output (in rosso). Ogni collegamento indica il flusso di dati (o dipendenza) tra due nodi."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:834
msgid "Therefore, writing a transpiler pass means using Qiskit’s DAGCircuit API to analyze or transform the circuit. Let’s see some examples of this."
msgstr "Quindi, scrivere una transpiler pass vuol dire utilizzare l'API DAGCircuit di Qiskit per analizzare o trasformare il circuito. Vediamo qualche esempio."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:845
msgid "**a. Get all op nodes in the DAG:**"
msgstr "**a. Ottenere tutti i nodi di operazioni presenti nel DAG:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:892
msgid "Each node is an instance of the ``DAGNode`` class. Let’s examine the information stored in the second op node."
msgstr "Ogni nodo è un'istanza della classe ``DAGNode``. Esaminiamo le informazioni memorizzate nel secondo nodo di operazione."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:945
msgid "**b. Add an operation to the back:**"
msgstr "**b. Aggiungere un'operazione alla fine:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:977
msgid "**c. Add an operation to the front:**"
msgstr "**c. Aggiungere un'operazione all'inizio:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1009
msgid "**d. Substitute a node with a subcircuit:**"
msgstr "**d. Sostituire un nodo con un sotto circuito:**"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1049
msgid "Finally, after all transformations are complete, we can convert back to a regular QuantumCircuit object. This is what the transpiler does! It takes a circuit, operates on it in DAG form, and outputs a transformed circuit."
msgstr "Infine, dopo che tutte le trasformazioni sono complete, si può riconvertire ad un regolare oggetto QuantumCircuit. Questo è quello che fa il transpiler! A partire da un circuito, lavora sulla sua forma DAG e produce in output un circuito modificato."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1082
msgid "Implementing a BasicMapper Pass"
msgstr "Implementazione di una Pass BasicMapper"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1093
msgid "Now that we are familiar with the DAG, let’s use it to write a transpiler pass. Here we will implement a basic pass for mapping an arbitrary circuit to a device with limited qubit connectivity. We call this the BasicMapper. This pass is included in Qiskit Terra as well."
msgstr "Ora che siamo familiari con un DAG, utilizziamolo per scrivere una transpiler pass. Si andrà ad implementare una pass di base che effettua una mappatura di un circuito arbitrario su un dispositivo che ha limitata connettività tra qubit. Questo procedimento si chiama BasicMapper. Questo tipo di pass è anche inclusa in Qiskit Terra."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1095
msgid "The first thing to do when writing a transpiler pass is to decide whether the pass class derives from a ``TransformationPass`` or ``AnalysisPass``. Transformation passes modify the circuit, while analysis passes only collect information about a circuit (to be used by other passes). Then, the ``run(dag)`` method is implemented, which does the main task. Finally, the pass is registered inside the ``qiskit.transpiler.passes`` module."
msgstr "La prima cosa da fare quando si scrive una transpiler pass è decidere se questa è di tipo ``TransformationPass`` o ``AnalysisPass``. Le pass di trasformazione modificano il circuito, mentre quelle di analisi raccolgono informazioni sul circuito (che verranno poi utilizzate da altre pass). Quindi viene implementato il metodo ``run(dag)`` che effettua il passaggio principale. Infine, la pass viene registrata nel modulo ``qiskit.transpiler.passes``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1097
msgid "This pass functions as follows: it traverses the DAG layer-by-layer (each layer is a group of operations that does not act on independent qubits, so in theory all operations in a layer can be done independently). For each operation, if it does not already meet the coupling map constraints, the pass identifies a swap path and inserts swaps to bring the two qubits close to each other."
msgstr "Quasta pass funziona nel seguente modo: attraversa il DAG strato dopo strato (ogni strato è un gruppo di operazioni che non agisce su qubit indipendenti, quindi al livello teorico tutte le operazioni in uno strato possono essere eseguite indipendentemente). Per ogni operazione, se non soddisfa già i vincoli della coupling map, la pass identifica un percorso di scambi ed inserisce ogni scambio in modo da avvicinare i due qubit."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1099
msgid "Follow the comments in the code for more details."
msgstr "Si faccia riferimento ai commenti inseriti nel codice per avere più dettagli."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1215
msgid "Let’s test this pass on a small example circuit."
msgstr "Andiamo a testare questa pass su un piccolo circuito di esempio."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1264
msgid "Now we construct a pass manager that contains our new pass. We pass the example circuit above to this pass manager, and obtain a new, transformed circuit."
msgstr "Ora costruiamo un pass manager che contenga la nostra nuova pass. Mandiamo il circuito di esempio sopra indicato al pass manager per ottenere un nuovo circuito trasformato."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1354
msgid "Note that this pass only inserts the swaps necessary to make every two-qubit interaction conform to the device coupling map. It does not, for example, care about the direction of interactions, or the native gate set supported by the device. This is a design philosophy of Qiskit’s transpiler: every pass performs a small, well-defined action, and the aggressive circuit optimization is achieved by the pass manager through combining multiple passes."
msgstr "Da notare che questa pass inserisce soltanto gli scambi necessari a rendere ogni interazione a due qubit conforme alla coupling map del dispositivo. Questa è la filosofia con cui è stato disegnato il transpiler di Qiskit: ogni pass effettua un'azione ristretta e ben definita e l'ottimizzazione del circuito più aggressiva è raggiunta dal pass manager combinando molteplici pass."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1366
msgid "Transpiler Logging"
msgstr "Logging del Transpiler"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1368
msgid "Due to the complexity of the internal operations that the transpiler is performing it’s likely that you’ll end up in a situation where you’d like to debug an issue or just understand more of what is happening inside the transpiler when you call it. To facilitate this the transpiler emits log messages as part of its normal operation. This logging uses the Python standard library ``logging`` module to emit the log messages. Python’s standard logging was used because it allows Qiskit-Terra’s logging to integrate in a standard way with other applications and libraries."
msgstr "A causa della complessità delle operazioni interne eseguite dal transpiler, è probabile trovarsi nella situazione in cui diventa necessario effettuare un debug di una problematica o solo dover capire meglio cosa sta succedendo all'interno del traspiler una volta invocato. Per facilitare questo, il transpiler produce messaggi di log come parte del suo normale funzionamento. Il logging utilizza il modulo ``logging`` della libreria standard di Python per la produzione dei log. È stata utilizzata la libreria standard di logging di Python perchè permette al loggin di Qiskit-Terra di essere integrato in modo standard con altre applicazioni e librerie."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1371
msgid "For a more thorough introduction to Python logging refer to the `official documentation <https://docs.python.org/3/library/logging.html>`__ and the tutorials and cookbook linked off of there."
msgstr "Per avere un'introduzione più approfondita al logging di Python, si faccia riferimento alla `documentazione ufficiale <https://docs.python.org/3/library/logging.html>`__ e ai tutorial e cookbook che si trovano lì referenziati."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1386
msgid "Note: Most of the logging module functions used in this section adjust global settings. If you run commands in this section it might effect the output from other cells if they are run in a different order."
msgstr "Nota: La maggior parte delle funzioni presenti nel modulo di logging utilizzate in questa sezione modificano le impostazioni globali. Se esegui un comando in questa sezione potrebbe influire sull'output di altre celle se vengono eseguite in ordine differente."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1402
msgid "Configuring Python Standard Library Logging"
msgstr "Configurazione del Logging della Libreria Standard di Python"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1404
msgid "By default Python Standard Logging only prints log messages at the ``WARNING``, ``ERROR``, or ``CRITICAL`` log levels. Since none of the logs emitted by the transpiler use these log levels (they’re all informative) you need to configure logging."
msgstr "Come impostazione predefinita, i livelli di log dei messaggi visualizzati della libreria di logging Standard di Python sono solo ``WARNING``, ``ERROR``, o ``CRITICAL``. Dato che nessuno dei log prodotti dal transpiler utilizza questi livelli (sono tutti di tipo informativo), è necessario configurare il logging."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1406
msgid "The simplest way to do this is to just run:"
msgstr "Il modo più semplice per farlo è eseguire:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1429
msgid "The ``basicConfig()`` function (see the docs here: https://docs.python.org/3/library/logging.html#logging.basicConfig) configures a root handler and formatter. We also specify the `log level <https://docs.python.org/3/library/logging.html#levels>`__ to display with the ``level`` kwarg. Setting it to a level will also include and higher levels. For example, if you set it to ``'INFO'`` in addition to the ``INFO`` level this will also include the ``WARNING``, ``ERROR``, and ``CRITICAL`` log levels."
msgstr "La funzione ``basicConfig()`` (vedere i documenti presenti al seguente link: https://docs.python.org/3/library/logging.html#logging.basicConfig) va a configurare un root handler e formatter. Andiamo a specificare anche `il livello di log <https://docs.python.org/3/library/logging.html#levels>`__ per visualizzare il kwarg ``level``. Impostarlo su un livello includerà anche i livelli superiori. Per esempio, impostando ``'INFO'``, oltre al livello ``'INFO'`` verrano inclusi anche i livelli di log ``WARNING``, ``ERROR``, e ``CRITICAL``."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1431
msgid "Now the python environment in this notebook is configured to emit log messages to stderr when you run the transpiler. For example:"
msgstr "Ora l'invironment Python di questo notebook è configurato in modo da produrre messaggi di log sullo stderr quando si esegue il transpiler.\n"
"Per esempio:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1446
msgid "Note: basicConfig() will only work when called the first time it’s called. It detects if a root handler and formatter have already been setup (either by using an earlier basicConfig() call or otherwise) and does nothing if they have. Further adjustments will have to by interacting with the handler directly."
msgstr "Nota: basicConfig() funzionerà solo la prima volta che viene invocato. Rileva se un root handler e formatter sono già stati impostati (sia utilizzando una precedente chiamata a basicConfig() o in altri modi) e non esegue alcuna azione se lo sono stati. Ulteriori modifiche dovranno essere apportate interagendo direttamente con l'handler."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1634
msgid "As you can clearly see here when calling ``transpile()`` it now prints 2 types of log messages. The first is at the ``INFO`` log level and come from the pass manager. These indicate each pass that was executed and how long that took. The second are at the ``DEBUG`` level and come from the StochasticSwap pass and describes the internal operation of that pass. It’s useful for debugging issues in the pass’s operation."
msgstr "Come si vede chiaramente qui ora quando si invoca ``transpile()`` vengono stampati 2 tipi di messaggi di log. Il primo è a livello di log ``INFO`` e viene dal pass manager. Questi indicano ogni pass eseguita e quanto tempo ha impiegato. I secondi sono a livello ``DEBUG`` e provengono dalla pass StochasticSwap e ne descrivono il funzionamento interno. È utile nel caso di problemi di debug nel funzionamento della pass."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1646
msgid "Adjusting the log level for the transpiler"
msgstr "Regolazione del livello dei log del transpiler"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1648
msgid "The qiskit transpiler uses a single namespace ``qiskit.transpiler``, as used by ``logging.getLogger('qiskit.transpiler')``. This makes it very easy to adjust the log level for just the transpiler. For example if you only wish to see log messages at the INFO level or above you can run:"
msgstr "Il transpiler di Qiskit utilizza un singolo namespace chiamato ``qiskit.transpiler``, come utilizzato da ``logging.getLogger('qiskit.transpiler')``. Questo rende molto semplice modificare il livello di log solo per il transpiler. Per esempio se si desidera visualizzare solo messaggi di log a livello INFO, è possibile eseguire:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1749
msgid "Setting up logging to deal with parallel execution"
msgstr "Impostazione del logging nel caso di esecuzione in parallelo"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1751
msgid "When running the transpiler with multiple circuits by default these circuits are transpiled in parallel. If you want to do this with logging enabled and be able to understand the output some additional steps are required."
msgstr "Quando si esegue il transpiler con più circuiti, per default questi vengono processati in parallelo. Se si desidera effettuare questa operazione avendo il logging abilitato ed essere in grado di interpretare l'output, sono necessari dei passaggi aggiuntivi."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:1753
msgid "If you were just to enable logging as above and then pass ``transpile()`` multiple circuits you’ll get results that are difficult to decipher. For example:"
msgstr "Se si abilitasse il logging soltanto seguendo i passaggi sopra descritti e passando a ``transpile()`` più di un circuito, i risultati sarebbero difficili da decifrare. Per esempio:"

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2058
msgid "As you can see here we get log messages from all 3 circuits being transpiled together. There is no way to know which pass is part of which circuit’s transpilation. Luckily Python logging provides tools to deal with this. The simplest one is to just change the `log formatter <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ so that includes additional information so we can associate a log message with the process it came from."
msgstr "Come si può vedere, qui si ottengono messaggi di log da tutti e 3 i circuiti lavorati insieme dal transpiler. Non c'è modo di conoscere l'associazione tra il circuito sottoposto al processo del transpiler e le pass. Per fortuna Python fornisce strumenti che permettono di affrontare questa limitazione. La soluzione più semplice è quella di modificare solamente il `log formatter <https://docs.python.org/3/library/logging.html#logging.Formatter>`__ in modo da includere informazioni aggiuntive che rendono possibile associare il messaggio di log al processo che lo ha generato."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2081
msgid "Then rerun the ``transpile()`` call and see the new log formatter."
msgstr "Quindi ri-eseguiamo la chiamata ``transpile()`` e vediamo il nuovo formato del log."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2382
msgid "Now the format for the log messages has been changed and it includes a process name for each of the transpilation processes so it’s at least clear which log messages go together."
msgstr "Ora il formato dei messaggi di log è stato modificato ed include il nome del processo per ogni passaggio della trasformazione del transpiler, in modo che sia almeno chiaro quali messaggi di log fanno parte di uno stesso processo."

#: ../../tutorials/circuits_advanced/04_transpiler_passes_and_passmanager.ipynb:2384
msgid "There are many different options for how you can configure, this example is pretty limited. Refer to the documentation for more examples and options to build more sophisticated use cases that suit your specific use case or preferences."
msgstr "Esistono molte opzioni di configurazione, questo esempio è molto limitato. Si faccia riferimento alla documentazione per più esempi e opzioni per costruire use case più sofisticati e adatti a particolari esigenze o preferenze."

