msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 15:01+0000\n"
"PO-Revision-Date: 2020-11-12 15:36\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/7_matrix_product_state_method.po\n"
"X-Crowdin-File-ID: 9172\n"
"Language: pt_BR\n"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:10
msgid "This page was generated from `tutorials/simulators/7_matrix_product_state_method.ipynb`__."
msgstr "Esta página foi gerada a partir do 'tutoriais/simuladores/7_metodo_matriz_de_estado_do_produto.ipynb'__."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/simulators/7_matrix_product_state_method.ipynb>`_."
msgstr ""

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:9
#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:26
msgid "Matrix product state simulation method"
msgstr "Método de simulação de estado do produto matricial"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:12
msgid "Simulation methods"
msgstr "Métodos de simulação"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:14
msgid "The ``QasmSimulator`` has several simulation methods including ``statevector``, ``stabilizer``, ``extended_stabilizer`` and ``matrix_product_state``. Each of these determines the internal representation of the quantum circuit and the algorithms used to process the quantum operations. They each have advantages and disadvantages, and choosing the best method is a matter of investigation. In this tutorial, we focus on the ``matrix product state simulation method``."
msgstr "O ``QasmSimulator`` possui vários métodos de simulação incluindo ``statevector``, ``stabilizer``, ``extended_stabilizer`` e ``matrix_product_state``. Cada um destes determina a representação interna do circuito quântico e os algoritmos utilizados para processar as operações quânticas. Cada um tem vantagens e desvantagens, e escolher o melhor método é uma questão de investigação. Neste tutorial, nos concentramos no ``método de simulação do estado do produto matricial``."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:28
msgid "This simulation method is based on the concept of ``matrix product states``. This structure was initially proposed in the paper *Efficient classical simulation of slightly entangled quantum computations* by Vidal in https://arxiv.org/abs/quant-ph/0301063. There are additional papers that describe the structure in more detail, for example *The density-matrix renormalization group in the age of matrix product states* by Schollwoeck https://arxiv.org/abs/1008.3477."
msgstr "Este método de simulação baseia-se no conceito de ``estados de produto de matriz``. Esta estrutura foi inicialmente proposta no artigo *Efficient classical simulation of slightly entangled quantum computations* por Vidal em https://arxiv.org/abs/quant-ph/0301063. Há artigos adicionais que descrevem a estrutura em mais detalhes, por exemplo *The density-matrix renormalization group in the age of matrix product states* por Schollwoeck https://arxiv.org/abs/1008.3477."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:39
msgid "A pure quantum state is usually described as a state vector, by the expression :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."
msgstr "Um estado quântico puro é geralmente descrito como um vetor de estado, pela expressão :math:`|\\psi\\rangle = \\sum_{i_1=0}^1 {\\ldots} \\sum_{i_n=0}^1 c_{i_1 \\ldots i_n} |i_i\\rangle {\\otimes} {\\ldots} {\\otimes} |i_n\\rangle`."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:41
msgid "The state vector representation implies an exponential size representation, regardless of the actual circuit. Every quantum gate operating on this representation requires exponential time and memory."
msgstr "A representação do vetor de estado implica em uma representação de tamanho exponencial, independentemente do circuito real. Toda porta quântica que opera nessa representação requer tempo e memória exponenciais."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:43
msgid "The matrix product state (MPS) representation offers a local representation, in the form: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, such that all the information contained in the :math:`c_{i_1 \\ldots i_n}`, can be generated out of the MPS representation."
msgstr "A representação do estado de produto de matriz (MPS) oferece uma representação local, na forma: :math:`\\Gamma^{[1]} \\lambda^{[1]} \\Gamma^{[2]} \\lambda^{[2]}\\ldots \\Gamma^{[1]} \\lambda^{[n-1]} \\Gamma^{[n]}`, tal que todas as informações contidas nos :math:`c_{i_1 \\ldots i_n}`, podem ser geradas fora da representação do MPS."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:54
msgid "Every :math:`\\Gamma^{[i]}` is a tensor of complex numbers that represents qubit :math:`i`. Every :math:`\\lambda^{[i]}` is a matrix of real numbers that is used to normalize the amplitudes of qubits :math:`i` and :math:`i+1`. Single-qubit gates operate only on the relevant tensor."
msgstr "Cada :math:`\\Gamma^{[i]}` é um tensor de números complexos que representa o qubit :math:`i`. Cada :math:`\\lambda^{[i]}` é uma matriz de números reais que é usada para normalizar as amplitudes dos qubits :math:`i` e :math:`i+1`. Portas de um único qubit operam apenas no tensor relevante."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:56
msgid "Two-qubit gates operate on consecutive qubits :math:`i` and :math:`i+1`. This involves a tensor-contract operation over :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` and :math:`\\lambda^{[i+1]}`, that creates a single tensor. We apply the gate to this tensor, and then decompose back to the original structure. This operation may increase the size of the respective tensors. Gates that involve two qubits that are not consecutive, require a series of swap gates to bring the two qubits next to each other and then the reverse swaps."
msgstr "Portas de dois qubits operam em qubits consecutivos :math:`i` e :math:`i+1`. Isso envolve uma operação de contração tensorial sobre :math:`\\lambda^{[i-1]}`, :math:`\\Gamma^{[i-1]}`, :math:`\\lambda^{[i]}`, :math:`\\Gamma^{[i+1]}` e :math:`\\lambda^{[i+1]}`, que cria um tensor único. Aplicamos a porta a este tensor e, em seguida, decompomos ele para a estrutura original. Esta operação pode aumentar o tamanho dos respectivos tensores. Portas que envolvem dois qubits que não são consecutivos exigem uma série de portas de troca para aproximar os dois qubits um do outro e depois as trocas inversas."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:59
msgid "In the worst case, the tensors may grow exponentially. However, the size of the overall structure remains 'small' for circuits that do not have 'many' two-qubit gates. This allows much more efficient operations in circuits with relatively 'low' entanglement. Characterizing when to use this method over other methods is a subject of current research."
msgstr "No pior dos casos, os tensores podem crescer exponencialmente. No entanto, o tamanho da estrutura geral permanece 'pequeno' para circuitos que não possuem 'muitas' portas de dois qubits. Isso permite operações muito mais eficientes em circuitos com um entrelaçamento relativamente 'baixo'. Caracterizar quando utilizar este método sobre outros métodos é um assunto de pesquisa atual."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:71
msgid "Using the matrix product state simulation method"
msgstr "Usando o método de simulação do estado de produto de matriz"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:73
msgid "The matrix product state simulation method is invoked in the ``QasmSimulator`` by setting the simulation method. Other than that, all operations are controlled by the ``QasmSimulator`` itself, as in the following example:"
msgstr ""

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:133
msgid "To see the internal state vector of the circuit, we can import the snapshot files:"
msgstr "Para ver o vetor de estado interno do circuito, podemos importar os arquivos instantâneos:"

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:227
msgid "Running circuits using the matrix product state simulation method can be fast, relative to other methods. However, if we generate the state vector during the execution, then the conversion to state vector is, of course, exponential in memory and time, and therefore we don't benefit from using this method. We can benefit if we only do operations that don't require printing the full state vector. For example, if we run a circuit and then take measurement. The circuit below has 200 qubits. We create an ``EPR state`` involving all these qubits. Although this state is highly entangled, it is handled well by the matrix product state method, because there are effectively only two states."
msgstr "Executar circuitos usando o método de simulação de estado de produto de matriz pode ser rápido em relação a outros métodos. No entanto, se nós geramos o vetor de estado durante a execução, então a conversão para vetor de estado é, claro, exponencial na memória e no tempo, e por isso não nos beneficiamos com a utilização deste método. Podemos nos beneficiar se fizermos apenas operações que não exijam imprimir o vetor de estado completo. Por exemplo, se executamos um circuito e depois tomamos a medição. O circuito abaixo tem 200 qubits. Criamos um ``estado EPR`` que envolve todos esses qubits. Embora este estado seja altamente emaranhado, é bem gerido pelo método do estado de produto de matriz, porque na realidade só existem dois estados."

#: ../../tutorials/simulators/7_matrix_product_state_method.ipynb:230
msgid "We can handle more qubits than this, but execution may take a few minutes. Try running a similar circuit with 500 qubits! Or maybe even 1000 (you can get a cup of coffee while waiting)."
msgstr "Podemos lidar com mais qubits do que isso, mas a execução pode levar alguns minutos. Tente executar um circuito similar com 500 qubits! Ou talvez até 1000 (você pode tomar uma xícara de café enquanto espera)."

