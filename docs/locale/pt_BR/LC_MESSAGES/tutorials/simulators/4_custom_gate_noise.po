msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 19:20+0000\n"
"PO-Revision-Date: 2020-10-27 03:07\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/simulators/4_custom_gate_noise.po\n"
"X-Crowdin-File-ID: 9166\n"
"Language: pt_BR\n"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:10
msgid "This page was generated from `tutorials/simulators/4_custom_gate_noise.ipynb`__."
msgstr "Esta página foi gerada a partir do `tutorials/simulators/4_custom_gate_noise.ipynb`__."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:9
msgid "Applying noise to custom unitary gates"
msgstr "Aplicando ruído às portas unitárias personalizadas"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:23
msgid "This notebook shows how to add custom unitary gates to a quantum circuit, and use them for noise simulations in Qiskit Aer."
msgstr "Este notebook mostra como adicionar portas unitárias customizadas a um circuito quântico, e usá-las para simulações de ruído no Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:50
msgid "Creating matrix operators"
msgstr "Criando operadores de matriz"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:52
msgid "We can use the ``Operator`` class in ``qiskit.quantum_info`` to represent arbitrary matrix operators. If the operator is unitary it can then be added to a quantum circuit and used for simulation on Qiskit Aer."
msgstr "Podemos utilizar a classe ``Operator`` no ``qiskit.quantum_info`` para representar operadores de matriz arbitrários. Se o operador for unitário, pode ser adicionado a um circuito quântico e usado para simulação no Qiskit Aer."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:54
msgid "Lets create two operators below for a CNOT gate and an iSWAP gate:"
msgstr "Vamos criar dois operadores para uma porta CNOT e uma porta iSWAP:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:56
msgid "\\mbox{CNOT} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1 \\\\\n"
"0 & 0 & 1 & 0 \\\\\n"
"0 & 1 & 0 & 0\n"
"\\end{array}\\right), \\quad\n"
"\\mbox{iSWAP} = \\left(\\begin{array}\n"
"& 1 & 0 & 0 & 0 \\\\\n"
"0 & 0 & i & 0 \\\\\n"
"0 & i & 0 & 0 \\\\\n"
"0 & 0 & 0 & 1\n"
"\\end{array}\\right)"
msgstr ""

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:100
msgid "**Note:** The matrix is specified with respect to the tensor product :math:`U_{b}\\otimes U_{a}` for qubits specified by list ``[a, b]``."
msgstr "**Nota:** A matriz é especificada em relação ao tensor :math:`U_{b}\\otimes U_{a}` para qubits especificados pela lista ``[a, b]``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:112
msgid "Using operators in circuits"
msgstr "Usando operadores nos circuitos"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:114
msgid "Let us demonstrate how these can be used in a circuit. We will consider an example of implementing a CNOT gate decomposed in terms of single-qubit gates and the iSWAP gate as follows."
msgstr "Demonstraremos como eles podem ser utilizados num circuito. Vamos considerar um exemplo de implementação de uma porta CNOT decomposta em termos de portas de qubit únicos e da porta iSWAP, da seguinte forma."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:176
msgid "Note that we have assigned an optional *label* of ``\"iswap\"`` to the unitary when it is inserted. This allows us to identify this unitary in a Qiskit Aer ``NoiseModel`` so that we can add errors to these custom unitary gates in noisy circuit simulations."
msgstr "Note que atribuímos uma *etiqueta* opcional de ``\"iswap\"`` para a unidade quando ela for inserida. Isto nos permite identificar esta unidade em um Qiskit Aer ``NoiseModel`` para que possamos adicionar erros a estas portas unitárias personalizadas, em simulações de circuitos com ruído."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:187
msgid "We can confirm this circuit returns the correct output using the ``Operator`` class as a simulator for the circuit:"
msgstr "Podemos confirmar que este circuito retorna a saída correta usando a classe ``Operator`` como um simulador para o circuito:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:237
msgid "And to confirm the output is correct we can compute the average gate fidelity:"
msgstr "E para confirmar que a saída está correta, podemos calcular a fidelidade média da porta:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:279
msgid "Creating a custom unitary in a noise model"
msgstr "Criando um unitário personalizado em um modelo com ruído"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:281
msgid "The Qiskit Aer ``QasmSimulator`` supports simulation of arbitrary unitary operators directly as specified by the ``\"unitary\"`` in the basis gates."
msgstr "O Qiskit Aer ``QasmSimulator`` suporta a simulação de operadores unitários arbitrários, diretamente como especificado pelo ``\"unitário\"`` nas portas da base."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:322
msgid "This allows us to add noise models to arbitrary unitaries in our simulation when we identify them using the optional ``label`` argument of ``QuantumCircuit.unitary``."
msgstr "Isso nos permite adicionar modelos com ruído às unidades arbitrárias em nossa simulação, quando as identificamos usando o argumento opcional ``label`` do ``QuantumCircuit.unitary``."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:324
msgid "We will now do this by creating a ``NoiseModel`` that includes a quantum error channel on our custom iSWAP gate. For our example we will create a 2-qubit error consisting of two single-qubit amplitude damping channels with different damping parameters. For now we will assume all the other circuit instructions are ideal."
msgstr "Agora vamos fazer isso criando um ``NoiseModel`` que inclui um canal de erro quântico na nossa porta personalizada para iSWAP. Para nosso exemplo, vamos criar um erro 2-qubit, composto por dois canais com amortecimento com amplitude de um single-qubit e parâmetros de amortecimento distintos. Por agora, partiremos do princípio de que todas as outras instruções são ideais."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:356
msgid "Note that when we add an error to a custom label such as ``\"iswap\"`` the ``NoiseModel`` does not know what gate this label is supposed to apply to, so we must manually add the desired gate string to the noise model ``basis_gates``. This ensures that the compiler will unroll to the correct basis gates for the noise model simulation. This can done using the ``NoiseModel.add_basis_gates`` function:"
msgstr "Note que quando adicionamos um erro a um rótulo personalizado como ``\"iswap\"`` o ``NoiseModel`` não sabe a que porta este rótulo se deve aplicar, então devemos adicionar manualmente a sequência de caracteres da porta desejada, ao modelo de ruído ``basis_gates``. Isto garante que o compilador irá rolar para as portas corretas, para a simulação do modelo com ruído. Isto pode ser feito usando a função ``NoiseModel.add_basis_gates``:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:397
msgid "By default the basis gates of a noise model are ``['cx','id','u3']`` plus any standard ``QasmSimulator`` basis gates that are added to the noise model."
msgstr "Por padrão, as portas de base de um modelo com ruído são ``['cx','id','u3']`` mais quaisquer portas de base padrão ``QasmSimulator``, que são adicionadas ao modelo com ruído."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:409
msgid "Simulating a custom unitary noise model"
msgstr "Simulando um modelo com ruído unitário personalizado"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:420
msgid "Let us first take our previous CX circuit and add an initial Hadamard gate and final measurement to create a Bell-state preparation circuit that we may simulator on the ``QasmSimulator`` both for the ideal and noisy case:"
msgstr "Primeiro, vamos pegar o nosso circuito CX anterior e adicionar uma porta Hadamard inicial e uma medição final para criar um circuito de preparação Bel-state que poderemos simular no ``QasmSimulator``, tanto para o caso ideal e com ruído:"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:482
msgid "Ideal output"
msgstr "Saída ideal"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:484
msgid "Let's first see the ideal output. Since this generates a Bell-state we expect two peaks for 00 and 11."
msgstr "Primeiro, vamos ver o resultado ideal. Como isso gera um Bell-state, esperamos dois picos para 00 e 11."

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:520
msgid "Noisy circuit execution"
msgstr "Execução do circuito com ruído"

#: ../../tutorials/simulators/4_custom_gate_noise.ipynb:522
msgid "Finally, let's now simulate it with our custom noise model. Since there is a small amplitude damping error on the two-qubit gates we expect small additional peaks for the 01 and 10 outcome probabilities."
msgstr "Finalmente, vamos simulá-lo com nosso modelo com ruído personalizado. Uma vez que há um pequeno erro de amortecimento de amplitude nas portas de 2-qubits, esperamos pequenos picos adicionais para as probabilidades de resultado de 01 e 10."

