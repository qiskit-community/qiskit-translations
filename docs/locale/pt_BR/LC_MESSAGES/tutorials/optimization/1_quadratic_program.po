msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 15:01+0000\n"
"PO-Revision-Date: 2020-11-12 15:36\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/optimization/1_quadratic_program.po\n"
"X-Crowdin-File-ID: 9148\n"
"Language: pt_BR\n"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:10
msgid "This page was generated from `tutorials/optimization/1_quadratic_program.ipynb`__."
msgstr "Esta página foi gerada a partir do `tutoriais/otimizacao/1_programa_quadratico.ipynb`__."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/optimization/1_quadratic_program.ipynb>`_."
msgstr ""

#: ../../tutorials/optimization/1_quadratic_program.ipynb:9
msgid "Quadratic Programs"
msgstr "Programas Quadráticos"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:32
msgid "In this tutorial, we briefly introduce how to build optimization problems using Qiskit's optimization module. Qiskit introduces the ``QuadraticProgram`` class to make a model of an optimization problem. More precisely, it deals with quadratically constrained quadratic programs given as follows:"
msgstr "Neste tutorial, introduzimos brevemente como construir problemas de otimização usando o módulo de otimização do Qiskit. O Qiskit introduz a classe ``QuadraticProgram`` para fazer um modelo de um problema de otimização. Mais precisamente, lida com programas quadráticos restritos quadraticamente, dados da seguinte forma:"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:34
msgid "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"
msgstr "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:44
msgid "where the :math:`Q_i` are :math:`n \\times n` matrices, :math:`A` is a :math:`m \\times n` matrix , :math:`x`, and :math:`c` are :math:`n`-dimensional vectors, :math:`b` is an :math:`m`-dimensional vector, and where :math:`x` can defined as binary, integer, or continuous variables. In addition to \":math:`\\leq`\" constraints 'QuadraticProgram' also supports \":math:`\\geq`\" and \":math:`=`\"."
msgstr "onde :math:`Q_i` são matrizes :math:`n \\times n`, :math:`A` é uma matriz :math:`m \\times n`, :math:`x` e :math:`c` são vetores :math:`n`-dimensionais, :math:`b` é um vetor :math:`m`-dimensional, e onde :math:`x` pode ser definido com variáveis binárias, inteiras ou contínuas. Além das restrições \":math:`\\leq`\", 'QuadraticProgram' também suporta \":math:`\\geq`\" and \":math:`=`\"."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:56
msgid "Loading a ``Quadratic Program`` from an LP file"
msgstr "Carregando um ``Quadratic Program`` a partir de um arquivo LP"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:67
msgid "As setup, you need to import the following module."
msgstr "Como configuração, é necessário importar o seguinte módulo."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:88
msgid "You start with an empty model. How to add variables and constraints to a model is explained in the section \"Directly constructing a ``QuadraticProgram``\"."
msgstr "Você começa com um modelo vazio. Como adicionar variáveis e restrições a um modelo é explicado na seção \"Construindo diretamente um ``QuadraticProgram``\"."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:99
msgid "Qiskit's optimization module supports the conversion from Docplex model. You can easily make a model of an optimization problem with Docplex. You can find the documentation of Docplex at https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"
msgstr "O módulo de otimização do Qiskit suporta a conversão de um modelo Docplex. Você pode facilmente fazer um modelo de um problema de otimização com o Docplex. Você pode encontrar a documentação do Docplex em https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:101
msgid "You can load a Docplex model to ``QuadraticProgram`` by invoking ``from_docplex``."
msgstr "Você pode carregar um modelo Docplex para ``QuadraticProgram`` invocando ``from_docplex``."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:113
msgid "Loading a ``QuadraticProgram`` from a docplex model"
msgstr "Carregando um ``QuadraticProgram`` a partir de um modelo docplex"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:275
msgid "Directly constructing a ``QuadraticProgram``"
msgstr "Construindo diretamente um ``QuadraticProgram``"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:286
msgid "We then explain how to make model of an optimization problem directly using ``QuadraticProgram``. Let's start from an empty model."
msgstr "Explicamos então como modelar um problema de otimização diretamente utilizando a ``QuadraticProgram``. Vamos começar a partir de um modelo vazio."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:348
msgid "The ``QuadraticProgram`` supports three types of variables: - Binary variable - Integer variable - Continuous variable"
msgstr "A ``QuadraticProgram`` suporta três tipos de variáveis: - Variável binária - Variável inteira - Variável contínua"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:350
msgid "When you add variables, you can specify names, types, lower bounds and upper bounds."
msgstr "Quando você adiciona variáveis, você pode especificar nomes, tipos, limites inferiores e limites superiores."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:352
msgid "When you display your problem as LP format, ``Binaries`` denotes binary variables and ``Generals`` denotes integer variables. If variables are not included in either ``Binaries`` or ``Generals``, such variables are continuous ones with default lower bound = 0 and upper bound = infinity. Note that you cannot use 'e' or 'E' as the first character of names due to the `specification of LP format <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."
msgstr "Ao visualizar o seu problema como formato LP, ``Binaries`` denota variáveis binárias e ``Generals`` denota variáveis inteiras. Se as variáveis não estiverem incluídas em ``Binaries`` nem ``Generals``, tais variáveis são contínuas com limite inferior = 0 e limite superior = infinito por padrão. Observe que você não pode usar 'e' ou' E' como o primeiro caractere de nomes devido à `especificação do formato LP <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:435
msgid "You can set the objective function by invoking ``QuadraticProgram.minimize`` or ``QuadraticProgram.maximize``. You can add a constant term as well as linear and quadratic objective function by specifying linear and quadratic terms with either list, matrix or dictionary."
msgstr "Você pode configurar a função objetiva invocando ``QuadraticProgram.minimize`` ou ``QuadraticProgram.maximize``. Você pode adicionar um termo constante assim como uma função objetiva linear e quadrática especificando termos lineares e quadráticos usando uma lista, matriz ou dicionário."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:437
msgid "Note that in the LP format the quadratic part has to be scaled by a factor :math:`1/2`. Thus, when printing as LP format, the quadratic part is first multiplied by 2 and then divided by 2 again."
msgstr "Observe que no formato LP a parte quadrática tem que ser escalonada por um fator :math:`1/2`. Assim, quando imprimindo no formato LP, a parte quadrática é primeiramente multiplicada por 2 e então dividida por 2 novamente."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:439
msgid "For quadratic programs, there are 3 pieces that have to be specified: a constant (offset), a linear term (:math:`c^{T}x`), and a quadratic term (:math:`x^{T}Qx`)."
msgstr "Para os programas quadráticos, existem 3 peças que devem ser especificadas: uma constante (offset), um termo linear (:math:`c^{T}x`), e um termo quadrático (:math:`x^{T}Qx`)."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:441
msgid "The cell below shows how to declare an objective function using a dictionary. For the linear term, keys in the dictionary correspond to variable names, and the corresponding values are the coefficients. For the quadratic term, keys in the dictionary correspond to the two variables being multiplied, and the values are again the coefficients."
msgstr "A célula abaixo mostra como declarar uma função objetiva usando um dicionário. Para o termo linear, as chaves do dicionário correspondem a nomes de variáveis, sendo que os valores correspondentes são os coeficientes. Para o termo quadrático, as chaves do dicionário correspondem às duas variáveis que estão sendo multiplicadas, sendo que os valores são novamente os coeficientes."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:521
msgid "Another way to specify the quadratic program is using arrays. For the linear term, the array corresponds to the vector :math:`c` in the mathematical formulation. For the quadratic term, the array corresponds to the matrix :math:`Q`. Note that the ordering of the variables (:math:`x` in the mathematical formulation) is the order in which the variables were originally declared in the QuadraticProgram object."
msgstr "Outra maneira de especificar o programa quadrático é usando matrizes. Para o termo linear, a matriz corresponde ao vetor :math:`c` na formulação matemática. Para o termo quadrático, a matriz corresponde à matriz :math:`Q`. Observe que a ordenação das variáveis (:math:`x` na formulação matemática) é a ordem na qual as variáveis foram originalmente declaradas no objeto QuadraticProgram."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:601
msgid "You can access the constant, the linear term, and the quadratic term by looking at ``Quadratic.objective.{constant, linear, quadratic}``, respectively. As for linear and quadratic terms, you can get a dense matrix (``to_array``), a sparse matrix (``coefficients``), and a dictionary (``to_dict``). For dictionaries, you can specify whether to use variable indices or names as keys. Note that the quadratic terms are stored in a compressed way, e.g., ``{('x', 'y'): 1, ('y', 'x'): 2}`` is stored as ``{('x', 'y'): 3}``. You can get the quadratic term as a symmetric matrix by calling ``to_array(symmetric=True)`` or ``to_dict(symmetric=True)``. If you call ``to_dict(name=True)``, you can get a dictionary whose keys are pairs of variable names."
msgstr "Você pode acessar a constante, o termo linear, e o termo quadrático olhando para ``Quadratic.objective.{constant, linear, quadratic}``, respectivamente. Quanto aos termos lineares e quadráticos, pode-se obter uma matriz densa (``to_array``), uma matriz esparsa (``coefficients``), e um dicionário (``to_dict``). Para os dicionários, é possível especificar se deve usar os índices ou nomes das variáveis como chaves. Observe que os termos quadráticos são armazenados de forma compactada, por exemplo, ``{('x', 'y'): 1, ('y', 'x'): 2}`` é armazenado como ``{('x', 'y'): 3}``. Você pode obter o termo quadrático como uma matriz simétrica chamando ``to_array(symmetric=True)`` ou ``to_dict(symmetric=True)``. Se você chamar ``to_dict(name=True)``, você pode obter um dicionário cujas chaves são pares de nomes de variáveis."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:694
msgid "Adding/removing linear and quadratic constraints"
msgstr "Adicionando/removendo restrições lineares e quadráticas"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:705
msgid "You can add linear constraints by setting name, linear expression, sense and right-hand-side value (rhs). You can use senses 'EQ', 'LE', and 'GE' as Docplex supports."
msgstr "Você pode adicionar restrições lineares configurando um nome, uma expressão linear, um sentido e um valor da mão direita (rhs). Você pode usar os sentidos 'EQ', 'LE' e 'GE ' como o Docplex suporta."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:793
msgid "You can add quadratic constraints as well as objective function and linear constraints."
msgstr "Você pode adicionar restrições quadráticas, bem como funções objetivas e restrições lineares."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:887
msgid "You can access linear and quadratic terms of linear and quadratic constraints as in the same way as the objective function."
msgstr "Você pode acessar termos lineares e quadráticos de restrições lineares e quadráticas da mesma forma que com a função objetiva."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:932
msgid "You can also remove linear/quadratic constraints by ``remove_linear_constraint`` and ``remove_quadratic_constraint``."
msgstr "Você também pode remover restrições lineares/quadráticas usando ``remove_linear_constraint`` e ``remove_quadratic_constraint``."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1021
msgid "You can substitute some of variables with constants or other variables. More precicely, ``QuadraticProgram`` has a method ``substitute_variables(constants=..., variables=...)`` to deal with the following two cases. - :math:`x \\leftarrow c`: when ``constants`` have a dictionary ``{x: c}``. - :math:`x \\leftarrow c y`: when ``variables`` have a dictionary ``{x: (y, c)}``."
msgstr "Você pode substituir algumas variáveis por constantes ou outras variáveis. Mais precisamente, a ``QuadraticProgram`` possui um método ``substitute_variables(constants=..., variables=...)`` para lidar com os dois casos a seguir. - :math:`x \\leftarrow c`: quando ``constants`` tem um dicionário ``{x: c}``. - :math:`x \\leftarrow c y`: quando ``variables`` tem um dicionário ``{x: (y, c)}``."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1033
msgid "Substituting Variables"
msgstr "Substituindo Variáveis"

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1104
msgid "If the resulting problem is infeasible due to lower bounds or upper bounds, the methods returns the status ``Status.INFEASIBLE``. We try to replace variable ``x`` with -1, but -1 is out of range of ``x`` (0 <= ``x`` <= 1). So, it returns ``Status.INFEASIBLE``."
msgstr "Se o problema resultante for inviável devido a limites inferiores ou limites superiores, os métodos retornam o status ``Status.INFEASIBLE``. Nós tentamos substituir a variável ``x``, por -1, mas -1 está fora do intervalo de ``x`` (0 <= ``x`` <= 1). Assim, ele retorna ``Status.INFEASIBLE``."

#: ../../tutorials/optimization/1_quadratic_program.ipynb:1148
msgid "You cannot substitute variables multiple times. The method raises an error in such a case."
msgstr "Não é possível substituir variáveis várias vezes. O método retorna um erro nesse caso."

