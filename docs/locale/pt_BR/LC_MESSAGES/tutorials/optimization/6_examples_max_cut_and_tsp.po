msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-11-12 15:01+0000\n"
"PO-Revision-Date: 2020-11-12 15:36\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/optimization/6_examples_max_cut_and_tsp.po\n"
"X-Crowdin-File-ID: 9360\n"
"Language: pt_BR\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:10
msgid "This page was generated from `tutorials/optimization/6_examples_max_cut_and_tsp.ipynb`__."
msgstr "Esta página foi gerada a partir de `tutorials/optimization/6_examples_max_cut_and_tsp.ipynb`__."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/optimization/6_examples_max_cut_and_tsp.ipynb>`_."
msgstr ""

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:9
msgid "**Max-Cut and Traveling Salesman Problem**"
msgstr "** Max-Cut e o Problema do Caixeiro Viajante**"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:23
msgid "Many problems in quantitative fields such as finance and engineering are optimization problems. Optimization problems lie at the core of complex decision-making and definition of strategies."
msgstr "Muitos problemas em domínios quantitativos como o financiamento e a engenharia são problemas de otimização. Os problemas de optimização estão no cerne da complexa tomada de decisões e da definição de estratégias."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:25
msgid "Optimization (or combinatorial optimization) means searching for an optimal solution in a finite or countably infinite set of potential solutions. Optimality is defined with respect to some criterion function, which is to be minimized or maximized. This is typically called cost function or objective function."
msgstr "Otimização (ou otimização combinatória) significa procurar uma solução ideal em um conjunto finito ou contavelmente infinito de possíveis soluções. A solução ótima é definida no que se refere a alguma função de critério, que deve ser minimizada ou maximizada. Isso é normalmente chamado função de custo ou função objetiva."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:27
msgid "**Typical optimization problems**"
msgstr "**Problemas típicos de otimização**"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:29
msgid "Minimization: cost, distance, length of a traversal, weight, processing time, material, energy consumption, number of objects"
msgstr "Minimização: custo, distância, comprimento de um transversal, peso, tempo de processamento, material, consumo de energia, número de objetos"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:31
msgid "Maximization: profit, value, output, return, yield, utility, efficiency, capacity, number of objects"
msgstr "Maximização: lucro, valor, saída, retorno, renda, utilidade, eficiência, capacidade, número de objetos"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:33
msgid "We consider here max-cut problems of practical interest in many fields, and show how they can be mapped on quantum computers manually and how Qiskit's optimization module supports this."
msgstr "Consideramos aqui problemas de \"max-cut\" de interesse prático em muitos domínios, e mostraremos como eles podem ser mapeados em computadores quânticos manualmente e como o módulo de otimização do Qiskit suporta isso."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:36
msgid "Weighted Max-Cut"
msgstr "Max-Cut ponderado"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:38
msgid "Max-Cut is an NP-complete problem, with applications in clustering, network science, and statistical physics. To grasp how practical applications are mapped into given Max-Cut instances, consider a system of many people that can interact and influence each other. Individuals can be represented by vertices of a graph, and their interactions seen as pairwise connections between vertices of the graph, or edges. With this representation in mind, it is easy to model typical marketing problems. For example, suppose that it is assumed that individuals will influence each other's buying decisions, and knowledge is given about how strong they will influence each other. The influence can be modeled by weights assigned on each edge of the graph. It is possible then to predict the outcome of a marketing strategy in which products are offered for free to some individuals, and then ask which is the optimal subset of individuals that should get the free products, in order to maximize revenues."
msgstr "Max-Cut é um problema de NP completo, com aplicação para agrupamento, ciência da rede e física estatística. Para compreender como as aplicações práticas são mapeadas para instâncias do Max-Cut, considere um sistema de muitas pessoas que podem interagir e influenciar umas às outras. Indivíduos podem ser representados por vértices de um gráfico e suas interações podem ser vistas como conexões paralelas entre vértices do gráfico, ou bordas. Com esta representação em mente, é fácil modelar problemas típicos de Marketing. Por exemplo, suponhamos que se parte do princípio de que os indivíduos influenciarão as decisões de compra uns dos outros, e é dado conhecimento do grau de influência recíproca. A influência pode ser modelada por pesos atribuídos em cada borda do gráfico. É então possível prever o resultado de uma estratégia de comercialização em que os produtos são oferecidos gratuitamente a alguns indivíduos. e depois perguntar qual é o subconjunto ideal de indivíduos que devem obter os produtos grátis, a fim de maximizar as receitas."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:41
msgid "The formal definition of this problem is the following:"
msgstr "A definição formal deste problema é a seguinte:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:43
msgid "Consider an :math:`n`-node undirected graph *G = (V, E)* where *\\|V\\| = n* with edge weights :math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, for :math:`(i, j)\\in E`. A cut is defined as a partition of the original set V into two subsets. The cost function to be optimized is in this case the sum of weights of edges connecting points in the two different subsets, *crossing* the cut. By assigning :math:`x_i=0` or :math:`x_i=1` to each node :math:`i`, one tries to maximize the global profit function (here and in the following summations run over indices 0,1,...n-1)"
msgstr "Considere um :math:`n`-node undirected graph *G = (V, E)* onde *\\├V\\├= n* com pesos nas bordas :math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, for :math:`(i, j)\\in E`. Um corte é definido como uma partição do conjunto original V em dois subconjuntos. A função de custo a ser otimizada é neste caso a soma dos pesos das bordas conectando pontos nos dois subconjuntos diferentes, *cruzando* o corte. Atribuindo :math:`x_i=0` ou :math:`x_i=1` a cada nó :math:`i`, um tenta maximizar a função global de lucro (aqui e nas somas seguintes são executadas sobre índices 0,1. .n-1)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:46
msgid "\\tilde{C}(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j).\n\n"
msgstr "\\tilde{C}(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j).\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:48
msgid "In our simple marketing model, :math:`w_{ij}` represents the probability that the person :math:`j` will buy a product after :math:`i` gets a free one. Note that the weights :math:`w_{ij}` can in principle be greater than :math:`1` (or even negative), corresponding to the case where the individual :math:`j` will buy more than one product. Maximizing the total buying probability corresponds to maximizing the total future revenues. In the case where the profit probability will be greater than the cost of the initial free samples, the strategy is a convenient one. An extension to this model has the nodes themselves carry weights, which can be regarded, in our marketing model, as the likelihood that a person granted with a free sample of the product will buy it again in the future. With this additional information in our model, the objective function to maximize becomes"
msgstr "Em nosso modelo de marketing simples, :math:`w_{ij}` representa a probabilidade de que a pessoa :math:`j` compre um produto após :math:`i` receber de graça. Note que os pesos :math:`w_{ij}` podem ser em princípio maiores que :math:`1` (ou mesmo negativos), correspondente ao caso em que o indivíduo :math:`j` comprará mais de um produto. Maximizar a probabilidade de compra total corresponde a maximizar o total das receitas futuras. No caso em que a probabilidade de lucro será maior do que o custo das primeiras amostras gratuitas, a estratégia é conveniente. Uma extensão deste modelo tem os próprios nós com pesos, que podem ser considerados, no nosso modelo de marketing, como a probabilidade de uma pessoa concedida com uma amostra gratuita do produto a comprar de novo no futuro. Com essas informações adicionais em nosso modelo, a função objetiva para maximizar se torna"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:51
msgid "C(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j)+\\sum_i w_i x_i.\n\n"
msgstr "C(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j)+\\sum_i w_i x_i.\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:53
msgid "In order to find a solution to this problem on a quantum computer, one needs first to map it to an Ising Hamiltonian. This can be done with the assignment :math:`x_i\\rightarrow (1-Z_i)/2`, where :math:`Z_i` is the Pauli Z operator that has eigenvalues :math:`\\pm 1`. Doing this we find that"
msgstr "Para encontrar uma solução para este problema num computador quântico, é necessário primeiro mapeá-lo para um Hamiltoniano Ising. Isso pode ser feito com a atribuição :math:`x_i\\rightarrow (1-Z_i)/2`, onde :math:`Z_i` é o operador Pauli Z que possui eigenvalues :math:`\\pm 1`. Fazendo isso, descobrimos que"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:55
msgid "C(\\textbf{Z}) = \\sum_{i,j} \\frac{w_{ij}}{4} (1-Z_i)(1+Z_j) + \\sum_i \\frac{w_i}{2} (1-Z_i) = -\\frac{1}{2}\\left( \\sum_{i<j} w_{ij} Z_i Z_j +\\sum_i w_i Z_i\\right)+\\mathrm{const},\n\n"
msgstr "C(\\textbf{Z}) = \\sum_{i,j} \\frac{w_{ij}}{4} (1-Z_i)(1+Z_j) + \\sum_i \\frac{w_i}{2} (1-Z_i) = -\\frac{1}{2}\\left( \\sum_{i<j} w_{ij} Z_i Z_j +\\sum_i w_i Z_i\\right)+\\mathrm{const},\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:57
msgid "where $:nbsphinx-math:`\\mathrm{const}` = :nbsphinx-math:`\\sum`\\ *{i<j}w*\\ {ij}/2+:nbsphinx-math:`\\sum`\\_i w\\_i/2 $. In other terms, the weighted Max-Cut problem is equivalent to minimizing the Ising Hamiltonian"
msgstr "onde, $:nbsphinx-math:`\\mathrm{const}` = :nbsphinx-math:`\\sum`\\ *{i<j}w*\\ {ij}/2+:nbsphinx-math:`\\sum`\\_i w\\_i/2 $. Em outras palavras, o problema ponderado de Max-Cut equivale a minimizar o Hamiltoniano de Ising"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:59
msgid "H = \\sum_i w_i Z_i + \\sum_{i<j} w_{ij} Z_iZ_j.\n\n"
msgstr "H = \\sum_i w_i Z_i + \\sum_{i<j} w_{ij} Z_iZ_j.\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:61
msgid "Qiskit's optimization module can generate the Ising Hamiltonian for the first profit function :math:`\\tilde{C}`. To this extent, function :math:`\\tilde{C}` can be modeled as a ``QuadraticProgram``, which provides the ``to_ising()`` method."
msgstr "O módulo de otimização do Qiskit pode gerar o Hamiltoniano de Ising para a primeira função de lucro :math:`\\tilde{C}`. Neste sentido, a função :math:`\\tilde{C}` pode ser modelada como um ``QuadraticProgram``, que fornece o método ``to_ising()``."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:64
msgid "Approximate Universal Quantum Computing for Optimization Problems"
msgstr "Computação Quântica Universal Aproximada para Problemas de Otimização"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:66
msgid "There has been a considerable amount of interest in recent times about the use of quantum computers to find a solution to combinatorial optimization problems. It is important to say that, given the classical nature of combinatorial problems, exponential speedup in using quantum computers compared to the best classical algorithms is not guaranteed. However, due to the nature and importance of the target problems, it is worth investigating heuristic approaches on a quantum computer that could indeed speed up some problem instances. Here we demonstrate an approach that is based on the *Quantum Approximate Optimization Algorithm* (QAOA) by Farhi, Goldstone, and Gutman (2014). We frame the algorithm in the context of *approximate quantum computing*, given its heuristic nature."
msgstr "Nos últimos tempos, tem havido um interesse considerável pela utilização de computadores quânticos para encontrar uma solução para problemas de optimização combinatória. É importante dizer que, dada a natureza clássica dos problemas de combinação, é importante dizer que a aceleração exponencial no uso de computadores quânticos em comparação com os melhores algoritmos clássicos não é garantida. No entanto, devido à natureza e à importância dos problemas, vale a pena investigar abordagens heurísticas num computador quântico que podem, de fato, acelerar alguns casos problemáticos. Aqui, demonstramos uma abordagem que é baseada no *Algoritmo de Otimização de Aproximação Quântica* (QAOA) por Farhi, Goldstone, and Gutman (2014). Nós empacotamos o algoritmo no contexto de *cálculo quântico aproximado*, dado sua natureza heurística."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:69
msgid "The algorithm works as follows:"
msgstr "O algoritmo funciona da seguinte maneira:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:71
msgid "Choose the :math:`w_i` and :math:`w_{ij}` in the target Ising problem. In principle, even higher powers of Z are allowed."
msgstr "Escolha o :math:`w_i` e :math:`w_{ij}` no problema de Ising alvo. Em princípio, potências ainda maiores de Z são permitidas."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:73
msgid "Choose the depth of the quantum circuit :math:`m`. Note that the depth can be modified adaptively."
msgstr "Escolha a profundidade do circuito quântico :math:`m`. Observe que a profundidade pode ser modificada adaptativamente."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:75
msgid "Choose a set of controls :math:`\\theta` and make a trial function :math:`|\\psi(\\boldsymbol\\theta)\\rangle`, built using a quantum circuit made of C-Phase gates and single-qubit Y rotations, parameterized by the components of :math:`\\boldsymbol\\theta`."
msgstr "Escolha um conjunto de controles :math:`\\theta` e faça uma função de teste :math:`|\\psi(\\boldsymbol\\theta)\\rangle`, construída usando um circuito quântico feito de portas C-Fase e rotações Y de um único qubit, parametrizadas pelos componentes de :math:`\\boldsymbol\\theta`."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:77
msgid "Evaluate"
msgstr "Avalie"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:79
msgid "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"
"by sampling the outcome of the circuit in the Z-basis and adding the expectation values of the individual Ising terms together. In general, different control points around :math:`\\boldsymbol\\theta` have to be estimated, depending on the classical optimizer chosen."
msgstr "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"
"amostrando a saída do circuito na base Z e adicionando os valores esperados dos termos de Ising individuais. Em geral, diferentes pontos de controle em torno de :math:`\\boldsymbol\\theta` precisam ser estimados, dependendo do otimizador clássico escolhido."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:83
msgid "Use a classical optimizer to choose a new set of controls."
msgstr "Use um otimizador clássico para escolher um novo conjunto de controles."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:85
msgid "Continue until :math:`C(\\boldsymbol\\theta)` reaches a minimum, close enough to the solution :math:`\\boldsymbol\\theta^*`."
msgstr "Continue até :math:`C(\\boldsymbol\\theta)` atingir um mínimo, próximo o suficiente da solução :math:`\\boldsymbol\\theta^*`."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:87
msgid "Use the last :math:`\\boldsymbol\\theta` to generate a final set of samples from the distribution :math:`|\\langle z_i~|\\psi(\\boldsymbol\\theta)\\rangle|^2\\;\\forall i` to obtain the answer."
msgstr "Use o último :math:`\\boldsymbol\\theta` para gerar um conjunto final de amostras da distribuição :math:`|\\langle z_i~|\\psi(\\boldsymbol\\theta)\\rangle|^2\\;\\forall i` para obter a resposta."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:89
msgid "It is our belief the difficulty of finding good heuristic algorithms will come down to the choice of an appropriate trial wavefunction. For example, one could consider a trial function whose entanglement best aligns with the target problem, or simply make the amount of entanglement a variable. In this tutorial, we will consider a simple trial function of the form"
msgstr "Acreditamos que a dificuldade de encontrar bons algoritmos heurísticos reduzirá à escolha de uma função experimental apropriada. Por exemplo, poderia considerar-se uma função de tentativa cujo enredo melhor se alinhasse com o problema alvo, ou simplesmente tornar a quantidade de entrelaçamento uma variável. Neste tutorial, vamos considerar uma função experimental simples da forma"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:91
msgid "|\\psi(\\theta)\\rangle  = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m |+\\rangle\n\n"
msgstr "|\\psi(\\theta)\\rangle  = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m |+\\rangle\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:93
msgid "where :math:`U_\\mathrm{entangler}` is a collection of C-Phase gates (fully entangling gates), and :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, where :math:`n` is the number of qubits and :math:`m` is the depth of the quantum circuit. The motivation for this choice is that for these classical problems this choice allows us to search over the space of quantum states that have only real coefficients, still exploiting the entanglement to potentially converge faster to the solution."
msgstr "onde :math:`U_\\mathrm{entangler}` é uma coleção de C-Phase gates (portões totalmente entrelaçados), e :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, onde :math:`n` é o número de qubits e :math:`m` é a profundidade do circuito quântico. A motivação para esta escolha é que, para estes problemas clássicos, esta escolha nos permite procurar o espaço de Estados quânticos que só têm verdadeiros coeficientes, ainda explorando o entalhe para potencialmente convergir mais rapidamente para a solução."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:96
msgid "One advantage of using this sampling method compared to adiabatic approaches is that the target Ising Hamiltonian does not have to be implemented directly on hardware, allowing this algorithm not to be limited to the connectivity of the device. Furthermore, higher-order terms in the cost function, such as :math:`Z_iZ_jZ_k`, can also be sampled efficiently, whereas in adiabatic or annealing approaches they are generally impractical to deal with."
msgstr "Uma vantagem de utilizar este método de amostragem em comparação com abordagens adiabáticas é que o alvo Ising Hamiltonian não tem de ser implementado diretamente em hardware, permitindo que este algoritmo não seja limitado à conectividade do dispositivo. Além disso, termos de ordem superior na função de custo, como :math:`Z_iZ_jZ_k`, também pode ser amostrado eficientemente, enquanto em abordagens adiabáticas ou de anelamento são geralmente impraticáveis para se tratar."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:98
msgid "References: - A. Lucas, Frontiers in Physics 2, 5 (2014) - E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028 (2014) - D. Wecker, M. B. Hastings, M. Troyer Phys. Rev. A 94, 022309 (2016) - E. Farhi, J. Goldstone, S. Gutmann, H. Neven e-print arXiv 1703.06199 (2017)"
msgstr "Referências: - A. Lucas, Frontiers in Physics 2, 5 (2014) - E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028 (2014) - D. Wecker, M. B. Hastings, M. Troyer Phys. Rev. A 94, 022309 (2016) - E. Farhi, J. Goldstone, S. Gutmann, H. Neven e-print arXiv 1703.06199 (2017)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:142
msgid "Max-Cut problem"
msgstr "Problema de Max-Cut"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:232
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:820
msgid "Brute force approach"
msgstr "Abordagem de força bruta"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:234
msgid "Try all possible :math:`2^n` combinations. For :math:`n = 4`, as in this example, one deals with only 16 combinations, but for n = 1000, one has 1.071509e+30 combinations, which is impractical to deal with by using a brute force approach."
msgstr "Tente todas as :math:`2^n` combinações possíveis. Para :math:`n = 4`, como neste exemplo, lidamos com apenas 16 combinações, mas para n = 1000, temos 1.071509e+30 combinações, o que é impraticável de se lidar usando uma abordagem de força bruta."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:332
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:906
msgid "Mapping to the Ising problem"
msgstr "Mapeamento para o problema Ising"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:343
msgid "Qiskit provides functionality to directly generate the Ising Hamiltonian as well as create the corresponding ``QuadraticProgram``."
msgstr "O Qiskit fornece uma funcionalidade para gerar o Hamiltoniano de Ising diretamente, bem como criar o ``QuadraticProgram`` correspondente."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:496
msgid "Since the problem was cast to a minimization problem, the solution of :math:`-4` corresponds to the optimum."
msgstr "Uma vez que o problema foi convertido para um problema de minimização, a solução de :math:`-4` corresponde ao ótimo."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:508
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1163
msgid "Checking that the full Hamiltonian gives the right cost"
msgstr "Verificando se o Hamiltoniano completo oferece o custo certo"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:575
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1232
msgid "Running it on quantum computer"
msgstr "Executando-o em um computador quântico"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:577
#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:1234
msgid "We run the optimization routine using a feedback loop with a quantum computer that uses trial functions built with Y single-qubit rotations, :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, and entangler steps :math:`U_\\mathrm{entangler}`."
msgstr "Executamos a rotina de otimização usando um loop de feedback com um computador quântico que usa funções teste construídas com rotações Y de um único qubit, :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, e etapas de emaranhamento :math:`U_\\mathrm{entangler}`."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:716
msgid "Traveling Salesman Problem"
msgstr "Problema do Caixeiro Viajante"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:718
msgid "In addition to being a notorious NP-complete problem that has drawn the attention of computer scientists and mathematicians for over two centuries, the Traveling Salesman Problem (TSP) has important bearings on finance and marketing, as its name suggests. Colloquially speaking, the traveling salesman is a person that goes from city to city to sell merchandise. The objective in this case is to find the shortest path that would enable the salesman to visit all the cities and return to its hometown, i.e. the city where he started traveling. By doing this, the salesman gets to maximize potential sales in the least amount of time."
msgstr "Além de ser um notório problema NP-completo que chamou a atenção de cientistas de computação e matemáticos por mais de dois séculos, o Problema do Caixeiro Viajante (TSP) tem implicações importantes sobre finanças e marketing, como sugere seu nome. Coloquialmente falando, o caixeiro viajante é uma pessoa que vai de cidade em cidade para vender mercadorias. O objetivo neste caso é encontrar o caminho mais curto que possibilitaria ao vendedor visitar todas as cidades e retornar à sua cidade natal, ou seja, a cidade onde ele começou a viajar. Ao fazer isso, o vendedor consegue maximizar as vendas em potencial na menor quantidade de tempo."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:721
msgid "The problem derives its importance from its \"hardness\" and ubiquitous equivalence to other relevant combinatorial optimization problems that arise in practice."
msgstr "O problema deriva sua importância de sua \"dificuldade\" e da equivalência onipresente a outros problemas de otimização combinatória relevantes que surgem na prática."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:723
msgid "The mathematical formulation with some early analysis was proposed by W.R. Hamilton in the early 19th century. Mathematically the problem is, as in the case of Max-Cut, best abstracted in terms of graphs. The TSP on the nodes of a graph asks for the shortest *Hamiltonian cycle* that can be taken through each of the nodes. A Hamilton cycle is a closed path that uses every vertex of a graph once. The general solution is unknown and an algorithm that finds it efficiently (e.g., in polynomial time) is not expected to exist."
msgstr "A formulação matemática com alguma análise inicial foi proposta por W.R. Hamilton no início do século XIX. Matematicamente o problema é, como no caso do Max-Cut, melhor abstraído em termos de grafos. O TSP nos nós de um grafo pede o *ciclo Hamiltoniano* mais curto que pode ser tomado através de cada um dos nós. Um ciclo Hamiltoniano é um caminho fechado que usa cada vértice do grafo uma vez. A solução geral é desconhecida e não é esperado que exista um algoritmo que o encontre de forma eficiente (por exemplo, em tempo polinomial)."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:726
msgid "Find the shortest Hamiltonian cycle in a graph :math:`G=(V,E)` with :math:`n=|V|` nodes and distances, :math:`w_{ij}` (distance from vertex :math:`i` to vertex :math:`j`). A Hamiltonian cycle is described by :math:`N^2` variables :math:`x_{i,p}`, where :math:`i` represents the node and :math:`p` represents its order in a prospective cycle. The decision variable takes the value 1 if the solution occurs at node :math:`i` at time order :math:`p`. We require that every node can only appear once in the cycle, and for each time a node has to occur. This amounts to the two constraints (here and in the following, whenever not specified, the summands run over 0,1,...N-1)"
msgstr "Encontre o ciclo Hamiltoniano mais curto em um grafo :math:`G=(V,E)` com :math:`n=|V|` nós e distâncias, :math:`w_{ij}` (distância do vértice :math:`i` ao vértice :math:`j`). Um ciclo Hamiltoniano é descrito por :math:`N^2` variáveis :math:`x_{i,p}`, sendo que :math:`i` representa o nó e :math:`p` representa a sua ordem em um ciclo prospectivo. A variável de decisão leva o valor 1 se a solução ocorrer no nó :math:`i` na posição no tempo :math:`p`. Nós exigimos que cada nó possa aparecer apenas uma vez no ciclo, e para cada tempo um nó precisa ocorrer. Isto equivale às duas restrições (aqui e nos seguintes, sempre que não especificado, os somatórios vão de 0,1, ...N-1)"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:729
msgid "\\sum_{i} x_{i,p} = 1 ~~\\forall p\n\n"
msgstr "\\sum_{i} x_{i,p} = 1 ~~\\forall p\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:731
msgid "\\sum_{p} x_{i,p} = 1 ~~\\forall i.\n\n"
msgstr "\\sum_{p} x_{i,p} = 1 ~~\\forall i.\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:733
msgid "For nodes in our prospective ordering, if :math:`x_{i,p}` and :math:`x_{j,p+1}` are both 1, then there should be an energy penalty if :math:`(i,j) \\notin E` (not connected in the graph). The form of this penalty is"
msgstr "Para nós em nossa ordenação prospectiva, se :math:`x_{i,p}` e :math:`x_{j,p+1}` são ambos 1, então deve haver uma penalidade de energia se :math:`(i,j) \\notin E` (não conectados no grafo). A forma desta penalidade é"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:735
msgid "\\sum_{i,j\\notin E}\\sum_{p} x_{i,p}x_{j,p+1}>0,\n\n"
msgstr "\\sum_{i,j\\notin E}\\sum_{p} x_{i,p}x_{j,p+1}>0,\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:737
msgid "where it is assumed the boundary condition of the Hamiltonian cycles :math:`(p=N)\\equiv (p=0)`. However, here it will be assumed a fully connected graph and not include this term. The distance that needs to be minimized is"
msgstr "onde se assume que a condição de limite dos ciclos Hamiltonianos :math:`(p=N)\\equiv (p=0)`. No entanto, aqui será assumido um grafo completo e não incluirá esse termo. A distância que precisa ser minimizada é"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:739
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}.\n\n"
msgstr "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}.\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:741
msgid "Putting this all together in a single objective function to be minimized, we get the following:"
msgstr "Juntando tudo isso numa única função objetiva a ser minimizada, obtemos o seguinte:"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:743
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}+ A\\sum_p\\left(1- \\sum_i x_{i,p}\\right)^2+A\\sum_i\\left(1- \\sum_p x_{i,p}\\right)^2,\n\n"
msgstr "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}+ A\\sum_p\\left(1- \\sum_i x_{i,p}\\right)^2+A\\sum_i\\left(1- \\sum_p x_{i,p}\\right)^2,\n\n"

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:745
msgid "where :math:`A` is a free parameter. One needs to ensure that :math:`A` is large enough so that these constraints are respected. One way to do this is to choose :math:`A` such that :math:`A > \\mathrm{max}(w_{ij})`."
msgstr "onde :math:`A` é um parâmetro livre. Um precisa garantir que :math:`A` seja grande o suficiente para que essas restrições sejam respeitadas. Uma maneira de fazer isso é escolher :math:`A` tal que :math:`A > \\mathrm{max}(w_{ij})`."

#: ../../tutorials/optimization/6_examples_max_cut_and_tsp.ipynb:747
msgid "Once again, it is easy to map the problem in this form to a quantum computer, and the solution will be found by minimizing a Ising Hamiltonian."
msgstr "Mais uma vez, é fácil mapear o problema desta forma para um computador quântico, e a solução será encontrada minimizando um Hamiltoniano Ising."

