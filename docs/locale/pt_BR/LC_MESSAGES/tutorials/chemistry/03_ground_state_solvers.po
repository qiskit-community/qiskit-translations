msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-18 22:08+0000\n"
"PO-Revision-Date: 2021-02-18 22:32\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/chemistry/03_ground_state_solvers.po\n"
"X-Crowdin-File-ID: 9404\n"
"Language: pt_BR\n"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:10
msgid "This page was generated from `tutorials/chemistry/03_ground_state_solvers.ipynb`__."
msgstr "Esta página foi gerada a partir do `tutorials/chemistry/1_programmatic_approach.ipynb`__."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/03_ground_state_solvers.ipynb>`_."
msgstr "Execute interativamente no `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/chemistry/03_ground_state_solvers.ipynb>`_."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:9
msgid "Ground state solvers"
msgstr "Solucionadores de estado fundamental"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:23
msgid "|6190a4d3d97e4ee7bbaa0c186d8d6d30|"
msgstr ""

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the ground state calculation interface of Qiskit Chemistry. The goal is to compute the ground state of a molecular Hamiltonian. This Hamiltonian can be electronic or vibronic. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibronic structure tutorials."
msgstr "Neste tutorial vamos discutir a interface de cálculo de estado fundamental do Qiskit Chemistry. O objetivo é computar o estado fundamental de um Hamiltoniano molecular. Este Hamiltoniano pode ser eletrônico ou vibrônico. Para saber mais sobre a preparação do Hamiltoniano, confira os tutoriais de Estrutura Eletrônica e Estrutura Vibrônica."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "O primeiro passo é definir o sistema molecular. A seguir, pedimos a parte eletrônica de uma molécula de hidrogênio."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:58
msgid "The Solver"
msgstr "O Solucionador"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:60
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr "Então precisamos definir um solucionador. O solucionador é o algoritmo através do qual o estado fundamental é computado."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:62
msgid "Let’s first start with a purely classical example: the NumPy minimum eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badely, it can be used on small systems to check the results of the quantum algorithms."
msgstr "Vamos começar com um exemplo puramente clássico: o NumPy minimum eigensolver. Esse algoritmo diagonaliza exatamente o Hamiltoniano. Embora escale mal, ele pode ser usado em sistemas pequenos para verificar os resultados dos algoritmos quânticos."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:85
msgid "To find the ground state we coul also use the Variational Quantum Eigensolver (VQE) algorithm. The VQE algorithms works by exchanging information between a classical and a quantum computer as depicted in the following figure."
msgstr "Para encontrar o estado fundamental que poderiamos também usar o algoritmo Variational Quantum Eigensolver (VQE). Os algoritmos de VQE funcionam trocando informações entre um computador clássico e um quântico como retratado na figura a seguir."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:87
msgid "|f6af1cdcbdda4957932d26776524bd70|"
msgstr ""

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:89
msgid "Let’s initialize a VQE solver."
msgstr "Vamos inicializar um solucionador VQE."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:116
msgid "To define the VQE solver one needs two essential elements:"
msgstr "Para definir o solucionador VQE precisamos de dois elementos essenciais:"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:118
msgid "A variational form: here we use the Unitary Coupled Cluster (UCC) ansatz (see for instance [Physical Review A 98.2 (2018): 022322]). Since it is a chemistry standard, a factory is already available allowing a fast initialization of a VQE with UCC. The default is to use all single and double excitations. However, the excitation type (S, D, SD) as well as other parameters can be selected."
msgstr "Uma forma variacional: aqui usamos o ansatz de Cluster Acoplado Unitário (UCC) (ver, por exemplo, [Physical Review A 98.2 (2018): 022322]). Uma vez que é um padrão da química, já está disponível uma fábrica que permite uma inicialização rápida de um VQE com um UCC. O padrão é usar todas as excitações simples e duplas. No entanto, o tipo de excitação (S, D, SD), bem como outros parâmetros podem ser selecionados."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:119
msgid "An initial state: the initial state of the qubits. In the factory used above, the qubits are initialized in the Hartree-Fock (see the electronic structure tutorial) initial state (the qubits corresponding to occupied MOs are :math:`|1\\rangle` and those corresponding to virtual MOs are :math:`|0\\rangle`."
msgstr "Um estado inicial: o estado inicial dos qubits. Na fábrica usada acima, os qubits são inicializados no estado inicial de Hartree-Fock (veja o tutorial de estrutura eletrônica) (os qubits correspondentes aos MOs ocupados são :math:`|1\\rangle` e aqueles que correspondem aos MOs virtuais são :math:`|0\\rangle`."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:120
msgid "The backend: this is the quantum machine on which the right part of the figure above will be performed. Here we ask for the perfect quantum emulator (``statevector_simulator``)."
msgstr "O backend: esta é a máquina quântica na qual a parte à direita da figura acima será executada. Aqui pedimos pelo emulador quântico perfeito (``statevector_simulator``)."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:122
msgid "One could also use any available variational form / initial state or even define one’s own. For instance,"
msgstr "Também poderia-se usar qualquer forma variacional disponível / estado inicial ou até mesmo definir um próprio. Por exemplo,"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:154
msgid "The calculation and results"
msgstr "O cálculo e os resultados"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:156
msgid "We are now ready to run the calculation."
msgstr "Estamos agora prontos para executar o cálculo."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:249
msgid "We can compare the VQE results to the NumPy exact solver and see that they match."
msgstr "Podemos comparar os resultados do VQE com o solucionador exato NumPy e ver que eles correspondem."

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:340
msgid "Using a filter function"
msgstr "Usando uma função de filtro"

#: ../../tutorials/chemistry/03_ground_state_solvers.ipynb:351
msgid "Sometimes the true ground state of the Hamiltonian is not of interest because it lies in a different symmetry sector of the Hilbert space. In this case the NumPy eigensolver can take a filter function to return only the eigenstates with for example the correct number of particles. This is of particular importance in the case of vibronic structure calculations where the true ground state of the Hamiltonian is the vacuum state. A default filter function to check the number of particles is implemented in the different transformations and can be used as"
msgstr "Às vezes, o verdadeiro estado fundamental do Hamiltoniano não é de interesse, porque reside num sector de simetria diferente do espaço de Hilbert. Neste caso o NumPy eigensolver pode pegar uma função de filtro para retornar apenas os autoestados com, por exemplo, o número correto de partículas. Isto é particularmente importante no caso de cálculos de estruturas vibrônicas em que o verdadeiro estado fundamental do Hamiltonismo é o estado de vácuo. Uma função de filtro padrão para verificar o número de partículas é implementada nas diferentes transformações e pode ser usada como"

