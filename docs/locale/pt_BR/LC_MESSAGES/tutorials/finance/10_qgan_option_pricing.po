msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 19:20+0000\n"
"PO-Revision-Date: 2020-08-17 14:28\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/10_qgan_option_pricing.po\n"
"X-Crowdin-File-ID: 9320\n"
"Language: pt_BR\n"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/10_qgan_option_pricing.ipynb`__."
msgstr "Esta página foi gerada a partir do `tutorials/finance/10_qgan_option_pricing.ipynb`__."

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:9
msgid "**Option Pricing with qGANs**"
msgstr "**Preços das Opções com qGANs**"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:12
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:14
msgid "In this notebook, we discuss how a Quantum Machine Learning Algorithm, namely a quantum Generative Adversarial Network (qGAN), can facilitate the pricing of a European call option. More specifically, a qGAN can be trained such that a quantum circuit models the spot price of an asset underlying a European call option. The resulting model can then be integrated into a Quantum Amplitude Estimation based algorithm to evaluate the expected payoff - see `European Call Option Pricing <3_european_call_option_pricing.ipynb>`__. For further details on learning and loading random distributions by training a qGAN please refer to Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019."
msgstr "Neste notebook, discutimos como um Algoritmo Quântico de Aprendizado de Máquina, a saber, uma Rede Adversaria Generativa quântica (qGAN), pode facilitar a determinação do preço de uma opção de compra europeia. Mais especificamente, uma qGAN pode ser treinada tal que um circuito quântico modela o preço à vista de um ativo subjacente a uma opção de compra europeia. O modelo resultante pode, então, ser integrado a um algoritmo baseado em Estimação de Amplitude Quântica para avaliar o payoff esperado - veja `Determinando os preços de opções de compra europeias <3_european_call_option_pricing.ipynb>`__. Para obter mais detalhes sobre aprendizado e carregamento de distribuições aleatórias através do treinamento de uma qGAN, consulte Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019."

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:50
msgid "Uncertainty Model"
msgstr "Modelo de incerteza"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:52
msgid "The Black-Scholes model assumes that the spot price at maturity :math:`S_T` for a European call option is log-normally distributed. Thus, we can train a qGAN on samples from a log-normal distribution and use the result as an uncertainty model underlying the option. In the following, we construct a quantum circuit that loads the uncertainty model. The circuit output reads"
msgstr "O modelo de Black-Scholes assume que o preço à vista no vencimento :math:`S_T` para uma opção de compra europeia é log-normalmente distribuído. Assim, podemos treinar uma qGAN em amostras de uma distribuição log-normal e utilizar o resultado como um modelo de incerteza subjacente à opção. A seguir, construímos um circuito quântico que carrega o modelo de incerteza. A saída do circuito mostra"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:54
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:56
msgid "where the probabilities :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, represent a model of the target distribution."
msgstr "onde as probabilidades :math:`p_{\\theta}^{j}`, para :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, representam um modelo da distribuição alvo."

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:108
#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:199
msgid "Evaluate Expected Payoff"
msgstr "Avaliando o Payoff Esperado"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:110
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function with Quantum Amplitude Estimation."
msgstr "Agora, o modelo de incerteza treinado pode ser usado para avaliar o valor esperado da função de payoff da opção usando Estimativa de Amplitude Quântica."

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:143
msgid "Plot the probability distribution"
msgstr "Plotando a distribuição de probabilidade"

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:145
msgid "Next, we plot the trained probability distribution and, for reasons of comparison, also the target probability distribution."
msgstr "A seguir, plotamos a distribuição de probabilidade treinada e, por razões de comparação, também a distribuição de probabilidade alvo."

#: ../../tutorials/finance/10_qgan_option_pricing.ipynb:201
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function analytically and with Quantum Amplitude Estimation."
msgstr "Agora, o modelo de incerteza treinado pode ser usado para avaliar o valor esperado da função de payoff da opção de forma analítica e com a Estimativa de Amplitude Quântica."

