msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-03 18:29+0000\n"
"PO-Revision-Date: 2020-08-24 21:40\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9342\n"
"Language: pt_BR\n"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:10
msgid "This page was generated from `tutorials/finance/01_portfolio_optimization.ipynb`__."
msgstr "Esta página foi gerada, a partir de `tutorials/finance/01_portfolio_optimization.ipynb`__."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:9
msgid "**Portfolio Optimization**"
msgstr "**Otimização de Portfólio**"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "Este tutorial mostra como resolver o seguinte problema de otimização de portfólio de média-variância para :math:`n` ativos:"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:25
msgid ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"
msgstr ":math:`\\begin{aligned} \\min_{x \\in \\{0, 1\\}^n} q x^T \\Sigma x - \\mu^T x\\\\ \\text{subject to: } 1^T x = B \\end{aligned}`"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:27
msgid "where we use the following notation:"
msgstr "onde utilizamos a seguinte notação:"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:29
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0, 1\\}^n` denota um vetor de decisões binárias variáveis, que indica quais ativos escolher (:math:`x[i] = 1`) e quais ativos não escolher (:math:`x[i] = 0`),"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:30
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` define os retornos esperados para os ativos,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:31
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` especifica as covariâncias entre os ativos,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:32
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` controla o apetite de risco do tomador de decisão,"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:33
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr "e :math:`B` denota o orçamento, ou seja, o número de ativos a serem selecionados de :math:`n`."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:35
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr "Assumimos as seguintes simplificações:-todos os ativos têm o mesmo preço (normalizado para 1),-o orçamento integral :math:` B ` tem de ser gasto, ou seja, devemos selecionar exatamente :math:`B` ativos."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:37
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Variational Quantum Eigensolver (VQE) or the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal solution for a given set of parameters."
msgstr "A restrição de igualdade :math:` 1 ^ T x = B ` é mapeada para um termo de pênalti :math:` (1 ^ T x-B) ^ 2 ` que é escalonado por um parâmetro e subtraído da função objetiva. O problema resultante pode ser mapeado para um Hamiltonian cujo estado fundamental corresponde à solução ideal. Este notebook mostra como utilizar o Variational Quantum Eigensolver (VQE) ou o Quantum Approximate Optimization Algorithm (QAOA) para encontrar a solução ideal para um determinado conjunto de parâmetros."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:39
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019."
msgstr "Experimentos realizados em hardware quântico real para este problema são relatados por exemplo no seguinte artigo: Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:71
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr "[Optional] Configuração do token para executar o experimento em um dispositivo real"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:73
msgid "If you would like to run the experiment on a real device, you need to setup your account first."
msgstr "Caso deseje executar o experimento em um dispositivo real, você precisa configurar a sua conta primeiro."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:75
msgid "Note: If you do not store your token yet, use ``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr "Nota: Se você ainda não armazenou seu token, use ``IBMQ.save_account('MY_API_TOKEN')`` para armazená-lo primeiro."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:87
msgid "Define problem instance"
msgstr "Definindo uma instância do problema"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:89
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "Aqui, uma instância da Operator é criada para o nosso Hamiltoniano. Neste caso, os paulis são de um Hamiltoniano de Ising traduzido do problema de portfólio. Utilizamos um problema de portfólio aleatório para este notebook. É fácil estender isto para usar dados financeiros reais como ilustrado aqui: `Carregando e Processando Dados de Séries Temporais do Mercado de Ações <11_time_series.ipynb>`__"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:154
msgid "We define some utility methods to print the results in a nice format."
msgstr "Definimos alguns métodos utilitários para imprimir os resultados em um formato agradável."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:196
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (como referência clássica)"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:198
msgid "Lets solve the problem. First classically..."
msgstr "Vamos resolver o problema. Primeiro, classicamente..."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:200
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for 'ising'. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr "Podemos, agora, utilizar o Operator que criamos, acima, sem considerar as particularidades de como foi criado. Definimos o algoritmo para o NumPyMinimumEigensolver, para que possamos ter uma referência clássica. O problema está configurado para 'ising'. Um backend não é necessário, uma vez que isto é computado classicamente, não usando computação quântica. O resultado é retornado como um dicionário."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:284
msgid "Solution using VQE"
msgstr "Solução usando VQE"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:286
msgid "We can now use the Variational Quantum Eigensolver (VQE) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "Agora, podemos usar o Variational Quantum Eigensolver (VQE) para resolver o problema. Vamos especificar o otimizador e a forma variacional a serem usados."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:288
msgid "Note: You can switch to different backends by providing the name of backend."
msgstr "Observação: Você pode mudar para serviços internos diferentes fornecendo o nome do serviço."

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:382
msgid "Solution using QAOA"
msgstr "Solução usando QAOA"

#: ../../tutorials/finance/01_portfolio_optimization.ipynb:384
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (QAOA). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "Também mostramos, aqui, um resultado usando o Algoritmo de Otimização Aproximada Quântico (QAOA). Este é outro algoritmo variacional e ele usa uma forma variacional interna, que é criada com base no problema."

