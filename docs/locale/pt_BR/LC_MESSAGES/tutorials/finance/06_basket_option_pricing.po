msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-21 18:06+0000\n"
"PO-Revision-Date: 2020-10-21 18:45\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/finance/06_basket_option_pricing.po\n"
"X-Crowdin-File-ID: 9352\n"
"Language: pt_BR\n"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:10
msgid "This page was generated from `tutorials/finance/06_basket_option_pricing.ipynb`__."
msgstr "Esta página foi gerada, a partir de `tutorials/finance/06_basket_option_pricing.ipynb`__."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:9
msgid "**Pricing Basket Options**"
msgstr "**Precificando Opções Basket**"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:23
msgid "Suppose a basket option with strike price :math:`K` and two underlying assets whose spot price at maturity :math:`S_T^1`, :math:`S_T^2` follow given random distributions. The corresponding payoff function is defined as:"
msgstr "Suponha uma opção basket com preço de exercício :math:`K` e dois ativos subjacentes, cujos preços, à vista, no vencimento :math:`S_T^1`, :math:`S_T^2` seguem uma dada distribuição aleatória. A função payoff correspondente é definida como:"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:25
msgid "\\max\\{S_T^1 + S_T^2 - K, 0\\}\n\n"
"In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "\\max\\ {S_T ^ 1 + S_T ^ 2-K, 0 \\}\n\n"
"Na sequência, um algoritmo quântico, baseado em estimação de amplitude, é usado para estimar o payoff esperado, ou seja, o preço justo, antes de descontar, para a opção:"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{S_T^1 + S_T^2 - K, 0\\} \\right].\n\n"
"The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "\\mathbb{E}\\esquerdo [\\max\\ {S_T ^ 1 + S_T ^ 2-K, 0 \\} \\right].\n\n"
"A aproximação da função objetiva e uma introdução geral para precificação de opções e análise de risco, em computadores quânticos, são dadas nos seguintes papéis:"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:33
msgid "Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:34
msgid "Option Pricing using Quantum Computers. Stamatopoulos et al. 2019."
msgstr "Opção Precificação utilizando Computadores Quânticos. Stamatopoulos et al. 2019."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:64
msgid "Uncertainty Model"
msgstr "Modelo de incerteza"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:66
msgid "We construct a circuit factory to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit factory implements the following:"
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:69
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big | 0\\rangle_{n} \\mapsto \\big | \\psi\\rangle_{n} = \\sum_ {i_1, \\ldots, i_d} \\sqrt {p_ {i_1\\ldots i_d}} \\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:71
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "onde :math:`p_{i_1\\ldots i_d}` denotam as probabilidades correspondentes à distribuição truncada e discretizada e onde :math:`i_j` é mapeado para o intervalo correto utilizando o mapeamento afim:"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:73
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:75
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "Para simplificar, assumimos que ambos os preços das ações são independentes e identicamente distribuídos. Esta suposição apenas simplifica a parametrização, abaixo, e pode ser facilmente relaxada para distribuições multivariadas mais complexas e também correlacionadas. A única suposição importante para a implementação atual é que a grade de discretização das diferentes dimensões tenham o mesmo tamanho de passo."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:160
msgid "Payoff Function"
msgstr "Função Payoff"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:162
msgid "The payoff function equals zero as long as the sum of the spot prices at maturity :math:`(S_T^1 + S_T^2)` is less than the strike price :math:`K` and then increases linearly. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_T^1 + S_T^2) \\geq K`. This ancilla is used to control the linear part of the payoff function."
msgstr "A função payoff é igual a zero, enquanto a soma dos preços à vista no vencimento :math:`(S_T^1 + S_T^2)` é menor do que o preço de exercício :math:`K`, e, depois aumenta linearmente. A implementação usa inicialmente um operador de soma ponderada para computar a soma dos preços à vista no registrador auxiliar e, então, usa um comparador, que inverte o qubit auxiliar de :math:`\\big|0\\rangle` para :math:`\\big|1\\rangle` se :math:`(S_T^1 + S_T^2) \\geq K`. Este auxiliar é usado para controlar a parte linear da função payoff."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:165
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:167
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:169
msgid "for small :math:`c_\\text{approx}`."
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:171
msgid "We can easily construct an operator that acts as"
msgstr "Podemos facilmente construir um operador que atua como"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:173
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
"using controlled Y-rotations."
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
"usando as rotações Y controladas."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:177
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr ""

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:179
msgid "For more details on the approximation, we refer to: Quantum Risk Analysis. Woerner, Egger. 2018."
msgstr "Para mais detalhes sobre a aproximação, podemos consultar: Quantum Risk Analysis. Woerner, Egger. 2018."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:181
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "Uma vez que o operador de soma ponderada (em sua implementação atual) pode apenas somar números inteiros, precisamos mapear dos intervalos originais até o intervalo representável, para estimar o resultado, e reverter este mapeamento, antes de interpretar o resultado. O mapeamento corresponde, essencialmente, ao mapeamento afim, descrito no contexto do modelo de incerteza acima."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:396
msgid "Evaluate Expected Payoff"
msgstr "Avaliando o Payoff Esperado"

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:398
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "Verificamos, primeiramente, o circuito quântico, simulando-o e analisando a probabilidade resultante, para medir o estado :math:`|1\\rangle` no qubit objetivo."

#: ../../tutorials/finance/06_basket_option_pricing.ipynb:501
msgid "Next we use amplitude estimation to estimate the expected payoff."
msgstr "Em seguida, utilizamos estimativa de amplitude para estimar o payoff esperado."

