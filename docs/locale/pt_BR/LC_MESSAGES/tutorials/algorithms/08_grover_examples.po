msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-29 18:58+0000\n"
"PO-Revision-Date: 2021-04-29 19:57\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/algorithms/08_grover_examples.po\n"
"X-Crowdin-File-ID: 9458\n"
"Language: pt_BR\n"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:10
msgid "This page was generated from `tutorials/algorithms/08_grover_examples.ipynb`__."
msgstr "Esta página foi gerada, a partir do `tutorials/algorithms/08_grover_examples.ipynb`__."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:12
msgid "Run interactively in the `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/08_grover_examples.ipynb>`_."
msgstr "Execute interativamente no `IBM Quantum lab <https://quantum-computing.ibm.com/jupyter/tutorial/algorithms/08_grover_examples.ipynb>`_."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:9
msgid "Grover’s algorithm examples"
msgstr "Exemplos do algoritmo de Grover"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:11
msgid "This notebook has examples demonstrating how to use the Qiskit `Grover <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Grover.html>`__ search algorithm, with different oracles."
msgstr "Este notebook tem exemplos demonstrando como usar o algoritmo de busca de `Grover <https://qiskit.org/documentation/stubs/qiskit.aqua.algorithms.Grover.html>`__ do Qiskit com diferentes oráculos."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:39
msgid "Finding solutions to 3-SAT problems"
msgstr "Encontrando soluções para problemas de 3-SAT"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:41
msgid "Let’s look at an example 3-Satisfiability (3-SAT) problem and walk-through how we can use Quantum Search to find its satisfying solutions. 3-SAT problems are usually expressed in `Conjunctive Normal Forms (CNF) <https://en.wikipedia.org/wiki/Conjunctive_normal_form>`__ and written in the `DIMACS-CNF <http://www.satcompetition.org/2009/format-benchmarks2009.html>`__ format. For example:"
msgstr "Vamos olhar um exemplo de problema de 3-Satisfiability (3-SAT) e avançar em como podemos usar a Busca Quântica para encontrar as soluções satisfatórias. Problemas de 3-SAT geralmente são expressos em `Formulários Normais Conjuntivos (CNF) <https://en.wikipedia.org/wiki/Conjunctive_normal_form>`__ e escritos no formato `DIMACS-CNF <http://www.satcompetition.org/2009/format-benchmarks2009.html>`__. Por exemplo:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:70
msgid "The CNF of this 3-SAT instance contains 3 variables and 5 clauses:"
msgstr "O CNF desta instância de 3-SAT contém 3 variáveis e 5 cláusulas:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:72
msgid ":math:`(\\neg v_1 \\vee \\neg v_2 \\vee \\neg v_3) \\wedge (v_1 \\vee \\neg v_2 \\vee v_3) \\wedge (v_1 \\vee v_2 \\vee \\neg v_3) \\wedge (v_1 \\vee \\neg v_2 \\vee \\neg v_3) \\wedge (\\neg v_1 \\vee v_2 \\vee v_3)`"
msgstr ""

#: ../../tutorials/algorithms/08_grover_examples.ipynb:74
msgid "It can be verified that this 3-SAT problem instance has three satisfying solutions:"
msgstr "Pode-se verificar que esta instância do problema de 3-SAT tem três soluções satisfatórias:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:76
msgid ":math:`(v_1, v_2, v_3) = (T, F, T)` or :math:`(F, F, F)` or :math:`(T, T, F)`"
msgstr ""

#: ../../tutorials/algorithms/08_grover_examples.ipynb:78
msgid "Or, expressed using the DIMACS notation:"
msgstr "Ou, expresso usando a notação DIMACS:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:80
msgid "``1 -2 3``, or ``-1 -2 -3``, or ``1 2 -3``."
msgstr ""

#: ../../tutorials/algorithms/08_grover_examples.ipynb:82
msgid "With this example problem input, we then create the corresponding ``oracle`` for our ``Grover`` search. In particular, we use the ``LogicalExpressionOracle`` component, which supports parsing DIMACS-CNF format strings and constructing the corresponding oracle circuit."
msgstr "Com este exemplo de entrada do problema, criamos então o ``oracle`` correspondente para a nossa busca de ``Grover``. Em particular, utilizamos a componente ``LogicalExpressionOracle``, que suporta a interpretação de strings no formato DIMACS-CNF e a construção do circuito do oráculo correspondente."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:103
msgid "The ``oracle`` can now be used to create an Grover instance:"
msgstr "O ``oracle`` agora pode ser usado para criar uma instância de Grover:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:124
msgid "We can then configure the backend and run the Grover instance to get the result:"
msgstr "Podemos, então, configurar o backend e executar a instância de Grover para obter o resultado:"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:167
msgid "As seen above, a satisfying solution to the specified 3-SAT problem is obtained. And it is indeed one of the three satisfying solutions."
msgstr "Como visto acima, uma solução satisfatória para o problema de 3-SAT especificado é obtida. E é de fato uma das três soluções satisfatórias."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:169
msgid "Since we used the ``'qasm_simulator'``, the complete measurement result is also returned, as shown in the plot below, where it can be seen that the binary strings ``000``, ``011``, and ``101`` (note the bit order in each string), corresponding to the three satisfying solutions all have high probabilities associated with them."
msgstr "Como usamos o ``'qasm_simulator'``, o resultado completo da medição também é retornado, como mostrado no gráfico abaixo, onde pode ser visto que as strings binárias ``000``, ``011``, e ``101`` (note a ordem dos bits em cada string) correspondetes às três soluções satisfatórias têm todas altas probabilidades associadas a elas."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:200
msgid "Boolean Logical Expressions"
msgstr "Expressões Lógicas Booleanas"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:202
msgid "Qiskit’s ``Grover`` can also be used to perform Quantum Search on an ``Oracle`` constructed from other means, in addition to DIMACS. For example, the ``LogicalExpressionOracle`` can actually be configured using arbitrary Boolean logical expressions, as demonstrated below."
msgstr "O ``Grover`` do Qiskit também pode ser usado para executar a Busca Quântica em um ``Oracle`` construído a partir de outros meios, além de DIMACS. Por exemplo, o ``LogicalExpressionOracle`` pode na verdade ser configurado usando expressões lógicas Booleanas arbitrárias, como demonstrado abaixo."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:236
msgid "In the example above, the input Boolean logical expression ``'(w ^ x) & ~(y ^ z) & (x & y & z)'`` should be quite self-explanatory, where ``^``, ``~``, and ``&`` represent the Boolean logical XOR, NOT, and AND operators, respectively. It should be quite easy to figure out the satisfying solution by examining its parts: ``w ^ x`` calls for ``w`` and ``x`` taking different values; ``~(y ^ z)`` requires ``y`` and ``z`` be the same; ``x & y & z`` dictates all three to be ``True``. Putting these together, we get the satisfying solution ``(w, x, y, z) = (False, True, True, True)``, which our ``Grover``\\ ’s result agrees with."
msgstr "No exemplo acima, a expressão lógica booleana de entrada ``'(w ^ x) & ~(y ^ z) & (x & y & z)'`` deve ser bastante auto-explicativa, onde ``^``, ``~`` e ``&`` representam os operadores booleanos XOR, NOT e AND respectivamente. Deve ser relativamente fácil descobrir a solução satisfatória examinando as suas partes: ``w ^ x`` resulta em ``w`` e ``x`` tomando valores diferentes; ``~(y ^ z)`` requer que ``y`` e ``z`` sejam o mesmo; ``x & y & z`` dita que todos os três sejam ``True``. Juntando isso, obtemos a solução satisfatória ``(w, x, y, z) = (False, True, True, True)``, que concorda com o resultado do nosso ``Grover``."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:249
msgid "TruthTable Oracles"
msgstr "Oráculos TruthTable"

#: ../../tutorials/algorithms/08_grover_examples.ipynb:251
msgid "With Qiskit, ``Oracle``\\ s can also be constructed from truth tables, meaning we can also perform Quantum Search on truth tables. Even though this might seem like a moot point as we would be essentially searching for entries of a truth table with the :math:`1` value, it’s a good example for demonstrative purpose."
msgstr "Com Qiskit, ``Oracle`` \\ s também podem ser construídos a partir de tabelas verdade, significando que também podemos realizar a Busca Quântica em tabelas verdade. Ainda que isso possa parecer um ponto discutível já que nós estaremos essencialmente buscando entradas de uma tabela verdade com o valor :math:`1`, é um bom exemplo para fins demonstrativos."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:272
msgid "As shown, the ``truthtable`` is specified with a bitstring containing values of all entries in the table. It has length :math:`16`, so the corresponding truth table is of :math:`4` input bits. Since the very first and last values are :math:`1`, the corresponding truth table target entries are ``0000`` and ``1111``."
msgstr "Como mostrado, a ``truthtable`` é especificada com uma bitstring contendo valores de todas as entradas na tabela. Ela tem tamanho :math:`16`, então a tabela de verdade correspondente tem :math:`4` bits de entrada. Como o primeiro e o último valor são :math:`1`, as entradas alvo da tabela verdade são ``0000`` e ``1111``."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:274
msgid "Next, we can setup the ``Oracle`` and ``Grover`` objects to perform Quantum Search as usual."
msgstr "Em seguida, podemos configurar os objetos ``Oracle`` e ``Grover`` para executar a Busca Quântica como de costume."

#: ../../tutorials/algorithms/08_grover_examples.ipynb:307
msgid "As seen in the above plot the search result coincides with our expectation."
msgstr "Como visto no gráfico acima, o resultado da pesquisa coincide com nossas expectativas."

