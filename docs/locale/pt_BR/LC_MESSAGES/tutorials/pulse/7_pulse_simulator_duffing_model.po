msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-10 19:20+0000\n"
"PO-Revision-Date: 2020-10-27 03:07\n"
"Last-Translator: \n"
"Language-Team: Portuguese, Brazilian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pt-BR\n"
"X-Crowdin-File: /master/docs/locale/en/LC_MESSAGES/tutorials/pulse/7_pulse_simulator_duffing_model.po\n"
"X-Crowdin-File-ID: 9374\n"
"Language: pt_BR\n"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:10
msgid "This page was generated from `tutorials/pulse/7_pulse_simulator_duffing_model.ipynb`__."
msgstr "Esta página foi gerada a partir de `tutorials/pulse/7_pulse_simulator_duffing_model.ipynb`__."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:9
msgid "Qiskit Aer: Pulse simulation of two qubits using a Duffing oscillator model"
msgstr "Qiskit Aer: Simulação de pulso de dois qubits usando um modelo de oscilador de Duffing"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:11
msgid "This notebook shows how to use the Qiskit Aer pulse simulator, which simulates experiments specified as pulse ``Schedule`` objects at the Hamiltonian level. The simulator solves the Schrodinger equation for a specified Hamiltonian model and pulse ``Schedule`` in the frame of the drift Hamiltonian."
msgstr "Este notebook mostra como usar o simulador de pulso Qiskit Aer, que simula experimentos especificados como objetos pulso ``Schedule`` ao nível Hamiltoniano. O simulador resolve a equação Schrodinger para um modelo Hamiltoniano e pulso ``Schedule`` especificados no quadro Hamiltoniano derivado."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:13
msgid "In particular, in this tutorial we will: - Construct a model of a two qubit superconducting system. - Calibrate :math:`\\pi` pulses on each qubit in the simulated system. - Observe cross-resonance oscillations when driving qubit 1 with target qubit 0."
msgstr "Em particular, neste tutorial, nós vamos: - Construir um modelo de sistema supercondutor de dois qubits. - Calibrar os pulsos :math:`\\pi` em cada qubit do sistema simulado. - Observar as oscilações de ressonância cruzada ao verificar o qubit 1 com o qubit 0 de destino."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:15
msgid "The Introduction outlines the concepts and flow of this notebook."
msgstr "A Introdução descreve os conceitos e o fluxo deste notebook."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:27
msgid "1. Introduction"
msgstr "1. Introdução"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:29
msgid "The main sections proceed as follows."
msgstr "As principais seções seguem-se da seguinte maneira."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:32
msgid "Section 3: Duffing oscillator model"
msgstr "Seção 3: Modelo de oscilador de Duffing"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:34
msgid "To simulate a physical system, it is necessary to specify a model. In this notebook, we will model superconducting qubits as a collection of *Duffing oscillators*. The model is specified in terms of the following parameters:"
msgstr "Para simular um sistema físico é necessário especificar um modelo. Neste notebook, iremos modelar qubits supercondutores como uma coleção de *osciladores de Duffing*. O modelo é especificado em termos dos seguintes parâmetros:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:36
msgid "Each Duffing oscillator is specified by a frequency :math:`\\nu`, anharmonicity :math:`\\alpha`, and drive strength :math:`r`, which result in the Hamiltonian terms:"
msgstr "Cada oscilador de Duffing é especificado por uma frequência :math:`\\nu`, anarmonicidade :math:`\\alpha` e força :math:`r`, que resultam nos termos Hamiltonianos:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:38
msgid "\\begin{equation}\n"
"    2\\pi\\nu a^\\dagger a + \\pi \\alpha a^\\dagger a(a^\\dagger a - 1) + 2 \\pi r (a + a^\\dagger) \\times D(t),\n"
"\\end{equation}"
msgstr ""

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:45
msgid "where :math:`D(t)` is the signal on the drive channel for the qubit, and :math:`a^\\dagger` and :math:`a` are, respectively, the creation and annihilation operators for the qubit. Note that the drive strength :math:`r` sets the scaling of the control term, with :math:`D(t)` assumed to be a complex and unitless number satisfying :math:`|D(t)| \\leq 1`. - A coupling between a pair of oscillators :math:`(l,k)` is specified by the coupling strength :math:`J`, resulting in an exchange coupling term:"
msgstr "onde :math:`D(t)` é o sinal no canal de unidade do qubit, e :math:`a^\\dagger` e :math:`a` são, respectivamente, os operadores de criação e aniquilação do qubit. Observe que a força de unidade :math:`r` define o tamanho do termo de controle, com :math:`D(t)` assumido por ser um número complexo e sem unidade satisfatória com :math:`|D(t)| \\leq 1`. - Um acoplamento entre um par de osciladores :math:`(l,k)` é especificado pela força de acoplamento :math:`J`, resultando em um termo de acoplamento das trocas:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:47
msgid "\\begin{equation}\n"
"    2 \\pi J (a_l a_k^\\dagger + a_l^\\dagger a_k),\n"
"\\end{equation}"
msgstr ""

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:54
msgid "where the subscript denotes which qubit the operators act on. - Additionally, for numerical simulation, it is necessary to specify a cutoff dimension; the Duffing oscillator model is *infinite dimensional*, and computer simulation requires restriction of the operators to a finite dimensional subspace."
msgstr "onde o subscript denota em qual qubit os operadores atuam. - Além disso, para simulação numérica é necessário especificar uma dimensão de corte; o modelo do oscilador de Duffing é de *infinito dimensional* e a simulação do computador requer restrição dos operadores a um subespaço dimensional finito."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:56
msgid "**In the code:** We will define a model of the above form for two coupled qubits using the helper function ``duffing_system_model``."
msgstr "**No código:** Definiremos um modelo do formato acima para dois qubits acoplados usando a função auxiliar ``duffing_system_model``."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:59
msgid "Section 4: :math:`\\pi`-pulse calibration using Ignis"
msgstr "Seção 4: Usando Ignis para a calibração :math:`\\pi`-pulse"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:61
msgid "Once the model is defined, we will calibrate :math:`\\pi`-pulses on each qubit. A :math:`\\pi`-pulse is defined as a pulse on the drive channel of a qubit that \"flips\" the qubit; i.e. that takes the ground state to the first excited state, and the first excited state to the ground state."
msgstr "Uma vez que o modelo é definido, calibraremos :math:`\\pi`-pulsos em cada qubit. Um :math:`\\pi`-pulso é definido como um pulso no canal de unidade de um qubit que \"inverte\" o qubit; i. Isso leva o estado neutro ao primeiro estado excitado, e o primeiro estado excitado até o estado neutro."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:63
msgid "We will experimentally find a :math:`\\pi`-pulse for each qubit using the following procedure: - A fixed pulse shape is set - in this case it will be a Gaussian pulse. - A sequence of experiments is run, each consisting of a Gaussian pulse on the qubit, followed by a measurement, with each experiment in the sequence having a subsequently larger amplitude for the Gaussian pulse. - The measurement data is fit, and the pulse amplitude that completely flips the qubit is found (i.e. the :math:`\\pi`-pulse amplitude)."
msgstr "Vamos experimentalmente encontrar um :math:`\\pi`-pulso para cada pacote utilizando o seguinte procedimento: - Foi definida uma forma fixa de pulso - neste caso, será um pulso Gaussiano. - Uma sequência de experimentos é executada, cada um consistindo de um pulso Gaussiano no qubit, seguido de uma medida, com cada experimento na sequência tendo uma amplitude maior para o pulso Gaussiano. - Os dados de medição são ajustados e a amplitude de pulso que transforma completamente o qubit é encontrada (por exemplo, a amplitude :math:`\\pi`-pulso)."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:66
msgid "**In the code:** Using Ignis we will construct ``Schedule`` objects for the above experiments, then fit the data to find the :math:`\\pi`-pulse amplitudes."
msgstr "**No código:** usando Ignis, vamos construir objetos ``Schedule`` para os experimentos acima e ajustar os dados para encontrar as amplitudes :math:`\\pi`-pulso."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:69
msgid "Section 5: Cross-resonance oscillations"
msgstr "Seção 5: Oscilações de ressonância cruzada"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:71
msgid "Once the :math:`\\pi`-pulses are calibrated, we will simulate the effects of cross-resonance driving on qubit :math:`1` with target qubit :math:`0`. This means that we will drive qubit :math:`1` at the frequency of qubit :math:`0`, with the goal of observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`. This phenomenon provides a basis for creating two-qubit *controlled* gates. Note: This section requires the calibration of the :math:`\\pi`-pulse in Section 4."
msgstr "Uma vez que o :math:`\\pi`-pulsos estiverem calibrados, vamos simular os efeitos da ressonância cruzada no qubit :math:`1` com alvo no qubit :math:`0`. Isso significa que vamos dirigir o qubit :math:`1` na frequência do qubit :math:`0`, com o objetivo de observar que as trajetórias e oscilações do qubit :math:`0` *dependem* do estado do qubit :math:`1`. Este fenômeno fornece uma base para a criação de portões *controlados* de dois-qubits. Nota: Esta seção requer a calibração do :math:`\\pi`-pulso na Seção 4."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:74
msgid "To observe cross-resonance driving, we will use experiments very similar to the :math:`\\pi`-pulse calibration case: - Initially, qubit :math:`1` is either left in the ground state, or is driven to its first excited state using the :math:`\\pi`-pulse found in Section 4. - A sequence of experiments is run, each consisting of a Gaussian pulse on qubit :math:`1` driven at the frequency of qubit :math:`0`, followed by a measurement of both qubits, with each experiment of the sequence having a subsequently larger amplitude for the Gaussian pulse."
msgstr "Para observar o direcionamento de ressonância cruzada, usaremos experimentos muito semelhantes aos do caso de calibração de :math:`\\pi`-pulso: - Inicialmente, o qubit :math:`1` é deixado no estado neutro, ou é levado para o primeiro estado excitado usando o :math:`\\pi`-pulso encontrado na Seção 4. - Uma sequência de experimentos é executada, cada um consistindo em um pulso Gaussiano no qubit :math:`1` impulsionado na frequência do qubit :math:`0` e seguido por uma medida de ambos os qubits, tendo cada experiência da sequência uma amplitude subsequentemente maior para o pulso Gaussiano."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:77
msgid "**In the code:** Functions for defining the experiments and visualizing the data are constructed, including a visualization of the trajectory of the target qubit on the Bloch sphere."
msgstr "**No código:** Funções são construídas para definir os experimentos e visualizar os dados, incluindo a visualização da trajetória do qubit alvo na esfera de Bloch."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:89
msgid "2. Imports"
msgstr "2. Importações"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:91
msgid "This notebook makes use of the following imports."
msgstr "Este notebook faz uso das importações a seguir."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:117
msgid "Import qiskit libraries for working with ``pulse`` and calibration:"
msgstr "Importar bibliotecas do qiskit para trabalhar com ``pulso`` e calibração:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:142
msgid "Imports for qiskit pulse simulator:"
msgstr "Importações para simulador de pulso qiskit:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:168
msgid "3. Duffing oscillator system model"
msgstr "3. Modelo de sistema de oscilator de Duffing"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:170
msgid "An object representing a model for a collection of Duffing oscillators can be constructed using the ``duffing_system_model`` function. Here we construct a :math:`2` Duffing oscillator model with cutoff dimension :math:`3`."
msgstr "Um objeto representando um modelo para uma coleção de osciladores de Duffing pode ser construído utilizando a função ``duffing_system_model``. Aqui nós construímos um modelo de oscilador de Duffing :math:`2` com a dimensão de corte :math:`3`."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:214
msgid "The function ``duffing_system_model`` returns a ``PulseSystemModel`` object, which is a general object for storing model information required for simulation with the ``PulseSimulator``."
msgstr "A função ``duffing_system_model`` retorna um objeto ``PulseSystemModel``, que é um objeto geral para armazenar informações de modelo necessárias para simulação com o ``PulseSimulator``."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:226
msgid "4 Calibrating :math:`\\pi` pulses on each qubit using Ignis"
msgstr "4 Usando Ignis em cada qubit para calibrar pulsos :math:`\\pi`"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:228
msgid "As described in the introduction, we now calibrate :math:`\\pi` pulses on each qubit in ``two_qubit_model``. The experiments in this calibration procedure are known as *Rabi experiments*, and the data we will observe are known as *Rabi oscillations*."
msgstr "Como descrito na introdução, agora calibramos as pulsos :math:`\\pi` em cada qubit em ``two_qubit_model``. Os experimentos neste procedimento de calibração são conhecidos como *experimentos Rabi* e os dados que iremos observar são conhecidos como *oscilações Rabi *."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:240
msgid "4.1 Constructing the schedules"
msgstr "4.1 - Construindo os schedules"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:242
msgid "We construct the schedules using the ``rabi_schedules`` function in Ignis. To do this, we need to supply an ``InstructionScheduleMap`` containing a measurement schedule."
msgstr "Nós construímos os schedules utilizando a função ``rabi_schedules`` no Ignis. Para fazer isso, precisamos fornecer um ``InstructionScheduleMap`` que contém um agendamento da medição."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:280
msgid "Next, construct the Rabi schedules."
msgstr "Em seguida, construa os Rabi schedules."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:314
msgid "The ``Schedule``\\ s in ``rabi_schedules`` correspond to experiments to generate Rabi oscillations on both qubits in parallel. Each experiment consists of a Gaussian pulse on the qubits of a given magnitude, followed by measurement."
msgstr "A ``Schedule``\\ s em ``rabi_schedules`` corresponde a experimentos para gerar oscilações Rabi em ambos os qubits em paralelo. Cada experimento consiste em um pulso Gaussiano nos qubits em uma determinada magnitude, seguido de medição."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:316
msgid "For example:"
msgstr "Por exemplo:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:347
msgid "4.2 Simulate the Rabi experiments"
msgstr "4.2 Simule os experimentos Rabi"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:349
msgid "To simulate the Rabi experiments, assemble the ``Schedule`` list into a qobj. When assembling, pass the ``PulseSimulator`` as the backend."
msgstr "Para simular os experimentos Rabi, monte a lista ``Schedule`` em um qobj. Quando estiver montando, passe o ``PulseSimulator`` como backend."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:351
msgid "Here, we want to use local oscillators with frequencies automatically computed from Duffing model Hamiltonian."
msgstr "Aqui, queremos utilizar osciladores locais com frequências calculadas automaticamente a partir do modelo de Duffing Hamiltoniano."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:383
msgid "Run the simulation using the simulator backend."
msgstr "Execute a simulação usando o backend do simulador."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:406
msgid "4.3 Fit and plot the data"
msgstr "4.3 Ajustar e plotar os dados"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:408
msgid "Next, we use ``RabiFitter`` in Ignis to fit the data, extract the :math:`\\pi`-pulse amplitude, and then plot the data."
msgstr "Em seguida, utilizamos ``RabiFitter`` no Ignis para ajustar os dados, extrair a amplitude de :math:`\\pi`-pulso e em seguida, plotar os dados."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:467
msgid "Plotted is the averaged IQ data for observing each qubit. Observe that here, each qubit oscillates between the 0 and 1 state. The amplitude at which a given qubit reaches the peak of the oscillation is the desired :math:`\\pi`-pulse amplitude."
msgstr "Plotados são os dados de IQ averiguados para observar cada qubit. Observe que aqui, cada qubit oscila entre o estado de 0 e 1. A amplitude em que um dado qubit atinge o pico da oscilação é a amplitude desejada de :math:`\\pi`-pulso."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:479
msgid "5. Oscillations from cross-resonance drive"
msgstr "5. Oscilações da unidade de ressonância cruzada"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:481
msgid "Next, we simulate the effects of a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, observing that the trajectory and oscillations of qubit :math:`0` *depends* on the state of qubit :math:`1`."
msgstr "Em seguida, simulamos os efeitos de uma unidade de ressonância cruzada no qubit :math:`1` com alvo no qubit :math:`0`, observando que a trajetória e oscilações do qubit :math:`0` *dependem* do estado do qubit :math:`1`."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:483
msgid "**Note:** This section depends on the :math:`\\pi`-pulse calibrations of Section 2."
msgstr "**Nota:** Esta seção depende das calibrações do :math:`\\pi`-pulso da Seção 2."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:495
msgid "5.1 Cross-resonance ``ControlChannel`` indices"
msgstr "5.1 Índices de ressonância cruzada ``ControlChannel``"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:497
msgid "Driving qubit :math:`1` at the frequency of qubit :math:`0` requires use of a pulse ``ControlChannel``. The model generating function ``duffing_system_model``, automatically sets up ``ControlChannels`` for performing cross-resonance drives between pairs of coupled qubits. The index of the ``ControlChannel`` for performing a particular cross-resonance drive is retrievable using the class method ``control_channel_index`` on the returned ``PulseSystemModel``. For example, to get the ``ControlChannel`` index corresponding to a CR drive on qubit 1 with target 0, call the function ``control_channel_index`` with the tuple ``(1,0)``:"
msgstr "Direcionando o qubit :math:`1` na frequência do qubit :math:`0` requer o uso de um pulso ``ControlChannel``. O modelo que gera a função ``duffing_system_model``, configura automaticamente ``ControlChannels`` para a execução de unidades de ressonância cruzada entre pares de qubits acoplados. O índice do ``ControlChannel`` para executar uma ressonância cruzada específica é recuperável utilizando o método de classe ``control_channel_index`` no ``PulseSystemModel`` retornado. Por exemplo, para obter o índice de ``ControlChannel`` correspondente a uma unidade CR no qubit 1 com alvo 0, chame a função ``control_channel_index`` com a tupla ``(1,0)``:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:539
msgid "Hence, to perform a cross-resonance drive on qubit :math:`1` with target qubit :math:`0`, use ``ControlChannel(1)``. This will be made use of when constructing ``Schedule`` objects in this section."
msgstr "Portanto, para realizar uma unidade de ressonância cruzada no qubit :math:`1` com alvo no qubit :math:`0`, use ``ControlChannel(1)``. Isto fará uso dos objetos ``Schedule`` desta seção."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:551
msgid "5.2 Functions to generate the experiment list, and analyze the output"
msgstr "5.2 Funções para gerar a lista de experimentos e analisar a saída"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:553
msgid "First, we define a function ``cr_drive_experiments``, which, given the drive and target indices, and the option to either start with the drive qubit in the ground or excited state, returns a list of experiments for observing the oscillations."
msgstr "Primeiro, definimos uma função ``cr_drive_experiments``, que, dada a unidade e os índices alvo e a opção de começar com o qubit em estado neutro ou excitado, retorna uma lista de experimentos de observação das oscilações."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:647
msgid "Next we create two functions for observing the data: - ``plot_cr_pop_data`` - for plotting the oscillations between the ground state and the first excited state - ``plot_bloch_sphere`` - for viewing the trajectory of the target qubit on the bloch sphere"
msgstr "A seguir, criamos duas funções para observar os dados: - ``plot_cr_pop_data`` - para traçar as oscilações entre o estado neutro e o primeiro estado excitado - ``plot_bloch_sphere`` - para visualizar a trajetória do qubit alvo na esfera Bloch"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:755
msgid "5.3 Drive qubit 1 to observe CR oscillations on qubit 0"
msgstr "5.3 Direcione o qubit 1 para observar oscilações CR no qubit 0"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:758
msgid "Qubit 1 in the ground state"
msgstr "Qubit 1 em estado neutro"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:760
msgid "First, we drive with both qubit 0 and qubit 1 in the ground state."
msgstr "Primeiro, orientamos o \"qubit 0\" e \"qubit 1\" para o estado neutro."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:796
msgid "Run the simulation:"
msgstr "Execute a simulação:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:827
msgid "Observe that qubit 1 remains in the ground state, while excitations are driven in qubit 0."
msgstr "Observe que o qubit 1 permanece no estado neutro, enquanto as excitações são conduzidas no qubit 0."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:829
msgid "We may also observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "Também podemos observar a trajetória do qubit 0 na esfera Bloch:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:860
msgid "Qubit 1 in the first excited state"
msgstr "Qubit 1 no primeiro estado excitado"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:862
msgid "Next, we again perform a CR drive qubit 1 with qubit 0 as the target, but now we start each experiment by flipping qubit 1 into the first excited state."
msgstr "Em seguida, voltamos a executar o direcionamento CR no qubit 1 com alvo no qubit 0, mas agora começamos cada experimento invertendo o qubit 1 ao primeiro estado excitado."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:918
msgid "Observe that now qubit 1 is in the excited state, while oscillations are again being driven on qubit 0, now at a different rate as before."
msgstr "Observe que agora o qubit 1 está no estado excitado, enquanto oscilações voltam a ser conduzidas no qubit 0, agora em uma taxa diferente como antes."

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:920
msgid "Again, observe the trajectory of qubit 0 on the Bloch sphere:"
msgstr "Novamente, observe a trajetória do qubit 0 na esfera Bloch:"

#: ../../tutorials/pulse/7_pulse_simulator_duffing_model.ipynb:950
msgid "Here we see that qubit 0 takes a *different* trajectory on the Bloch sphere when qubit 1 is in the excited state. This is what enables controlled operations between two qubits."
msgstr "Aqui vemos que o qubit 0 seguiu uma trajetória *diferente* na esfera Bloch quando o qubit 1 está no estado excitado. Isso é o que possibilita operações controladas entre dois qubits."

