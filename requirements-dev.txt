# Requirements to develop Terra, and the minimum needed to run its CI.  All
# optional requirements should go in `requirements-optionals.txt` instead.
#
# Version requirements here can be more restrictive than elsewhere, because they
# never become actual package requirements, but still try to be as relaxed as
# possible so it's easy to develop multiple packages from the same venv.

# Style
black[jupyter]~=22.0


# Lint
#
# These versions are pinned precisely because pylint frequently includes new
# on-by-default lint failures in new versions, which breaks our CI.
astroid==2.14.2
pylint==2.16.2
ruff==0.0.267


# Tests
coverage>=4.4.0
hypothesis>=4.24.3
stestr>=2.0.0,!=4.0.0
ddt>=1.2.0,!=1.4.0,!=1.4.3


# Documentation tooling.
#
# This alone is not sufficient to fully build the documentation, because several
# components of Terra use some of its optional dependencies in order to document
# themselves.  These are the requirements that are _only_ required for the docs
# build, and are not used by Terra itself.
Sphinx>=6.0,<7.2
qiskit-sphinx-theme~=1.16.0
sphinx-design>=0.2.0
sphinx-reredirects
nbsphinx~=0.9.2
nbconvert~=7.7.1
# TODO: switch to stable release when 4.1 is released
reno @ git+https://github.com/openstack/reno.git@81587f616f17904336cdc431e25c42b46cd75b8f
# Optional dependencies of Terra that can (mostly) reliably be installed with
# `pip`.  This file is still called `requirements-optional.txt` just to match
# standard pip conventions, even though none of these are required.
#
# If updating this, you probably want to update `qiskit.utils.optionals` and
# maybe `setup.py` too.

# Test-runner enhancements.
fixtures
testtools
jupyter

# Interactivity.
ipykernel
ipython
ipywidgets>=7.3.0
matplotlib>=3.3
pillow>=4.2.1
pydot
pygments>=2.4
pylatexenc>=1.4
seaborn>=0.9.0

# Functionality and accelerators.
qiskit-aer
qiskit-qasm3-import
python-constraint>=1.4
cplex; python_version < '3.11'
cvxpy
docplex
jax; platform_system != 'Windows'
jaxlib; platform_system != 'Windows'
scikit-learn>=0.20.0
scikit-quant<=0.7; platform_system != 'Windows'
SQSnobFit
z3-solver>=4.7
# Tweedledum is unmaintained and its existing Mac wheels are unreliable. If you
# manage to get a working install on a Mac the functionality should still work,
# but as a convenience this file won't attempt the install itself.
tweedledum; python_version<'3.11' and platform_system!="Darwin"
