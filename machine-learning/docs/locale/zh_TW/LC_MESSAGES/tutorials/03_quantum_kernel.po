msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-29 18:01+0000\n"
"PO-Revision-Date: 2022-06-29 18:30\n"
"Last-Translator: \n"
"Language-Team: Chinese Traditional\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: zh_TW\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "此頁面是從 `docs/tutorials/03_quantum_kernel.ipynb`__產生的。"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "量子核心機器學習"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "機器學習中的一項常見任務是從數據中發現和學習模式。對於很多資料集，數據點可以藉由核心函數:math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle`在高維特徵空間中理解，其中:math:`k`是核心函數， :math:`\\vec{x}_i, \\vec{x}_j`是 n 維輸入，並且:math:`f` 是從 :math:`n`-維空間到:math:`m`-維空間的映射， :math:`\\langle a,b \\rangle` 表示內積。對於有限數據，核心函數可以用矩陣表示 :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`。"

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "在量子核心機器學習中，量子特徵圖 :math:`\\phi(\\vec{x})` 常被用來將古典的特徵向量 :math:`\\vec{x}` 映射到量子希爾伯特空間:math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, 像 :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`。有關更多信息，請參閱`Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ 。"

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "本筆記本藉由量子特徵圖使用``qiskit`` 計算核心矩陣，並在``scikit-learn`` 的分類和聚類演算法中使用該核心矩陣。"

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "分類"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "對於我們的分類範例，我們將使用 `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ 中的*ad hoc dataset*，以及 ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ 分類(``svc``)演算法。"

#: ../../tutorials/03_quantum_kernel.ipynb:142
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "一旦訓練和測試資料集準備就緒，藉由使用`ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>` __ 設置``QuantumKernel``類別去計算核心矩陣。然後使用 ``BasicAer`` ``qasm_simulator``運行 1024 個測量次數。"

#: ../../tutorials/03_quantum_kernel.ipynb:169
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "``scikit-learn``中的``svc``演算法可讓我們以兩種方式定義`custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ ，方法是將核心提供為可調用函數，或通過預計算核心矩陣。 我們可以使用 ``qiskit`` 中的``QuantumKernel``類別來執行這些。"

#: ../../tutorials/03_quantum_kernel.ipynb:171
msgid "The following code gives the kernel as a callable function:"
msgstr "下列程式碼將核心提供為可調用的函數："

#: ../../tutorials/03_quantum_kernel.ipynb:220
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "下列程式碼預先計算並繪製訓練和測試核心矩陣，然後再將它們提供給``scikit-learn`` ``svc``演算法："

#: ../../tutorials/03_quantum_kernel.ipynb:290
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "``qiskit`` 還包括 ``qsvc`` 類別，它是``sklearn svc``類別的擴展，可以使用如下："

#: ../../tutorials/03_quantum_kernel.ipynb:340
msgid "Clustering"
msgstr "聚類"

#: ../../tutorials/03_quantum_kernel.ipynb:342
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "對於我們的聚類範例，我們將再次使用`Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__中的 *ad hoc dataset*，和 ``scikit-learn`` ``spectral``聚類演算法。"

#: ../../tutorials/03_quantum_kernel.ipynb:344
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "我們會重新生成兩個類別之間有很大差距的資料集。聚類是一項無監督的機器學習任務，因此不需要測試樣本。"

#: ../../tutorials/03_quantum_kernel.ipynb:414
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "我們再次使用 `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__設置 `` QuantumKernel`` 類別去計算核心矩陣，然後使用 BasicAer ``qasm_simulator`` 運行1024 個測量次數。"

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "Scikit-learn 光譜聚類演算法允許您以兩種方式定義[自訂的核心]。也就是說，藉由提供核心作為可調用函數，或藉由預測核心矩陣。如果使用 Qiskit 的 QuantumKernel 類別，則只能使用後者。"

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "由於我們事先知道類別標籤，下面的程式碼預先計算並繪製核心矩陣，然後將其放入scikit-learn的光譜聚類演算法中，用歸一化互信息對標籤進行評分。"

#: ../../tutorials/03_quantum_kernel.ipynb:508
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "`` scikit-learn`` 有其他演算法可以使用預先計算的核心矩陣，這裡有其他範例："

#: ../../tutorials/03_quantum_kernel.ipynb:510
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:511
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:512
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:513
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:514
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"

