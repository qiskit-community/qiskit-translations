msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-17 23:23+0000\n"
"PO-Revision-Date: 2022-02-18 00:17\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9634\n"
"Language: ja_JP\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "This page was generated from `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "このページは `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__ から生成されました。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "qGANによるランダム分布の書き込み"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr ":math:`k` 次元のデータサンプルが与えられた場合、量子敵対的生成ネットワーク(qGAN) を使用して、データの基礎となるランダム分布を学習し、それを量子状態に直接ロードします。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "ここで、 :math:`p_{\\theta}^{j}` は、基底状態 :math:`\\big| j\\rangle` の発生確率を表します。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "qGAN学習の目的は、状態 :math:`\\big| g_{\\theta}\\rangle` を生成することです。ここで、 :math:`p_{\\theta}^{j}` は、 :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}` の場合、 学習データ :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}` の基礎となる分布に近い確率分布を表します。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "詳細については、「 `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019] 」を参照してください。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "学習済みの qGAN の実用例として、金融デリバティブの価格設定については、チュートリアルの「 `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ 」を参照してください。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:58
msgid "Load the Training Data"
msgstr "学習データのロード"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:60
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "まず :math:`k` 次元の学習データ・サンプルを読み込む必要があります (ここでは k=1 です) 。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:62
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "次にデータの分解能、すなわち最小・最大データ値と、各データ次元を表現するために用いられる量子ビット数を設定します。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:97
msgid "Initialize the qGAN"
msgstr "qGANの初期化"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:99
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, i.e., an ansatz, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr "qGAN は、量子生成器 :math:`G_{\\theta}` 、いわゆるansatzと、ニューラル・ネットワークの 古典識別器 :math:`D_{\\phi}` で構成されています。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:101
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` ansatz that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "量子生成器を実装するために、一様分布を入力に取るような、:math:`R_Y` 回転と :math:`CZ` ゲートからなる深さ :math:`1` のansatzを用います。特に :math:`k>1` の場合、生成器のパラメーターは慎重に選ばれなければなりません。例えば、回路が深いほどより複雑な構造を表現できるので、回路の深さは :math:`>1` であるべきです。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:103
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ for more information."
msgstr "ここで使用する古典識別器は、 NumPyによるニューラル・ネットワークの実装に基づいています。また、 Qiskit のインストール時にはデフォルトでインストールされていない PyTorch ベースの識別器もあります。詳細は「 `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ 」を参照してください。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:105
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "ここでは、両方のネットワークが ADAM 最適化アルゴリズムによって更新されます (ADAM は qGAN のデフォルトのオプティマイザーです) 。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:169
msgid "Run the qGAN Training"
msgstr "qGAN の学習"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:171
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "学習では、識別器と生成器のパラメーターが、以下の損失関数に基づいて交互に更新されます。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:173
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:175
msgid "and"
msgstr "および"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:177
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:182
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr "ここで :math:`m` はバッチ・サイズを、:math:`g^l` は量子生成器によって生成されたデータ・サンプルを表しています。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:184
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr "このノートブックの目的のために、既知の初期点 (``init_params``) を指定することで、学習をより簡単にしていることに注意してください。このような予備知識がないと、学習が時間を要するかもしれません。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:260
msgid "Training Progress & Outcome"
msgstr "学習過程と結果"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:262
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr "次に、学習における生成器と識別器の損失関数の推移、および学習分布と目標分布の間の相対エントロピーの推移をプロットします。"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:264
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "最後に、訓練分布の累積分布関数 (cumulative distribution function、CDF) と目標分布の CDF も比較します。"

