msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-22 17:47+0000\n"
"PO-Revision-Date: 2021-07-22 18:04\n"
"Last-Translator: \n"
"Language-Team: Hindi\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: hi\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: hi_IN\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "प्रमात्रा कर्नेल मशीन लर्निंग"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "आम तौर पर मशीन-लर्निंग का कार्य डेटा में पैटर्न खोजने और अध्ययन करना है, कई डेटासेट के लिए कर्नेल फंक्शन के उपयोग के माध्यम से डेटापॉइंट को उच्च आयामी फीचर स्पेस में बेहतर ढंग से समझा जाता है : :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` जहाँ :math:`k` कर्नेल फंक्शन है, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` आयामी इनपुट, :math:`f` एक :math:`n`-आयाम से :math:`m`-आयाम स्थान का मैप है और :math:`\\langle a,b \\rangle` डॉट उत्पाद को दर्शाता है. परिमित डेटा पर विचार करते समय, कर्नेल फ़ंक्शन को मैट्रिक्स के रूप में दर्शाया जा सकता है: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "क्वांटम कर्नेल मशीन लर्निंग में, एक क्वांटम फीचर मैप :math:`\\phi(\\vec{x})` का उपयोग एक शास्त्रीय फीचर :math:`\\vec{x}` को क्वांटम एक हिल्बर्ट स्थान :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`,में मैप करने के लिए उपयोग किया जाता है जिससे हमें :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`.मिलता है. अधिक विवरण के लिए देखें `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "इस पुस्तक में, हम प्रमात्रा फीचर मैप का उपयोग करके कर्नेल मैट्रिक्स की गणना करने के लिए ``qiskit`` का उपयोग करते हैं, फिर इस कर्नेल मैट्रिक्स का उपयोग ``scikit-learn`` वर्गीकरण और गुच्छन कलन विधि में करते हैं।"

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "वर्गीकरण"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "हमारे वर्गीकरण उदाहरण के लिए, हम *तदर्थ डेटासेट* का उपयोग करेंगे जैसा कि `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, और ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ वर्गीकरण (``svc``) विधि कलन में वर्णित है।"

#: ../../tutorials/03_quantum_kernel.ipynb:111
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "हमारे प्रशिक्षण और परीक्षण डेटासेट तैयार होने के साथ, हम `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__ और ``BasicAer`` ``qasm_simulator`` 1024 शॉट्स का उपयोग करके कर्नेल मैट्रिक्स की गणना करने के लिए ``QuantumKernel`` वर्ग की स्थापना करते हैं।"

#: ../../tutorials/03_quantum_kernel.ipynb:138
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "``scikit-learn````svc`` एल्गोरिथम हमें एक `कस्टम कर्नेल <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ को दो तरह से परिभाषित करने की अनुमति देता है: कर्नेल को कॉल करने योग्य फ़ंक्शन के रूप में प्रदान करके या कर्नेल मैट्रिक्स को प्रीकंप्यूटिंग करके। हम इनमें से कोई भी `qiskit` में ``QuantumKernel`` वर्ग का उपयोग करके कर सकते हैं।"

#: ../../tutorials/03_quantum_kernel.ipynb:140
msgid "The following code gives the kernel as a callable function:"
msgstr "निम्नालिखित कोड कर्नेल को कॉल करने योग्य फ़ंक्शन के रूप में देता है:"

#: ../../tutorials/03_quantum_kernel.ipynb:184
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "निम्नलिखित कोड ``scikit-learn````svc`` एल्गोरिथम प्रदान करने से पहले प्रशिक्षण और परीक्षण कर्नेल matrices को प्रीकंप्यूट करता है और प्लॉट करता है:"

#: ../../tutorials/03_quantum_kernel.ipynb:250
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "``qiskit`` में ``qsvc`` वर्ग भी शामिल है जो ``sklearn svc`` वर्ग का विस्तार करता है, जिसका उपयोग निम्नानुसार किया जा सकता है:"

#: ../../tutorials/03_quantum_kernel.ipynb:295
msgid "Clustering"
msgstr "गुच्छन"

#: ../../tutorials/03_quantum_kernel.ipynb:297
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "हमारे गुच्छन उदाहरण के लिए, हम फिर से *तदर्थ डेटासेट* का उपयोग करेंगे जैसा कि `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, और `scikit-learn`` ``spectral`` गुच्छन कलन विधि में वर्णित है।"

#: ../../tutorials/03_quantum_kernel.ipynb:299
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "हम दोनों वर्गों के बीच एक बड़े अंतर के साथ डेटासेट को पुन: उत्पन्न करेंगे, और चूंकि गुच्छन एक अपर्यवेक्षित मशीन शिक्षण कार्य है, हमें एक परीक्षण नमूने की जरूरत नहीं है।"

#: ../../tutorials/03_quantum_kernel.ipynb:350
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "हमने `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, और १०२४ शॉट्स का उपयोग करते BasicAer ``qasm_simulator`` का उपयोग करके कर्नेल मैट्रिक्स की गणना करने के लिए फिर से ``QuantumKernel`` वर्ग की स्थापना की।"

#: ../../tutorials/03_quantum_kernel.ipynb:377
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "Scikit-learn वर्णक्रम संबंधी गुच्छन कलन विधि हमें एक [कस्टम कर्नेल] को दो तरीकों से परिभाषित करने की अनुमति देता है: कर्नेल को कॉल करने योग्य फ़ंक्शन के रूप में प्रदान करके या कर्नेल मैट्रिक्स को पूर्व गणना करके। Qiskit में QuantumKernelQiskit वर्ग का उपयोग करके, हम केवल बाद वाले तरीके का उपयोग कर सकते हैं।"

#: ../../tutorials/03_quantum_kernel.ipynb:379
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "निम्न कोड scikit-learn स्पेक्ट्रल क्लस्टरिंग एल्गोरिथम को प्रदान करने से पहले कर्नेल मैट्रिस को प्रीकंप्यूट और प्लॉट करता है, और सामान्यीकृत पारस्परिक जानकारी का उपयोग करके लेबल को स्कोर करता है, क्योंकि हम एक प्राथमिकता वर्ग लेबल जानते हैं।"

#: ../../tutorials/03_quantum_kernel.ipynb:439
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` के अन्य एल्गोरिथ्म हैं जो पूर्वगणना कर्नेल मैट्रिक्स का उपयोग कर सकते हैं, यहाँ कुछ हैं:"

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "क्लस्टरिंग ढेर <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:442
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "सहयोग वैक्टर प्रतिगमन <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "चोटी प्रतिगमन <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:444
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Gaussian प्रक्रिया प्रतिगमन <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:445
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "प्रमुख घटक विश्लेषण <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"

