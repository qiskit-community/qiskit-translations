msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 21:47+0000\n"
"PO-Revision-Date: 2023-03-27 14:15\n"
"Last-Translator: \n"
"Language-Team: German\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/06_torch_runtime.po\n"
"X-Crowdin-File-ID: 9719\n"
"Language: de_DE\n"

#: ../../tutorials/06_torch_runtime.ipynb:9
msgid "This page was generated from `docs/tutorials/06_torch_runtime.ipynb`__."
msgstr "Diese Seite wurde aus `docs/tutorials/06_torch_runtime.ipynb`__ generiert."

#: ../../tutorials/06_torch_runtime.ipynb:9
msgid "Torch Runtime"
msgstr "Torch Laufzeit"

#: ../../tutorials/06_torch_runtime.ipynb:11
msgid "In this tutorial, we introduce Torch Runtime, and show how to use it via the ``TorchRuntimeClient`` class in Qiskit Machine Learning. Torch Runtime leverages Qiskit Runtime for hybrid quantum-classical machine learning based on a PyTorch ``Module``. It allows training models or predicting the outputs with trained models significantly faster. We show how to use Torch Runtime with two simple examples for regression and classification tasks in the following."
msgstr "In diesem Tutorial wird die Torch Runtime vorgestellt und gezeigt wie sie über die ``TorchRuntimeClient`` Klasse in Qiskit Machine Learning benutzt wird. Torch Runtime nutzt Qiskit Runtime für hybrides quantenklassisches maschinelles lernen, basierend auf einem PyTorch ``Module``. Das ermöglicht deutlich schnellere Trainingsmodelle und Vorhersage der Ergebnisse von trainierten Modellen. Es wird im Folgenden gezeigt wie Torch Runtime mit zwei einfachen Beispielen für Regressions- und Klassifizierungsaufgaben verwendet werden."

#: ../../tutorials/06_torch_runtime.ipynb:23
msgid "1. Regression"
msgstr "1. Regression"

#: ../../tutorials/06_torch_runtime.ipynb:25
msgid "First, we show how to use Torch Runtime via ``TorchRuntimeClient`` using the simple regression example. In the example, we will perform a regression task on a randomly generated dataset following a sine wave."
msgstr "Zuerst zeigen wir, wie man Torch Runtime via ``TorchRuntimeClient`` mithilfe des einfachen Regression-Beispiels nutzt. Im Beispiel wird eine Regressionsaufgabe auf einem zufällig erzeugten sinuswelligen Datensatz ausgeführt."

#: ../../tutorials/06_torch_runtime.ipynb:99
msgid "``TorchRuntimeClient`` requires a PyTorch ``DataLoader`` as an input for training/predicting. For that purpose, we create a custom torch dataset class."
msgstr "``TorchRuntimeClient`` erfordert einen PyTorch ``DataLoader`` als Eingabe für Training/Vorhersage. Dafür wird eine benutzerdefinierte torch Dataset-Klasse erstellt."

#: ../../tutorials/06_torch_runtime.ipynb:146
msgid "Create an instance of ``TorchConnector`` to wrap a QNN model and be able to use pytorch to train the model, then set up an optimizer and a loss function as usual."
msgstr "Erstelle eine Instanz von ``TorchConnector``, um ein QNN Modell zu verpacken und in der Lage zu sein das Modell mit pytorch zu trainieren. Dann richte wie gewohnt einen Optimierer und eine Verlustfunktion ein."

#: ../../tutorials/06_torch_runtime.ipynb:234
msgid "Load a provider and specify a backend for the runtime service."
msgstr "Lade einen Provider und gib ein Backend für den Laufzeitdienst an."

#: ../../tutorials/06_torch_runtime.ipynb:261
msgid "Create a Torch Runtime Client instance with the model, the optimizer, and other configurations."
msgstr "Erstelle eine Torch Runtime Client Instanz mit dem Modell, dem Optimierer und anderen Konfigurationen."

#: ../../tutorials/06_torch_runtime.ipynb:290
#: ../../tutorials/06_torch_runtime.ipynb:875
msgid "Call ``fit()`` to train the model"
msgstr "Rufe ``fit()`` zum Training des Modells auf"

#: ../../tutorials/06_torch_runtime.ipynb:292
msgid "Call the ``fit`` method in ``TorchRuntimeClient`` with the data loader to train the model."
msgstr "Rufe die ``fit``-Methode in ``TorchRuntimeClient`` mit dem Data Loader auf, um das Modell zu trainieren."

#: ../../tutorials/06_torch_runtime.ipynb:313
msgid "You can access training result information by querying properties of the ``fit_result`` variable, that is an instance of the ``TorchRuntimeResult`` class. Also, model’s parameters in ``TorchRuntimeClient`` are updated with trained ones."
msgstr "Die Informationen zum Trainingsergebnis sind unter den Eigenschaften der ``fit_result``-Variable abrufbar. Das ist eine Instanz der ``TorchRuntimeResult`` Klasse. Auch die Parameter des Modells in ``TorchRuntimeClient`` werden mit geschulten aktualisiert."

#: ../../tutorials/06_torch_runtime.ipynb:366
msgid "You can also query the ``train_history`` property, which is a list of dictionaries, each per epoch. In a dictionary you can find properties like: - ``epoch``, epoch index - ``loss``, loss value at this epoch - ``forward_time``, time spent in the forward pass, in seconds - ``backward_time``, time spent in the backward pass, in seconds - ``epoch_time``, epoch time, in seconds.\""
msgstr "Man kann auch die ``train_history`` Eigenschaft abfragen, die eine Liste von Dictionaries pro Epoche ist. In einem Dictionary findest du Eigenschaften wie: - ``epoch``, epoch index - ``loss``, loss value at this epoch - ``forward_time``, time spent in the forward pass, in seconds - ``backward_time``, time spent in the backward pass, in seconds - ``epoch_time``, epoch time, in seconds.\""

#: ../../tutorials/06_torch_runtime.ipynb:378
msgid "Training with validation"
msgstr "Training mit Validierung"

#: ../../tutorials/06_torch_runtime.ipynb:380
msgid "Torch Runtime can also perform validation while training a model by passing a validation data loader to the ``fit`` method."
msgstr "Torch Runtime kann auch während des Trainings eines Modells eine Validierung durchführen, indem ein Validierungsdaten-Loader an die ``fit``-Methode übergeben wird."

#: ../../tutorials/06_torch_runtime.ipynb:471
msgid "You can query the ``val_history`` property, which is a list of dictionaries for the validation processes, each per epoch. In a dictionary you can find the same properties as ``train_history``."
msgstr "Du kannst die ``val_history`` Eigenschaft abfragen, die eine Liste von Dictionaries für die Validierungsprozesse pro Epoche darstellt. In einem Dictionary findest du die gleichen Eigenschaften wie in ``train_history``."

#: ../../tutorials/06_torch_runtime.ipynb:483
#: ../../tutorials/06_torch_runtime.ipynb:946
msgid "Call ``predict()`` to perform prediction"
msgstr "Rufe ``predict()`` auf, um eine Vorhersage durchzuführen"

#: ../../tutorials/06_torch_runtime.ipynb:485
msgid "Call the ``predict`` method in ``TorchRuntimeClient`` with the data loader to perform prediction on the passed data using the trained model."
msgstr "Rufe die ``predict``-Methode in ``TorchRuntimeClient`` mit dem Datenloader auf, um die übergebenen Daten mit Hilfe des trainierten Modells vorherzusagen."

#: ../../tutorials/06_torch_runtime.ipynb:573
msgid "A red line, blue dots, and a green line on the plot show the original function, the training data, and a function constructed out of the predicted values, respectively."
msgstr "Eine rote Linie, blaue Punkte und eine grüne Linie auf dem Plot zeigen die ursprüngliche Funktion, die Trainingsdaten und eine aus den vorhergesagten Werten konstruierte Funktion."

#: ../../tutorials/06_torch_runtime.ipynb:585
#: ../../tutorials/06_torch_runtime.ipynb:1053
msgid "Call ``score()`` to calculate a score"
msgstr "Rufe ``score()`` auf, um eine Punktzahl zu berechnen"

#: ../../tutorials/06_torch_runtime.ipynb:587
msgid "Call the ``score`` method in ``TorchRuntimeClient`` with the data loader to calculate a score, for the trained model. You should pass either ``\"regression\\\"`` or ``\"classification\"`` to the ``score_func`` argument to use one of the pre-defined scores functions. Also, you can pass a custom scoring function defined as:"
msgstr "Rufe die ``score`` Methode in ``TorchRuntimeClient`` mit dem Datenloader auf, um eine Punktzahl für das trainierte Modell zu berechnen. Du solltest entweder ``\"regression\\\"`` oder ``\"classification\"`` an das ``score_func`` Argument übergeben, um eine der vordefinierten Score-Funktionen zu verwenden. Du kannst auch eine benutzerdefinierte Scoring-Funktion verwenden:"

#: ../../tutorials/06_torch_runtime.ipynb:593
msgid "where: - ``model_output`` are the values predicted by the model, - ``target`` ground truth values."
msgstr "wobei: - ``model_output`` die vom Modell vorausgesagten Werte sind, - ``target`` die tatsächlichen Werte."

#: ../../tutorials/06_torch_runtime.ipynb:595
msgid "Note that the result of the ``score`` call also contains predicted values that were calculated in the process of scoring the model."
msgstr "Beachte, dass das Ergebnis von ``score`` auch vorhergesagte Werte enthält, die beim Scoring des Modells berechnet wurden."

#: ../../tutorials/06_torch_runtime.ipynb:659
msgid "2. Classification"
msgstr "2. Klassifikation"

#: ../../tutorials/06_torch_runtime.ipynb:661
msgid "Second, we show how to perform a simple classification task using Torch Runtime. In the example, we will perform binary classification on a randomly generated dataset."
msgstr "Zweitens wird gezeigt, wie man eine einfache Klassifikationsaufgabe mit Torch Runtime durchführt. Im Beispiel wird eine binäre Klassifizierung auf einem zufällig generierten Datensatz durchgeführt."

#: ../../tutorials/06_torch_runtime.ipynb:934
msgid "You can also query the ``train_history`` and the ``val_history`` properties."
msgstr "Du kannst auch die ``train_history`` und die ``val_history`` Eigenschaften abfragen."

#: ../../tutorials/06_torch_runtime.ipynb:1041
msgid "The red circles indicate wrongly classified data points."
msgstr "Die roten Kreise weisen auf falsch klassifizierte Datenpunkte hin."

#: ../../tutorials/06_torch_runtime.ipynb:1064
msgid "In the example, we use the following custom scoring function to calculate a score. The scoring function returns 1, if the trained model successfully classified the input. Otherwise, it returns 0. An overall average is calculated in ``score()`` in the end."
msgstr "Im Beispiel wird die folgende benutzerdefinierte Scoring-Funktion verwendet, um eine Punktzahl zu berechnen. Die Punktestandfunktion gibt 1 zurück, wenn das trainierte Modell die Eingabe erfolgreich klassifiziert hat. Andernfalls gibt sie 0 zurück. Ein Gesamtdurchschnitt wird am Ende in ``score()`` berechnet."

#: ../../tutorials/06_torch_runtime.ipynb:1144
msgid "3. How to use hooks in training"
msgstr "3. Verwendung von Hooks im Training"

#: ../../tutorials/06_torch_runtime.ipynb:1146
msgid "Qiskit Machine Learning offers a base hook class, ``HookBase``. It is a base class for a hook that is a set of callback functions used in the training process. Users can implement their own hook classes from this base class to handle complicated callback processes. This structure provides high flexibility in the callback processes. Each hook can implement 6 methods, and each method is called before/after the corresponding processes during training. The way they are called is demonstrated in the following snippet:"
msgstr "Qiskit Machine Learning bietet eine Basisklasse, ``HookBase``. Es ist eine Basisklasse für einen Hook, der eine Reihe von Callback-Funktionen enthält, die im Trainingsprozess verwendet werden. Benutzer können ihre eigenen Hook Klassen aus dieser Basisklasse implementieren, um komplizierte Callback-Prozesse zu verwalten. Diese Struktur bietet dabei eine hohe Flexibilität. Jeder Hook kann 6 Methoden implementieren und jede Methode wird bei den entsprechenden Prozessen während des Trainings aufgerufen. Die Art und Weise, wie sie aufgerufen werden, wird im folgenden Snippet dargestellt:"

#: ../../tutorials/06_torch_runtime.ipynb:1163
msgid "In the hook methods, users can access ``TorchTrainer`` via ``self.trainer`` to access more context properties(e.g., model, current iteration, or config). The following snippet describes available properties that might be useful for a hook."
msgstr "In den Hook-Methoden können Benutzer über ``self.trainer`` auf ``TorchTrainer`` zugreifen, um mehr Kontexteigenschaften (z.B. model, aktuelle Iteration, oder config) abzufragen. Das folgende Snippet beschreibt die verfügbaren Eigenschaften, die für einen Hook nützlich sein könnten."

#: ../../tutorials/06_torch_runtime.ipynb:1165
msgid "TorchTrainer has:"
msgstr "TorchTrainer hat:"

#: ../../tutorials/06_torch_runtime.ipynb:1167
msgid "``model``: A model to be trained."
msgstr "``model``: Ein Modell, das trainiert werden soll."

#: ../../tutorials/06_torch_runtime.ipynb:1168
msgid "``optimizer``: An optimizer used for the training."
msgstr "``optimizer``: Ein Optimierer, der für das Training verwendet wird."

#: ../../tutorials/06_torch_runtime.ipynb:1169
msgid "``loss_func``: A loss function for the training."
msgstr "``loss_func``: Eine Verlustfunktion für das Training."

#: ../../tutorials/06_torch_runtime.ipynb:1170
msgid "``train_loader``: A PyTorch data loader object containing a training dataset."
msgstr "``train_loader``: Ein PyTorch-Datenladeobjekt, das einen Trainingsdatensatz enthält."

#: ../../tutorials/06_torch_runtime.ipynb:1171
msgid "``val_loader``: A PyTorch data loader object containing a validation dataset."
msgstr "``val_loader``: Ein PyTorch-Datenladeobjekt, das einen Validierungsdatensatz enthält."

#: ../../tutorials/06_torch_runtime.ipynb:1172
msgid "``max_epoch``: The maximum number of training epochs."
msgstr "``max_epoch``: Die maximale Anzahl an Übungsiterationen."

#: ../../tutorials/06_torch_runtime.ipynb:1173
msgid "``log_period``: A logging period for a train history and a validation history. By default, there will be logs every epoch (``log_period``\\ =1)."
msgstr "``log_period``: Ein Logging-Zeitraum für einen Trainingsverlauf und einen Validierungsverlauf. Standardmäßig wird jede Epoche protokolliert (``log_period``\\ =1)."

#: ../../tutorials/06_torch_runtime.ipynb:1174
msgid "``start_epoch``: An initial epoch for warm-start training. By default, 0."
msgstr "``start_epoch``: Eine erste Epoche für das Warm-Start-Training. Standardmäßig 0."

#: ../../tutorials/06_torch_runtime.ipynb:1175
msgid "``epoch``: The current number of epochs."
msgstr "``epoch``: Die aktuelle Anzahl an Epochen."

#: ../../tutorials/06_torch_runtime.ipynb:1176
msgid "``global_step``: The current number of steps."
msgstr "``global_step``: Die aktuelle Anzahl an Schritten."

#: ../../tutorials/06_torch_runtime.ipynb:1177
msgid "``train_logger``: A logger for a training history. Use ``train_logger.metrics`` to access a list of logs. A log for each epoch is stored as a dictionary similar to ``TorchRuntimeResult.train_history``"
msgstr "``train_logger``: Ein Logger für eine Trainingshistorie. Benutze ``train_logger.metrics`` um auf eine Liste von Logs zuzugreifen. Ein Log für jede Epoche wird als Dictionary gespeichert, ähnlich wie ``TorchRuntimeResult.train_history``"

#: ../../tutorials/06_torch_runtime.ipynb:1178
msgid "``val_logger``: A logger for a validation history. Logs are stored in the same way as train_logger."
msgstr "``val_logger``: Ein Logger für einen Validierungsverlauf. Protokolle werden genauso wie train_logger gespeichert."

#: ../../tutorials/06_torch_runtime.ipynb:1180
msgid "Users can pass a single hook instance or a list of hook instances to ``hooks`` argument."
msgstr "Benutzer können eine einzelne Hook-Instanz oder eine Liste von Hook-Instanzen an das ``hooks`` Argument übergeben."

#: ../../tutorials/06_torch_runtime.ipynb:1191
msgid "The following example is a hook for early stopping. If the current loss is smaller than the threshold after an epoch, the training will be terminated."
msgstr "Das folgende Beispiel ist ein Hook für einen frühen Stopp. Ist der aktuelle Verlust kleiner als der Schwellenwert nach einer Epoche, wird das Training beendet."

#: ../../tutorials/06_torch_runtime.ipynb:1305
msgid "As we can see, training was interrupted after the first epoch despite we set the number of epochs to 5 in the ``TorchRuntimeClient`` configuration."
msgstr "Es ist ersichtlich, dass das Training nach der ersten Epoche unterbrochen wurde, obwohl wir die Anzahl der Epochen in der ``TorchRuntimeClient`` Konfiguration auf 5 gesetzt haben."

