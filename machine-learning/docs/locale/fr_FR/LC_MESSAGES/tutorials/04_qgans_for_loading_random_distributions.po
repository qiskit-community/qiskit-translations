msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-29 18:01+0000\n"
"PO-Revision-Date: 2022-06-29 18:29\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9634\n"
"Language: fr_FR\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "This page was generated from `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "Cette page a été générée à partir de `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "qGANs pour le chargement de distributions aléatoires"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr "A partir des données d'exemple :math:`k`-dimensionnelles, nous utilisons un réseau antagoniste génératif quantique (qGAN) pour apprendre la distribution aléatoire sous-jacente des données et la charger directement dans un état quantique:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "où :math:`p_{\\theta}^{j}` décrit la probabilité de l'occurrence des états de base :math:`\\big| j\\rangle`."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "Le but de l'apprentissage qGAN est de générer un état :math:`\\big| g_{\\theta}\\rangle`où :math:`p_{\\theta}^{j}`, pour :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, décrit la probabilité de distribution qui est proche de la distribution sous-jacente des données d'apprentissage :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "Pour plus de détails, merci de vous référer à \"Réseaux Antagonistes Génératifs Quantique pour l'Apprentissage et le chargement de distribution aléatoire\" <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "Pour un exemple d'utilisation d'un qGAN entraîné pour une application, la tarification des produits financiers dérivés par exemple, veuillez consulter le tutoriel `Tarification des options avec qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutoriel."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:58
msgid "Load the Training Data"
msgstr "Chargement des données d'apprentissage"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:60
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "Premièrement, nous devons charger les échantillons de données d'apprentissage de dimension :math:\"k\" (ici k= 1)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:62
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "Ensuite, la résolution des données est définie, c'est-à-dire les valeurs de données min/max et le nombre de qubits utilisés pour représenter chaque dimension de données."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:97
msgid "Initialize the qGAN"
msgstr "Initialiser le qGAN"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:99
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, i.e., an ansatz, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr "Le qGAN consiste en un générateur quantique :math:`G_ {\\theta}`, c'est-à-dire, un circuit quantique variationnel, et un discriminateur classique :math:`D_ { \\phi }` implémenté grâce à un réseau neuronal."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:101
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` ansatz that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "Pour implémenter le générateur quantique, nous choisissons une forme variationnelle de profondeur-\\ :math:`1` qui utilise des rotations :math:`R_Y` et des portes :math:`CZ` et qui prend une distribution uniforme en tant qu'état d'entrée. Notamment, pour :math:`k>1`, les paramètres du générateur doivent être choisis avec soin. Par exemple, la profondeur du circuit doit être :math:`>1` car des profondeurs de circuit plus élevées permettent la représentation de structures plus complexes."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:103
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ for more information."
msgstr "Le discriminateur classique utilisé ici est basé sur une implémentation de réseau neuronal à l'aide de NumPy. Il existe également un discriminateur basé sur PyTorch qui n'est pas installé par défaut lors de l'installation de Qiskit - voir `Installation en option <https://github.com/Qiskit/qiskit-aqua#optional-installs>`__ pour plus d'informations."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:105
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "Ici, les deux réseaux sont mis à jour avec l'algorithme d'optimisation ADAM (ADAM est la valeur par défaut de l'optimiseur qGAN)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:169
msgid "Run the qGAN Training"
msgstr "Exécuter la formation qGAN"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:171
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "Pendant la formation, les paramètres du discriminateur et du générateur sont mis à jour alternativement avec les fonctions coût suivantes:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:173
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr "L_G \\left (\\phi, \\theta\\right) =-\\frac{1}{m}\\sum\\limits_ { l= 1 } ^{m}\\left [ \\log\\left (D_ { \\phi } \\left (g ^{l}\\right)\\right)\\right ]\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:175
msgid "and"
msgstr "et"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:177
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:182
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr "avec :math:`m` dénotant la taille du lot et :math:`g^l` décrivant les échantillons de données générés par le générateur quantique."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:184
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr "Veuillez noter que la formation, aux fins de ce notebook, a été raccourcie par la sélection d'un point initial connu (``init_params``). Sans ces connaissances préalables, l'entraînement peut prendre un certain temps."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:261
msgid "Training Progress & Outcome"
msgstr "Progrès & Résultats de la formation"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:263
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr "Maintenant, nous traçons l'évolution des fonctions de coût du générateur et du discriminateur pendant la formation, ainsi que les progrès de l'entropie relative entre la distribution formée et la distribution cible."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:265
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "Enfin, nous comparons également la fonction de distribution cumulative (CDF) de la distribution entraînée au CDF de la distribution cible."

