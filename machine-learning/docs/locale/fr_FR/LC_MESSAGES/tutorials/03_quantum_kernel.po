msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-24 12:38+0000\n"
"PO-Revision-Date: 2021-08-24 13:23\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: fr_FR\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "Cette page a été générée à partir de `docs/tutorials/03_quantum_kernel.ipynb`__."

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "Apprentissage automatique du noyau quantique"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "La tâche générale de l'apprentissage automatique est de trouver et d'étudier des modèles dans les données. Pour de nombreux jeux de données, les points de données sont mieux compris dans un espace de plus grande dimension par l'utilisation d'une fonction du noyau : :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` où :math:`k` est la fonction du noyau, :math:`\\vec{x}_i, \\vec{x}_j` sont :math:`n` entrées dimensionnelles, :math:`f` est une carte de :math:`n`-dimension à :math:`m`-dimension espace et :math:`\\langle a, \\rangle` indique le produit à point. Lorsque l'on considère les données finies, une fonction du noyau peut être représentée par une matrice : :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "Dans l'apprentissage de la machine quantique du noyau, une carte de fonction quantique :math:`\\phi(\\vec{x})` est utilisée pour mapper un vecteur de trait classique :math:`\\vec{x}` à un espace Hilbert quantique, :math:`| \\\\phi(\\vec{x})\\rangle \\langle \\\\phi(\\vec{x})|`, tel que :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\\\phi(\\vec{x}_i) \\rangle \\right|^{2}`. Voir `Apprentissage supervisé avec des espaces de fonctionnalités améliorés quantiques <https://arxiv.org/pdf/1804.11326.pdf>`__ pour plus de détails."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "Dans ce bloc-notes, nous utilisons ` ` qiskit ` ` pour calculer une matrice de noyau à l'aide d'une mappe de fonctions quantiques, puis utilisez cette matrice de noyau dans les algorithmes de classification et de classification de ` ` scikit-learn ` `."

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "Classification"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "Pour notre exemple de classification, nous utiliserons * l'ensemble de données ad hoc * tel que décrit dans la section \"Apprentissage supervisé avec les espaces de fonctions améliorés quantiques <https://arxiv.org/pdf/1804.11326.pdf>` __, et l'algorithme de type\" science vectorielle \" <https://scikit-learn.org/stable/modules/svm.html>` __ classification (` ` svc ` `)."

#: ../../tutorials/03_quantum_kernel.ipynb:111
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "Avec nos jeux de données de formation et de test prêt, nous avons configuré la classe ` ` QuantumKernel ` ` pour calculer la matrice du noyau à l'aide de la ` ` ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>` __, et du ` ` BasicAer ` ` ` ` qasm_simulateur ` ` utilisant 1024 coups."

#: ../../tutorials/03_quantum_kernel.ipynb:138
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "L'algorithme ` ` scikit-learn ` ` ` ` svc ` ` nous permet de définir un noyau'personnalisé <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>` __ de deux manières: en fournissant le noyau comme une fonction appelable ou en précalculant la matrice du noyau. Nous pouvons faire l'un ou l'autre de ces outils en utilisant la classe ` ` QuantumKernel ` ` dans ` ` qiskit ` `."

#: ../../tutorials/03_quantum_kernel.ipynb:140
msgid "The following code gives the kernel as a callable function:"
msgstr "Le code suivant donne au noyau une fonction appelable:"

#: ../../tutorials/03_quantum_kernel.ipynb:184
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "Le code suivant précalcule et trace la formation et teste les matrices du noyau avant de les fournir à l'algorithme ` ` scikit-learn ` ` ` svc ` `:"

#: ../../tutorials/03_quantum_kernel.ipynb:250
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "` ` qiskit ` ` contient également la classe ` ` qsvc ` ` qui étend la classe ` ` sklearn svc ` `, qui peut être utilisée comme suit:"

#: ../../tutorials/03_quantum_kernel.ipynb:295
msgid "Clustering"
msgstr "Clustering"

#: ../../tutorials/03_quantum_kernel.ipynb:297
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "Pour notre exemple de classification, nous utiliserons *ad hoc dataset* tel que décrit dans la section \"Apprentissage supervisé avec les espaces de fonctions améliorés quantiques <https://arxiv.org/pdf/1804.11326.pdf>` __, et le ``scikit-learn`` l'algorithme de regroupement ``spectral``."

#: ../../tutorials/03_quantum_kernel.ipynb:299
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "Nous allons régénérer le jeu de données avec un écart plus grand entre les deux classes, et comme le regroupement est une tâche d'apprentissage automatique non supervisée, nous n'avons pas besoin d'un échantillon de test."

#: ../../tutorials/03_quantum_kernel.ipynb:350
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "Avec nos jeux de données de formation et de test prêt, nous avons configuré la classe ` ` QuantumKernel ` ` pour calculer la matrice du noyau à l'aide de la ` ` ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>` __, et du ` ` BasicAer ` ` ` ` qasm_simulateur ` ` utilisant 1024 coups."

#: ../../tutorials/03_quantum_kernel.ipynb:377
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "L'algorithme de regroupement spectral scikit-learn nous permet de définir [un noyau personnalisé] de deux manières: En fournissant un noyau en tant que fonction appelable ou en précalculant la matrice du noyau. En utilisant la class QuantumKernel dans Qiskit, nous pouvons utiliser que cette dernière."

#: ../../tutorials/03_quantum_kernel.ipynb:379
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "Le code suivant précalcule et affiche les matrices de noyau avant de les fournir à l'algorithme de regroupement spectral scikit-learn, et de marquer les étiquettes à l'aide d'informations mutuelles normalisées, puisque nous connaissons a priori les labels des classes."

#: ../../tutorials/03_quantum_kernel.ipynb:439
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` a d'autres algorithmes qui peuvent utiliser une matrice de noyau précalculée, voici quelques uns:"

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Regroupement Agglomératif <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>` __"

#: ../../tutorials/03_quantum_kernel.ipynb:442
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Régression à vecteur de support <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>` __"

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Régression dorsale <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>` __"

#: ../../tutorials/03_quantum_kernel.ipynb:444
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Régression du processus Gaussien <https://scikit-learn.org/stable/modules/gaussian_process.html>` __"

#: ../../tutorials/03_quantum_kernel.ipynb:445
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Analyse en composantes principales <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>` __"

