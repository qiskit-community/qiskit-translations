msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-17 23:23+0000\n"
"PO-Revision-Date: 2022-02-18 00:22\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9634\n"
"Language: tr_TR\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "This page was generated from `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "Bu sayfa, `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__ sayfasından oluşturulmuştur."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "Rastgele Dağıtımları Yüklemek için qGAN'lar"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr "Verilen :math:`k`-boyutlu veri örneklerini, verinin temeldeki rastgele dağılımını öğrenmek ve doğrudan bir kuantum durumuna yüklemek için bir kuantum Üretken Karşıt Ağ (quantum Generative Adversarial Network - qGAN) kullanıyoruz:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "burada :math:`p_{\\theta}^{j}` temel durumların oluşma olasılıklarını tanımlar :math:`\\big| j\\rangle`."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "qGAN eğitimin hedefi, :math:`p_{\\theta}^{j}` olduğu yerde :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}` için bir :math:`\\big| g_{\\theta}\\rangle` durumu oluşturmaktır, eğitimin verisinin :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}` temelinde yatan dağılıma yakın bir olasılık dağılımı tanımlayın."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "Daha fazla ayrıntı için lütfen `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019].'a bakınız."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "Herhangi bir uygulamada eğitimli qGAN'ın nasıl kullanılacağına, finansal olan türevlerinin fiyatlandırılmasına ilişkin bir örnek için lütfen <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ eğitimine bakın."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:58
msgid "Load the Training Data"
msgstr "Çalıştırma Verilerinin Yüklenmesi"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:60
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "İlk olarak, :math:`k` boyutlu eğitim verisi örneklerini yüklememiz gerekiyor (burada k=1)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:62
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "Ardından, veri çözünürlüğü, yani her bir veri boyutunu temsil etmek için kullanılan min/maks veri değerleri ve kübit sayısı ayarlanır."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:97
msgid "Initialize the qGAN"
msgstr "qGAN'ı başlatma"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:99
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, i.e., an ansatz, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr "qGAN, bir kuantum üretecidir. :math:`G_{\\theta}`, yani bir ansatz , bir klasik ayırıcı :math:`D_{\\phi}`, ve bir sinir ağından oluşur."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:101
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` ansatz that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "Kuantum üretecini uygulamak için, girdi durumu olarak düzenli bir dağılım alan :math:`R_Y` dönüşlerini uygulayan bir derinlik için -\\ :math:`1` , ansatz ve :math:`CZ` kapılarını seçiyoruz. Özellikle, :math:`k>1` için üretecin parametreleri dikkatli seçilmelidir."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:103
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ for more information."
msgstr "Burada kullanılan klasik ayırıcı, sinir ağı uygulamasına dayanan NumPy'ı kullanmatadır. Qiskit'i kurarken varsayılan olarak kurulmayan PyTorch'a dayalı olan bir ayrıcı da vardır. Daha fazla bilgi için `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__'e bakınız."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:105
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "Burada her iki ağ da ADAM optimizasyon algoritmasıyla güncellenir (ADAM, qGAN optimize edici varsayılanıdır)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:169
msgid "Run the qGAN Training"
msgstr "qGAN Eğitimini çalıştırın"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:171
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "Eğitim sırasında diskriminatör ve üreten parametreleri aşağıdaki kayıp fonksiyonlar ile dönüşümlü olarak güncellenir:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:173
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:175
msgid "and"
msgstr "ve"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:177
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:182
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr "toplu iş boyutunu gösteren :math:`m` ve :math:`g^l` kuantum üreteci tarafından üretilen veri örneklerini tanımlar."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:184
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr "Bu not defterinin amacı eğitimin, bilinen bir başlangıç noktasının (``init_params``) seçilmesiyle daha kısa tutulduğunu lütfen unutmayın. Böyle bir ön bilgi olmadan, eğitimin biraz zaman alabileceğinin farkında olun."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:260
msgid "Training Progress & Outcome"
msgstr "Eğitim İlerleyişi ve Sonucu"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:262
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr "Şimdi, eğitim sırasında üreticinin ve ayrımcının kayıp fonksiyonlarının evrimini ve ayrıca eğitilmiş ve hedef dağılım arasındaki göreli entropideki ilerlemesini çiziyoruz."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:264
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "Son olarak, eğitilmiş dağıtımın kümülatif dağılım fonksiyonunu (CDF) hedef dağılımın CDF'si ile de karşılaştırırız."

