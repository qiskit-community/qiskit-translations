msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-01 12:18+0000\n"
"PO-Revision-Date: 2024-01-14 10:45\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /main/machine-learning/docs/locale/en/LC_MESSAGES/migration/01_migration_guide_0.5.po\n"
"X-Crowdin-File-ID: 9879\n"

#: ../../migration/01_migration_guide_0.5.rst:2
msgid "Qiskit Machine Learning v0.5 Migration Guide"
msgstr "Guía de Migración de Qiskit Machine Learning v0.5"

#: ../../migration/01_migration_guide_0.5.rst:4
msgid "This tutorial will guide you through the process of migrating your code from Qiskit Machine Learning v0.4 to v0.5."
msgstr "Este tutorial te guiará a través del proceso de migración de tu código de Qiskit Machine Learning v0.4 a v0.5."

#: ../../migration/01_migration_guide_0.5.rst:8
msgid "Introduction"
msgstr "Introducción"

#: ../../migration/01_migration_guide_0.5.rst:10
msgid "The main focus of the 0.5 release of Qiskit Machine Learning is the migration of the base computational blocks like quantum kernels and quantum neural networks to the primitives introduced in Qiskit as well as extended support of the primitives in the algorithms."
msgstr "El objetivo principal de la versión 0.5 de Qiskit Machine Learning es la migración de los bloques computacionales básicos, como los kernels cuánticos y las redes neuronales cuánticas, a las primitivas introducidas en Qiskit, así como la compatibilidad ampliada con las primitivas en los algoritmos."

#: ../../migration/01_migration_guide_0.5.rst:15
msgid "Contents:"
msgstr "Contenido:"

#: ../../migration/01_migration_guide_0.5.rst:17
#: ../../migration/01_migration_guide_0.5.rst:23
msgid "Overview of the primitives"
msgstr "Descripción general de las primitivas"

#: ../../migration/01_migration_guide_0.5.rst:18
#: ../../migration/01_migration_guide_0.5.rst:87
msgid "New quantum kernel"
msgstr "Nuevo kernel cuántico"

#: ../../migration/01_migration_guide_0.5.rst:19
#: ../../migration/01_migration_guide_0.5.rst:283
msgid "New quantum neural networks"
msgstr "Nuevas redes neuronales cuánticas"

#: ../../migration/01_migration_guide_0.5.rst:20
#: ../../migration/01_migration_guide_0.5.rst:658
msgid "Other notable deprecation"
msgstr "Otros casos de obsolescencia notables"

#: ../../migration/01_migration_guide_0.5.rst:25
msgid "The core capability of quantum computers that sets them apart from from classical computers is their ability to generate non-classical probability distributions at their outputs. The native operations that one can do with a probability distribution is to sample from it or to estimate quantities on it. Consequently, these operations of sampling and estimating form the fundamental building blocks of quantum algorithm development. Thus, as it was `announced <https://research.ibm.com/blog/qiskit-runtime-for-useful-quantum-computing>`__, two basic primitives were introduced, Sampler and Estimator, respectively, that implement these two operations:"
msgstr "La capacidad central de las computadoras cuánticas que las distingue de las computadoras clásicas es su capacidad para generar distribuciones de probabilidad no clásicas en sus salidas. Las operaciones nativas que uno puede hacer con una distribución de probabilidad es tomar muestras de ella o estimar cantidades en ella. En consecuencia, estas operaciones de muestreo y estimación forman los bloques de construcción fundamentales del desarrollo de algoritmos cuánticos. Así, como fue `anunciado <https://research.ibm.com/blog/qiskit-runtime-for-useful-quantum-computing>`__, se introdujeron dos primitivas básicas, Sampler y Estimator, respectivamente, que implementan estas dos operaciones:"

#: ../../migration/01_migration_guide_0.5.rst:36
msgid "Sampler class calculates probabilities or quasi-probabilities of bitstrings from quantum circuits. The base class is `qiskit.primitives.BaseSampler <https://qiskit.org/documentation/stubs/qiskit.primitives.BaseSampler.html>`__."
msgstr "La clase Sampler calcula probabilidades o cuasi-probabilidades de cadenas de bits de circuitos cuánticos. La clase base es `qiskit.primitives.BaseSampler <https://qiskit.org/documentation/stubs/qiskit.primitives.BaseSampler.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:39
msgid "Estimator class estimates expectation values of quantum circuits and observables. The base class is `qiskit.primitives.BaseEstimator <https://qiskit.org/documentation/stubs/qiskit.primitives.BaseEstimator.html>`__."
msgstr "La clase Estimator estima los valores esperados de circuitos cuánticos y observables. La clase base es `qiskit.primitives.BaseEstimator <https://qiskit.org/documentation/stubs/qiskit.primitives.BaseEstimator.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:43
msgid "Qiskit Terra provides core interfaces and two implementations:"
msgstr "Qiskit Terra proporciona interfaces centrales y dos implementaciones:"

#: ../../migration/01_migration_guide_0.5.rst:45
msgid "The reference implementation that is statevector based. This implementation does require a backend or a simulator, it relies on the classes from the `quantum_info <https://qiskit.org/documentation/apidoc/quantum_info.html>`__ package."
msgstr "La implementación de referencia que está basada en el vector de estado. Esta implementación requiere un backend o un simulador, depende de las clases del paquete `quantum_info <https://qiskit.org/documentation/apidoc/quantum_info.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:50
msgid "The backend based primitives are to support provider/backends that do not support primitives directly. This implementation requires an instance of a backend to be passed to a primitive."
msgstr "Las primitivas basadas en backend son para soportar proveedores/backends que no admiten primitivas directamente. Esta implementación requiere que se pase una instancia de un backend a una primitiva."

#: ../../migration/01_migration_guide_0.5.rst:54
msgid "More information on the Qiskit Terra primitives can be found in the `documentation <https://qiskit.org/documentation/apidoc/primitives.html>`__."
msgstr "Se puede encontrar más información sobre las primitivas de Qiskit Terra en la `documentación <https://qiskit.org/documentation/apidoc/primitives.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:57
msgid "It is worth mentioning other implementations as well:"
msgstr "Vale la pena mencionar otras implementaciones también:"

#: ../../migration/01_migration_guide_0.5.rst:59
msgid "Aer primitives should be used for Aer simulator. They extend corresponding interfaces from Terra and can be used in the same way as primitives from Terra. See `documentation <https://qiskit.org/documentation/apidoc/aer_primitives.html>`__ for more information."
msgstr "Las primitivas Aer deben usarse para el simulador Aer. Extienden las interfaces correspondientes de Terra y se pueden usar de la misma manera que las primitivas de Terra. Consulta la `documentación <https://qiskit.org/documentation/apidoc/aer_primitives.html>`__ para obtener más información."

#: ../../migration/01_migration_guide_0.5.rst:64
msgid "The runtime primitives to be used with IBM devices. This is an implementation that is focused on cloud computing on actual hardware. See `here <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/apidocs/runtime_service.html>`__."
msgstr "Las primitivas de runtime a usar con los dispositivos de IBM. Esta es una implementación que se centra en la computación en la nube en hardware real. Consulta `aquí <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/apidocs/runtime_service.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:69
msgid "Along with the primitives Terra has some primitive-like algorithms that are highly useful in QML and used by the new 0.5 functions:"
msgstr "Junto con las primitivas, Terra tiene algunos algoritmos de tipo primitivo que son muy útiles en QML y utilizados por las nuevas funciones en 0.5:"

#: ../../migration/01_migration_guide_0.5.rst:72
msgid "Algorithms to calculate the gradient of a quantum circuit. For each core primitive there’s a corresponding base interface that defines quantum circuit gradient. The documentation on gradients is `here <https://qiskit.org/documentation/stubs/qiskit.algorithms.gradients.html>`__."
msgstr "Algoritmos para calcular el gradiente de un circuito cuántico. Para cada núcleo primitivo hay una interfaz base correspondiente que define el gradiente del circuito cuántico. La documentación sobre gradientes está `aquí <https://qiskit.org/documentation/stubs/qiskit.algorithms.gradients.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:76
msgid "Algorithms that compute the fidelity or “closeness” of pairs of quantum states. Currently, only one implementation is available that requires a sampler primitive and is based on the compute-uncompute method. The documentation is `here <https://qiskit.org/documentation/stubs/qiskit.algorithms.state_fidelities.html>`__."
msgstr "Algoritmos que calculan la fidelidad o “cercanía” de pares de estados cuánticos. Actualmente, solo hay disponible una implementación que requiere una primitiva sampler y se basa en el método de computación-descomputación. La documentación está `aquí <https://qiskit.org/documentation/stubs/qiskit.algorithms.state_fidelities.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:82
msgid "Both two new algorithms are very similar to the core primitives, they share the same method signatures, so they may be called as high level primitives despite they are not in the primitives package."
msgstr "Los dos nuevos algoritmos son muy similares a las primitivas centrales, comparten las mismas firmas de método, por lo que pueden llamarse primitivas de alto nivel a pesar de que no están en el paquete de primitivas."

#: ../../migration/01_migration_guide_0.5.rst:89
msgid "The previous implementation consisted of a single class `QuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.QuantumKernel.html>`__ that did everything:"
msgstr "La implementación anterior consistía en una sola clase `QuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.QuantumKernel.html>`__ que hacía todo:"

#: ../../migration/01_migration_guide_0.5.rst:93
msgid "Constructed circuits"
msgstr "Circuitos construidos"

#: ../../migration/01_migration_guide_0.5.rst:94
msgid "Executed circuits and evaluated overlap between circuits"
msgstr "Circuitos ejecutados y traslape evaluado entre circuitos"

#: ../../migration/01_migration_guide_0.5.rst:95
msgid "Provided training parameters"
msgstr "Parámetros de entrenamiento proporcionados"

#: ../../migration/01_migration_guide_0.5.rst:96
msgid "Kept track of the values assigned to the parameters."
msgstr "Seguimiento de los valores asignados a los parámetros."

#: ../../migration/01_migration_guide_0.5.rst:98
msgid "The implementation became sophisticated and inflexible and adding support of the new primitives could be tricky. To address the issues, a new flexible and extendable design of quantum kernels was introduced. The goals of the new design are:"
msgstr "La implementación se volvió sofisticada e inflexible y agregar soporte para las nuevas primitivas podría ser complicado. Para abordar los problemas, se introdujo un nuevo diseño flexible y extensible de kernels cuánticos. Los objetivos del nuevo diseño son:"

#: ../../migration/01_migration_guide_0.5.rst:103
msgid "Migrate to the primitives and leverage the fidelity algorithm. Now users may plug in their own implementations of fidelity calculations."
msgstr "Migrar a las primitivas y aprovechar el algoritmo de fidelidad. Ahora los usuarios pueden conectar sus propias implementaciones de cálculos de fidelidad."

#: ../../migration/01_migration_guide_0.5.rst:105
msgid "Extract trainability feature to a dedicated class."
msgstr "Extraer la característica de entrenabilidad a una clase dedicada."

#: ../../migration/01_migration_guide_0.5.rst:106
msgid "Introduce a base class that can be extended by other kernel implementations."
msgstr "Introducir una clase base que puede ser extendida por otras implementaciones de kernel."

#: ../../migration/01_migration_guide_0.5.rst:109
msgid "The new design of quantum kernel is shown on the next diagram."
msgstr "El nuevo diseño del kernel cuántico se muestra en el siguiente diagrama."

#: ../../migration/01_migration_guide_0.5.rst:-1
msgid "Quantum Kernel Diagram"
msgstr "Diagrama de Kernel Cuántico"

#: ../../migration/01_migration_guide_0.5.rst:116
msgid "The new kernels expose the same interface and the same parameters except the ``quantum_instance`` parameter. This parameter does not have a direct replacement and instead the ``fidelity`` parameter must be used. The backend handling/selection, which was previously done using the ``quantum_instance``, is now taken care of via the Sampler primitive given to the ``fidelity``."
msgstr "Los nuevos kernels exponen la misma interfaz y los mismos parámetros, excepto el parámetro ``quantum_instance``. Este parámetro no tiene un reemplazo directo y en su lugar se debe usar el parámetro ``fidelity``. El manejo/selección del backend, que anteriormente se realizaba con ``quantum_instance``, ahora se realiza a través de la primitiva Sampler asignada a la ``fidelity``."

#: ../../migration/01_migration_guide_0.5.rst:123
msgid "A new hierarchy shown on the diagram introduces:"
msgstr "Una nueva jerarquía que se muestra en el diagrama introduce:"

#: ../../migration/01_migration_guide_0.5.rst:125
msgid "A base and abstract class `BaseKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.BaseKernel.html>`__ is introduced. All concrete implementation must inherit this class."
msgstr "Se introduce una clase base y abstracta `BaseKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.BaseKernel.html>`__. Toda implementación concreta debe heredar de esta clase."

#: ../../migration/01_migration_guide_0.5.rst:128
msgid "A fidelity based quantum kernel `FidelityQuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel.html>`__ is added. This is a direct **replacement** of the previous quantum kernel implementation. The difference is that the new class takes a fidelity instance to estimate overlaps and construct kernel matrix."
msgstr "Se agrega un kernel cuántico basado en la fidelidad `FidelityQuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.FidelityQuantumKernel.html>`__. Este es un **reemplazo** directo de la implementación anterior del kernel cuántico. La diferencia es que la nueva clase toma una instancia de fidelidad para estimar las superposiciones y construir la matriz del kernel."

#: ../../migration/01_migration_guide_0.5.rst:133
msgid "A new abstract class `TrainableKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.TrainableKernel.html>`__ is introduced to generalize ability to train quantum kernels."
msgstr "Se introduce una nueva clase abstracta `TrainableKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.TrainableKernel.html>`__ para generalizar la capacidad de entrenar kernels cuánticos."

#: ../../migration/01_migration_guide_0.5.rst:136
msgid "A fidelity-based trainable quantum kernel `TrainableFidelityQuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.html>`__ is introduced. This is a **replacement** of the previous quantum kernel if a trainable kernel is required. The trainer `QuantumKernelTrainer <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.alogrithms.QuantumKernelTrainer.html>`__ now accepts both quantum kernel implementations, the new one and the previous one."
msgstr "Se presenta un kernel cuántico entrenable basado en la fidelidad `TrainableFidelityQuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.TrainableFidelityQuantumKernel.html>`__. Este es un **reemplazo** del kernel cuántico anterior si se requiere un kernel entrenable. El entrenador `QuantumKernelTrainer <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.alogrithms.QuantumKernelTrainer.html>`__ ahora acepta implementaciones de kernel cuántico, la nueva y la anterior."

#: ../../migration/01_migration_guide_0.5.rst:144
msgid "For convenience, the previous quantum kernel implementation, `QuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.QuantumKernel.html>`__, now extends both new abstract classes and thus it is compatible with the new introduced interfaces. This implementation is now **pending deprecation**, will be deprecated in a future release and subsequently removed after that. New, primitive-based quantum kernels should be used instead."
msgstr "Por conveniencia, la implementación anterior del kernel cuántico, `QuantumKernel <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.kernels.QuantumKernel.html>`__, ahora extiende ambas clases abstractas nuevas y, por lo tanto, es compatible con las nuevas interfaces introducidas. Esta implementación ahora está **pendiente de obsolescencia**, quedará obsoleta en una versión futura y posteriormente se eliminará después de eso. En su lugar, se deben usar los nuevos kernels cuánticos basados en primitivas."

#: ../../migration/01_migration_guide_0.5.rst:152
msgid "The existing algorithms such as `QSVC <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QSVC.html>`__, `QSVR <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QSVR.html>`__ and other kernel-based algorithms are updated and work with both implementations."
msgstr "Los algoritmos existentes como `QSVC <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QSVC.html>`__, `QSVR <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QSVR.html>`__ y otros algoritmos basados en kernel están actualizados y funcionan con ambas implementaciones."

#: ../../migration/01_migration_guide_0.5.rst:158
msgid "For example a QSVM classifier can be trained as follows."
msgstr "Por ejemplo, un clasificador QSVM se puede entrenar de la siguiente manera."

#: ../../migration/01_migration_guide_0.5.rst:161
msgid "Create a dataset"
msgstr "Crear un conjunto de datos"

#: ../../migration/01_migration_guide_0.5.rst:163
msgid "Fixing randomization."
msgstr "Fija la aleatorización."

#: ../../migration/01_migration_guide_0.5.rst:171
msgid "Generate a simple dataset using scikit-learn."
msgstr "Genera un conjunto de datos simple usando scikit-learn."

#: ../../migration/01_migration_guide_0.5.rst:186
msgid "Previous implementation of quantum kernel"
msgstr "Implementación previa del kernel cuántico"

#: ../../migration/01_migration_guide_0.5.rst:188
msgid "In the previous implementation we start from creating an instance of ``QuantumInstance``. This class defines where our quantum circuits are executed. In this case we wrap a statevector simulator in the quantum instance."
msgstr "En la implementación anterior comenzamos creando una instancia de ``QuantumInstance``. Esta clase define dónde se ejecutan nuestros circuitos cuánticos. En este caso encapsulamos un simulador de vector de estado en la instancia cuántica."

#: ../../migration/01_migration_guide_0.5.rst:205
msgid "Then create a quantum kernel."
msgstr "Luego crea un núcleo cuántico."

#: ../../migration/01_migration_guide_0.5.rst:216
msgid "And finally we fit an SVM classifier."
msgstr "Y finalmente ajustamos un clasificador SVM."

#: ../../migration/01_migration_guide_0.5.rst:236
msgid "New implementation of quantum kernel"
msgstr "Nueva implementación del kernel cuántico"

#: ../../migration/01_migration_guide_0.5.rst:238
msgid "In the new implementation we start from creating a Fidelity instance. Fidelity is optional and quantum kernel will create it automatically if none is passed. But here, we create it manually for illustrative purposes. To create a fidelity instance we pass a sampler. The sampler is the reference implementation and defines where our quantum circuits are executed. You may create a sampler instance from `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ to leverage Qiskit runtime services."
msgstr "En la nueva implementación, comenzamos con la creación de una instancia de Fidelity. La fidelidad es opcional y el kernel cuántico la creará automáticamente si no se pasa ninguna. Pero aquí, la creamos manualmente con fines ilustrativos. Para crear una instancia de fidelidad pasamos un sampler. El sampler es la implementación de referencia y define dónde se ejecutan nuestros circuitos cuánticos. Puedes crear una instancia de sampler desde `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ para aprovechar los servicios de ejecución de Qiskit."

#: ../../migration/01_migration_guide_0.5.rst:254
msgid "Next, we create a new quantum kernel with the fidelity instance."
msgstr "A continuación, creamos un nuevo kernel cuántico con la instancia de fidelity."

#: ../../migration/01_migration_guide_0.5.rst:263
msgid "Then we fit an SVM classifier the same way as before."
msgstr "Luego ajustamos un clasificador SVM de la misma manera que antes."

#: ../../migration/01_migration_guide_0.5.rst:285
msgid "Changes in the quantum neural networks are not as dramatic as in quantum kernels. In addition, and as a replacement to the existing neural networks, two new networks are introduced. The new networks introduced are `SamplerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ and `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ which are detailed below and are replacements for the pre-existing `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__ and `TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__ which are now pending deprecated."
msgstr "Los cambios en las redes neuronales cuánticas no son tan dramáticos como en los kernels cuánticos. Además, y como sustitución de las redes neuronales existentes, se introducen dos nuevas redes. Las nuevas redes introducidas son `SamplerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ y `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ que se detallan a continuación y reemplazan a las preexistentes `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__ y `TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__ que ahora están pendientes de ser obsoletas."

#: ../../migration/01_migration_guide_0.5.rst:300
msgid "SamplerQNN"
msgstr "SamplerQNN"

#: ../../migration/01_migration_guide_0.5.rst:302
msgid "A new `Sampler Quantum Neural Network <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ leverages the sampler primitive, sampler gradients and is a **direct replacement** of `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__."
msgstr "Una nueva `Red Neuronal Cuántica de Sampler <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ aprovecha la primitiva sampler, los gradientes de sampler y es un **reemplazo directo** de `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:308
msgid "The new `SamplerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ exposes a similar interface to the existing `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, with a few differences. One is the ``quantum_instance`` parameter. This parameter does not have a direct replacement, and instead the ``sampler`` parameter must be used. The ``gradient`` parameter keeps the same name as in the `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__ implementation, but it no longer accepts Opflow gradient classes as inputs; instead, this parameter expects an (optionally custom) primitive gradient. The ``sampling`` option has been removed for the time being, as this information is not currently exposed by the sampler, and might correspond to future lower-level primitives."
msgstr "La nueva `SamplerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.SamplerQNN.html>`__ expone una interfaz similar a la existente `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, con algunas diferencias. Una es el parámetro ``quantum_instance``. Este parámetro no tiene un reemplazo directo, y en su lugar se debe usar el parámetro ``sampler``. El parámetro ``gradient`` mantiene el mismo nombre que en la implementación `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, pero ya no acepta clases de gradiente Opflow como entradas; en cambio, este parámetro espera un gradiente primitivo (opcionalmente personalizado). La opción ``sampling`` se ha eliminado por el momento, ya que esta información no está expuesta actualmente por el sampler y podría corresponder a futuras primitivas de nivel inferior."

#: ../../migration/01_migration_guide_0.5.rst:323
msgid "The existing training algorithms such as `VQC <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.VQC.html>`__ that were based on `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, are updated to accept both implementations. The implementation of `NeuralNetworkClassifier <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.html>`__ has not changed."
msgstr "Los algoritmos de entrenamiento existentes como `VQC <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.VQC.html>`__ que se basaron en `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__, son actualizados para aceptar ambas implementaciones. La implementación de `NeuralNetworkClassifier <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.html>`__ no ha cambiado."

#: ../../migration/01_migration_guide_0.5.rst:331
msgid "The existing `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__ is now **pending deprecation**, will be deprecated in a future release and subsequently removed after that."
msgstr "El `CircuitQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.CircuitQNN.html>`__ existente ahora está **pendiente de obsolescencia**, quedará obsoleto en una versión futura y subsecuentemente eliminado después de eso."

#: ../../migration/01_migration_guide_0.5.rst:336
msgid "We’ll show how to train a variational quantum classifier using both networks. For this purposes we re-use the dataset generated for the quantum kernel. For both quantum neural networks we still have to construct a feature map, an ansatz and combine them into a single quantum circuit."
msgstr "Mostraremos cómo entrenar un clasificador cuántico variacional utilizando ambas redes. Para estos fines, reutilizamos el conjunto de datos generado para el kernel cuántico. Para ambas redes neuronales cuánticas todavía tenemos que construir un mapa de características, un ansatz y combinarlos en un solo circuito cuántico."

#: ../../migration/01_migration_guide_0.5.rst:355
msgid "We need an interpret function as well. We define our usual parity function that maps bitstrings either to :math:`0` or :math:`1`."
msgstr "Necesitamos una función de interpretación también. Definimos nuestra función de paridad habitual que asigna cadenas de bits a :math:`0` o :math:`1`."

#: ../../migration/01_migration_guide_0.5.rst:363
#: ../../migration/01_migration_guide_0.5.rst:540
msgid "We fix the initial point to get the same results from both networks."
msgstr "Fijamos el punto inicial para obtener los mismos resultados de ambas redes."

#: ../../migration/01_migration_guide_0.5.rst:370
msgid "Building a classifier using ``CircuitQNN``"
msgstr "Construcción de un clasificador usando ``CircuitQNN``"

#: ../../migration/01_migration_guide_0.5.rst:372
msgid "We create a ``CircuitQNN`` instance and re-use the quantum instance created for the quantum kernel."
msgstr "Creamos una instancia de ``CircuitQNN`` y reutilizamos la quantum instance creada para el kernel cuántico."

#: ../../migration/01_migration_guide_0.5.rst:389
msgid "Construct a classifier out of the network, train it and score it. We are not aiming for good results, so the number of iterations is set to a small number to reduce overall execution time."
msgstr "Construye un clasificador a partir de la red, entrénalo y puntúalo. No buscamos buenos resultados, por lo que el número de iteraciones se establece en un número pequeño para reducir el tiempo de ejecución total."

#: ../../migration/01_migration_guide_0.5.rst:418
msgid "Building a classifier using ``SamplerQNN``"
msgstr "Construcción de un clasificador usando ``SamplerQNN``"

#: ../../migration/01_migration_guide_0.5.rst:420
msgid "Instead of ``QuantumInstance`` create an instance of the reference ``Sampler``."
msgstr "En lugar de ``QuantumInstance``, crea una instancia de la referencia ``Sampler``."

#: ../../migration/01_migration_guide_0.5.rst:429
msgid "Now, we create a instance of ``SamplerQNN``. The difference with ``CircuitQNN`` is that we pass a sampler instead of a quantum instance."
msgstr "Ahora, creamos una instancia de ``SamplerQNN``. La diferencia con ``CircuitQNN`` es que pasamos un sampler en lugar de una quantum instance."

#: ../../migration/01_migration_guide_0.5.rst:445
msgid "Construct a classifier and fit it as usual. As ``neural_network`` we pass a created ``SamplerQNN`` and this is the only difference."
msgstr "Construye un clasificador y ajústalo como de costumbre. Como es una ``neural_network`` pasamos un ``SamplerQNN`` creado y esta es la única diferencia."

#: ../../migration/01_migration_guide_0.5.rst:469
msgid "Instead of constructing a quantum neural network manually, you may train ``VQC``. It takes either a quantum instance or a sampler, depending on what is passed it automatically constructs either ``CircuitQNN`` or ``SamplerQNN`` respectively."
msgstr "En lugar de construir una red neuronal cuántica manualmente, puedes entrenar un ``VQC``. Toma una quantum instance o un sampler, dependiendo de lo que se pase, construye automáticamente ``CircuitQNN`` o ``SamplerQNN`` respectivamente."

#: ../../migration/01_migration_guide_0.5.rst:475
msgid "EstimatorQNN"
msgstr "EstimatorQNN"

#: ../../migration/01_migration_guide_0.5.rst:477
msgid "A new `Estimator quantum neural network <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ leverages the estimator primitive, estimator gradients and is a **direct replacement** of `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__."
msgstr "Una nueva `red neuronal cuántica de Estimator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ aprovecha la primitiva estimator, los gradientes del estimator y es un **reemplazo directo** de `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__."

#: ../../migration/01_migration_guide_0.5.rst:483
msgid "The new `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ exposes a similar interface to the existing `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__, with a few differences. One is the ``quantum_instance`` parameter. This parameter does not have a direct replacement, and instead the ``estimator`` parameter must be used. The ``gradient`` parameter keeps the same name as in the `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__ implementation, but it no longer accepts Opflow gradient classes as inputs; instead, this parameter expects an (optionally custom) primitive gradient."
msgstr "La nueva `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ expone una interfaz similar a la existente `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__, con algunas diferencias. Una es el parámetro ``quantum_instance``. Este parámetro no tiene un reemplazo directo, y en su lugar se debe usar el parámetro ``estimator``. El parámetro ``gradient`` mantiene el mismo nombre que en la implementación `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__, pero ya no acepta clases de gradiente Opflow como entradas; en cambio, este parámetro espera un gradiente primitivo (opcionalmente personalizado)."

#: ../../migration/01_migration_guide_0.5.rst:496
msgid "The existing training algorithms such as `VQR <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.VQR.html>`__ that were based on the `TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__, are updated to accept both implementations. The implementation of `NeuralNetworkRegressor <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.html>`__ has not changed."
msgstr "Los algoritmos de entrenamiento existentes como `VQR <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.VQR.html>`__ que están basados en `TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__, son actualizados para aceptar ambas implementaciones. La implementación de `NeuralNetworkRegressor <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkRegressor.html>`__ no ha cambiado."

#: ../../migration/01_migration_guide_0.5.rst:504
msgid "The existing `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__ is now **pending deprecation**, will be deprecated in a future release and subsequently removed after that."
msgstr "El `OpflowQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.OpflowQNN.html>`__ existente ahora está **pendiente de obsolescencia**, quedará obsoleto en una versión futura y subsecuentemente eliminado después de eso."

#: ../../migration/01_migration_guide_0.5.rst:509
msgid "We’ll show how to train a variational quantum regressor using both networks. We start from generating a simple regression dataset."
msgstr "Mostraremos cómo entrenar un regresor cuántico variacional usando ambas redes. Comenzamos generando un conjunto de datos de regresión simple."

#: ../../migration/01_migration_guide_0.5.rst:522
msgid "We still have to construct a feature map, an ansatz and combine them into a single quantum circuit for both quantum neural networks."
msgstr "Todavía tenemos que construir un mapa de características, un ansatz y combinarlos en un solo circuito cuántico para ambas redes neuronales cuánticas."

#: ../../migration/01_migration_guide_0.5.rst:547
msgid "Building a regressor using ``OpflowQNN``"
msgstr "Construcción de un regresor usando ``OpflowQNN``"

#: ../../migration/01_migration_guide_0.5.rst:549
msgid "We create an ``OpflowQNN`` instance and re-use the quantum instance created for the quantum kernel."
msgstr "Creamos una instancia de ``OpflowQNN`` y reutilizamos la quantum instance creada para el kernel cuántico."

#: ../../migration/01_migration_guide_0.5.rst:568
msgid "Construct a regressor out of the network, train it and score it. In this case we use a gradient based optimizer, thus the network makes use of the gradient framework and due to nature of the dataset converges very quickly."
msgstr "Construye un regresor a partir de la red, entrénalo y puntúalo. En este caso, utilizamos un optimizador basado en gradientes, por lo que la red utiliza el framework de gradiente y, debido a la naturaleza del conjunto de datos, converge muy rápidamente."

#: ../../migration/01_migration_guide_0.5.rst:596
msgid "Building a regressor using ``EstimatorQNN``"
msgstr "Construcción de un regresor usando ``EstimatorQNN``"

#: ../../migration/01_migration_guide_0.5.rst:598
msgid "Create an instance of the reference Estimator. You may create an estimator instance from `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ to leverage Qiskit runtime services."
msgstr "Crea una instancia de Estimator de referencia. Puedes crear una instancia de estimator desde `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ para aprovechar los servicios de Qiskit runtime."

#: ../../migration/01_migration_guide_0.5.rst:609
msgid "Now, we create a instance of ``EstimatorQNN``. The network creates an observable as :math:`Z^{\\otimes n}`, where :math:`n` is the number of qubit, if it is not specified."
msgstr "Ahora, creamos una instancia de ``EstimatorQNN``. La red crea un observable como :math:`Z^{\\otimes n}`, donde :math:`n` es el número de qubits, si no se especifica."

#: ../../migration/01_migration_guide_0.5.rst:624
msgid "Construct a variational quantum regressor and fit it. In this case we use a gradient based optimizer, thus the network makes use of the `default estimator gradient <https://qiskit.org/documentation/stubs/qiskit.algorithms.gradients.ParamShiftEstimatorGradient.html>`__ that is created automatically."
msgstr "Construye un regresor cuántico variacional y ajústalo. En este caso, usamos un optimizador basado en gradientes, por lo que la red utiliza el `gradiente de estimator predeterminado <https://qiskit.org/documentation/stubs/qiskit.algorithms.gradients.ParamShiftEstimatorGradient.html>`__ que es creado automáticamente."

#: ../../migration/01_migration_guide_0.5.rst:652
msgid "Instead of constructing a quantum neural network manually, you may train ``VQR``. It takes either a quantum instance or an estimator, depending on what is passed it automatically constructs either ``TwoLayerQNN`` or ``EstimatorQNN`` respectively."
msgstr "En lugar de construir una red neuronal cuántica manualmente, puedes entrenar un ``VQR``. Toma una quantum instance o un estimator, dependiendo de lo que se pase, automáticamente construye ``TwoLayerQNN`` o ``EstimatorQNN`` respectivamente."

#: ../../migration/01_migration_guide_0.5.rst:660
msgid "A few other components, not mentioned explicitly above, are also deprecated or pending deprecation:"
msgstr "Algunos otros componentes, no mencionados explícitamente anteriormente, también están obsoletos o están pendientes de obsolescencia:"

#: ../../migration/01_migration_guide_0.5.rst:663
msgid "`TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__ is pending deprecation. Users should use `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ instead."
msgstr "`TwoLayerQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.TwoLayerQNN.html>`__ está pendiente de ser obsoleto. Los usuarios deben usar `EstimatorQNN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.neural_networks.EstimatorQNN.html>`__ en su lugar."

#: ../../migration/01_migration_guide_0.5.rst:667
msgid "The Distribution Learners package is deprecated fully. This package contains such classes as `DiscriminativeNetwork <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.html>`__, `GenerativeNetwork <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.html>`__, `NumPyDiscriminator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.html>`__, `PyTorchDiscriminator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.html>`__, `QuantumGenerator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QuantumGenerator.html>`__, `QGAN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QGAN.html>`__. Instead, please refer to the `new QGAN tutorial <../tutorials/04_torch_qgan.ipynb>`__. This tutorial introduces step-by-step how to build a PyTorch-based QGAN using quantum neural networks."
msgstr "El paquete Distribution Learners está totalmente obsoleto. Este paquete contiene clases como `DiscriminativeNetwork <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.DiscriminativeNetwork.html>`__, `GenerativeNetwork <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.GenerativeNetwork.html>`__, `NumPyDiscriminator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NumPyDiscriminator.html>`__, `PyTorchDiscriminator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.PyTorchDiscriminator.html>`__, `QuantumGenerator <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QuantumGenerator.html>`__, `QGAN <https://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.QGAN.html>`__. En su lugar, consulta el `nuevo tutorial de QGAN <../tutorials/04_torch_qgan.ipynb>`__. Este tutorial presenta paso a paso cómo construir una QGAN basada en PyTorch utilizando redes neuronales cuánticas."

#: ../../migration/01_migration_guide_0.5.rst:679
msgid "The Runtime package is deprecated. This package contains a client to Qiskit Programs that embed Qiskit Runtime in the algorithmic interfaces and facilitate usage of algorithms and scripts in the cloud. You should use `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ to leverage primitives and runtimes."
msgstr "El paquete Runtime está obsoleto. Este paquete contiene un cliente para los programas de Qiskit que integran Qiskit Runtime en las interfaces algorítmicas y facilitan el uso de algoritmos y scripts en la nube. Debes usar `QiskitRuntimeService <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html>`__ para aprovechar las primitivas y los runtimes."

