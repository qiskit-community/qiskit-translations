msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-08 17:14-0400\n"
"PO-Revision-Date: 2021-07-09 02:00\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: ta_IN\n"

#: ../../tutorials/03_quantum_kernel.ipynb:13
msgid "Run interactively in jupyter notebook."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "குவாண்டம் கர்னல் இயந்திர வழி கற்றல்"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "இயந்திர கற்றலின் பொதுவான பணி தரவுகளில் வடிவங்களைக் கண்டறிந்து படிப்பதாகும். பல தரவுத்தொகுப்புகளுக்கு, ஒரு கர்னல் செயல்பாட்டின் மூலம் தரவு புள்ளிகள் உயர் பரிமாண அம்ச இடத்தில் நன்கு புரிந்து கொள்ளப்படுகின்றன: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` என்பது கர்னல் செயல்பாடு ,:math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` பரிமாண உள்ளீடுகள் ,:math:`f` என்பது ஒரு வரைபடம் :math:`n`- பரிமாணத்திலிருந்து :math:`m` பரிமாண இடைவெளி மற்றும் :math:`\\langle a,b \\rangle` புள்ளி தயாரிப்பு குறிக்கிறது. வரையறுக்கப்பட்ட தரவைக் கருத்தில் கொள்ளும்போது, ​​ஒரு கர்னல் செயல்பாட்டை மேட்ரிக்ஸாகக் குறிப்பிடலாம் : :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "குவாண்டம் கர்னல் இயந்திர கற்றலில், ஒரு குவாண்டம் அம்ச வரைபடம் :math:`\\phi(\\vec{x})` ஒரு கிளாசிக்கல் அம்ச திசையன் வரைபடத்தை பயன்படுத்தப்படுகிறது :math:`\\vec{x}` ஒரு குவாண்டம் ஹில்பர்ட் இடத்திற்கு ,:math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, அதாவது :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. மேலும் விவரங்களுக்கு `குவாண்டம் மேம்படுத்தப்பட்ட அம்ச இடைவெளிகளுடன் மேற்பார்வையிடப்பட்ட கற்றல் <https://arxiv.org/pdf/1804.11326.pdf>`__ ஐப் பார்க்கவும்."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "இந்த நோட்புக்கில், ஒரு குவாண்டம் அம்ச வரைபடத்தைப் பயன்படுத்தி கர்னல் மேட்ரிக்ஸைக் கணக்கிட ``qiskit`` ஐப் பயன்படுத்துகிறோம், பின்னர் இந்த கர்னல் மேட்ரிக்ஸை ``scikit-learn`` வகைப்பாடு மற்றும் கிளஸ்டரிங் வழிமுறைகளில் பயன்படுத்துகிறோம்."

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "எங்கள் வகைப்பாடு எடுத்துக்காட்டுக்கு, `குவாண்டம் மேம்படுத்தப்பட்ட அம்ச இடைவெளிகளுடன் கற்றல் மேற்பார்வை <https://arxiv.org/pdf/1804.11326.pdf>`__, மற்றும் ``scikit-learn`` `ஆதரவு திசையன் இயந்திரம் <https://scikit-learn.org/stable/modules/svm.html>`__ வகைப்பாடு (``svc``) வழிமுறை ஆகியவற்றைக் கொண்டு விவரிக்கப்பட்டுள்ளபடி *ad hoc dataset* ஐ பயன்படுத்துவோம்."

#: ../../tutorials/03_quantum_kernel.ipynb:111
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "எங்கள் பயிற்சி மற்றும் சோதனை தரவுத்தொகுப்புகள் தயாராக இருப்பதால், `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`_ ஐப் பயன்படுத்தி கர்னல் மேட்ரிக்ஸைக் கணக்கிட ``QuantumKernel`` வகுப்பை அமைத்துள்ளோம், மற்றும் 1024 காட்சிகளைப் பயன்படுத்தி ``BasicAer`` ``qasm_simulator``."

#: ../../tutorials/03_quantum_kernel.ipynb:138
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "``scikit-learn`` ``svc`` வழிமுறை ஒரு `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ ஐ இரண்டு வழிகளில் வரையறுக்க அனுமதிக்கிறது: கர்னலை அழைக்கக்கூடிய செயல்பாடாக வழங்குவதன் மூலம் அல்லது கர்னல் மேட்ரிக்ஸை முன்கூட்டியே கணக்கிடுவதன் மூலம். ``Qiskit`` இல் ``QuantumKernel`` வகுப்பைப் பயன்படுத்தி இவற்றில் ஒன்றை நாம் செய்யலாம்."

#: ../../tutorials/03_quantum_kernel.ipynb:140
msgid "The following code gives the kernel as a callable function:"
msgstr "பின்வரும் குறியீடு கர்னலை அழைக்கக்கூடிய செயல்பாடாக வழங்குகிறது:"

#: ../../tutorials/03_quantum_kernel.ipynb:184
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "பின்வரும் குறியீடு பயிற்சி மற்றும் சோதனை கர்னல் மெட்ரிக்குகளை ``scikit-learn`` ``svc`` அல்காரிதத்திற்கு வழங்குவதற்கு முன் முன்வைத்து திட்டமிடுகிறது:"

#: ../../tutorials/03_quantum_kernel.ipynb:250
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "``Qiskit`` இல் ``sklearn svc`` வகுப்பை நீட்டிக்கும் ``qsvc`` வகுப்பும் உள்ளது, அவை பின்வருமாறு பயன்படுத்தப்படலாம்:"

#: ../../tutorials/03_quantum_kernel.ipynb:295
msgid "Clustering"
msgstr "கிளஸ்டரிங்"

#: ../../tutorials/03_quantum_kernel.ipynb:297
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "எங்கள் கிளஸ்டரிங் எடுத்துக்காட்டுக்கு, குவாண்டம் மேம்படுத்தப்பட்ட அம்ச இடைவெளிகளுடன் <https://arxiv.org/pdf/1804.11326.pdf>`__, மற்றும் ``scikit-learn-`` ``spectral`` க்ளஸ்டரிங் அல்காரிதம் கற்றுக்கொள்ளுங்கள்."

#: ../../tutorials/03_quantum_kernel.ipynb:299
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "தரவுத்தொகுப்பை இரண்டு வகுப்புகளுக்கு இடையில் ஒரு பெரிய இடைவெளியுடன் மீண்டும் உருவாக்குவோம், மேலும் க்ளஸ்டரிங் ஒரு மேற்பார்வை செய்யப்படாத இயந்திர கற்றல் பணியாக இருப்பதால், எங்களுக்கு ஒரு சோதனை மாதிரி தேவையில்லை."

#: ../../tutorials/03_quantum_kernel.ipynb:350
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "`ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, மற்றும் BasicAer ஐப் பயன்படுத்தி கர்னல் மேட்ரிக்ஸைக் கணக்கிட ``QuantumKernel`` வகுப்பை மீண்டும் அமைத்தோம். 1024 காட்சிகளைப் பயன்படுத்தி ``qasm_simulator``."

#: ../../tutorials/03_quantum_kernel.ipynb:377
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "ஸ்கிக்கிட்-லர் ஸ்பெக்ட்ரல் க்ளஸ்டரிங் அல்காரிதம் ஒரு [தனிப்பயன் கர்னலை] இரண்டு வழிகளில் வரையறுக்க அனுமதிக்கிறது: கர்னலை அழைக்கக்கூடிய செயல்பாடாக வழங்குவதன் மூலம் அல்லது கர்னல் மேட்ரிக்ஸை முன்கூட்டியே கணக்கிடுவதன் மூலம். Qiskit-டில் குவாண்டம் கர்னல் வகுப்பைப் பயன்படுத்தி, பிந்தையதை மட்டுமே பயன்படுத்த முடியும்."

#: ../../tutorials/03_quantum_kernel.ipynb:379
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:439
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` க்கு முன்பே வடிவமைக்கப்பட்ட கர்னல் மேட்ரிக்ஸைப் பயன்படுத்தக்கூடிய பிற வழிமுறைகள் உள்ளன, இங்கே சில:"

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:442
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:444
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:445
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"

