msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-29 18:01+0000\n"
"PO-Revision-Date: 2022-06-29 18:28\n"
"Last-Translator: \n"
"Language-Team: Italian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: it\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: it_IT\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "Questa pagina è stata generata da `docs/tutorials/03_quantum_kernel.ipynb`__."

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "Quantum Kernel Machine Learning"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "L'obiettivo generale del machine learning è quello di trovare e studiare pattern nei dati. Per molti dataset, i dati sono meglio interpretati in uno spazio delle feature di dimensione più alta rispetto a quello di partenza, raggiunto attraverso l'uso di una funzione kernel: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle`, dove :math:`k` è la funzione kernel, :math:`\\vec{x}_i, \\vec{x}_j` sono input a :math:`n` dimensioni, :math:`f` è una mappa da uno spazio :math:`n`-dimensionale ad uno spazio :math:`m`-dimensionale, e :math:`\\langle a, \\rangle` indica il prodotto scalare. Quando si considerano dati finiti, una funzione kernel può essere rappresentata come una matrice: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "Nel quantum kernel machine learning, si utilizza una feature map quantistica :math:`\\phi(\\vec{x})` per mappare un vettore classico :math:`\\vec{x}` in uno spazio di Hilbert quantistico, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, tale che :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. Per maggiori dettagli, si può fare riferimento a `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ ."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "In questo notebook usiamo ``qiskit`` per calcolare una matrice di kernel usando una feature map quantistica, poi utilizziamo questa matrice di kernel negli algoritmi di classificazione e di clustering in ``scikit-learn``."

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "Classificazione"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "Seguendo `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, nel nostro esempio di classificazione, utilizzeremo un *dataset ad hoc* e, come algoritmo di classificazione, useremo la `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ (``svc``) di ``scikit-learn``."

#: ../../tutorials/03_quantum_kernel.ipynb:142
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "Con i nostri dataset di train e test pronti, creiamo la classe ``QuantumKernel`` per calcolare la matrice di kernel usando la `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, ed il ``qasm_simulator`` di ``BasicAer``, utilizzando 1024 shots."

#: ../../tutorials/03_quantum_kernel.ipynb:169
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "L'algoritmo ``svc`` di ``scikit-learn`` ci permette di definire un `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in due modi: fornendo il kernel come una funzione richiamabile o calcolando in anticipo la matrice di kernel. Possiamo utilizzare indistintamente uno dei due metodi anche quando usiamo la classe ``QuantumKernel`` di ``qiskit``."

#: ../../tutorials/03_quantum_kernel.ipynb:171
msgid "The following code gives the kernel as a callable function:"
msgstr "Il seguente codice fornisce il kernel come funzione richiamabile:"

#: ../../tutorials/03_quantum_kernel.ipynb:220
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "Il seguente codice precalcola e mostra le matrici kernel realative ai dati di training e di test prima di fornirle all'algoritmo ``svc`` di ``scikit-learn``:"

#: ../../tutorials/03_quantum_kernel.ipynb:290
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "``qiskit`` contiene anche la classe ``qsvc`` che estende la classe ``sklearn svc`` e che può essere utilizzata come segue:"

#: ../../tutorials/03_quantum_kernel.ipynb:340
msgid "Clustering"
msgstr "Clustering"

#: ../../tutorials/03_quantum_kernel.ipynb:342
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "Seguendo `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, nel nostro esempio di clustering, utilizzeremo un *dataset ad hoc* e, l'algoritmo di clustering ``spectral`` di ``scikit-learn``."

#: ../../tutorials/03_quantum_kernel.ipynb:344
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "Creeremo il dataset con una separazione maggiore tra le due classi, e non avremo bisogno di un campione di test, in un quanto il clustering è un algoritmo di machine learning non supervisionato."

#: ../../tutorials/03_quantum_kernel.ipynb:414
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "Ancora una volta inizializziamo la classe ``QuantumKernel`` per calcolare una matrice di kernel usando una `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, ed il ``qasm_simulator`` di BasicAer con 1024 shots."

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "L'algoritmo di clustering spectral di scikit-learn ci permette di definire un [custom kernel] in due modi: fornendo il kernel come una funzione richiamabile, o calcolando in anticipo la matrice di kernel. Quando utilizziamo la classe QuantumKernel in Qiskit, possiamo utilizzare solo il secondo."

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "Il seguente codice pre-calcola e mostra le matrici di kernel prima di fornirle all'algoritmo di clustering spectral di scikit-learning, e prima di valutare i label utilizzando l'informazione reciproca normalizzata, dato che conosciamo a priori i label delle classi."

#: ../../tutorials/03_quantum_kernel.ipynb:508
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` fornisce anche altri algoritmi che possono utilizzare una matrice di kernel pre-calcolata, eccone alcuni:"

#: ../../tutorials/03_quantum_kernel.ipynb:510
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:511
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:512
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:513
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:514
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"

