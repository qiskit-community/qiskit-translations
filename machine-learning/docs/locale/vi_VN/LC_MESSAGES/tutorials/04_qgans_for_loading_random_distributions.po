msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-17 23:23+0000\n"
"PO-Revision-Date: 2022-02-18 00:25\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9634\n"
"Language: vi_VN\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "This page was generated from `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "Trang này được tạo từ `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "các qGAN để tải sự phân phối ngẫu nhiên"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr "Với mẫu dữ liệu :math:`k` chiều, chúng tôi sử dụng một Mạng Lượng Tử Đối Địch (qGAN) để tìm hiểu phân phối ngẫu nhiên cơ bản của dữ liệu và tải trực tiếp nó vào trạng thái lượng tử:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "với :math:`p_{\\theta}^{j}` miêu tả xác suất xảy ra của hệ cơ sở trạng thái :math:`\\big| j\\rangle`."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "Mục đích của việc đào tạo qGAN là để tạo một trạng thái :math:`\\big| g_{\\theta}\\rangle` trong đó :math:`p_{\\theta}^{j}`, với :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, miêu tả một hàm phân phối xác suất sát với sự phân phối của dữ liệu đào tạo nằm trong đó :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "Để có thêm chi tiết hãy tham khảo `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "Ví dụ về cách sử dụng một qGAN được đào tạo trong một ứng dụng, giá của các phát sinh tài chính, vui lòng xem hướng dẫn ` Quyền chọn (cổ phiếu): Định giá quyền chọn với các qGAN <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:58
msgid "Load the Training Data"
msgstr "Tải dữ liệu đào tạo"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:60
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "Đầu tiên, chúng ta cần tải các mẫu dữ liệu đào tạo :math:`k`- chiều (ở đây k=1)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:62
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "Tiếp theo, độ phân giải dữ liệu được đặt, tức các giá trị dữ liệu nhỏ nhất/lớn nhất và số lượng qubit được sử dụng để đại diện cho mỗi chiều dữ liệu."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:97
msgid "Initialize the qGAN"
msgstr "Khởi tạo qGAN"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:99
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, i.e., an ansatz, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr "Qgan bao gồm một bộ tạo lượng tử :math:`G_{\\theta}`, i.e., một ansatz, và một bộ phân loại tách biệt :math:`D_{\\phi}`, một mạng lưới neuron."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:101
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` ansatz that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "Để thi hành một bộ tạo lượng tử, chúng ta chọn ansatz có độ sâu \\ :math:`1` thực thi các phép quay :math:`R_Y` và các cổng :math:`CZ` gates với một trạng thái đầu vào đều liên tục. Cụ thể, cho :math:`k>1` tham số của bộ tạo cần được chọn một cách cẩn thận. Ví dụ như, độ sâu của mạch nên :math:`>1` vì mạch càng sâu thì cho phép biểu diễn những cấu trúc càng phức tạp."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:103
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ for more information."
msgstr "Bộ tách biệt cổ điển được sử dụng ở đây dựa trên việc thực hiện mạng neuron bằng cách sử dụng NumPy. Ngoài ra còn có một bộ tách biệt dựa trên PyTorch không được cài đặt mặc định khi cài đặt Qiskit - xem `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ để có thêm thông tin."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:105
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "Ở đây, cả hai mạng được cập nhật với thuật toán tối ưu hóa ADAM (ADAM là qGAN tối ưu hóa mặc định)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:169
msgid "Run the qGAN Training"
msgstr "Chạy đào tạo qGAN"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:171
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "Trong quá trình đào tạo các tham số của bộ tách biệt của bộ tạo được cập nhật một cách luân phiên dựa trên các hàm mất mát sau:"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:173
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:175
msgid "and"
msgstr "và"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:177
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:182
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr "với :math:`m` là kích cỡ của mẻ và :math:`g^l` miêu tả những mẫu dữ liệu được tạo bởi bộ tạo lượng tử."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:184
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr "Xin lưu ý rằng việc đào tạo, trong mục đích của notebook này, đã được giữ ngắn gọn hơn bằng cách lựa chọn điểm khởi đầu đã biết (``init_params``). Nếu không có thông tin như vậy trước thì sự đào tạo có thể mất một thời gian."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:260
msgid "Training Progress & Outcome"
msgstr "Tiến trình đào tạo & kết quả"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:262
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr "Bây giờ, chúng ta vẽ đồ thị sự tiến hóa của sự mất mát của bộ tạo và bộ tách biệt trong suốt quá trình đào tạo, cũng như sự tiến bộ trong entropy tương đối giữa các sự phân phối của nhóm được đào tạo và mục tiêu cuối cùng."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:264
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "Cuối cùng, chúng ta cũng so sánh hàm phân phối tích lũy (CDF) của phân phối được đào tạo với CDF của phân phối mục tiêu."

