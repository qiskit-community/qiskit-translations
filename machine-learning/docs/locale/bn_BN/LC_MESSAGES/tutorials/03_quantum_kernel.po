msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-07 03:44+0000\n"
"PO-Revision-Date: 2023-02-07 05:10\n"
"Last-Translator: \n"
"Language: bn_BN\n"
"Language-Team: Bengali Language\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "এই পেজটি `docs/tutorials/03_quantum_kernel.ipynb`__ থেকে তৈরি হয়েছে।"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "কোয়ান্টাম কার্নেল মেশিন লার্নিং"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "মেশিন লার্নিং এর কাজ হচ্ছে তথ্য ( ডেটা ) বিন্যাস করা। ডেটাসেটসমূহ খুব ভালোভাবে বিশ্লেষন করা যায় উচ্চ মাত্রার ফিচার স্পেস পর্যবেক্ষন করে, এইজন্য প্রয়োজন একটি কার্নেল ফাংশনঃ :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle`, যেখানে :math:`k` হচ্ছে কার্নেল ফাংশন, :math:`\\vec{x}_i, \\vec{x}_j` হচ্ছে :math:`n` মাত্রিক ইনপুট বা ডাইমেনশনাল ইনপুট, :math:`f` হচ্ছে একটি ম্যাপিং যা :math:`n` ডাইমেনশন থেকে :math:`m` ডাইমেনশন স্পেস এবং :math:`\\langle a,b \\rangle` হচ্ছে ডট গুণন। যখন কোন সসীম ডাটা হিসাব করা হয় তখন, কার্নেল ফাংশন কে রিপ্রেসেন্ট করা হয় : :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`এই ম্যাট্রিক্স দ্বারা।"

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "কার্নেল মেশিন লার্নিং এ ক্লাসিক্যাল ফিচার ভেক্টর :math:`\\vec{x}` কে কোয়ান্টাম হিলবার্ট স্পেস :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|` যেমন, :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}` এ ম্যাপিং করে গুছিয়ে নিতে একটি কোয়ান্টাম ফিচার ম্যাপ :math:`\\phi(\\vec{x})` ব্যবহৃত হয়। আরও জানতে `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ পেপারটি দেখুন।"

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "এই নোটবুকে আমরা কোয়ান্টাম ফিচার ম্যাপ ব্যবহার করে কার্নেল ম্যাটিক্স হিসাব করতে ``qiskit`` ব্যবহার করব। তারপরে এই কার্নেল ম্যাটিক্সটি ``scikit-learn` ক্লাসিফিকেশন ক্লাস্টারিং অ্যালোগরিদমে ব্যাবহার করব।"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "Classification"
msgstr "শ্রেণিবিভাগ (ক্লাসিফিকেশন)"

#: ../../tutorials/03_quantum_kernel.ipynb:57
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "এবার ক্লাসিফিকেশনের উদাহরনের জন্য আমরা `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__  এ উল্লেখিত *ad hoc dataset* এবং ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__  ক্লাসিফিকেশন (``svc``) অ্যালোগরিদমটি ব্যবহার করব।"

#: ../../tutorials/03_quantum_kernel.ipynb:144
msgid "With our training and testing datasets ready, we set up the ``FidelityQuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__. We use the reference implementation of the ``Sampler`` primitive and the ``ComputeUncompute`` fidelity that computes overlaps between states. These are the default values and if you don’t pass a ``Sampler`` or ``Fidelity`` instance, the same objects will be created automatically for you."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:169
msgid "The ``scikit-learn`` ``SVC`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``FidelityQuantumKernel`` class in ``qiskit``."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:171
msgid "The following code gives the kernel as a callable function:"
msgstr "নিম্নলিখিত কোডটি কার্নেলকে একটি কলযোগ্য ফাংশন হিসেবে দেয়।"

#: ../../tutorials/03_quantum_kernel.ipynb:220
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "নিচের কোডটি শিক্ষণ (ট্রেনিং) ডেটা আগেই হিসাব করে রাখে এবং ``scikit-learn`` ``svc`` অ্যালোগরিদমে পাঠিয়ে দেয়ার আগে টেস্টিং কার্নেল ম্যাট্রিক্সগুলোকে স্পথাপন করে।"

#: ../../tutorials/03_quantum_kernel.ipynb:290
msgid "Qiskit Machine Learning also contains the ``QSVC`` class that extends the ``SVC`` class from scikit-learn, that can be used as follows:"
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:340
msgid "Clustering"
msgstr "ক্লাস্টারিং"

#: ../../tutorials/03_quantum_kernel.ipynb:342
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "ক্লাস্টারিং উদাহরনের জন্য আমরা আবার পূর্বের অনুরূপ `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ এবং ``scikit-learn`` ``spectral`` ক্লাস্টারিং অ্যালোগরিদমের মধ্যে *ad hoc dataset* ব্যবহার করব।"

#: ../../tutorials/03_quantum_kernel.ipynb:344
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "আমরা দুটি ক্লাসের ভেতর বিশাল গ্যাপ দিয়ে পুনরায় ডেটাসেটটি সৃষ্টি করব। যেহেতু ক্লাস্টারিং হল এক প্রকার আনসুপারভাইজড মেশিন লার্নিং কাজ, কাজেই আমাদের কোনো টেস্ট স্যাম্পল প্রয়োজন নেই।"

#: ../../tutorials/03_quantum_kernel.ipynb:414
msgid "We again set up the ``FidelityQuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the default values this time."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:437
msgid "The scikit-learn spectral clustering algorithm allows us to define a custom kernel in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the ``FidelityQuantumKernel`` class in Qiskit Machine Learning, we can only use the latter."
msgstr ""

#: ../../tutorials/03_quantum_kernel.ipynb:439
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "নিম্নলিখিত কোডটি ট্রেইনিং ডাটা আগেই হিসাব করে রাখে এবং scikit-learn স্পেক্ট্রাল অ্যালোগরিদমে পাঠিয়ে দেয়ার আগে এবং যেহেতু আমরা আগে থেকেই ক্লাস লেবেলগুলো জানি, তাই এই লেবেলগুলোকে নরমালাইজড মিউচুয়াল ইনফরমেশন (normalized_mutual_info_score) স্কোর করেই তারপর টেস্টিং কার্নেল ম্যাট্রিক্সগুলোকে স্পথাপন করে। "

#: ../../tutorials/03_quantum_kernel.ipynb:504
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` এর অন্যান্য অ্যালোগরিদমসমূহ আছে যেগুলো কার্নেল ম্যাট্রিক্স আগেভাগে হিসাব করার কাজে ব্যবহৃত হয়। তন্মধ্যে কিছুসংখ্যক নিম্নরুপ,"

#: ../../tutorials/03_quantum_kernel.ipynb:506
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__ "

#: ../../tutorials/03_quantum_kernel.ipynb:507
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__ "

#: ../../tutorials/03_quantum_kernel.ipynb:508
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__ "

#: ../../tutorials/03_quantum_kernel.ipynb:509
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__ "

#: ../../tutorials/03_quantum_kernel.ipynb:510
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__ "

