msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-08 23:29+0000\n"
"PO-Revision-Date: 2022-11-08 23:44\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/index.po\n"
"X-Crowdin-File-ID: 9524\n"
"Language: ko_KR\n"

#: ../../index.rst:6 ../../index.rst:71
msgid "Overview"
msgstr "개요"

#: ../../index.rst:71
msgid "Getting Started"
msgstr "시작하기"

#: ../../index.rst:71
msgid "Migration Guide"
msgstr ""

#: ../../index.rst:71
msgid "Tutorials"
msgstr "튜토리얼"

#: ../../index.rst:71
msgid "API Reference"
msgstr "API 참조"

#: ../../index.rst:71
msgid "Release Notes"
msgstr "릴리스 노트"

#: ../../index.rst:71
msgid "GitHub"
msgstr "깃허브"

#: ../../index.rst:3
msgid "Qiskit Machine Learning overview"
msgstr "Qiskit 머신 러닝 개요"

#: ../../index.rst:8
msgid "Qiskit Machine Learning introduces fundamental computational building blocks - such as Quantum Kernels and Quantum Neural Networks - used in different applications, including classification and regression. On the one hand, this design is very easy to use and allows users to rapidly prototype a first model without deep quantum computing knowledge. On the other hand, Qiskit Machine Learning is very flexible, and users can easily extend it to support cutting-edge quantum machine learning research."
msgstr "Qiskit Machine Learning은 분류 및 회귀를 포함한 다양한 애플리케이션에서 사용되는 양자 커널 및 양자 신경망과 같은 기본적인 컴퓨터의 구성 요소를 지니고 있다. 다른 한 편으로, 이 패키지는 사용하기가 매우 쉬우며 사용자가 전문적인 양자 컴퓨팅 지식 없이도 첫 번째 모델을 신속하게 프로토타입화할 수 있도록 해준다. 또한, Qiskit Machine Learning은 매우 유연하며, 사용자들이 이를 쉽게 확장하여 최첨단 양자 머신러닝 연구에 사용할 수 있도록 한다."

#: ../../index.rst:14
msgid "Qiskit Machine Learning provides the :class:`~qiskit_machine_learning.kernels.FidelityQuantumKernel` class class that makes use of the :class:`~qiskit.algorithms.state_fidelities.BaseStateFidelity` algorithm introduced in Qiskit and can be easily used to directly compute kernel matrices for given datasets or can be passed to a Quantum Support Vector Classifier (:class:`~qiskit_machine_learning.algorithms.QSVC`) or Quantum Support Vector Regressor (:class:`~qiskit_machine_learning.algorithms.QSVR`) to quickly start solving classification or regression problems. It also can be used with many other existing kernel-based machine learning algorithms from established classical frameworks."
msgstr ""

#: ../../index.rst:24
msgid "Qiskit Machine Learning defines a generic interface for neural networks that is implemented by different quantum neural networks. Two core implementations are readily provided, such as the :class:`~qiskit_machine_learning.neural_networks.EstimatorQNN` and the :class:`~qiskit_machine_learning.neural_networks.SamplerQNN`. The :class:`~qiskit_machine_learning.neural_networks.EstimatorQNN` leverages the :class:`~qiskit.primitives.BaseEstimator` primitive from Qiskit and allows users to combine parametrized quantum circuits with quantum mechanical observables. The circuits can be constructed using, for example, building blocks from Qiskit's circuit library, and the QNN's output is given by the expected value of the observable. The :class:`~qiskit_machine_learning.neural_networks.SamplerQNN` leverages another primitive introduced in Qiskit, the :class:`~qiskit.primitives.BaseSampler` primitive. This neural network translates quasi-probabilities of bitstrings estimated by the primitive into a desired output. This translation step can be used to interpret a given bitstring in a particular context, e.g. translating it into a set of classes."
msgstr ""

#: ../../index.rst:39
msgid "The neural networks include the functionality to evaluate them for a given input as well as to compute the corresponding gradients, which is important for efficient training. To train and use neural networks, Qiskit Machine Learning provides a variety of learning algorithms such as the :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` and :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor`. Both take a QNN as input and then use it in a classification or regression context. To allow an easy start, two convenience implementations are provided - the Variational Quantum Classifier (:class:`~qiskit_machine_learning.algorithms.VQC`) as well as the Variational Quantum Regressor (:class:`~qiskit_machine_learning.algorithms.VQR`). Both take just a feature map and an ansatz and construct the underlying QNN automatically."
msgstr "신경망은 주어진 입력에 대해 평가함과 동시에 입력의 그래디언트를 계산하는 기능이 포함되어 있으며 이것은 효율적인 학습에 중요하다. 신경망을 학습하고 사용하기 위해 Qiskit Machine Learning은 :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` 및 :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor` 와 같은 다양한 학습 알고리즘을 제공한다. 두가지 모두 QNN을 입력으로 받은 다음 분류 또는 회귀 목적으로 사용한다. 사용자가 쉽고 빠르게 시작할 수 있도록 Variational Quantum Classifier(:class:`~qiskit_machine_learning.algorithms.VQC` )와 Variational Quantum Regressor(:class:`~qiskit_machine_learning.algorithms.VQR` )의 두 가지 기능이 구현되어 편리하게 제공된다. 두 기능 모두 특성 맵과 ansatz만을 사용하며 기본적인 QNN을 자동으로 구성한다."

#: ../../index.rst:50
msgid "In addition to the models provided directly in Qiskit Machine Learning, it has the :class:`~qiskit_machine_learning.connectors.TorchConnector`, which allows users to integrate all of our quantum neural networks directly into the `PyTorch <https://pytorch.org>`__ open source machine learning library. Thanks to Qiskit's gradient algorithms, this includes automatic differentiation - the overall gradients computed by `PyTorch <https://pytorch.org>`__ during the backpropagation take into account quantum neural networks, too. The flexible design also allows the building of connectors to other packages in the future."
msgstr ""

#: ../../index.rst:63
msgid "Next Steps"
msgstr "다음 단계들"

#: ../../index.rst:65
msgid "`Getting started <getting_started.html>`_"
msgstr "`시작하기 <getting_started.html>`_"

#: ../../index.rst:67
msgid "`Migration Guide <migration/index.html>`_"
msgstr ""

#: ../../index.rst:69
msgid "`Tutorials <tutorials/index.html>`_"
msgstr "`튜토리얼 <tutorials/index.html>`_"

