msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-22 17:47+0000\n"
"PO-Revision-Date: 2021-07-23 21:16\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/04_qgans_for_loading_random_distributions.po\n"
"X-Crowdin-File-ID: 9634\n"
"Language: ko_KR\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "This page was generated from `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/04_qgans_for_loading_random_distributions.ipynb`__ 에서 생성되었다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:9
msgid "qGANs for Loading Random Distributions"
msgstr "무작위 분포를 로드하기 위한 qGAN"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:11
msgid "Given :math:`k`-dimensional data samples, we employ a quantum Generative Adversarial Network (qGAN) to learn the data’s underlying random distribution and to load it directly into a quantum state:"
msgstr ":math:`k` 차원 데이터 샘플을 고려할 때, 우리는 양자 생성적 적대 신경망 (quantum Generative Adversarial Network) (qGAN) 를 골라 데이터의 근본적인 무작위 분포를 학습하고 이를 양자 상태로 직접 로드한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:13
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1} \\sqrt{p_{\\theta}^{j}}\\big| j \\rangle\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:15
msgid "where :math:`p_{\\theta}^{j}` describe the occurrence probabilities of the basis states :math:`\\big| j\\rangle`."
msgstr "여기서 :math:`p_{\\theta}^{j}` 는 기저 상태의 발생 확률 :math:`\\big| j\\rangle` 을 설명한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:17
msgid "The aim of the qGAN training is to generate a state :math:`\\big| g_{\\theta}\\rangle` where :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, describe a probability distribution that is close to the distribution underlying the training data :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}`."
msgstr "qGAN 학습의 목표는 학습 데이터 :math:`X=\\left\\{x^0, \\ldots, x^{k-1} \\right\\}` 와 비슷한 확률분포 :math:`p_{\\theta}^{j}` 를 서술하는 :math:`\\big| g_{\\theta}\\rangle` 을 생성하는 것이다. 이 때 , :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}` 이다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:19
msgid "For further details please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019]."
msgstr "자세한 사항은 `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions <https://arxiv.org/abs/1904.00043>`__ *Zoufal, Lucchi, Woerner* [2019] 을 참조하라."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:21
msgid "For an example of how to use a trained qGAN in an application, the pricing of financial derivatives, please see the `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ tutorial."
msgstr "학습된 qGAN을 사용하는 예제로, 금융 파생상품의 가격 책정 예제가 있다. `Option Pricing with qGANs <https://github.com/Qiskit/qiskit-finance/tree/main/docs/tutorials/10_qgan_option_pricing.ipynb>`__ 튜토리얼을 참고하라."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:56
msgid "Load the Training Data"
msgstr "훈련 데이터 불러오기"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:58
msgid "First, we need to load the :math:`k`-dimensional training data samples (here k=1)."
msgstr "첫째, :math:`k` 차원 훈련 데이터 샘플 (여기서 k= 1) 을 로드해야 한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:60
msgid "Next, the data resolution is set, i.e. the min/max data values and the number of qubits used to represent each data dimension."
msgstr "다음으로, 데이터 해상도가 설정되고, 즉, 최소/최대 데이터 값들 및 각각의 데이터 차원을 표현하기 위해 사용되는 큐비트들의 수가 설정된다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:95
msgid "Initialize the qGAN"
msgstr "qGAN 초기화하기"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:97
msgid "The qGAN consists of a quantum generator :math:`G_{\\theta}`, i.e., an ansatz, and a classical discriminator :math:`D_{\\phi}`, a neural network."
msgstr "qGAN은 양자생성기 :math:`G_{\\theta}` , 즉 ansatz와 고전적인 식별자 :math:`D_{\\phi}` (신경망)로 구성되어 있다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:99
msgid "To implement the quantum generator, we choose a depth-\\ :math:`1` ansatz that implements :math:`R_Y` rotations and :math:`CZ` gates which takes a uniform distribution as an input state. Notably, for :math:`k>1` the generator’s parameters must be chosen carefully. For example, the circuit depth should be :math:`>1` because higher circuit depths enable the representation of more complex structures."
msgstr "양자 생성기를 구현하기 위해서는 :math:`R_Y` 회전을 구현하는 깊이 1 의 ansatz와 입력 상태로 균일한 분포를 취하는 :math:`CZ` 게이트를 선택해야 한다. 특히 :math:`k>1` 의 경우 생성기의 매개변수를 신중하게 선택해야 한다. 예를 들어, 더 높은 회로 깊이가 더 복잡한 구조의 표현을 가능하게 하기 때문에 회로 깊이는 :math:`k>1` 이어야 한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:101
msgid "The classical discriminator used here is based on a neural network implementation using NumPy. There is also a discriminator based on PyTorch which is not installed by default when installing Qiskit - see `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ for more information."
msgstr "여기서 사용되는 고전적인 판별기는 NumPy를 사용하는 신경망 구현을 기반으로 한다. 또한, Qiskit을 설치할 때 기본 옵션으로 설치되지 않은 PyTorch를 기반으로 한 판별기도 있다. 자세한 정보는 `Optional Install <https://github.com/Qiskit/qiskit-machine-learning#optional-installs>`__ 에서 찾아볼 수 있다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:103
msgid "Here, both networks are updated with the ADAM optimization algorithm (ADAM is qGAN optimizer default)."
msgstr "여기서, 두 네트워크는 ADAM 최적화 알고리즘으로 업데이트된다 (ADAM은 기본 qGAN 최적화 프로그램이다)."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:164
msgid "Run the qGAN Training"
msgstr "qGAN 학습 실행하기"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:166
msgid "During the training the discriminator’s and the generator’s parameters are updated alternately w.r.t the following loss functions:"
msgstr "훈련 중에 식별자 및 생성기의 매개변수는 다음과 같은 손실 함수가 번갈아 업데이트된다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:168
msgid "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"
msgstr "L_G\\left(\\phi, \\theta\\right) = -\\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log\\left(D_{\\phi}\\left(g^{l}\\right)\\right)\\right]\n\n"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:170
msgid "and"
msgstr "그리고"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:172
msgid "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"
msgstr "L_D\\left(\\phi, \\theta\\right) =\n"
"  \\frac{1}{m}\\sum\\limits_{l=1}^{m}\\left[\\log D_{\\phi}\\left(x^{l}\\right) + \\log\\left(1-D_{\\phi}\\left(g^{l}\\right)\\right)\\right],"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:177
msgid "with :math:`m` denoting the batch size and :math:`g^l` describing the data samples generated by the quantum generator."
msgstr "예를 들어, :math:`m` 은 배치 사이즈 (batch size) 를 의미하고 :math:`g^l` 는 양자 생성기 (quantum generator) 에 의해 발생된 데이터 샘플들을 의미한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:179
msgid "Please note that the training, for the purpose of this notebook, has been kept briefer by the selection of a known initial point (``init_params``). Without such prior knowledge be aware training may take some while."
msgstr "이 노트북의 목적상, 알려진 초기 포인트(``init_params``) 를 선택함으로써 본 교육을 보다 간략하게 진행하였음을 유념해주길 바란다. 이러한 사전 지식이 없으면 교육에 시간이 다소 걸릴 수 있다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:245
msgid "Training Progress & Outcome"
msgstr "학습 진행 및 결과"

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:247
msgid "Now, we plot the evolution of the generator’s and the discriminator’s loss functions during the training, as well as the progress in the relative entropy between the trained and the target distribution."
msgstr "이제, 학습하는 동안 생성기의 및 식별자의 손실 함수의 전개 뿐만 아니라 훈련된 및 타겟 분포 사이의 상대적 엔트로피의 진행을 플로팅한다."

#: ../../tutorials/04_qgans_for_loading_random_distributions.ipynb:249
msgid "Finally, we also compare the cumulative distribution function (CDF) of the trained distribution to the CDF of the target distribution."
msgstr "마지막으로, 학습된 분포의 누적 분포 함수 (CDF) 를 타겟 분포의 CDF와 비교한다."

