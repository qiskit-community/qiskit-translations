msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 21:47+0000\n"
"PO-Revision-Date: 2022-08-11 22:20\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/index.po\n"
"X-Crowdin-File-ID: 9524\n"
"Language: pt_UN\n"

#: ../../index.rst:6 ../../index.rst:71
msgid "Overview"
msgstr "Visão geral"

#: ../../index.rst:71
msgid "Getting Started"
msgstr "Primeiros Passos"

#: ../../index.rst:71
msgid "Tutorials"
msgstr "Tutoriais"

#: ../../index.rst:71
msgid "API Reference"
msgstr "Referências de API"

#: ../../index.rst:71
msgid "Release Notes"
msgstr "Notas da Versão"

#: ../../index.rst:71
msgid "GitHub"
msgstr "GitHub"

#: ../../index.rst:3
msgid "Qiskit Machine Learning overview"
msgstr "Documentação do Qiskit Machine Learning"

#: ../../index.rst:8
msgid "Qiskit Machine Learning introduces fundamental computational building blocks - such as Quantum Kernels and Quantum Neural Networks - used in different applications, including classification and regression. On the one hand, this design is very easy to use and allows users to rapidly prototype a first model without deep quantum computing knowledge. On the other hand, Qiskit Machine Learning is very flexible, and users can easily extend it to support cutting-edge quantum machine learning research."
msgstr "O Qiskit Machine Learning apresenta conceitos computacionais fundamentais - como Kernels Quânticos e Redes Neurais Quânticas - usados em diferentes aplicativos, incluindo classificação e regressão. Por um lado, esse design é muito fácil de usar e permite que os usuários compreendam rapidamente um modelo inicial sem conhecimento profundo de computação quântica. Por outro lado, o Qiskit Machine Learning é muito flexível e os usuários podem estendê-lo facilmente para dar suporte à pesquisa de machine learning quântico."

#: ../../index.rst:14
msgid "Qiskit Machine Learning provides the :class:`~qiskit_machine_learning.kernels.QuantumKernel` class that can be easily used to directly compute kernel matrices for given datasets or can be passed to a Quantum Support Vector Classifier (:class:`~qiskit_machine_learning.algorithms.QSVC`) or Quantum Support Vector Regressor (:class:`~qiskit_machine_learning.algorithms.QSVR`) to quickly start solving classification or regression problems. It also can be used with many other existing kernel-based machine learning algorithms from established classical frameworks."
msgstr "O Qiskit Machine Learning fornece a classe :class:`~qiskit_machine_learning.kernels.QuantumKernel` que pode ser facilmente usada para calcular matrizes de kernel para determinados conjuntos de dados ou pode ser usada em um Quantum Support Vector Classifier (:class:`~qiskit_machine_learning.algorithms. QSVC`) ou Quantum Support Vector Regressor (:class:`~qiskit_machine_learning.algorithms.QSVR`) para resolver rapidamente problemas de classificação ou regressão. Ele também pode ser usado com muitos outros algoritmos de aprendizado de máquina existentes baseados em kernels a partir de frameworks. clássicos estabelecidos."

#: ../../index.rst:23
msgid "Qiskit Machine Learning defines a generic interface for neural networks that is implemented by different quantum neural networks. Multiple implementations are readily provided, such as the :class:`~qiskit_machine_learning.neural_networks.OpflowQNN`, the :class:`~qiskit_machine_learning.neural_networks.TwoLayerQNN`, and the :class:`~qiskit_machine_learning.neural_networks.CircuitQNN`. The :class:`~qiskit_machine_learning.neural_networks.OpflowQNN` allows users to combine parametrized quantum circuits with quantum mechanical observables. The circuits can be constructed using, for example, building blocks from Qiskit’s circuit library, and the QNN’s output is given by the expected value of the observable. The :class:`~qiskit_machine_learning.neural_networks.TwoLayerQNN` is a special case of the :class:`~qiskit_machine_learning.neural_networks.OpflowQNN` that takes as input a feature map and an ansatz. The :class:`~qiskit_machine_learning.neural_networks.CircuitQNN` directly takes the quantum circuit’s measurements as output without an observable. The output can be used either as a batch of samples, i.e., a list of bitstrings measured from the circuit’s qubits, or as a sparse vector of the resulting sampling probabilities for each bitstring. The former is of interest in learning distributions resulting from a given quantum circuit, while the latter finds application, e.g., in regression or classification. A post-processing step can be used to interpret a given bitstring in a particular context, e.g. translating it into a set of classes."
msgstr "Qiskit Machine Learning define uma interface genérica para redes neurais que é implementada por diferentes redes neurais quânticas. Várias implementações são prontamente fornecidas, como :class:`~qiskit_machine_learning.neural_networks.OpflowQNN`, :class:`~qiskit_machine_learning.neural_networks.TwoLayerQNN` e :class:`~qiskit_machine_learning.neural_networks.CircuitQNN`. O :class:`~qiskit_machine_learning.neural_networks.OpflowQNN` permite que os usuários combinem circuitos quânticos parametrizados com observáveis ​​da mecânica quântica. Os circuitos podem ser construídos usando, por exemplo, os blocos de construção da biblioteca de circuitos do Qiskit, e a saída do QNN é dada pelo valor esperado do observável. O :class:`~qiskit_machine_learning.neural_networks.TwoLayerQNN` é um caso especial do :class:`~qiskit_machine_learning.neural_networks.OpflowQNN` que recebe como entrada um mapa de recurso e um ansatz. O :class:`~qiskit_machine_learning.neural_networks.CircuitQNN` recebe diretamente as medições do circuito quântico como saída sem um observável. A saída pode ser usada como um lote de amostras, ou seja, uma lista de bitstrings medida a partir dos qubits do circuito, ou como um vetor esparso das probabilidades resultantes para cada bitstring. O primeiro tem o interesse em aprender as distribuições resultantes de um determinado circuito quântico, enquanto o último encontra aplicação, por exemplo, em regressão ou classificação. Uma etapa de pós-processamento pode ser usada para interpretar uma determinada cadeia de bits em um contexto específico, por exemplo. traduzindo-o em um conjunto de classes."

#: ../../index.rst:41
msgid "The neural networks include the functionality to evaluate them for a given input as well as to compute the corresponding gradients, which is important for efficient training. To train and use neural networks, Qiskit Machine Learning provides a variety of learning algorithms such as the :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` and :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor`. Both take a QNN as input and then use it in a classification or regression context. To allow an easy start, two convenience implementations are provided - the Variational Quantum Classifier (:class:`~qiskit_machine_learning.algorithms.VQC`) as well as the Variational Quantum Regressor (:class:`~qiskit_machine_learning.algorithms.VQR`). Both take just a feature map and an ansatz and construct the underlying QNN automatically."
msgstr "As redes neurais incluem a funcionalidade de avaliá-las para uma determinada entrada, bem como calcular os gradientes correspondentes, o que é importante para um treinamento eficiente. Para treinar e usar redes neurais, o Qiskit Machine Learning fornece uma variedade de algoritmos de aprendizado, como :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` e :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor`. Ambos recebem um QNN como entrada e o usam em um contexto de classificação ou regressão. Para permitir um início fácil, duas implementações convenientes são fornecidas - o Classificador Quântico Variacional (:class:`~qiskit_machine_learning.algorithms.VQC`), bem como o Regressor Quântico Variacional (:class:`~qiskit_machine_learning.algorithms.VQR`). Ambos pegam apenas um mapa de recursos e um ansatz e constroem o QNN subjacente automaticamente."

#: ../../index.rst:52
msgid "In addition to the models provided directly in Qiskit Machine Learning, it has the :class:`~qiskit_machine_learning.connectors.TorchConnector`, which allows users to integrate all of our quantum neural networks directly into the `PyTorch <https://pytorch.org>`__ open source machine learning library. Thanks to Qiskit’s gradient framework, this includes automatic differentiation - the overall gradients computed by `PyTorch <https://pytorch.org>`__ during the backpropagation take into account quantum neural networks, too. The flexible design also allows the building of connectors to other packages in the future."
msgstr "Além dos modelos fornecidos diretamente no Qiskit Machine Learning, também há o :class:`~qiskit_machine_learning.connectors.TorchConnector`, que permite aos usuários integrar todas as nossas redes neurais quânticas diretamente no `PyTorch <https://pytorch. org>`__ biblioteca de aprendizado de máquina de código aberto. Graças ao framework de gradiente do Qiskit, está incluso a diferenciação automática - os gradientes gerais calculados pelo `PyTorch <https://pytorch.org>`__ durante a retropropagação também levam em consideração as redes neurais quânticas. O design flexível também permite a construção de conectores para outros pacotes no futuro."

#: ../../index.rst:65
msgid "Next Steps"
msgstr "Próximos Passos"

#: ../../index.rst:67
msgid "`Getting started <getting_started.html>`_"
msgstr "`Começando <getting_started.html>`_"

#: ../../index.rst:69
msgid "`Tutorials <tutorials/index.html>`_"
msgstr "`Tutoriais <tutorials/index.html>`_"

