msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-10 17:18+0000\n"
"PO-Revision-Date: 2023-11-10 18:40\n"
"Last-Translator: \n"
"Language: pt_UN\n"
"Language-Team: Portuguese (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /main/machine-learning/docs/locale/en/LC_MESSAGES/index.po\n"
"X-Crowdin-File-ID: 9524\n"

#: ../../index.rst:6 ../../index.rst:72
msgid "Overview"
msgstr "Visão geral"

#: ../../index.rst:72
msgid "Getting Started"
msgstr "Primeiros Passos"

#: ../../index.rst:72
msgid "Migration Guide"
msgstr ""

#: ../../index.rst:72
msgid "Tutorials"
msgstr "Tutoriais"

#: ../../index.rst:72
msgid "API Reference"
msgstr "Referências de API"

#: ../../index.rst:72
msgid "Release Notes"
msgstr "Notas da Versão"

#: ../../index.rst:72
msgid "GitHub"
msgstr "GitHub"

#: ../../index.rst:3
msgid "Qiskit Machine Learning overview"
msgstr "Documentação do Qiskit Machine Learning"

#: ../../index.rst:8
msgid "Qiskit Machine Learning introduces fundamental computational building blocks - such as Quantum Kernels and Quantum Neural Networks - used in different applications, including classification and regression. On the one hand, this design is very easy to use and allows users to rapidly prototype a first model without deep quantum computing knowledge. On the other hand, Qiskit Machine Learning is very flexible, and users can easily extend it to support cutting-edge quantum machine learning research."
msgstr "O Qiskit Machine Learning apresenta conceitos computacionais fundamentais - como Kernels Quânticos e Redes Neurais Quânticas - usados em diferentes aplicativos, incluindo classificação e regressão. Por um lado, esse design é muito fácil de usar e permite que os usuários compreendam rapidamente um modelo inicial sem conhecimento profundo de computação quântica. Por outro lado, o Qiskit Machine Learning é muito flexível e os usuários podem estendê-lo facilmente para dar suporte à pesquisa de machine learning quântico."

#: ../../index.rst:14
msgid "Qiskit Machine Learning provides the :class:`~qiskit_machine_learning.kernels.FidelityQuantumKernel` class class that makes use of the :class:`~qiskit_algorithms.state_fidelities.BaseStateFidelity` algorithm introduced in Qiskit and can be easily used to directly compute kernel matrices for given datasets or can be passed to a Quantum Support Vector Classifier (:class:`~qiskit_machine_learning.algorithms.QSVC`) or Quantum Support Vector Regressor (:class:`~qiskit_machine_learning.algorithms.QSVR`) to quickly start solving classification or regression problems. It also can be used with many other existing kernel-based machine learning algorithms from established classical frameworks."
msgstr ""

#: ../../index.rst:24
msgid "Qiskit Machine Learning defines a generic interface for neural networks that is implemented by different quantum neural networks. Two core implementations are readily provided, such as the :class:`~qiskit_machine_learning.neural_networks.EstimatorQNN` and the :class:`~qiskit_machine_learning.neural_networks.SamplerQNN`. The :class:`~qiskit_machine_learning.neural_networks.EstimatorQNN` leverages the :class:`~qiskit.primitives.BaseEstimator` primitive from Qiskit and allows users to combine parametrized quantum circuits with quantum mechanical observables. The circuits can be constructed using, for example, building blocks from Qiskit's circuit library, and the QNN's output is given by the expected value of the observable. The :class:`~qiskit_machine_learning.neural_networks.SamplerQNN` leverages another primitive introduced in Qiskit, the :class:`~qiskit.primitives.BaseSampler` primitive. This neural network translates quasi-probabilities of bitstrings estimated by the primitive into a desired output. This translation step can be used to interpret a given bitstring in a particular context, e.g. translating it into a set of classes."
msgstr ""

#: ../../index.rst:39
msgid "The neural networks include the functionality to evaluate them for a given input as well as to compute the corresponding gradients, which is important for efficient training. To train and use neural networks, Qiskit Machine Learning provides a variety of learning algorithms such as the :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` and :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor`. Both take a QNN as input and then use it in a classification or regression context. To allow an easy start, two convenience implementations are provided - the Variational Quantum Classifier (:class:`~qiskit_machine_learning.algorithms.VQC`) as well as the Variational Quantum Regressor (:class:`~qiskit_machine_learning.algorithms.VQR`). Both take just a feature map and an ansatz and construct the underlying QNN automatically."
msgstr "As redes neurais incluem a funcionalidade de avaliá-las para uma determinada entrada, bem como calcular os gradientes correspondentes, o que é importante para um treinamento eficiente. Para treinar e usar redes neurais, o Qiskit Machine Learning fornece uma variedade de algoritmos de aprendizado, como :class:`~qiskit_machine_learning.algorithms.NeuralNetworkClassifier` e :class:`~qiskit_machine_learning.algorithms.NeuralNetworkRegressor`. Ambos recebem um QNN como entrada e o usam em um contexto de classificação ou regressão. Para permitir um início fácil, duas implementações convenientes são fornecidas - o Classificador Quântico Variacional (:class:`~qiskit_machine_learning.algorithms.VQC`), bem como o Regressor Quântico Variacional (:class:`~qiskit_machine_learning.algorithms.VQR`). Ambos pegam apenas um mapa de recursos e um ansatz e constroem o QNN subjacente automaticamente."

#: ../../index.rst:50
msgid "In addition to the models provided directly in Qiskit Machine Learning, it has the :class:`~qiskit_machine_learning.connectors.TorchConnector`, which allows users to integrate all of our quantum neural networks directly into the `PyTorch <https://pytorch.org>`__ open source machine learning library. Thanks to Qiskit Algorithm's gradient algorithms, this includes automatic differentiation - the overall gradients computed by `PyTorch <https://pytorch.org>`__ during the backpropagation take into account quantum neural networks, too. The flexible design also allows the building of connectors to other packages in the future."
msgstr ""

#: ../../index.rst:64
msgid "Next Steps"
msgstr "Próximos Passos"

#: ../../index.rst:66
msgid "`Getting started <getting_started.html>`_"
msgstr "`Começando <getting_started.html>`_"

#: ../../index.rst:68
msgid "`Migration Guide <migration/index.html>`_"
msgstr ""

#: ../../index.rst:70
msgid "`Tutorials <tutorials/index.html>`_"
msgstr "`Tutoriais <tutorials/index.html>`_"

