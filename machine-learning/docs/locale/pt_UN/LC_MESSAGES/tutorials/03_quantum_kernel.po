msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-24 12:38+0000\n"
"PO-Revision-Date: 2021-09-15 15:53\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: pt_UN\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "Esta página foi gerada a partir `docs/tutorials/03_quantum_kernel.ipynb`__."

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "Núcleo Quântico de Aprendizagem de Máquina"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "A tarefa geral do machine learning é encontrar e estudar padrões em dados. Para muitos conjuntos de dados, os pontos de dados são melhores entendidos em um espaço de recursos de dimensão superior, através do uso de uma função kernel: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` onde :math:`k` representa a função kernel, :math:`\\vec{x}_i, \\vec{x}_j` são :math:`n` inputs dimensionais, :math:`f` é um mapa da :math:`n`-dimensão para :math:`m`-dimensão espacial e :math:`\\langle a,b \\rangle` denota o produto escalar. Quando consideramos dados finitos, a função kernel pode ser representada como uma matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "No aprendizado de máquina do kernel quântico, um mapa de recurso quântico :math:`\\phi(\\vec{x})` é utilizado para mapear um vetor de funcionalidade clássico :math:`\\vec{x}` para um espaço quântico Hilbert :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, como este :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. Veja `Aprendizado supervisionado com espaços de recursos quânticos aprimorados <https://arxiv.org/pdf/1804.11326.pdf>`__ para mais detalhes."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "Neste notebook, nós utilizamos ``qiskit`` para calcular uma matriz de núcleo usando um mapa de recursos quânticos, em seguida, usamos esta matriz de núcleo na classificação ``scikit-learn`` e agrupamento de algoritmos."

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "Classificação"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "Para o nosso exemplo de classificação, nós iremos utilizar um *conjunto de dados ad hoc* como descrito em `Aprendizado supervisionado com espaços de recursos quânticos aprimorados <https://arxiv.org/pdf/1804.11326.pdf>`__, e o ``scikit-learn`` `maquina de vetor de suporte <https://scikit-learn.org/stable/modules/svm.html>`__ classificação de algoritmo (``svc``)."

#: ../../tutorials/03_quantum_kernel.ipynb:111
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "Com nossos conjuntos de dados de treinos e testes preparados, nós configuramos a classe ``QuantumKernel`` para calcular a matriz do núcleo executando o `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, e o ``BasicAer`` ``simulador_qasm `` utilizando 1024 shots."

#: ../../tutorials/03_quantum_kernel.ipynb:138
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "O algoritmo ``scikit-learn`` ``svc`` nos permite definir um `núcleo personalizado <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ de duas maneiras: Fornecendo o núcleo como uma função exigível ou pré-computando a matriz do núcleo. Nós podemos fazer qualquer uma das duas utilizando a classe ``QuantumKernel`` no ``qiskit``."

#: ../../tutorials/03_quantum_kernel.ipynb:140
msgid "The following code gives the kernel as a callable function:"
msgstr "O código a seguir nos retorna o núcleo como função exigível:"

#: ../../tutorials/03_quantum_kernel.ipynb:184
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "O código a seguir, pré-computa e plota as matrizes de núcleo de treinamento e testes antes de fornecê-las ao algoritmo ``scikit-learn`` ``svc``:"

#: ../../tutorials/03_quantum_kernel.ipynb:250
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "O ``qiskit`` também contem a classe ``qsvc`` que extende a classe ``sklearn svc``, esta pode ser utilizada da seguinte forma:"

#: ../../tutorials/03_quantum_kernel.ipynb:295
msgid "Clustering"
msgstr "Agrupamento"

#: ../../tutorials/03_quantum_kernel.ipynb:297
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "Para nosso exemplo de agrupamento, nós usaremos novamente o *conjunto de dados ad hoc* como descrito em `Aprendizado supervisionado com espaços de recursos quânticos aprimorados <https://arxiv.org/pdf/1804.11326.pdf>`__, e o algoritmo de agrupamento ``scikit-learn`` ``spectral``."

#: ../../tutorials/03_quantum_kernel.ipynb:299
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "Nós regeramos o dataset com uma lacuna maior entre as duas classes, e como agrupamento é uma tarefa de aprendizado de máquina não supervisionada, não precisamos de uma amostra de teste."

#: ../../tutorials/03_quantum_kernel.ipynb:350
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "Nós novamente configuramos a classe ``QuantumKernel`` para calcular a matriz do núcleo utilizando o `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, e o BasicAer ``qasm_simulator`` usando 1024 shots."

#: ../../tutorials/03_quantum_kernel.ipynb:377
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "O algoritmo de agrupamento spectral scikit-learn nos permite definir um [núcleo personalizado] de duas maneiras: Fornecendo o núcleo como uma função exigível ou pré-computando a matriz do núcleo. Usando a classe QuantumKernel no Qiskit, só podemos usar o último."

#: ../../tutorials/03_quantum_kernel.ipynb:379
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "O código a seguir pré-computa e plota as matrizes do núcleo antes de fornecê-las ao algoritmo de agrupamento espectral scikit-learn, e pontua o rótulo usando informação mútua normalizada, já que conhecemos a priori os rótulos das classes."

#: ../../tutorials/03_quantum_kernel.ipynb:439
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "O ``scikit-learn`` tem outros algoritmos que pré-computam a matriz do núcleo, aqui estão alguns:"

#: ../../tutorials/03_quantum_kernel.ipynb:441
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Agrupamento aglomerativo <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:442
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Suporte regressão vetorial <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:443
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Cume de regressão <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:444
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Processo de regressão Gaussiana <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:445
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Análise do componente principal <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"

