msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-17 23:23+0000\n"
"PO-Revision-Date: 2022-02-18 00:20\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/machine-learning/docs/locale/en/LC_MESSAGES/tutorials/03_quantum_kernel.po\n"
"X-Crowdin-File-ID: 9632\n"
"Language: ru_RU\n"

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "This page was generated from `docs/tutorials/03_quantum_kernel.ipynb`__."
msgstr "Страница создана на основе `docs/tutorials/03_quantum_kernel.ipynb`__."

#: ../../tutorials/03_quantum_kernel.ipynb:9
msgid "Quantum Kernel Machine Learning"
msgstr "Квантовый ядерный метод машинного обучения"

#: ../../tutorials/03_quantum_kernel.ipynb:11
msgid "The general task of machine learning is to find and study patterns in data. For many datasets, the datapoints are better understood in a higher dimensional feature space, through the use of a kernel function: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle` where :math:`k` is the kernel function, :math:`\\vec{x}_i, \\vec{x}_j` are :math:`n` dimensional inputs, :math:`f` is a map from :math:`n`-dimension to :math:`m`-dimension space and :math:`\\langle a,b \\rangle` denotes the dot product. When considering finite data, a kernel function can be represented as a matrix: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."
msgstr "Общая задача машинного обучения заключается в поиске и изучении закономерностей в данных. Для многих наборов данных элементы данных (datapoints) лучше распознаются в большем пространстве измерений, через использование ядерной функции: :math:`k(\\vec{x}_i, \\vec{x}_j) = \\langle f(\\vec{x}_i), f(\\vec{x}_j) \\rangle`, где :math:`k` - ядерная функция, :math:`\\vec{x}_i, \\vec{x}_j` - входные данные с количеством измерений равным :math:`n`, :math:`f` — это преобразование от :math:`n`-мерного до :math:`m`-мерного пространства и :math:`\\langle a,b \\rangle` обозначает точечный результат. При рассмотрении конечных данных, ядерная функция может быть представлена в виде матрицы: :math:`K_{ij} = k(\\vec{x}_i,\\vec{x}_j)`."

#: ../../tutorials/03_quantum_kernel.ipynb:14
msgid "In quantum kernel machine learning, a quantum feature map :math:`\\phi(\\vec{x})` is used to map a classical feature vector :math:`\\vec{x}` to a quantum Hilbert space, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, such that :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. See `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__ for more details."
msgstr "В квантовом машинном обучении методом ядерной функции, преобразование :math:`\\phi(\\vec{x})` используется для сопоставления классической векторной функции :math:`\\vec{x} с квантовым Гильбертовым пространством, :math:`| \\phi(\\vec{x})\\rangle \\langle \\phi(\\vec{x})|`, таким, что :math:`K_{ij} = \\left| \\langle \\phi^\\dagger(\\vec{x}_j)| \\phi(\\vec{x}_i) \\rangle \\right|^{2}`. См. `Контролируемое обучение с квантово расширенными функциональными пространствами <https://arxiv.org/pdf/1804.11326.pdf>`__ для более подробной информации."

#: ../../tutorials/03_quantum_kernel.ipynb:16
msgid "In this notebook, we use ``qiskit`` to calculate a kernel matrix using a quantum feature map, then use this kernel matrix in ``scikit-learn`` classification and clustering algorithms."
msgstr "В данном блокноте мы используем ``qiskit`` для вычисления ядерной матрицы с использованием квантовой функции преобразования, а затем используем эту матрицу в алгоритмах классификации и кластеризации ``scikit-learn``."

#: ../../tutorials/03_quantum_kernel.ipynb:53
msgid "Classification"
msgstr "Классификация"

#: ../../tutorials/03_quantum_kernel.ipynb:55
msgid "For our classification example, we will use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` `support vector machine <https://scikit-learn.org/stable/modules/svm.html>`__ classification (``svc``) algorithm."
msgstr "Для нашего примера классификации мы будем использовать набор данных *ad hoc dataset* как в статье ``Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, и алгоритм ``scikit-learn``, `поддерживающий алгоритм векторной машинной <https://scikit-learn.org/stable/modules/svm.html>`__ классификации (``svc``)."

#: ../../tutorials/03_quantum_kernel.ipynb:142
msgid "With our training and testing datasets ready, we set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the ``BasicAer`` ``qasm_simulator`` using 1024 shots."
msgstr "С нашими готовыми наборами данных для обучения и тестирования, мы настроим класс ``QuantumKernel`` для вычисления с помощью `ZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, и ``BasicAer`` ``qasm_simulator`` используя 1024 вычисления."

#: ../../tutorials/03_quantum_kernel.ipynb:169
msgid "The ``scikit-learn`` ``svc`` algorithm allows us to define a `custom kernel <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. We can do either of these using the ``QuantumKernel`` class in ``qiskit``."
msgstr "Алгоритм ``scikit-learn`` ``svc`` позволяет нам определить `пользовательское ядро <https://scikit-learn.org/stable/modules/svm.html#custom-kernels>`__ двумя способами: путем предоставления ядра в качестве вызываемой функции или путем предварительного вычисления ядерной матрицы. Мы можем выполнить любую из двух операций, используя класс ``QuantumKernel`` в ``qiskit``."

#: ../../tutorials/03_quantum_kernel.ipynb:171
msgid "The following code gives the kernel as a callable function:"
msgstr "Следующий код предоставляет ядро в качестве вызываемой функции:"

#: ../../tutorials/03_quantum_kernel.ipynb:219
msgid "The following code precomputes and plots the training and testing kernel matrices before providing them to the ``scikit-learn`` ``svc`` algorithm:"
msgstr "Следующий код предварительно вычисляет и выводит в графическом виде данные об обучении и тестирует ядерные матрицы, прежде чем передать их алгоритму ``scikit-learn`` ``svc`:"

#: ../../tutorials/03_quantum_kernel.ipynb:288
msgid "``qiskit`` also contains the ``qsvc`` class that extends the ``sklearn svc`` class, that can be used as follows:"
msgstr "``qiskit`` также содержит класс ``qsvc``, расширяющий класс ``sklearn svc``, который может быть использован следующим образом:"

#: ../../tutorials/03_quantum_kernel.ipynb:337
msgid "Clustering"
msgstr "Кластеризация"

#: ../../tutorials/03_quantum_kernel.ipynb:339
msgid "For our clustering example, we will again use the *ad hoc dataset* as described in `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, and the ``scikit-learn`` ``spectral`` clustering algorithm."
msgstr "Для нашего примера кластеризации мы снова будем использовать набор данных *ad hoc dataset* из статьи `Supervised learning with quantum enhanced feature spaces <https://arxiv.org/pdf/1804.11326.pdf>`__, и алгоритм кластеризации ``scikit-learn`` ``spectral``."

#: ../../tutorials/03_quantum_kernel.ipynb:341
msgid "We will regenerate the dataset with a larger gap between the two classes, and as clustering is an unsupervised machine learning task, we don’t need a test sample."
msgstr "Мы создадим набор данных с большим разрывом между двумя классами, и, поскольку кластеризация является заданием неконтролируемого (unsupervised) машинного обучения, нам не нужна тестовая выборка."

#: ../../tutorials/03_quantum_kernel.ipynb:411
msgid "We again set up the ``QuantumKernel`` class to calculate a kernel matrix using the `ZZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, and the BasicAer ``qasm_simulator`` using 1024 shots."
msgstr "Мы снова настроим класс ``QuantumKernel`` для вычисления ядерной матрицы, используя `ZFeatureMap <https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html>`__, и BasicAer ``qasm_simulator`` с помощью 1024 вычислений."

#: ../../tutorials/03_quantum_kernel.ipynb:438
msgid "The scikit-learn spectral clustering algorithm allows us to define a [custom kernel] in two ways: by providing the kernel as a callable function or by precomputing the kernel matrix. Using the QuantumKernel class in qiskit, we can only use the latter."
msgstr "Изучаемый спектральный алгоритм кластеризации позволяет нам определить [пользовательское ядро] двумя способами: путем предоставления ядра в качестве вызываемой функции или путем предварительного вычисления ядерной матрицы. Используя класс QuantumKernel в qiskit, мы можем использовать только второе."

#: ../../tutorials/03_quantum_kernel.ipynb:440
msgid "The following code precomputes and plots the kernel matrices before providing it to the scikit-learn spectral clustering algorithm, and scoring the labels using normalized mutual information, since we a priori know the class labels."
msgstr "Следующий код предварительно вычисляет и представляет в графическом виде ядерные матрицы перед передачей их в алгоритм спектральной кластеризации scikit-learn, и подсчитывает метки с помощью нормализованной общей информацию, так как мы априори знаем метки классов."

#: ../../tutorials/03_quantum_kernel.ipynb:504
msgid "``scikit-learn`` has other algorithms that can use a precomputed kernel matrix, here are a few:"
msgstr "``scikit-learn`` имеет и другие алгоритмы, использующие предварительно рассчитанную ядерную матрицу. Вот некоторые из них:"

#: ../../tutorials/03_quantum_kernel.ipynb:506
msgid "`Agglomerative clustering <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"
msgstr "`Агломеративная кластеризация <https://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:507
msgid "`Support vector regression <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"
msgstr "`Регрессия опорных векторов <https://scikit-learn.org/stable/modules/generated/sklearn.svm.SVR.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:508
msgid "`Ridge regression <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"
msgstr "`Хребтовая регрессия <https://scikit-learn.org/stable/modules/generated/sklearn.kernel_ridge.KernelRidge.html>`__"

#: ../../tutorials/03_quantum_kernel.ipynb:509
msgid "`Gaussian process regression <https://scikit-learn.org/stable/modules/gaussian_process.html>`__"
msgstr "`Гауссовская регрессия процесса <https://scikit-learn.org/stable/modules/gaussian_process.html>` __"

#: ../../tutorials/03_quantum_kernel.ipynb:510
msgid "`Principal component analysis <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>`__"
msgstr "`Анализ основных компонентов <https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.KernelPCA.html>` __"

