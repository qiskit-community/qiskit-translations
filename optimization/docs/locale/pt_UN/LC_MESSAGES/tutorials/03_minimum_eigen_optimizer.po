msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-11 01:17+0000\n"
"PO-Revision-Date: 2022-11-11 02:51\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/03_minimum_eigen_optimizer.po\n"
"X-Crowdin-File-ID: 9646\n"
"Language: pt_UN\n"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:9
msgid "This page was generated from `docs/tutorials/03_minimum_eigen_optimizer.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/03_minimum_eigen_optimizer.ipynb`__."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:9
msgid "Minimum Eigen Optimizer"
msgstr "Otimizador Eigen mínimo"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:32
msgid "An interesting class of optimization problems to be addressed by quantum computing are Quadratic Unconstrained Binary Optimization (QUBO) problems. Finding the solution to a QUBO is equivalent to finding the ground state of a corresponding Ising Hamiltonian, which is an important problem not only in optimization, but also in quantum chemistry and physics. For this translation, the binary variables taking values in :math:`\\{0, 1\\}` are replaced by spin variables taking values in :math:`\\{-1, +1\\}`, which allows one to replace the resulting spin variables by Pauli Z matrices, and thus, an Ising Hamiltonian. For more details on this mapping we refer to [1]."
msgstr "Uma classe interessante de problemas de otimização a serem abordados pela computação quântica são problemas de Otimização Quadrática Binária Irrestrita (QUBO). Encontrar a solução para um QUBO é equivalente a encontrar o estado fundamental de um Hamiltoniano de Ising correspondente, que é um problema importante não só na otimização, mas também na química quântica e na física. Para abordar esse tipo de problema, considera-se que as variáveis binárias com valores de :math:`\\{0, 1\\}` são substituídas por variáveis spin tomando valores em :math:`\\{-1, +1\\}`, o que permite substituir as variáveis spin resultantes por matrizes de Pauli Z, e assim, um Hamiltoniano de Ising. Para obter mais detalhes sobre este mapeamento nós nos embasamos em [1]."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:35
msgid "Qiskit provides automatic conversion from a suitable ``QuadraticProgram`` to an Ising Hamiltonian, which then allows leveraging all the ``MinimumEigenSolver`` implementations, such as"
msgstr "O Qiskit proporciona conversão automática de um `QuadraticProgram`` adequado para um Hamiltoniano de Ising, que então permite aproveitar todos os `MinimumEigenSolver``, como"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:37
msgid "``VQE``,"
msgstr "``VQE``,"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:38
msgid "``QAOA``, or"
msgstr "``QAOA``, ou"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:39
msgid "``NumpyMinimumEigensolver`` (classical exact method)."
msgstr "``NumpyMinimumEigensolver`` (método clássico exato)."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:41
msgid "Qiskit Optimization provides a the ``MinimumEigenOptimizer`` class, which wraps the translation to an Ising Hamiltonian (in Qiskit Terra also called ``Operator``), the call to a ``MinimumEigensolver``, and the translation of the results back to an ``OptimizationResult``."
msgstr "Qiskit Optimization fornece a tradução para um Hamiltoniano de Ising (no Qiskit Aqua também chamado de ``Operator``), a chamada a um ``MinimumEigensolver``, bem como a tradução dos resultados de volta para ``OptimizationResult`` no ``MinimumEigenOptimizer``."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:43
msgid "In the following we first illustrate the conversion from a ``QuadraticProgram`` to an ``Operator`` and then show how to use the ``MinimumEigenOptimizer`` with different ``MinimumEigensolver``\\ s to solve a given ``QuadraticProgram``. The algorithms in Qiskit automatically try to convert a given problem to the supported problem class if possible, for instance, the ``MinimumEigenOptimizer`` will automatically translate integer variables to binary variables or add linear equality constraints as a quadratic penalty term to the objective. It should be mentioned that a ``QiskitOptimizationError`` will be thrown if conversion of a quadratic program with integer variables is attempted."
msgstr "A seguir ilustramos primeiro a conversão de um ``QuadraticProgram`` para um ``Operator`` e, em seguida, mostramos como utilizar o ``MinimumEigenOptimizer`` com diferentes ``MinimumEigensolver`` para resolver um dado ``QuadraticProgram``. Os algoritmos em Qiskit automaticamente tentam converter um determinado problema para a classe de problema suportado se possível, por exemplo, o ``MinimumEigenOptimizer`` irá traduzir automaticamente variáveis inteiras para variáveis binárias ou adicionar restrições lineares de igualdade como um termo de penalidade quadrática para o objetivo. Deve-se mencionar que Aqua lançará um ``QiskitOptimizationError`` se for tentada a conversão de um programa quadrático com variável inteira."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:46
msgid "The circuit depth of ``QAOA`` potentially has to be increased with the problem size, which might be prohibitive for near-term quantum devices. A possible workaround is Recursive QAOA, as introduced in [2]. Qiskit generalizes this concept to the ``RecursiveMinimumEigenOptimizer``, which is introduced at the end of this tutorial."
msgstr "A profundidade do circuito de ``QAOA`` potencialmente tem de ser aumentada com o tamanho do problema, o que pode ser proibitivo para dispositivos quânticos de curto prazo. Uma possível solução alternativa é a QAOA Recursiva, como introduzido em [2]. O Qiskit generaliza este conceito para o ``RecursiveMinimumEigenOptimizer``, que é introduzido no final deste tutorial."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:49
msgid "References"
msgstr "Referências"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:51
msgid "[1] `A. Lucas, Ising formulations of many NP problems, Front. Phys., 12 (2014). <https://arxiv.org/abs/1302.5843>`__"
msgstr "[1] `A. Lucas, Ising formulations of many NP problems, Front. Phys., 12 (2014). <https://arxiv.org/abs/1302.5843>`__"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:53
msgid "[2] `S. Bravyi, A. Kliesch, R. Koenig, E. Tang, Obstacles to State Preparation and Variational Optimization from Symmetry Protection, arXiv preprint arXiv:1910.08980 (2019). <https://arxiv.org/abs/1910.08980>`__"
msgstr "[2] `S. Bravyi, A. Kliesch, R. Koenig, E. Tang, Obstacles to State Preparation and Variational Optimization from Symmetry Protection, arXiv preprint arXiv:1910.08980 (2019). <https://arxiv.org/abs/1910.08980>`__"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:65
msgid "Converting a QUBO to an Operator"
msgstr "Convertendo um QUBO para um Operador"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:168
msgid "Next we translate this QUBO into an Ising operator. This results not only in an ``Operator`` but also in a constant offset to be taken into account to shift the resulting value."
msgstr "A seguir traduzimos este QUBO em um operador de Ising. Isso resulta não apenas em um ``Operator`` mas também em um deslocamento constante a ser levado em conta para deslocar o valor resultante."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:237
msgid "Sometimes a ``QuadraticProgram`` might also directly be given in the form of an ``Operator``. For such cases, Qiskit also provides a translator from an ``Operator`` back to a ``QuadraticProgram``, which we illustrate in the following."
msgstr "Às vezes, um ``QuadraticProgram`` também pode ser dado diretamente na forma de um ``Operator``. Para tais casos, o Qiskit também fornece um conversor de um ``Operator`` de volta a um ``QuadraticProgram``, que ilustramos a seguir."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:314
msgid "This translator allows, for instance, one to translate an ``Operator`` to a ``QuadraticProgram`` and then solve the problem with other algorithms that are not based on the Ising Hamiltonian representation, such as the ``GroverOptimizer``."
msgstr "Este conversor permite, por exemplo, traduzir um ``Operator`` para um ``QuadraticProgram`` e, em seguida, resolver o problema com outros algoritmos que não se baseiam na representação do Hamiltoniano de Ising, como o ``GroverOptimizer``."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:326
msgid "Solving a QUBO with the MinimumEigenOptimizer"
msgstr "Resolvendo um QUBO com o MinimumEigenOptimizer"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:337
msgid "We start by initializing the ``MinimumEigensolver`` we want to use."
msgstr "Iniciamos inicializando o ``MinimumEigensolver`` que queremos utilizar."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:365
msgid "Then, we use the ``MinimumEigensolver`` to create ``MinimumEigenOptimizer``."
msgstr "Em seguida, utilizamos o ``MinimumEigensolver`` para criar o ``MinimumEigenOptimizer``."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:387
msgid "We first use the ``MinimumEigenOptimizer`` based on the classical exact ``NumPyMinimumEigensolver`` to get the optimal benchmark solution for this small example."
msgstr "Utilizamos primeiramente o ``MinimumEigenOptimizer`` baseado no ``NumPyMinimumEigensolver`` clássico exato para obter a solução de referência ideal para este pequeno exemplo."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:439
msgid "Next we apply the ``MinimumEigenOptimizer`` based on ``QAOA`` to the same problem."
msgstr "A seguir, aplicamos o ``MinimumEigenOptimizer`` baseado no ``QAOA`` para o mesmo problema."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:492
msgid "Analysis of Samples"
msgstr "Análise dos resultados"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:494
msgid "``OptimizationResult`` provides useful information in the form of ``SolutionSample``\\ s (here denoted as *samples*). Each ``SolutionSample`` contains information about the input values (``x``), the corresponding objective function value (``fval``), the fraction of samples corresponding to that input (``probability``), and the solution ``status`` (``SUCCESS``, ``FAILURE``, ``INFEASIBLE``). Multiple samples corresponding to the same input are consolidated into a single ``SolutionSample`` (with its ``probability`` attribute being the aggregate fraction of samples represented by that ``SolutionSample``)."
msgstr "``OptimizationResult`` provê informações úteis na forma de ``SolutionSample``\\ s (aqui denotado como *samples*). Cada ``SolutionSample`` contém informações sobre os valores de entrada (``x``), a função objetiva correspondente (``fval``), a fração de amostras correspondentes na entrada (``probability``), e a solução ``status`` (``SUCCESS``, ``FAILURE``, ``INFEASIBLE``). Multiplas amostras correspondentes às mesmas entradas são consolidadas numa simples ``SolutionSample`` (com o atributo ``probability`` sendo a agregação da fração das amostras representados por ``SolutionSample``)."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:566
msgid "We may also want to filter samples according to their status or probabilities."
msgstr "Podemos também filtrar as amostras de acordo com com seus status ou probabilidades."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:656
msgid "If we want to obtain a better perspective of the results, statistics is very helpful, both with respect to the objective function values and their respective probabilities. Thus, mean and standard deviation are the very basics for understanding the results."
msgstr "Se desejarmos obter uma melhor perspectiva dos resultados, a estatística é muito útil, tanto com relação aos valores da função objetivo quando às suas respectivas probabilidades. Portanto, média e desvio padrão são os fundamentos básicos para compreensão dos resultados."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:748
msgid "Finally, despite all the number-crunching, visualization is usually the best early-analysis approach."
msgstr "Finalmente, apesar de todo o processamento numérico, a visualização geralmente é a melhor abordagem de análise inicial."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:839
msgid "RecursiveMinimumEigenOptimizer"
msgstr "RecursiveMinimumEigenOptimizer"

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:850
msgid "The ``RecursiveMinimumEigenOptimizer`` takes a ``MinimumEigenOptimizer`` as input and applies the recursive optimization scheme to reduce the size of the problem one variable at a time. Once the size of the generated intermediate problem is below a given threshold (``min_num_vars``), the ``RecursiveMinimumEigenOptimizer`` uses another solver (``min_num_vars_optimizer``), e.g., an exact classical solver such as CPLEX or the ``MinimumEigenOptimizer`` based on the ``NumPyMinimumEigensolver``."
msgstr "O ``RecursiveMinimumEigenOptimizer`` recebe um ``MinimumEigenOptimizer`` como entrada e aplica o esquema de otimização recursiva para reduzir o tamanho do problema uma variável de cada vez. Uma vez que o tamanho do problema intermediário gerado esteja abaixo de um determinado limite (``min_num_vars``), o ``RecursiveMinimumEigenOptimizer`` utiliza outro solucionador (``min_num_vars_optimizer``), por exemplo, um solucionador clássico exato como o CPLEX ou o ``MinimumEigenOptimizer`` baseado no ``NumPyMinimumEigensolver``."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:852
msgid "In the following, we show how to use the ``RecursiveMinimumEigenOptimizer`` using the two ``MinimumEigenOptimizer``\\ s introduced before."
msgstr "A seguir, mostramos como usar o ``RecursiveMinimumEigenOptimizer`` usando os dois ``MinimumEigenOptimizer`` vistos anteriormente."

#: ../../tutorials/03_minimum_eigen_optimizer.ipynb:863
msgid "First, we construct the ``RecursiveMinimumEigenOptimizer`` such that it reduces the problem size from 3 variables to 1 variable and then uses the exact solver for the last variable. Then we call ``solve`` to optimize the considered problem."
msgstr "Primeiramente, nós construímos o ``RecursiveMinimumEigenOptimizer`` que reduz o tamanho do problema de 3 variáveis para 1 variável e depois usa o solucionador exato para a última variável. Então chamamos ``solve`` para otimizar o problema considerado."

