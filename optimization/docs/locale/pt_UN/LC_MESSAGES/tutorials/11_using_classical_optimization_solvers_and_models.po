msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-06 22:00+0000\n"
"PO-Revision-Date: 2023-02-06 22:35\n"
"Last-Translator: \n"
"Language: pt_UN\n"
"Language-Team: Portuguese (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/11_using_classical_optimization_solvers_and_models.po\n"
"X-Crowdin-File-ID: 9715\n"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "This page was generated from `docs/tutorials/11_using_classical_optimization_solvers_and_models.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/11_using_classical_optimization_solvers_and_models.ipynb`__."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "Using Classical Optimization Solvers and Models with Qiskit Optimization"
msgstr "Utilizando Modelos e Solucionadores de Otimização Clássicos com o Qiskit Optimization"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:20
msgid "We can use classical optimization solvers (CPLEX and Gurobi) with Qiskit Optimization. Docplex and Gurobipy are the Python APIs for CPLEX and Gurobi, respectively. We can load and save an optimization model by Docplex and Gurobipy and can apply CPLEX and Gurobi to ``QuadraticProgram``."
msgstr "Podemos utilizar solucionadores de otimização clássicos (CPLEX e Gurobi) com o Qiskit Optimization. Docplex e Gurobipy são as APIs Python para o CPLEX e Gurobi, respectivamente. Podemos carregar e salvar um modelo de otimização com Docplex e Gurobipy e podemos aplicar CPLEX e Gurobi ao ``QuadraticProgram``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:22
msgid "If you want to use the CPLEX solver, you need to install ``pip install 'qiskit-optimization[cplex]'``. Docplex is automatically installed, as a dependent, when you install Qiskit Optimization."
msgstr "Se quiser usar o solucionador de CPLEX, você precisa instalar ``pip install 'qiskit-optimization[cplex]'``. O Docplex é automaticamente instalado, como uma dependência, quando você instala o Qiskit Optimization."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:24
msgid "If you want to use Gurobi and Gurobipy, you need to install ``pip install 'qiskit-optimization[gurobi]'``."
msgstr "Se quiser usar o Gurobi e Gurobipy, você precisa instalar ``pip install 'qiskit-optimization[gurobi]'``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:26
msgid "Note that these solvers installed via pip are free versions, which have some limitations such as number of variables. Also note that the latest version 20.1 of CPLEX is available only for Python 3.7 and 3.8 as of July 2021. See the following pages for details."
msgstr "Observe que esses solucionadores instalados via pip são versões gratuitas, que têm algumas limitações, como número de variáveis. Note também que a versão 20.1 mais recente do CPLEX está disponível apenas para Python 3.7 e 3.8 a partir de julho de 2021. Veja as páginas a seguir para obter detalhes."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:28
msgid "https://pypi.org/project/cplex/"
msgstr "https://pypi.org/project/cplex/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:29
msgid "https://pypi.org/project/gurobipy/"
msgstr "https://pypi.org/project/gurobipy/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:41
msgid "CplexSolver and GurobiSolver"
msgstr "CplexSolver e GurobiSolver"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:43
msgid "Qiskit Optimization supports the classical solvers of CPLEX and Gurobi as ``CplexSolver`` and ``GurobiSolver``, respectively. We can solve ``QuadraticProgram`` with ``CplexSolver`` and ``GurobiSolver`` as follows."
msgstr "O Qiskit Optimization suporta os solucionadores clássicos de CPLEX e Gurobi como ``CplexSolver`` e ``GurobiSolver``, respectivamente. Podemos resolver o ``QuadraticProgram`` com ``CplexSolver`` e ``GurobiSolver`` da seguinte forma."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:208
msgid "We can set the solver parameter of CPLEX as follows. We can display the solver message of CPLEX by setting ``disp=True``. See `Parameters of CPLEX <https://www.ibm.com/docs/en/icos/20.1.0?topic=cplex-parameters>`__ for details of CPLEX parameters."
msgstr "Podemos definir o parâmetro do solucionador de CPLEX do seguinte modo. Podemos exibir a mensagem do solucionador de CPLEX configurando ``disp=True``. Consulte `Parameters of CPLEX <https://www.ibm.com/docs/en/icos/20.1.0?topic=cplex-parameters>`__ para detalhes dos parâmetros do CPLEX."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:299
msgid "We get the same optimal solution by QAOA as follows."
msgstr "Obtemos a mesma solução ótima com QAOA do seguinte modo."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:384
msgid "Translators between ``QuadraticProgram`` and Docplex/Gurobipy"
msgstr "Tradutores entre ``QuadraticProgram`` e Docplex/Gurobipy"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:386
msgid "Qiskit Optimization can load ``QuadraticProgram`` from a Docplex model and a Gurobipy model."
msgstr "O Qiskit Optimization pode carregar ``QuadraticProgram`` a partir de um modelo Docplex e de um modelo Gurobipy."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:388
msgid "First, we define an optimization problem by Docplex and Gurobipy."
msgstr "Primeiro, definimos um problema de otimização com Docplex e Gurobipy."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:547
msgid "We can generate ``QuadraticProgram`` object from both Docplex and Gurobipy models. We see that the two ``QuadraticProgram`` objects generated from Docplex and Gurobipy are identical."
msgstr "Podemos gerar um objeto ``QuadraticProgram`` a partir de ambos os modelos Docplex e Gurobipy. Vemos que os dois objetos ``QuadraticProgram`` gerados a partir de Docplex e Gurobipy são idênticos."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:696
msgid "We can generate a Docplex model and a Gurobipy model from ``QuadraticProgram`` too."
msgstr "Podemos gerar um modelo Docplex e um modelo Gurobipy a partir de um ``QuadraticProgram`` também."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:846
msgid "Indicator constraints of Docplex"
msgstr "Restrições de indicador do Docplex"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:848
msgid "``from_docplex_mp`` supports indicator constraints, e.g., ``u = 0 => x + y <= z`` (u: binary variable) when we convert a Docplex model into ``QuadraticProgram``. It converts indicator constraints into linear constraints using the big-M formulation."
msgstr "``from_docplex_mp`` suporta restrições de indicador, por exemplo, ``u = 0 => x + y <= z`` (u: variável binária) quando convertemos um modelos Docplex em um ``QuadraticProgram``. Ele converte restrições de indicador em restrições lineares utilizando a formulação big-M."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:959
msgid "Let’s compare the solutions of the model with an indicator constraint by"
msgstr "Vamos comparar as soluções do modelos com uma restrição de indicador ao"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:961
msgid "applying CPLEX directly to the Docplex model (without translating it to ``QuadraticProgram``. CPLEX solver natively supports the indicator constraints),"
msgstr "aplicar o CPLEX diretamente ao modelo Docplex (sem traduzi-lo para ``QuadraticProgram``. O solucionador CPLEX suporta nativamente as restrições de indicador),"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:962
msgid "applying QAOA to ``QuadraticProgram`` obtained by ``from_docplex_mp``."
msgstr "aplicar QAOA ao ``QuadraticProgram`` obtido por ``from_docplex_mp``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:964
msgid "We see the solutions are same."
msgstr "Vemos que as soluções são as mesmas."

