msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-06 22:00+0000\n"
"PO-Revision-Date: 2023-02-06 22:29\n"
"Last-Translator: \n"
"Language: pt_UN\n"
"Language-Team: Portuguese (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/09_application_classes.po\n"
"X-Crowdin-File-ID: 9658\n"

#: ../../tutorials/09_application_classes.ipynb:9
msgid "This page was generated from `docs/tutorials/09_application_classes.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/09_application_classes.ipynb`__."

#: ../../tutorials/09_application_classes.ipynb:9
msgid "Application Classes for Optimization Problems"
msgstr "Classes de Aplicação para Problemas de Otimização"

#: ../../tutorials/09_application_classes.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/09_application_classes.ipynb:23
msgid "We introduce application classes for the following optimization problems so that users can easily try various optimization problems on quantum computers."
msgstr "Apresentamos classes de aplicação para os problemas de otimização a seguir, para que os usuários possam facilmente experimentar diversos problemas de otimização em computadores quânticos."

#: ../../tutorials/09_application_classes.ipynb:25
msgid "Exact cover problem"
msgstr "Problema da cobertura exata"

#: ../../tutorials/09_application_classes.ipynb:27
msgid "Given a collection of subsets of items, find a subcollection such that each item is covered exactly once."
msgstr "Dada uma coleção de subconjuntos de itens, encontre uma subcoleção de modo que cada item seja coberta exatamente uma vez."

#: ../../tutorials/09_application_classes.ipynb:29
#: ../../tutorials/09_application_classes.ipynb:422
msgid "Knapsack problem"
msgstr "Problema da mochila"

#: ../../tutorials/09_application_classes.ipynb:31
msgid "Given a set of items, find a subset of items such that the total weight is within the capacity and the total value is maximized."
msgstr "Dado um conjunto de itens, encontre um subconjunto de itens de modo que o peso total esteja dentro da capacidade e o valor total seja maximizado."

#: ../../tutorials/09_application_classes.ipynb:33
msgid "Number partition problem"
msgstr "Problema da partição de números"

#: ../../tutorials/09_application_classes.ipynb:35
msgid "Given a multiset of positive integers, find a partition of the multiset into two subsets such that the sums of the subsets are equal."
msgstr "Dado um multiconjunto de inteiros positivos, encontre uma partição do multiconjunto em dois subconjuntos de modo que as somas dos subconjuntos sejam iguais."

#: ../../tutorials/09_application_classes.ipynb:37
msgid "Set packing problem"
msgstr "Problema do empacotamento de conjuntos"

#: ../../tutorials/09_application_classes.ipynb:39
msgid "Given a collection of subsets of items, find a subcollection such that all subsets of the subcollection are pairwise disjoint and the number of items in the subcollection is maximized."
msgstr "Dada uma coleção de subconjuntos de itens, encontre uma subcoleção de modo que todos os subjconjuntos da subcoleção são dois a dois disjuntos e o número de itens na subcoleção seja maximizado."

#: ../../tutorials/09_application_classes.ipynb:41
msgid "Graph problems"
msgstr "Problemas com grafos"

#: ../../tutorials/09_application_classes.ipynb:43
msgid "Clique problem"
msgstr "Problema do clique"

#: ../../tutorials/09_application_classes.ipynb:45
msgid "Given an undirected graph, find a subset of nodes with a specified number or the maximum number such that the induced subgraph is complete."
msgstr "Dado um grafo não direcionado, encontre um subconjunto de nós com um número especificado ou o número máximo de modo que o sub-grafo induzido seja completo."

#: ../../tutorials/09_application_classes.ipynb:47
msgid "Graph partition problem"
msgstr "Problema de partição de grafos"

#: ../../tutorials/09_application_classes.ipynb:49
msgid "Given an undirected graph, find a partition into two components whose sizes are equal such that the total capacity of the edges between the two components is minimized."
msgstr "Dado um grafo não direcionado, encontre uma partição em dois componentes cujos tamanhos sejam iguais de modo que a capacidade total das arestas entre os dois componentes seja minimizada."

#: ../../tutorials/09_application_classes.ipynb:51
msgid "Max-cut problem"
msgstr "Problema do Corte-Máximo"

#: ../../tutorials/09_application_classes.ipynb:53
msgid "Given an undirected graph, find a partition of nodes into two subsets such that the total weight of the edges between the two subsets is maximized."
msgstr "Dado um grafo não-direcionado, encontre uma partição de nós em dois subconjuntos de modo que o peso total das arestas entre os dois subconjuntos seja maximizado."

#: ../../tutorials/09_application_classes.ipynb:55
msgid "Stable set problem"
msgstr "Problema do conjunto estável"

#: ../../tutorials/09_application_classes.ipynb:57
msgid "Given an undirected graph, find a subset of nodes such that no edge connects the nodes in the subset and the number of nodes is maximized."
msgstr "Dado um grafo não direcionado, encontre um subconjunto de nós de modo que nenhuma aresta conecte os nós no subconjunto e o número máximo de nós seja maximizado."

#: ../../tutorials/09_application_classes.ipynb:59
msgid "Traveling salesman problem"
msgstr "Problema do caixeiro viajante"

#: ../../tutorials/09_application_classes.ipynb:61
msgid "Given a graph, find a route with the minimum distance such that the route visits each city exactly once."
msgstr "Dado um grafo, encontre a rota com a distância mínima de modo que a rota visite cada cidade exatamente uma vez."

#: ../../tutorials/09_application_classes.ipynb:63
msgid "Vehicle routing problem"
msgstr "Problema de roteamento de veículos"

#: ../../tutorials/09_application_classes.ipynb:65
msgid "Given a graph, a depot node, and the number of vehicles (routes), find a set of routes such that each node is covered exactly once except the depot and the total distance of the routes is minimized."
msgstr "Dado um grafo, um nó depósito, e um número de veículos (rotas), encontre um conjunto de rotas de modo que cada nó seja coberto exatamente uma vez, exceto o depósito, e a distância total das rotas seja minimizada."

#: ../../tutorials/09_application_classes.ipynb:67
#: ../../tutorials/09_application_classes.ipynb:121
msgid "Vertex cover problem"
msgstr "Problema da cobertura de vértices"

#: ../../tutorials/09_application_classes.ipynb:69
msgid "Given an undirected graph, find a subset of nodes with the minimum size such that each edge has at least one endpoint in the subsets."
msgstr "Dado um grafo não direcionado, encontre um subconjunto de nós com o tamanho mínimo de modo que cada aresta tenha pelo menos uma ponta nos subconjuntos."

#: ../../tutorials/09_application_classes.ipynb:71
msgid "The application classes for graph problems (``GraphOptimizationApplication``) provide a functionality to draw graphs of an instance and a result. Note that you need to install ``matplotlib`` beforehand to utilize the functionality."
msgstr "As classes de aplicações para problemas de grafos (``GraphOptimizationApplication``) fornecem uma funcionalidade para desenhar grafos de uma instância e um resultado. Observe que você precisa instalar o ``matplotlib`` previamente para utilizar essa funcionalidade."

#: ../../tutorials/09_application_classes.ipynb:82
msgid "We introduce examples of the vertex cover problem and the knapsack problem in this page."
msgstr "Apresentamos exemplos do problema da cobertura de vértices e do problema da mochila nesta página."

#: ../../tutorials/09_application_classes.ipynb:84
msgid "Examples of the max-cut problem and the traveling salesman problem are available in `Max-Cut and Traveling Salesman Problem <06_examples_max_cut_and_tsp.ipynb>`__."
msgstr "Exemplos do problema de corte-máximo e do problema do caixeiro viajante estão disponíveis em `Max-Cut e Problema do Caixeiro Viajante <06_examples_max_cut_and_tsp.ipynb>`__."

#: ../../tutorials/09_application_classes.ipynb:95
msgid "We first import packages necessary for application classes."
msgstr "Primeiro importamos os pacotes necessários para as classes de aplicações."

#: ../../tutorials/09_application_classes.ipynb:123
msgid "We introduce the application class for the vertex cover problem as an example of graph problems. Given an undirected graph, the vertex cover problem asks us to find a subset of nodes with the minimum size such that all edges are covered by any node selected."
msgstr "Apresentamos a classe de aplicação para o problema da cobertura de vértices como um exemplo de problemas com grafos. Dado um grafo não direcionado, o problema da cobertura de vértices nos pede que encontremos um subconjunto de nós com o tamanho mínimo de modo que todas as arestas sejam cobertas por qualquer nó selecionado."

#: ../../tutorials/09_application_classes.ipynb:125
msgid "We import the application class ``VertexCover`` for the vertex cover problem and ``networkx`` to generate a random graph."
msgstr "Importamos a classe de aplicação ``VertexCover`` para o problema da cobertura de vértices e ``networkx`` para gerar um grafo aleatório."

#: ../../tutorials/09_application_classes.ipynb:180
msgid "``VertexCover`` takes a graph as an instance and ``to_quadratic_program`` generates a corresponding ``QuadraticProgram`` of the instance of the vertex cover problem."
msgstr "``VertexCover`` recebe um grafo como uma instância e ``to_quadratic_program`` gera um ``QuadraticProgram`` correspondente da instância do problema da cobertura de vértices."

#: ../../tutorials/09_application_classes.ipynb:283
msgid "You can solve the problem as follows. ``NumPyMinimumEigensolver`` finds the minimum eigen vector. You can also apply QAOA. Note that the solution by QAOA is not always optimal."
msgstr "Você pode resolver o problema da seguinte forma. ``NumPyMinimumEigensolver`` encontra o autovetor mínimo. Você também pode aplicar QAOA. Observe que a solução por QAOA nem sempre é ótima."

#: ../../tutorials/09_application_classes.ipynb:424
msgid "The knapsack problem asks us to find a combination of items such that the total weight is within the capacity of the knapsack and maximize the total value of the items. The following examples solve an instance of the knapsack problem with 5 items by Numpy eigensolver and QAOA."
msgstr "O problema da mochila nos pede para encontrar uma combinação de itens de modo que o peso total está dentro da capacidade da mochila e maximize o valor total dos itens. Os exemplos a seguir resolvem uma instância do problema da mochila com 5 itens com o eigensolver do Numpy e QAOA."

#: ../../tutorials/09_application_classes.ipynb:622
msgid "How to check the Hamiltonian"
msgstr "Como verificar o Hamiltoniano"

#: ../../tutorials/09_application_classes.ipynb:624
msgid "If you want to check the actual Hamiltonian generated from your problem instance, you need to apply a converter as follows."
msgstr "Se deseja verificar o Hamiltoniano real gerado a partir da instância do seu problema, você precisa aplicar um conversor da seguinte forma."

