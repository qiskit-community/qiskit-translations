msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-11 01:17+0000\n"
"PO-Revision-Date: 2022-11-11 02:48\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/04_grover_optimizer.po\n"
"X-Crowdin-File-ID: 9648\n"
"Language: bn_BN\n"

#: ../../tutorials/04_grover_optimizer.ipynb:9
msgid "This page was generated from `docs/tutorials/04_grover_optimizer.ipynb`__."
msgstr "এই পৃষ্ঠাটি `docs/tutorials/04_grover_optimizer.ipynb`__ থেকে বানানো হয়েছে।"

#: ../../tutorials/04_grover_optimizer.ipynb:9
msgid "Grover Optimizer"
msgstr "গ্রোভার অপ্টিমাইজার"

#: ../../tutorials/04_grover_optimizer.ipynb:21
msgid "Introduction"
msgstr "ভূমিকা"

#: ../../tutorials/04_grover_optimizer.ipynb:23
msgid "Grover Adaptive Search (GAS) has been explored as a possible solution for combinatorial optimization problems, alongside variational algorithms such as Variational Quantum Eigensolver (VQE) and Quantum Approximate Optimization Algorithm (QAOA). The algorithm iteratively applies Grover Search to find the optimum value of an objective function, by using the best-known value from the previous run as a threshold. The adaptive oracle used in GAS recognizes all values above or below the current threshold (for max and min respectively), decreasing the size of the search space every iteration the threshold is updated, until an optimum is found."
msgstr "গ্রোভার এডাপটিভ সার্চ (GAS) কে সংমিশ্রণমূলক অপ্টিমাইজেশন সমস্যার পাশাপাশি পরিবর্তনশীল (ভ্যারিয়েশনাল) অ্যালগরিদম, যেমন Variational Quantum Eigensolver (VQE) এবং Quantum Approximate Optimization Algorithm (QAOA) এর সম্ভাব্য সমাধান হিসাবে অন্বেষণ করা হয়েছে। এই অ্যালগরিদমটি একটি অব্জেক্টিভ ফাংশন এর সর্বোত্তম মানটি সন্ধান করার জন্য পুনরুক্তি ভাবে গ্রোভার অনুসন্ধান প্রয়োগ করে, যেটা প্রান্তিক হিসাবে আগের রান থেকে সর্বাধিক পরিচিত মান ব্যবহার করে। GAS-এ ব্যবহৃত অভিযোজিত ওরাকল বর্তমান প্রান্তিকের উপরে বা নীচে (যথাক্রমে সর্বাধিক এবং সর্বনিম্ন জন্য) সমস্ত মানকে স্বীকৃতি দেয়, যতক্ষণ না কোনও সর্বোত্তম সন্ধান পাওয়া যায় ততক্ষণ প্রতিটি পুনরাবৃত্তির প্রান্তিক আপডেট হয় সন্ধানের জায়গার আকার হ্রাস করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:26
msgid "In this notebook we will explore each component of the ``GroverOptimizer``, which utilizes the techniques described in GAS, by minimizing a Quadratic Unconstrained Binary Optimization (QUBO) problem, as described in [1]"
msgstr "[1] এ বর্ণিত শর্তহীন দ্বিঘাত দ্বিমিক অনুকূলায়ন (অপ্টিমাইজেশন) সমস্যাটিকে হ্রাস করার মাধ্যমে এই নোটবুকে আমরা ``GroverOptimizer`` এর প্রত্যেকটি উপাদান সম্পর্কে জানব যেগুলো জি এ এস-এ বর্ণিত উপায়গুলোকে ব্যবহার করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:29
msgid "References"
msgstr "তথ্যসূত্র"

#: ../../tutorials/04_grover_optimizer.ipynb:31
msgid "[1] `A. Gilliam, S. Woerner, C. Gonciulea, Grover Adaptive Search for Constrained Polynomial Binary Optimization, arXiv preprint arXiv:1912.04088 (2019). <https://arxiv.org/abs/1912.04088>`__"
msgstr "[1] `A. Gilliam, S. Woerner, C. Gonciulea, Grover Adaptive Search for Constrained Polynomial Binary Optimization, arXiv preprint arXiv:1912.04088 (2019). <https://arxiv.org/abs/1912.04088>`__"

#: ../../tutorials/04_grover_optimizer.ipynb:43
msgid "Grover Adaptive Search"
msgstr "গ্রোভার অ্যাডাপটিভ সার্চ"

#: ../../tutorials/04_grover_optimizer.ipynb:45
msgid "Grover Search, the core element of GAS, needs three ingredients:"
msgstr "GAS এর মূল উপাদান গ্রোভার সার্চের জন্য তিনটি উপাদান প্রয়োজন:"

#: ../../tutorials/04_grover_optimizer.ipynb:47
msgid "A state preparation operator :math:`A` to construct a superposition of all states in the search space."
msgstr "একটি মান প্রস্তুতি অপারেটর :math:`A` সার্চ স্পেসে সমস্ত মানের জন্য একটি উপরিপাতন তৈরি করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:49
msgid "An oracle operator :math:`O`, that recognizes the states of interest and multiplies their amplitudes by -1."
msgstr "একটি ওরাকল অপারেটর :math:`O` যা আগ্রহের মানগুলি স্বীকৃতি দেয় এবং তাদের বিস্তার -1 দ্বারা বহুগুণ করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:51
msgid "The Grover diffusion operator :math:`D`, that multiplies the amplitude of the :math:`|0\\rangle_n` state by -1."
msgstr "Grover ব্যাপ্তি অপারেটর :math:`D`, যা :math:`|0\\rangle_n` বিস্তার এর মান কে -১ দ্বারা গুন করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:53
msgid "While implementations of GAS vary around the specific use case, the general framework still loosely follows the steps described below."
msgstr "GAS বাস্তবায়ন নির্দিষ্ট ব্যবহারের ক্ষেত্রে প্রায় পৃথক হলেও সাধারণ কাঠামো এখনও নীচে বর্ণিত পদক্ষেপগুলি আলগাভাবে অনুসরণ করে।"

#: ../../tutorials/04_grover_optimizer.ipynb:59
msgid "|959a8d0a6f3f43548786ac9219a27038|"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:84
msgid "959a8d0a6f3f43548786ac9219a27038"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:65
msgid "``GroverOptimizer`` uses ``QuadraticProgramToNegativeValueOracle`` to construct :math:`A_y` such that it prepares a :math:`n`-qubit register to represent the equal superposition of all :math:`|x\\rangle_n` and a :math:`m`-qubit register to (approximately) represent the corresponding :math:`|Q(x)-y\\rangle_m`. Then, all states with :math:`(Q(x) - y)` negative should be flagged by :math:`O_y`. Note that in the implementation discussed, the oracle operator is actually independent of :math:`y`, but this is not a requirement. For clarity, we will refer to the oracle as :math:`O` when the oracle is independent of :math:`y`."
msgstr "``GroverOptimizer`` :math:`A_y`নির্মাণ করতে ``QuadraticProgramToNegativeValueOracle`` ব্যবহার করে যাতে এটা :math::`n`-qubit রেজিস্টার প্রস্তুত করে যাতে উপরিপাতন প্রতিনিধিত্ব করতে সব :math:`|x\\rangle_n` এবং একটি :math:`m`-qubit রেজিস্টার (আনুমানিক) :math:`|Q(x)-y\\rangle_m` উপস্থাপন করুন।তারপরে, :math:`(Q(x) - y)` নেতিবাচক সমস্ত মানগুলি :math:`O_y` পতাকা দ্বারা চিহ্নিত করা উচিত। নোট করুন, যে আলোচিত বাস্তবায়নে, ওরাকল অপারেটরটি আসলে :math:`y` এর থেকে স্বতন্ত্র, তবে এটি কোনো প্রয়োজন নয়। স্পষ্টতার জন্য, যখন ওরাকলটি :math:`y` থেকে স্বতন্ত্র থাকে, তখন আমরা ওরাকলকে :math:`O` হিসাবে উল্লেখ করব।"

#: ../../tutorials/04_grover_optimizer.ipynb:68
msgid "Put formally, ``QuadraticProgramToNegativeValueOracle`` constructs an :math:`A_y` and :math:`O` such that:"
msgstr "রীত্যনুসারে ``QuadraticProgramToNegativeValueOracle`` :math:`A_y` এবং :math:`O` গঠন করে যাতে:"

#: ../../tutorials/04_grover_optimizer.ipynb:74
msgid "|01dcea20335b41c8a46b8661e104faad|"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:87
msgid "01dcea20335b41c8a46b8661e104faad"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:80
msgid "where :math:`|x\\rangle` is the binary encoding of the integer :math:`x`."
msgstr "যেখানে :math:`|x\\rangle` হল :math:`x` অখণ্ড সংখ্যার দ্বিমিক (বাইনারি) এনকোডিং।"

#: ../../tutorials/04_grover_optimizer.ipynb:82
msgid "At each iteration in which the threshold :math:`y` is updated, we adapt :math:`A_y` such that the function values are shifted up or down (for minimum and maximum respectively) by :math:`y`. For example, in the context of finding the minimum, as the value of :math:`y` decreases, the search space (negative values) also decreases, until only the minimum value remains. A concrete example will be explored in the next section."
msgstr "প্রতিটি পুনরাবৃত্তিতে যেখানে প্রান্তিক :math:`y` আপডেট করা হয়, আমরা অভিযোজিত :math:` A_y` যেমন ফাংশন মানগুলি উপরে বা নিচে স্থানান্তরিত হয় (যথাক্রমে সর্বনিম্ন এবং সর্বাধিকের জন্য) দ্বারা :math:`y`। উদাহরণস্বরূপ, সর্বনিম্ন সন্ধানের প্রসঙ্গে, যেমন :math:`y` এর মান হ্রাস হয়, অনুসন্ধানের স্থানো (নেতিবাচক মান) হ্রাস পায়, যতক্ষণ না কেবল সর্বনিম্ন মান থাকে। এর একটি অবয়ববিশিষ্ট উদাহরণ পরবর্তী বিভাগে খুঁজা হবে।"

#: ../../tutorials/04_grover_optimizer.ipynb:99
msgid "Find the Minimum of a QUBO Problem using GroverOptimizer"
msgstr "GroverOptimizer ব্যবহার করে কোনো ন্যূনতম QUBO সমস্যার সন্ধান করুন"

#: ../../tutorials/04_grover_optimizer.ipynb:101
msgid "The following is a toy example of a minimization problem."
msgstr "নিম্নলিখিত একটি লঘুকরণ সমস্যার একটি ছোট্ট উদাহরণ আছে।"

#: ../../tutorials/04_grover_optimizer.ipynb:103
msgid ":nbsphinx-math:`\\begin{eqnarray} \\min_{x \\in \\{0, 1\\}^3} -2x_0x_2 - x_1x_2 - 1x_0 + 2x_1 - 3x_2. \\end{eqnarray}`"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:107
msgid "For our initial steps, we create a docplex model that defines the problem above, and then use the ``from_docplex_mp()`` function to convert the model to a ``QuadraticProgram``, which can be used to represent a QUBO in Qiskit Optimization."
msgstr "প্রাথমিক পদক্ষেপরূপে আমরা একটি ডকপ্লেক্স মডেল তৈরি করব যেটা উপরের সমস্যাটিকে সংজ্ঞায়িত করবে, তারপর মডেলটিকে একটি ``QuadraticProgram`` এ রূপান্তর করতে ``from_docplex()`` ফাংশনটি ব্যবহার করব, যা Qiskit অনুকূলকরণে (অপ্টিমাইজেশন) একটা QUBO এর প্রতিনিধিত্ব করতে পারে।"

#: ../../tutorials/04_grover_optimizer.ipynb:205
msgid "Next, we create a ``GroverOptimizer`` that uses 6 qubits to encode the value, and will terminate after there have been 10 iterations of GAS without progress (i.e. the value of :math:`y` does not change). The ``solve()`` function takes the ``QuadraticProgram`` we created earlier, and returns a results object that contains information about the run."
msgstr "এরপরে, আমরা একটি ``GroverOptimizer`` তৈরি করব যা মানটি এনকোড করতে ৬ কিউবিট ব্যবহার করে এবং প্রগতি ছাড়াই GAS ১০ টি পুনরাবৃত্তি হওয়ার পরে শেষ হবে (অর্থাৎ :math:`y` এর মান পরিবর্তন হয় না)। ``solve()`` ফাংশনটি আমরা আগে তৈরি ``QuadraticProgram`` নেয় এবং একটি ফলাফল অবজেক্ট দেয় যা রান সম্পর্কে তথ্য ধারণ করে।."

#: ../../tutorials/04_grover_optimizer.ipynb:258
msgid "This results in the optimal solution :math:`x_0=1`, :math:`x_1=0`, :math:`x_2=1` and the optimal objective value of :math:`-6` (most of the time, since it is a randomized algorithm). In the following, a custom visualization of the quantum state shows a possible run of ``GroverOptimizer`` applied to this QUBO."
msgstr "এটি সর্বোত্তম সমাধানে ফলাফল :math:`x_0 = 1`, :math:` x_1 = 0`, :math: `x_2 = 1` এবং সর্বোত্তম উদ্দেশ্য মান :math:` -6` (বেশিরভাগ সময়, যেহেতু এটি রন্ডমাইজড অ্যালগরিদম)। নিম্নলিখিতটিতে, কোয়ান্টাম মানের একটি বিশেষায়িত চিত্রায়ন (কাস্টম ভিজ্যুয়ালাইজেশন) এই QUBO তে প্রয়োগ হওয়া ``GroverOptimizer`` এর একটি সম্ভাব্য রান দেখায়।"

#: ../../tutorials/04_grover_optimizer.ipynb:264
msgid "|cdf57a76619e48d2897196b64533037b|"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:283
msgid "cdf57a76619e48d2897196b64533037b"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:270
msgid "Each graph shows a single iteration of GAS, with the current values of :math:`r` (= iteration counter) and :math:`y` (= threshold/offset) shown in the title. The X-axis displays the integer equivalent of the input (e.g. ‘101’ :math:`\\rightarrow` 5), and the Y-axis shows the possible function values. As there are 3 binary variables, there are :math:`2^3=8` possible solutions, which are shown in each graph. The color intensity indicates the probability of measuring a certain result (with bright intensity being the highest), while the actual color indicates the corresponding phase (see phase color-wheel below). Note that as :math:`y` decreases, we shift all of the values up by that amount, meaning there are fewer and fewer negative values in the distribution, until only one remains (the minimum)."
msgstr "প্রতিটি গ্রাফ শিরোনামে প্রদর্শিত :math:`r` (= পুনরুক্তি কাউন্টার) এবং :math:`y` (= প্রান্তিক/অফসেট) এর বর্তমান মানগুলির সাথে GAS এর একক পুনরাবৃত্তি দেখায়। X-অক্ষটি নিবেশের (ইনপুটের) সমতুল্য পূর্ণসংখ্যা প্রদর্শন করে (উদাঃ ‘101’ :math:`\\rightarrow` 5), এবং Y-অক্ষটি সম্ভাব্য ফাংশন মানগুলি দেখায়। যেমন এখনে ৩ টি দ্বিমিক (বাইনারি) চল রাশি রয়েছে, তেমন :math:`2^3=8` সম্ভাব্য সমাধান রয়েছে, যেটা প্রতিটি গ্রাফে প্রদর্শিত করা হয়েছে। রঙের তীব্রতা একটি নির্দিষ্ট ফলাফলের পরিমাপের সম্ভাবনা নির্দেশ করে (উজ্জ্বল তীব্রতা সর্বাধিক থাকে), তবে প্রকৃত রঙটি সংশ্লিষ্ট দশাটি নির্দেশ করে (নিচে দশার রঙ-চাকাটি দেখুন)। নোট করুন, যে হিসাবে :math:`y` হ্রাস হয়, আমরা সমস্ত মানকে সেই পরিমাণে উপরে স্থানান্তরিত করি, অর্থাত বিতরণে কম এবং কম নেতিবাচক মান রয়েছে, যতক্ষণ না কেবল একটি অবশেষ থাকে (সর্বনিম্ন)।"

#: ../../tutorials/04_grover_optimizer.ipynb:277
msgid "|dc272194b66a400386b62a1eeb679f85|"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:286
msgid "dc272194b66a400386b62a1eeb679f85"
msgstr ""

#: ../../tutorials/04_grover_optimizer.ipynb:298
msgid "Check that GroverOptimizer finds the correct value"
msgstr "পরীক্ষা করে দেখুন যে GroverOptimizer সঠিক মানটি পাচ্ছে"

#: ../../tutorials/04_grover_optimizer.ipynb:300
msgid "We can verify that the algorithm is working correctly using the ``MinimumEigenOptimizer`` in Qiskit."
msgstr "আমরা যাচাই করতে পারি যে সমাধানপদ্ধতিটি Qiskit এ ``MinimumEigenOptimizer`` ব্যবহার করে সঠিকভাবে কাজ করছে।"

