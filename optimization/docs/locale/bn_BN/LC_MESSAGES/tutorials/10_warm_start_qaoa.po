msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-30 14:36+0000\n"
"PO-Revision-Date: 2022-03-30 15:33\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/10_warm_start_qaoa.po\n"
"X-Crowdin-File-ID: 9660\n"
"Language: bn_BN\n"

#: ../../tutorials/10_warm_start_qaoa.ipynb:9
msgid "This page was generated from `docs/tutorials/10_warm_start_qaoa.ipynb`__."
msgstr "এই পৃষ্ঠাটি `docs/tutorials/10_warm_start_qaoa.ipynb`__ -থেকে বানানো হয়েছে।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:9
msgid "Warm-starting quantum optimization"
msgstr "কোয়ান্টাম অনুকূলকরণের (অপটিমাইজেশন) প্রস্তুতিপর্ব"

#: ../../tutorials/10_warm_start_qaoa.ipynb:12
msgid "Introduction"
msgstr "ভূমিকা"

#: ../../tutorials/10_warm_start_qaoa.ipynb:14
msgid "Optimization problems with integer variables or constraints are often hard to solve. For example, the Quadratic Unconstrained Binary Optimization (QUBO) problem, i.e."
msgstr "পূর্ণসংখ্যা জাতীয় চলরাশি বা শর্তবিশিষ্ট অনুকূলায়ন (অপ্টিমাইজেশন) সমস্যাসমূহর সমাধান করা সাধারণত জটিল হয়। উদাহরণস্বরূপ, শর্তহীন দ্বিঘাত দ্বিমিক অনুকূলায়ন (অপ্টিমাইজেশন) (কিউইউবিও (QUBO)) সমস্যা, অর্থাৎ"

#: ../../tutorials/10_warm_start_qaoa.ipynb:16
msgid ":nbsphinx-math:`\\begin{align} \\min_{x\\in\\{0,1\\}^n}x^T\\Sigma x + \\mu^Tx, \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} \\min_{x\\in\\{0,1\\}^n}x^T\\Sigma x + \\mu^Tx, \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:20
msgid "is NP-Hard. Here, :math:`\\Sigma` is an :math:`n\\times n` matrix and :math:`x` is a vector of :math:`n` binary variables. Note that we could have added the linear term :math:`\\mu` to the diagonal as :math:`x_i^2=x_i` for :math:`x_i\\in\\{0, 1\\}`. While QUBOs are hard to solve there exists many ways to relax them to problems that are easier to solve. For example, if :math:`\\Sigma` is semi-definite positive the QUBO can be relaxed and results in a convex Quadratic Program"
msgstr "হলো এনপি-হার্ড। এখানে :math:`\\Sigma` হলো একটি :math:`n\\ গুণ n` ম্যাট্রিক্স এবং :math:`x` হলো :math:`n` দ্বিমিক (বাইনারি) চলরাশির দিকরাশি। মনে রেখো আমরা কর্ণে রৈখিক পদ :math:`\\mu` যোগ করতে পারতাম, কারণ :math:`x_i^2=x_i` যখন :math:`x_i\\in\\{0, 1\\}`। কিউইউবিও (QUBO) সমাধান করা কঠিন হলেও আমরা বিভিন্ন পদ্ধতিতে এগুলোকে শিথিল করে সমাধানযোগ্য করতে পারি। উদাহরণস্বরূপ, যদি :math:`\\Sigma` একটা অর্ধ-নিশ্চিত ধনাত্মক তাহলে কিউইউবিও (QUBO) -কে শিথিল করে একটা উত্তল দ্বিঘাত (কোয়াড্রাটিক) নির্দেশমালাতে পরিবর্তন করা যায়"

#: ../../tutorials/10_warm_start_qaoa.ipynb:22
msgid ":nbsphinx-math:`\\begin{align} \\min_{x\\in[0,1]^n}x^T\\Sigma x, \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} \\min_{x\\in[0,1]^n}x^T\\Sigma x, \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:26
msgid "which becomes easy to solve as :math:`x` now represents :math:`n` continuous variables bound to the range :math:`[0, 1]`. Such relaxations can be leveraged to warm-start quantum optimization algorithms as shown in [1]."
msgstr "যেটার সমাধান তুলনামূলকভাবে সহজ কারণ :math:`x` এখন :math:`n` গুলো :math:`[0, 1]` সীমার মধ্যে সীমিত অবিচ্ছিন্ন চলরাশির প্রতিনিধিত্ব করে। এরকম শিথিলকরণ (রিলাক্সেশন) এর উপর নির্ভর করে কোয়ান্টাম অনুকূলকরণ (অপটিমাইজেশন) অ্যালোগরিদমের প্রস্তুতি নেওয়া যেতে পারে (চিত্র [১])।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:29
msgid "References"
msgstr "তথ্যসূত্র"

#: ../../tutorials/10_warm_start_qaoa.ipynb:31
msgid "[1] `D. J. Egger, J Marecek, S. Woerner, Warm-starting quantum optimization, arXiv:2009.10095 <http://arxiv.org/abs/2009.10095>`__"
msgstr "[১] `D. J. Egger, J Marecek, S. Woerner, Warm-starting quantum optimization, arXiv:2009.10095 <http://arxiv.org/abs/2009.10095>`__"

#: ../../tutorials/10_warm_start_qaoa.ipynb:68
msgid "Preliminaries: relaxing QUBOs"
msgstr "প্রাথমিক: কিউইউবিও (QUBO) এর শিথিলকরণ"

#: ../../tutorials/10_warm_start_qaoa.ipynb:70
msgid "First, we show how to relax a QUBO built with a semi-definite positive matrix to obtain an easy-to-solve QP."
msgstr "প্রথমে আমরা দেখবো কিভাবে একটা অর্ধ-নিশ্চিত ধনাত্মক ম্যাট্রিক্স দ্বারা বানানো কিউইউবিও (QUBO) এর শিথিলকরন করে একটা সহজ কিউপি বানানো যায়।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:115
msgid "For this example, we use a positive semi-definite matrix :math:`\\Sigma` and a linear term :math:`\\mu` as defined below."
msgstr "এই উদাহরণে আমরা নিম্নলিখিত একটা ধনাত্মক অর্ধনিশ্চিত ম্যাট্রিক্স :math:`\\Sigma` এবং একটা রৈখিক পদ :math:`\\mu` ব্যবহার করব।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:146
msgid "Using DOCPLEX we build a model with binary variables."
msgstr "ডকপ্লেক্স ব্যবহার করে আমরা দ্বিমিক (বাইনারি) চলরাশিবিশিষ্ট একটা মডেল বানাবো।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:273
msgid "Such binary problems are hard to deal with but can be solved if the problem instance is small enough. Our example above has as solution"
msgstr "এমন দ্বিমিক (বাইনারি) সমস্যা সমাধান করা কঠিন, কিন্তু সমস্যার দৃষ্টান্ত (ইনস্ট্যান্স) ছোট হলে সমাধান সম্ভব। উপরের উদাহরণের সমাধান আছে"

#: ../../tutorials/10_warm_start_qaoa.ipynb:324
msgid "We can create a relaxation of this problem in which the variables are no longer binary. Note that we use the ``QuadraticProgramToQubo`` converter to convert the constraint into a quadratic penalty term. We do this to remain consistent with the steps that the Qiskit optimization module applies internally."
msgstr "আমরা এই সমস্যার একটি শিথিলতা তৈরি করতে পারি যেখানে ভেরিয়েবল আর বাইনারি নয়। মনে রাখবেন যে আমরা ``QuadraticProgramToQubo`` কনভার্টার ব্যবহার করে সীমাবদ্ধতাকে দ্বিঘাত পেনাল্টি টার্মে রূপান্তর করি। Qiskit অপ্টিমাইজেশন মডিউলটি অভ্যন্তরীণভাবে প্রযোজ্য ধাপগুলির সাথে সামঞ্জস্যপূর্ণ থাকার জন্য আমরা এটি করি।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:442
msgid "The solution of this continuous relaxation is different from the solution to the binary problem but can be used to warm-start a solver when dealing with the binary problem."
msgstr "এই ক্রমাগত শিথিলকরণ (রিলাক্সেশন) সমাধান বাইনারি সমস্যার সমাধান থেকে আলাদা কিন্তু বাইনারি সমস্যা মোকাবেলার সময় সমাধানকারীকে উষ্ণ-শুরু করতে ব্যবহার করা যেতে পারে।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:548
msgid "QAOA"
msgstr "কিউএওএ (QAOA)"

#: ../../tutorials/10_warm_start_qaoa.ipynb:550
msgid "Here, we illustrate how to warm-start the quantum approximate optimization algorithm (QAOA) by leveraging the relaxed problem shown above."
msgstr "এখানে, আমরা দেখিয়েছি কিভাবে উপরে দেখানো শিথিলকরণ সমস্যাটি ব্যবহার করে কোয়ান্টাম অ্যাপ্রক্সিমেইট অপ্টিমাইজেশন অ্যালগরিদম (QAOA) উষ্ণ-শুরু করতে হয়।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:553
msgid "Standard QAOA"
msgstr "সাধারণ কিউএওএ (QAOA)"

#: ../../tutorials/10_warm_start_qaoa.ipynb:555
msgid "First, we use standard QAOA to solve the QUBO. To do this, we convert the QUBO to Qiskit’s QuadraticProgram class (note that the resulting problem is still a binary problem)."
msgstr "প্রথমে, আমরা QUBO সমাধান করার জন্য স্ট্যান্ডার্ড QAOA ব্যবহার করি। এটি করার জন্য, আমরা কিউইউবিও (QUBO) কে কিস্কিটের QuadraticProgram ক্লাসে রূপান্তর করি (লক্ষ্য করুন যে ফলাফলটি এখনও একটি বাইনারি সমস্যা)।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:634
#: ../../tutorials/10_warm_start_qaoa.ipynb:942
msgid "Warm-start QAOA"
msgstr "কিউএওএ (QAOA) এর প্রস্তুতি"

#: ../../tutorials/10_warm_start_qaoa.ipynb:636
msgid "Next, we compare this result to a warm-start QAOA in which we use the solution to the continuous relaxation of the problem. First, we create the initial state"
msgstr "পরবর্তী, আমরা এই ফলাফলটিকে একটি উষ্ণ-শুরু QAOA এর সাথে তুলনা করি যেখানে আমরা সমস্যার অবিরাম শিথিলতার সমাধান ব্যবহার করি। প্রথমত, আমরা প্রাথমিক মান বা অবস্থা তৈরি করি"

#: ../../tutorials/10_warm_start_qaoa.ipynb:638
msgid ":nbsphinx-math:`\\begin{align} |\\phi^*\\rangle=\\bigotimes_{i=0}^{n-1}R_y(\\theta_i)|0\\rangle_n . \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} |\\phi^*\\rangle=\\bigotimes_{i=0}^{n-1}R_y(\\theta_i)|0\\rangle_n . \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:642
msgid "which is given by applying :math:`R_y` rotations with an angle :math:`\\theta=2\\arcsin(\\sqrt{c^*_i})` that depends on the solution to the relaxed problem. Here, :math:`c^*_i` the value of variable :math:`i` of the relaxed problem."
msgstr "যা :math:`\\theta=2\\arcsin(\\sqrt{c^*_i})` কোণ দিয়ে :math:`R_y` ঘূর্ণন প্রয়োগ করে দেওয়া হয় যা আরামদায়ক সমস্যার সমাধানের উপর নির্ভর করে। এখানে, :math:`c^*_i` হল আরামদায়ক সমস্যার পরিবর্তনশীল y এর মান।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:680
msgid "Next, we create the mixer operator for QAOA. When warm-starting QAOA we must ensure that the mixer operator has the initial state as ground state. We therefore chose the Hamiltonian"
msgstr "পরবর্তী, আমরা QAOA এর জন্য মিক্সার অপারেটর তৈরি করি। QAOA শুরু করার সময় আমাদের অবশ্যই নিশ্চিত করতে হবে যে মিক্সার অপারেটরের প্রাথমিক অবস্থা গ্রাউন্ড স্টেট হিসাবে আছে। তাই আমরা হ্যামিল্টোনিয়ানকে বেছে নিয়েছি"

#: ../../tutorials/10_warm_start_qaoa.ipynb:682
msgid ":nbsphinx-math:`\\begin{align} H_{M,i}^{(ws)}= \\begin{pmatrix} 2c_i^*-1 & -2\\sqrt{c_i^*(1-c_i^*)} \\\\ -2\\sqrt{c_i^*(1-c_i^*)} & 1-2c_i^* \\end{pmatrix} \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} H_{M,i}^{(ws)}= \\begin{pmatrix} 2c_i^*-1 & -2\\sqrt{c_i^*(1-c_i^*)} \\\\ -2\\sqrt{c_i^*(1-c_i^*)} & 1-2c_i^* \\end{pmatrix} \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:690
msgid "as mixer operator for qubit :math:`i`. Once multiplied by :math:`-i\\beta` and exponentiated this mixer produces the following mixer circuit."
msgstr "কিউবিট :math:`i` এর জন্য মিক্সার অপারেটর হিসাবে। একবার :math:`-i\\beta` দ্বারা গুণিত এবং এক্সপোনেন্টিয়েটেড এই মিক্সার নিম্নলিখিত মিক্সার সার্কিট তৈরি করে।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:730
msgid "The initial state and mixer operator can then be passed to QAOA."
msgstr "প্রাথমিক অবস্থা এবং মিক্সার অপারেটর তারপর QAOA এর কাছে প্রেরণ করা যেতে পারে।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:807
msgid "Analysis"
msgstr "বিশ্লেষণ"

#: ../../tutorials/10_warm_start_qaoa.ipynb:809
msgid "Both results appear to give the same result. However, when we look at the underlying probability distribution we observe that the warm-start QAOA has a much higher probability of sampling the optimal solution."
msgstr "উভয় ফলাফল একই ফলাফল দিতে প্রদর্শিত হবে। যাইহোক, যখন আমরা অন্তর্নিহিত সম্ভাব্যতা বিতরণের দিকে তাকাই তখন আমরা লক্ষ্য করি যে উষ্ণ-শুরু QAOA এর সর্বোত্তম সমাধানের নমুনা দেওয়ার সম্ভাবনা অনেক বেশি।"

#: ../../tutorials/10_warm_start_qaoa.ipynb:944
msgid "The warm-start features above are available in the Qiskit optimization module as a single optimizer named ``WarmStartQAOAOptimizer`` which is illustrated below. This solver will solve a QUBO with a warm-start QAOA. It computes :math:`c^*` by relaxing the problem. This behavior is controlled by setting ``relax_for_pre_solver`` to ``True``."
msgstr "উপরের উষ্ণ-শুরু বৈশিষ্ট্যগুলি কিস্কিট অপ্টিমাইজেশান মডিউলে ``WarmStartQAOAOptimizer`` নামে একটি একক অপ্টিমাইজার হিসাবে উপলব্ধ যা নীচে চিত্রিত করা হয়েছে। এই সমাধানকারী একটি উষ্ণ-শুরু QAOA দিয়ে একটি QUBO সমাধান করবে। এটি সমস্যাকে শিথিল করে :math:`c^*` গণনা করে। এই আচরণ ``relax_for_pre_solver`` থেকে ``True`` সেট করে নিয়ন্ত্রিত হয়।"

