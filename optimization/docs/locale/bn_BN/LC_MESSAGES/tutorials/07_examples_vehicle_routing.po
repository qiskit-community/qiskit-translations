msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-06 17:29+0000\n"
"PO-Revision-Date: 2022-07-06 18:25\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/07_examples_vehicle_routing.po\n"
"X-Crowdin-File-ID: 9654\n"
"Language: bn_BN\n"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:9
msgid "This page was generated from `docs/tutorials/07_examples_vehicle_routing.ipynb`__."
msgstr "এই পৃষ্ঠাটি `docs/tutorials/07_examples_vehicle_routing.ipynb`__ থেকে বানানো হয়েছে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:9
msgid "Vehicle Routing"
msgstr "বাহন(ভেহিকেল) রাউটিং"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:12
msgid "The Introduction"
msgstr "ভূমিকা"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:14
msgid "Logistics is a major industry, with some estimates valuing it at USD 8183 billion globally in 2015. Most service providers operate a number of vehicles (e.g., trucks and container ships), a number of depots, where the vehicles are based overnight, and serve a number of client locations with each vehicle during each day. There are many optimization and control problems that consider these parameters. Computationally, the key challenge is how to design routes from depots to a number of client locations and back to the depot, so as to minimize vehicle-miles traveled, time spent, or similar objective functions. In this notebook we formalize an idealized version of the problem and showcase its solution using the quantum approximate optimization approach of Farhi, Goldstone, and Gutmann (2014)."
msgstr "সরবরাহ শিল্প একটি বড় শিল্প,২০১৫ সালে যার অনুমাকি বাজার মূল্য ছিল ৮১৮৩ মার্কিন ডলার।প্রায় সমস্ত সেবা প্রদানকারী অনেক গুলি বাহন(যেমন মাল বোঝাই গাড়ি ও জাহাজ),অনেক গুলি ডিপো ব্যাবহার করেন যেখানে বাহন গুলি এক রাতের জন্যে এবং অনেকগুলি খরিদ্দারকে বিভিন্ন জায়গায় সামগ্রী সরবরাহ করে থাকে প্রতিটি বাহন দ্বারা প্রতিদিন। এই স্থিতিমাপ গুলিকে অনেক অপটিমাইজেশন এবং নিয়ন্ত্রণ সমস্যা(কন্ট্রোল প্রবলেম) দ্বারা গণ্য করা হয়। গাণিতিক ভাবে মূল সমস্যা হলো এই রুট বা যাত্রাপথ গুলিকে এমন ভাবে নকশা বা ডিজাইন করা যাতে কম যাত্রা পথ অতিক্রান্ত করে ,কম সময়ে বা অনুরূপ নৈর্ব্যক্তিক অন্বয় (অব্জেক্টিভ ফাংশন) কাজটি করা যায়।এই নোটবুকের মধ্যে আমরা এই সমস্যার একটি আদর্শ সংস্করণ বিধিবদ্ধ করব এবং তার সমাধান দেখাব ফারহি ,গোল্ডস্টেইন এবং গুটম্যানের (২০১৪) কোয়ান্টাম আনুমানিক অপটিমাইজেশন প্রন্থা দ্বারা।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:17
msgid "The overall workflow we demonstrate comprises:"
msgstr "সামগ্রিকভাবে আমাদের প্রদর্শিত কর্মধারা গঠিত হয়:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:19
msgid "establish the client locations. Normally, these would be available ahead of the day of deliveries from a database. In our use case, we generate these randomly."
msgstr "খরিদ্দারের স্থান প্রতিষ্টিত করা। সাধারণত,এগুলি পাওয়া যাবে একটি ডাটাবেজ (দস্তাবেজ) থেকে বিতরণের দিনের আগে।আমাদের ব্যবহারিক ক্ষেত্র আমরা এটি সৃষ্টি করি এলোমেলো ভাবে বা যদৃচ্ছভাবে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:21
msgid "compute the pair-wise distances, travel times, or similar. In our case, we consider the Euclidean distance, “as the crow flies”, which is perhaps the simplest possible."
msgstr "জোড় দূরত্ব গুলি, যাত্রার সময়গুলি বা অনুপুর গননা করো।আমাদের ক্ষেত্রে আমরা বিবেচনা করবো ইউক্লিডিয়ান দূরত্ব,\"ঠিক সোজা পথ দিয়ে\",সম্ভবত যেটা সবচেয়ে সহজতম।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:23
msgid "compute the actual routes. This step is run twice, actually. First, we obtain a reference value by a run of a classical solver (IBM CPLEX) on the classical computer. Second, we run an alternative, hybrid algorithm partly on the quantum computer."
msgstr "আসল রুট গুলি গননা করো।আসলে এই ধাপটি দুবার চালানো হয়।প্রথমে আমরা একটি তথ্যসূত্র (রেফারেন্স) মান প্রাপ্ত করি একটি প্রথাগত (ক্লাসিক্যাল) সমাধানকারী (সলভার)(IBM CPLEX) একটি প্রথাগত প্রথাগত (ক্লাসিক্যাল) কম্পিউটারে চালিয়ে।দ্বিতীয়তে আংশিক ভাবে একটি কোয়ান্টাম কম্পিউটারে আমরা একটি বিকল্প, হাইব্রিড অ্যালগরিদম / ধরাক্রম চালায়।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:25
msgid "visualization of the results. In our case, this is again a simplistic plot."
msgstr "ফলাফল দৃশ্যায়ন বা চিত্রায়ন।আমাদের ক্ষেত্রে,এটি আবার একটি সহজ সরললে খচিত্র বা আঁকা(প্লট)।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:27
msgid "In the following, we first explain the model, before we proceed with the installation of the pre-requisites and the data loading."
msgstr "এটিতে আমরা প্রথমে নকশাটিকে বর্ণনা করবো, পূর্ব প্রয়োজনীয় (প্রী রিকুইসিট) অধিষ্ঠানকরণ(ইনস্টলেশন) এবং তথ্য বোঝাই বা লোডিং করার আগে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:30
msgid "The Model"
msgstr "নকশা "

#: ../../tutorials/07_examples_vehicle_routing.ipynb:32
msgid "Mathematically speaking, the vehicle routing problem (VRP) is a combinatorial problem, wherein the best routes from a depot to a number of clients and back to the depot are sought, given a number of available vehicles. There are a number of formulations possible, extending a number of formulations of the traveling salesman problem [Applegate et al, 2006]. Here, we present a formulation known as MTZ [Miller, Tucker, Zemlin, 1960]."
msgstr "গাণিতিক ভাবে বললে,ভেহিকেল বা বাহন রাউটিং সমস্যা (ভি.পি.আর.)হলো একটি সমাবেশ সমস্যা,দিয়ে রাখা কিছু সংখ্যক বাহনের জন্যে সবচেয়ে ভালো রাস্তা বা রুট জানতে চাওয়া হয় ডিপো বা গুদামঘর থেকে খরিদ্দার পর্যন্ত।এখানে অনেক গুলি সূত্র সম্ভব,ট্র্যাভেলিইং সেলসম্যান সমস্যার[Applegate et al, 2006] বেশ কয়েকটি সূত্র প্রসারিত করে।আমরা এখানে একটি সূত্র পেশ করছি যাকে বলা হয় এম.টি.জেড [Miller, Tucker, Zemlin, 1960]।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:34
msgid "Let :math:`n` be the number of clients (indexed as :math:`1,\\dots,n`), and :math:`K` be the number of available vehicles. Let :math:`x_{ij} = \\{0,1\\}` be the binary decision variable which, if it is :math:`1`, activates the segment from node :math:`i` to node :math:`j`. The node index runs from :math:`0` to :math:`n`, where :math:`0` is (by convention) the depot. There are twice as many distinct decision variables as edges. For example, in a fully connected graph, there are :math:`n(n+1)` binary decision variables."
msgstr "ধরা জাক :math:`n` খরিদ্দারের সংখ্যা(সূচিত হয় :math:`1,\\dots,n` দ্বারা),এবং  :math:`K` হলো বাহন বা গাড়ির সংখ্যা। ধরা জাক  :math:`x_{ij} = \\{0,1\\}` হলোদ্বিমিক (বাইনারি) সিদ্ধান্ত বা ডিসিসন চল রাশি যেটি যদি  :math:`1` থাকে তবে সেটি বিভাগটিকে সক্রিয় করে :math:`i` নোড থেকে :math:`j` নোডে। নোড সূচক চলে :math:`0` থেকে :math:`n` পর্যন্ত,যেখানে :math:`0` হলো ডিপোটি বা গুদামঘরটি (প্রচলিত ভাবে)।প্রান্ত হিসাবে দ্বিগুণ স্বতন্ত্র সিদ্ধান্তের চলরশি রয়েছে। উদাহরণ স্বরূপ একটি পূর্ণ সংযুক্ত গ্রাফে :math:`n(n+1)` গুলি দ্বিমিক (বাইনারি) সিদ্ধান্ত চলরাশি রয়েছে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:37
msgid "If two nodes :math:`i` and :math:`j` have a link from :math:`i` to :math:`j`, we write :math:`i \\sim j`. We also denote with :math:`\\delta(i)^+` the set of nodes to which :math:`i` has a link, i.e., :math:`j \\in \\delta(i)^+` if and only if :math:`i \\sim j`. Similarly, we denote with :math:`\\delta(i)^-` the set of nodes which are connected to :math:`i`, in the sense that :math:`j \\in \\delta(i)^-` if and only if :math:`j \\sim i`."
msgstr "যদি দুটি নোড :math:`i` এবং math:`j` মধ্যে যোগ থাকে :math:`i` থেকে :math:`j` তে,তখন আমরা লিখবো :math:`i \\sim j`। এছাড়াও আমরা সেই নোডের সেট টিকে চিহ্নিত করি :math:`\\delta(i)^+` দ্বারা যার সাথে :math:`i` একটি যোগাযোগ আছে,যেমন  :math:`j \\in \\delta(i)^+` শুধুমাত্র তখন যখন  :math:`i \\sim j` । একইরকম ভাবে সেই নোডের সেটকে করি :math:`\\delta(i)^-` দ্বারা যেগুলি  :math:`i` sathe সংযুক্ত,এই ভাবে যে  :math:`j \\in \\delta(i)^-` শুধুমাত্র তখন যখন :math:`j \\sim i`।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:39
msgid "In addition, we consider continuous variables, for all nodes :math:`i = 1,\\dots, n`, denoted :math:`u_i`. These variables are needed in the MTZ formulation of the problem to eliminate sub-tours between clients."
msgstr "উপরন্তু,আমরা বিবেচনা করবো ক্রমাগত চল রাশি ,সমস্ত  :math:`i = 1,\\dots, n` জন্যে , চিহ্নিত হয় :math:`u_i`। এই চল রাশি গুলি প্রয়োজন সমস্যার এম.টি.জেড. সূত্রে খরিদ্দারের মধ্যে উপ - ভ্রমণ পরিহার করার জন্যে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:41
msgid "The VRP can be formulated as:"
msgstr "ভি.পি.আর. টিকে সুত্রাইত করা যাবে এই ভাবে:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:43
msgid "(VRP) \\quad  f = \\min_{\\{x_{ij}\\}_{i\\sim j}\\in \\{0,1\\}, \\{u_i\\}_{i=1,\\dots,n}\\in \\mathbb{R}} \\quad \\sum_{i \\sim j} w_{ij} x_{ij}"
msgstr "(VRP) \\quad  f = \\min_{\\{x_{ij}\\}_{i\\sim j}\\in \\{0,1\\}, \\{u_i\\}_{i=1,\\dots,n}\\in \\mathbb{R}} \\quad \\sum_{i \\sim j} w_{ij} x_{ij}"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:48
msgid "subject to the node-visiting constraint:"
msgstr "নোড-পরিদর্শন সীমাবদ্ধতা সাপেক্ষে:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:50
msgid "\\sum_{j \\in \\delta(i)^+} x_{ij} = 1, \\,\\sum_{j \\in \\delta(i)^-} x_{ji} = 1,\\, \\forall i \\in \\{1,\\dots,n\\},"
msgstr "\\sum_{j \\in \\delta(i)^+} x_{ij} = 1, \\,\\sum_{j \\in \\delta(i)^-} x_{ji} = 1,\\, \\forall i \\in \\{1,\\dots,n\\},"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:55
msgid "the depot-visiting constraints:"
msgstr "ডিপো বা গুদামঘর সীমাবদ্ধতা:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:57
msgid "\\sum_{i \\in \\delta(0)^+} x_{0i} = K, \\, \\sum_{j \\in \\delta(0)^+} x_{j0} = K,"
msgstr "\\sum_{i \\in \\delta(0)^+} x_{0i} = K, \\, \\sum_{j \\in \\delta(0)^+} x_{j0} = K,"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:62
msgid "and the sub-tour elimination constraints:"
msgstr "এবং উপ - ভ্রমণ পরিহার করার সীমাবদ্ধতা:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:64
msgid "u_i - u_j + Q x_{ij} \\leq Q-q_j, \\, \\forall i \\sim j, \\,i ,j \\neq 0, \\quad q_i \\leq u_i \\leq Q,\\, \\forall i, i \\neq 0."
msgstr "u_i - u_j + Q x_{ij} \\leq Q-q_j, \\, \\forall i \\sim j, \\,i ,j \\neq 0, \\quad q_i \\leq u_i \\leq Q,\\, \\forall i, i \\neq 0 ।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:69
msgid "In particular,"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:71
msgid "The cost function is linear in the cost functions and weighs the different arches based on a positive weight :math:`w_{ij}>0` (typically the distance between node :math:`i` and node :math:`j`);"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:72
msgid "The first set of constraints enforce that from and to every client, only one link is allowed;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:73
msgid "The second set of constraints enforce that from and to the depot, exactly :math:`K` links are allowed;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:74
msgid "The third set of constraints enforce the sub-tour elimination constraints and are bounds on :math:`u_i`, with :math:`Q>q_j>0`, and :math:`Q,q_i \\in \\mathbb{R}`."
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:77
msgid "Classical solution"
msgstr "প্রথাগত (ক্লাসিক্যাল) সমাধান"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:79
msgid "We can solve the VRP classically, e.g., by using CPLEX. CPLEX uses a branch-and-bound-and-cut method to find an approximate solution of the VRP, which, in this formulation, is a mixed-integer linear program (MILP). For the sake of notation, we pack the decision variables in one vector as"
msgstr "আমরা সি.পি.এল.এক্স ব্যবহার করে ক্লাসিকালি বা প্রথাগত ভি.আর.পি সমাধান করতে পারি। ভি.আর.পি-র একটি আনুমানিক সমাধান খুঁজে পেতে সি.পি.এল.এক্স একটি শাখা-এবং-সীমাবদ্ধ এবং কাটা( ব্রাঞ্চ অ্যান্ড বউন্ড অ্যান্ড কাট) পদ্ধতি ব্যবহার করে, যা এই সূচনায়, একটি মিশ্র-পূর্ণসংখ্যার লিনিয়ার প্রোগ্রাম (এম.আই.এল.পি)।স্বরলিপিটির খাতিরে, আমরা সিদ্ধান্ত চল রশিগুলিকে গুচ্ছ করি একটিি ভেক্টরে যেমন"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:81
msgid "{\\bf z} = [x_{01},x_{02},\\ldots,x_{10}, x_{12},\\ldots,x_{n(n-1)}]^T,"
msgstr "{\\bf z} = [x_{01},x_{02},\\ldots,x_{10}, x_{12},\\ldots,x_{n(n-1)}]^T,"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:86
msgid "wherein :math:`{\\bf z} \\in \\{0,1\\}^N`, with :math:`N = n (n+1)`. So the dimension of the problem scales quadratically with the number of nodes. Let us denote the optimal solution by :math:`{\\bf z}^*`, and the associated optimal cost :math:`f^*`."
msgstr "যার মধ্যে: :math:`{\\bf z} \\in \\{0,1\\}^N`, সাথে :math:`N = n (n+1)`।সুতরাং সমস্যাটির মাত্রা নোডের সংখ্যার সাথে চতুর্ভুজ ভাবে স্কেল করে।আসুন আমরা সর্বোত্তম সমাধানটি  :math:`{\\bf z}^*` এর দ্বারা চিহ্নিত করি, এবং সম্পর্কিত সর্বাপেক্ষা কাম্য ব্যয় :math:`f^*`।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:89
msgid "Quantum solution"
msgstr "কোয়ান্টাম সমাধান"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:91
msgid "Here, we demonstrate an approach that combines classical and quantum computing steps, following the quantum approximate optimization approach of Farhi, Goldstone, and Gutmann (2014). In particular, we use the variational quantum eigensolver (VQE). We stress that given the use of limited depth of the quantum circuits employed (variational forms), it is hard to discuss the speed-up of the algorithm, as the solution obtained is heuristic in nature. At the same time, due to the nature and importance of the target problems, it is worth investigating heuristic approaches, which may be worthwhile for some problem classes."
msgstr "এখানে, আমরা একটি পদ্ধতির প্রদর্শন করি যা ক্লাসিক্যাল এবং কোয়ান্টাম কম্পিউটিং পদক্ষেপের সংমিশ্রণ করে, ফারহী, গোল্ডস্টোন এবং গুটম্যান (২০১৪) এর কোয়ান্টাম আনুমানিক অপ্টিমাইজেশন পদ্ধতির অনুসরণ করে।বিশেষত, আমরা ভেরিয়েশনাল কোয়ান্টাম আইজেনসলভার (ভিকিউই) ব্যবহার করি।আমরা জোর দিয়েছি যে নিযুক্ত কোয়ান্টাম বর্তনী বা সার্কিটগুলির (ভেরিয়েশনাল ফর্ম)সীমিত গভীরতার ব্যবহারের কারণে,অ্যালগরিদমের গতি বাড়ানো নিয়ে আলোচনা করা শক্ত, কারণ প্রাপ্ত সমাধানটি প্রকৃতিতে হিউরিস্টিক বা তাত্ত্বিক । একই সময়ে, লক্ষ্য বা টার্গেট সমস্যার প্রকৃতি এবং গুরুত্বের কারণে, বৈজ্ঞানিক বা তাত্ত্বিক পদ্ধতির তদন্ত মূল্যবান, যা কিছু সমস্যা শ্রেণীর জন্য উপযুক্ত হতে পারে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:94
msgid "Following [5], the algorithm can be summarized as follows:"
msgstr "[৫] অনুসরণ করে প্রাপ্ত ধারাক্রমটি (অ্যালোগরিদম) নিম্নরূপ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:96
msgid "Preparation steps:"
msgstr "প্রস্তুতির ধাপ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:98
msgid "Transform the combinatorial problem into a binary polynomial optimization problem with equality constraints only;"
msgstr "সমাবেশ সমস্যাটিকে একটা সমতা শর্তসাপেক্ষ দ্বিমিক (বাইনারি) বহুরাশিক অনুকূলায়ন (অপ্টিমাইজেশন) সমস্যায় রূপান্তর;"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:99
msgid "Map the resulting problem into an Ising Hamiltonian (:math:`H`) for variables :math:`{\\bf z}` and basis :math:`Z`, via penalty methods if necessary;"
msgstr ":math:`{\\bf z}` এবং বেসিস(ভিত্তি) :math:`Z` চলরাশির জন্য প্রাপ্ত সমস্যা একটা আইসিং হ্যামিল্টোনিয়ান (:math:`H`) -এ চিত্রায়িত করা, প্রয়োজনে শাস্তিমূলক (পেনাল্টি) পদ্ধতি ব্যবহার করে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:100
msgid "Choose the depth of the quantum circuit :math:`m`. Note that the depth can be modified adaptively."
msgstr "কোয়ান্টাম সার্কিট :math:`m -র গভীরতা চয়ন করুন: । টীকা: গভীরতাটি অভিযোজিতভাবে সংশোধন করা যেতে পারে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:101
msgid "Choose a set of controls :math:`\\theta` and make a trial function :math:`\\big|\\psi(\\boldsymbol\\theta)\\rangle`, built using a quantum circuit made of C-Phase gates and single-qubit Y rotations, parameterized by the components of :math:`\\boldsymbol\\theta`."
msgstr "একটা নিয়ন্ত্রণকারীর সেট :math:`\\theta` নির্বাচিত করে একটা পরীক্ষা ফাংশন :math:`\\big|\\psi(\\boldsymbol\\theta)\\rangle` বানানো হলো, যেটা একটা কোয়ান্টাম বর্তনী (সার্কিট) যেটা আবার C-Phase গেট এবং একক কিউবিট Y ঘূর্ণন যাতে প্যারামিটাররূপে :math:`\\boldsymbol\\theta` -এর বিভিন্ন অংশ আছে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:103
msgid "Algorithm steps:"
msgstr "অ্যালগরিদম / ধরাক্রম পদক্ষেপ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:105
msgid "Evaluate :math:`C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)\\big|H\\big|\\psi(\\boldsymbol\\theta)\\rangle` by sampling the outcome of the circuit in the Z-basis and adding the expectation values of the individual Ising terms together. In general, different control points around :math:`\\boldsymbol\\theta` have to be estimated, depending on the classical optimizer chosen."
msgstr "মূল্যায়ন কর  :math:`C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)\\big|H\\big|\\psi(\\boldsymbol\\theta)\\rangle` জেড(Z) বেসিস বা ভিত্তিতে বর্তনীর (সার্কিট) ফলাফল গুলি নমুনা (স্যাম্পল) করে এবং একসাথে পৃথক আইসিং পদগুলির প্রত্যাশিত মান যুক্ত করে। সাধারণভাবে,:math:`\\boldsymbol\\theta` চারপাশে বিভিন্ন নিয়ন্ত্রণ বিন্দুগুলি বেছে নেওয়া প্রথাগত (ক্লাসিক্যাল) অনুকূলায়ক বা অপ্টিমাইজারের উপর নির্ভর করে অনুমান করতে হবে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:106
msgid "Use a classical optimizer to choose a new set of controls."
msgstr "নতুন সেট নিয়ন্ত্রণ চয়ন করতে একটি প্রথাগত (ক্লাসিক্যাল) অনুকূলায়ক বা অপ্টিমাইজার ব্যবহার করুন।."

#: ../../tutorials/07_examples_vehicle_routing.ipynb:107
msgid "Continue until :math:`C(\\boldsymbol\\theta)` reaches a minimum, close enough to the solution :math:`\\boldsymbol\\theta^*`."
msgstr "যতক্ষণনা :math:`C(\\boldsymbol\\theta)` ন্যূনতমে পৌঁছে যায়, যা কিনা :math:`\\boldsymbol\\theta^*` সমাধানের জন্য খুব কাছাকাছি, ততক্ষন চালিয়ে যান।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:108
msgid "Use the last :math:`\\boldsymbol\\theta` to generate a final set of samples from the distribution :math:`\\Big|\\langle z_i\\big|\\psi(\\boldsymbol\\theta)\\rangle\\Big|^2\\;\\forall i` to obtain the answer."
msgstr "শেষ :math:`\\boldsymbol\\theta` ব্যাবহার করুন :math:`\\Big|\\langle z_i\\big|\\psi(\\boldsymbol\\theta)\\rangle\\Big|^2\\;\\forall i` বিতরণ থেকে অন্তিম নমুনা (স্যাম্পল) সমূহ উৎপন্ন করে,উত্তর পাওয়ার জন্যে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:110
msgid "There are many parameters throughout, notably the choice of the trial wavefunction. Below, we consider:"
msgstr "অনেকগুলি পরামিতি রয়েছে সর্বত্র , উল্লেখযোগ্যভাবে ট্রায়াল ওয়েভফাংশন নির্বাচন।  নীচে, আমরা বিবেচনা করি:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:112
msgid "\\big|\\psi(\\theta)\\rangle = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m \\big|+\\rangle"
msgstr "\\big|\\psi(\\theta)\\rangle = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m \\big|+\\rangle"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:117
msgid "where :math:`U_\\mathrm{entangler}` is a collection of C-Phase gates (fully-entangling gates), and :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^N Y(\\theta_{i})`, where :math:`N` is the number of qubits and :math:`m` is the depth of the quantum circuit."
msgstr "যেখানে:math:`U_\\mathrm{entangler}`হ'ল সি-ফেজ(C-Phase) গেটস (সম্পূর্ণভাবে জড়িয়ে পড়ার গেটস) এবং:math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^N Y(\\theta_{i})`, যেখানে :math:`N`হল কুউবিট সংখ্যাা এবং: :math:`m` হল কোয়ান্টাম বর্তনী (সার্কিট) গভীরতা।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:120
msgid "Construct the Ising Hamiltonian"
msgstr "আইসিং হ্যামিল্টোনীয়ান নির্মাণ করুন"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:122
msgid "From :math:`VRP` one can construct a binary polynomial optimization with equality constraints only by considering cases in which :math:`K=n-1`. In these cases the sub-tour elimination constraints are not necessary and the problem is only on the variable :math:`{\\bf z}`. In particular, we can write an augmented Lagrangian as"
msgstr ":math:`VRP` দ্বিমিক (বাইনারি) পলিনমিয়াল বা বহুপদী অপটিমাইজেশন তৈরি করা যেতে পারে সাম্যতার সীমাবদ্ধতার সাথে শুধুমাত্র  :math:`K=n-1` অবস্থাগুলি বিবেচনা করে।এই ক্ষেত্রে উপ - ভ্রমণ অপসারণের সীমাবদ্ধতাগুলি প্রয়োজনীয় নয় এবং সমস্যাটি কেবল চল রাশি  :math:`{\\bf z}` উপর।বিশেষত, আমরা হিসাবে একটি বর্ধিত লাগরঙ্গিয়ান লিখতে পারি"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:124
msgid "(IH) \\quad H = \\sum_{i \\sim j} w_{ij} x_{ij}  + A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big(\\sum_{j \\in \\delta(i)^+} x_{ij} - 1\\Big)^2 + A \\sum_{i \\in \\{1,\\dots,n\\}}\\Big(\\sum_{j \\in \\delta(i)^-} x_{ji} - 1\\Big)^2 +A \\Big(\\sum_{i \\in \\delta(0)^+} x_{0i} - K\\Big)^2 + A\\Big(\\sum_{j \\in \\delta(0)^+} x_{j0} - K\\Big)^2"
msgstr "(IH) \\quad H = \\sum_{i \\sim j} w_{ij} x_{ij}  + A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big(\\sum_{j \\in \\delta(i)^+} x_{ij} - 1\\Big)^2 + A \\sum_{i \\in \\{1,\\dots,n\\}}\\Big(\\sum_{j \\in \\delta(i)^-} x_{ji} - 1\\Big)^2 +A \\Big(\\sum_{i \\in \\delta(0)^+} x_{0i} - K\\Big)^2 + A\\Big(\\sum_{j \\in \\delta(0)^+} x_{j0} - K\\Big)^2"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:129
msgid "where :math:`A` is a big enough parameter."
msgstr "যেখানে :math:`A`  একটি যথেষ্ট বড় পরামিতি।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:132
msgid "From Hamiltonian to QP formulation"
msgstr "হ্যামিল্টোনিয়ান থেকে কিউ.পি সূত্র "

#: ../../tutorials/07_examples_vehicle_routing.ipynb:134
msgid "In the vector :math:`{\\bf z}`, and for a complete graph (:math:`\\delta(i)^+ = \\delta(i)^- = \\{0,1,\\dots,i-1,i+1,\\dots,n\\}`), :math:`H` can be written as follows."
msgstr "ভেক্টরে :math:`{\\bf z}` ক্ষেত্রে এবং একটি সম্পূর্ণ গ্রাফের জন্য (:math:`\\delta(i)^+ = \\delta(i)^- = \\{0,1,\\dots,i-1,i+1,\\dots,n\\}`), :math:`H` এই ভাবে লেখা যেতে পারে লেখা যেতে পারে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:136
msgid "\\min_{{\\bf z}\\in \\{0,1\\}^{n(n+1)}} {\\bf w}^T {\\bf z}  + A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big({\\bf e}_i \\otimes {\\bf 1}_n^T {\\bf z} - 1\\Big)^2 + A \\sum_{i \\in \\{1,\\dots,n\\}}\\Big({\\bf v}_i^T {\\bf z} - 1\\Big)^2 + A \\Big(({\\bf e}_0 \\otimes {\\bf 1}_n)^T{\\bf z} - K\\Big)^2 + A\\Big({\\bf v}_0^T{\\bf z} - K\\Big)^2."
msgstr "\\min_{{\\bf z}\\in \\{0,1\\}^{n(n+1)}} {\\bf w}^T {\\bf z}  + A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big({\\bf e}_i \\otimes {\\bf 1}_n^T {\\bf z} - 1\\Big)^2 + A \\sum_{i \\in \\{1,\\dots,n\\}}\\Big({\\bf v}_i^T {\\bf z} - 1\\Big)^2 + A \\Big(({\\bf e}_0 \\otimes {\\bf 1}_n)^T{\\bf z} - K\\Big)^2 + A\\Big({\\bf v}_0^T{\\bf z} - K\\Big)^2 ।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:141
msgid "That is:"
msgstr "সেটা হলো:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:143
msgid "\\min_{\\bf z\\in \\{0,1\\}^{n(n+1)}} \\bf z^T {\\bf Q} \\bf z + {\\bf g}^T \\bf z + c,"
msgstr "\\min_{\\bf z\\in \\{0,1\\}^{n(n+1)}} \\bf z^T {\\bf Q} \\bf z + {\\bf g}^T \\bf z + c,"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:148
msgid "Where: first term:"
msgstr "যেখানে: প্রথম পদ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:150
msgid "{\\bf Q} = A \\sum_{i \\in \\{0,1,\\dots,n\\}}  \\Big[({\\bf e}_i \\otimes {\\bf 1}_n)({\\bf e}_i \\otimes {\\bf 1}_n)^T + {\\bf v}_i{\\bf v}_i^T \\Big]"
msgstr "{\\bf Q} = A \\sum_{i \\in \\{0,1,\\dots,n\\}}  \\Big[({\\bf e}_i \\otimes {\\bf 1}_n)({\\bf e}_i \\otimes {\\bf 1}_n)^T + {\\bf v}_i{\\bf v}_i^T \\Big]"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:155
msgid "Second term:"
msgstr "দ্বিতীয় পদ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:157
msgid "{\\bf g} = {\\bf w} -2 A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big[({\\bf e}_i \\otimes {\\bf 1}_n) + {\\bf v}_i \\Big] -2 A K \\Big[({\\bf e}_0 \\otimes {\\bf 1}_n) + {\\bf v}_0 \\Big]"
msgstr "{\\bf g} = {\\bf w} -2 A \\sum_{i \\in \\{1,\\dots,n\\}} \\Big[({\\bf e}_i \\otimes {\\bf 1}_n) + {\\bf v}_i \\Big] -2 A K \\Big[({\\bf e}_0 \\otimes {\\bf 1}_n) + {\\bf v}_0 \\Big]"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:162
msgid "Third term:"
msgstr "তৃতীয় পদ:"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:164
msgid "c = 2An +2AK^2."
msgstr "c = 2An +2AK^2 ।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:169
msgid "The QP formulation of the Ising Hamiltonian is ready for the use of VQE. We will solve the QP using optimization stack available in Qiskit."
msgstr "আইসিং হ্যামিল্টোনিয়ানের কিউ.পি সূত্রটি ভি.কি.উই ব্যবহারের জন্য প্রস্তুত।আমরা Qiskit উপলব্ধ অপ্টিমাইজেশন স্ট্যাক ব্যবহার করে কিউ.পি সমাধান করব।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:172
msgid "References"
msgstr "তথ্যসূত্র"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:174
msgid "[1] E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028, 2014"
msgstr "[1] E. Farhi, J. Goldstone, S. Gutmann e-print arXiv 1411.4028, 2014"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:176
msgid "[2] `Max-Cut and Traveling Salesman Problem <./06_examples_max_cut_and_tsp.ipynb>`__"
msgstr "[২] `সর্বোচ্চ লাভ এবং ভ্রাম্যমান বিক্রেতার সমস্যা <./06_examples_max_cut_and_tsp.ipynb>`__"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:178
msgid "[3] C. E. Miller, E. W. Tucker, and R. A. Zemlin (1960). “Integer Programming Formulations and Travelling Salesman Problems”. J. ACM. 7: 326–329. doi:10.1145/321043.321046."
msgstr "[3] C. E. Miller, E. W. Tucker, and R. A. Zemlin (1960). “Integer Programming Formulations and Travelling Salesman Problems”. J. ACM. 7: 326–329. doi:10.1145/321043.321046."

#: ../../tutorials/07_examples_vehicle_routing.ipynb:180
msgid "[4] D. L. Applegate, R. M. Bixby, V. Chvátal, and W. J. Cook (2006). The Traveling Salesman Problem. Princeton University Press, ISBN 978-0-691-12993-8."
msgstr "[4] D. L. Applegate, R. M. Bixby, V. Chvátal, and W. J. Cook (2006). The Traveling Salesman Problem. Princeton University Press, ISBN 978-0-691-12993-8."

#: ../../tutorials/07_examples_vehicle_routing.ipynb:192
msgid "Initialization"
msgstr "\n"
"আরম্ভ"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:194
msgid "First of all we load all the packages that we need: - Python 3.6 or greater is required; - CPLEX 12.8 or greater is required for the classical computations; - Latest Qiskit is required for the quantum computations."
msgstr "সবার আগে আমরা আমাদের প্রয়োজনীয় সমস্ত প্যাকেজ লোড করি: - পাইথন3.6 বা ততোধিক প্রয়োজন; - CPLEX 12.8  বা তারও উন্নত প্রয়োজন প্রথাগত (ক্লাসিক্যাল) গননা বা কম্পিউটেশেনর জন্য প্রয়োজনীয়;  - কোয়ান্টাম গণনার জন্য সর্বশেষতম Qiskit প্রয়োজন।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:238
msgid "We then initialize the variables"
msgstr "তারপরে আমরা চল রাশি গুলি আরম্ভ করব"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:261
msgid "We define an initializer class that randomly places the nodes in a 2-D plane and computes the distance between them."
msgstr "আমরা একটি প্রারম্ভক শ্রেণীর সংজ্ঞা প্রদান করি যা এলোমেলোভাবে দ্বিমাত্রিক তালের উপর নোডগুলি রাখে এবং তাদের মধ্যে দূরত্ব গণনা করে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:316
msgid "Classical solution using IBM ILOG CPLEX"
msgstr "প্রথাগত (ক্লাসিক্যাল) সমাধান IBM ILOG CPLEX ব্যাবহার করে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:318
msgid "For a classical solution, we use IBM ILOG CPLEX. CPLEX is able to find the exact solution of this problem. We first define a ClassicalOptimizer class that encodes the problem in a way that CPLEX can solve, and then instantiate the class and solve it."
msgstr "একটি প্রথাগত (ক্লাসিক্যাল) সমাধানের জন্য, আমরা আই.বি.এম আই.এল.ও.জি  সি.পি.এল. ই.এক্স  IBM ILOG CPLEX ব্যবহার করি।  সি.পি.এল.ই.এক্স এই সমস্যার সঠিক সমাধান খুঁজে পেতে সক্ষম।  আমরা প্রথমে একটি প্রথাগত (ক্লাসিক্যাল) অপ্টিমাইজার শ্রেণি সংজ্ঞায়িত করি যা এমনভাবে সমস্যাটিকে এনকোড করে যাতে সিপিএলএক্স সমাধান করতে পারে এবং তারপরে ক্লাসটি তাত্ক্ষণিক এবং সেটি সমাধান করে।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:559
msgid "If you have CPLEX, the solution shows the depot with a star and the selected routes for the vehicles with arrows."
msgstr "আপনার যদি সি.পি.এল.ই.এক্স থাকে তবে সমাধানটি তারাচিন্হ দিয়ে ডিপো এবং তীরচিন্হ সহ যানবাহনের জন্য নির্বাচিত রুটগুলি বা পথগুলি দেখায়।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:571
msgid "Quantum solution from the ground up"
msgstr "স্থল থেকে কোয়ান্টাম সমাধান "

#: ../../tutorials/07_examples_vehicle_routing.ipynb:573
msgid "For the quantum solution, we use Qiskit."
msgstr "কোয়ান্টাম সমাধানের জন্য, আমরা ব্যবহার করি Qiskit"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:575
msgid "First, we derive the solution from the ground up, using a class QuantumOptimizer that encodes the quantum approach to solve the problem and then we instantiate it and solve it. We define the following methods inside the class:"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:577
msgid "``binary_representation`` : encodes the problem :math:`(M)` into a QP terms (that’s basically linear algebra);"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:578
msgid "``construct_problem`` : constructs a QUBO optimization problem as an instance of ``QuadraticProgram``;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:579
msgid "``solve_problem``: solves the problem :math:`(M)` constructed at the previous step via ``MinimunEigenOptimizer`` by using VQE with default parameters;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:697
msgid "Step 1"
msgstr "ধাপ 1"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:699
msgid "Instantiate the quantum optimizer class with parameters:"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:701
msgid "the instance;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:702
msgid "the number of nodes and vehicles ``n`` and ``K``;"
msgstr ""

#: ../../tutorials/07_examples_vehicle_routing.ipynb:725
msgid "Step 2"
msgstr "ধাপ 2"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:727
msgid "Encode the problem as a binary formulation (IH-QP)."
msgstr "দ্বিমিক (বাইনারি) সুত্র বা  গঠনের (আইএইচ-কিউপি) হিসাবে সমস্যাটি এনকোড করুন।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:729
msgid "Sanity check: make sure that the binary formulation in the quantum optimizer is correct (i.e., yields the same cost given the same solution)."
msgstr "স্যানিটি বা সদ্বিবেচনা পরীক্ষা: নিশ্চিত করুন যে কোয়ান্টাম অপ্টিমাইজারে দ্বিমিক (বাইনারি) সূত্র বা গঠন সঠিক কিনা (যেমন, একই সমাধানের জন্যে একই ব্যয় হয়)।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:793
msgid "Step 3"
msgstr "ধাপ 3"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:795
msgid "Encode the problem as an instance of ``QuadraticProgram``."
msgstr "সমস্যাটি ``Quadratic Program`` দৃষ্টান্ত (ইনস্ট্যান্স) হিসাবে এনকোড করুন"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:817
msgid "Step 4"
msgstr "ধাপ 4"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:819
msgid "Solve the problem via ``MinimumEigenOptimizer`` from the optimization stack. N.B. Depending on the number of qubits, the state-vector simulation can take a while; for example with 12 qubits, it takes more than 12 hours. Logging is useful to see what the program is doing."
msgstr "অপ্টিমাইজেশন স্ট্যাক থেকে ``MinimumEigenOptimizer``এর মাধ্যমে সমস্যার সমাধান করুন।কুইবিটের সংখ্যার উপর নির্ভর করে, অবস্থা-ভেক্টর সিমুলেশনটি কিছুটা সময় নিতে পারে;  উদাহরণস্বরূপ, 12 কুইটসের সাথে এটি 12 ঘন্টােরও বেশি সময় নেয়।  প্রোগ্রামটি কী করছে তা দেখতে লগিং দরকারী।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:867
msgid "Step 5"
msgstr "ধাপ 5"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:869
msgid "Visualize the solution"
msgstr "সমাধানটি দৃশ্যায়িত করা"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:921
msgid "The plots present the depot with a star and the selected routes for the vehicles with arrows. Note that in this particular case, we can find the optimal solution of the QP formulation, which happens to coincide with the optimal solution of the ILP."
msgstr "প্লটগুলি একটি তারা চিন্হ  দিয়ে ডিপো এবং তীরচিন্হ গুলি সহকরে যানবাহনের জন্য নির্বাচিত রুটের উপস্থাপন করে। মনে রাখা দরকার যে এই বিশেষ ক্ষেত্রে, আমরা কিউ.পি গঠনের সর্বোত্তম সমাধানটি খুঁজে পেতে পারি, যা আই.এল.পি. র অনুকূল সমাধানের সাথে মিলে যায়।"

#: ../../tutorials/07_examples_vehicle_routing.ipynb:923
msgid "Keep in mind that VQE is an heuristic working on the QP formulation of the Ising Hamiltonian, though. For suitable choices of A, local optima of the QP formulation will be feasible solutions to the ILP. While for some small instances, as above, we can find optimal solutions of the QP formulation which coincide with optima of the ILP, finding optimal solutions of the ILP is harder than finding local optima of the QP formulation, in general, which in turn is harder than finding feasible solutions of the ILP. Even within the VQE, one may provide stronger guarantees, for specific variational forms (trial wave functions)."
msgstr "মনে রাখতে হবে যে ভি.কিউ.ই হ'ল আইসিং হ্যামিল্টোনিয়ানএর কিউ.পি গঠনের বিষয়ে একটি হিউরিস্টিক তাত্ত্বিক কাজ।এ( A)- এর পছন্দের চয়নের জন্যে,কিউপি সূত্রের বা গঠনের স্থানীয় অনুকূলতা আইএলপির সম্ভাব্য সমাধান হবে।  কিছু ছোট দৃষ্টান্ত (ইনস্ট্যান্স) জন্য, যেমন উপরে, আমরা কিউ.পি. গঠনের সর্বোত্তম সমাধানগুলি খুঁজে পেতে পারি যা আই.এল.পি. এর অনুকূলতার সাথে মিলে যায়, আই.এল.পি.র সর্বোত্তম সমাধানগুলি সন্ধান করা কিউপি গঠনের স্থানীয় অনুকূল সন্ধানের চেয়ে শক্ত, সাধারণভাবে, যা আবার আই.এল.পি.র সম্ভাব্য সমাধানগুলি খুঁজে পাওয়ার চেয়ে শক্ত।  এমনকি ভি.কিউ.ই-র মধ্যে, কেউ নির্দিষ্ট পরিবর্তনশীল (ভ্যারিয়েশনাল)ফর্মের জন্য (ট্রায়াল ওয়েভ ফাংশন) আরও দৃঢ় প্রতিশ্রুত হতে পারে।"

