msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 13:48+0000\n"
"PO-Revision-Date: 2022-01-25 23:51\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/11_using_classical_optimization_solvers_and_models.po\n"
"X-Crowdin-File-ID: 9715\n"
"Language: ko_KR\n"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "This page was generated from `docs/tutorials/11_using_classical_optimization_solvers_and_models.ipynb`__."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "Using Classical Optimization Solvers and Models with Qiskit Optimization"
msgstr "고전 최적화 해석기와 모델을 Qiskit 최적화와 함께 사용하기"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:20
msgid "We can use classical optimization solvers (CPLEX and Gurobi) with Qiskit Optimization. Docplex and Gurobipy are the Python APIs for CPLEX and Gurobi, respectively. We can load and save an optimization model by Docplex and Gurobipy and can apply CPLEX and Gurobi to ``QuadraticProgram``."
msgstr "우리는 고전 최적화 해석기(CPLEX와 Gurobi)를 Qiskit 최적화와 함께 사용할 수 있다. Docplex와 Gurobipy는 각각 CPLEX와 Gurobi의 파이썬 API이다. 우리는 Docplex와Gurobipy의 최적화 모델을 로딩하고 저장할 수 있으며 CPLEX와 Gurobi를 ``QuadraticProgram`` 에 적용할 수 있다."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:22
msgid "If you want to use the CPLEX solver, you need to install ``pip install 'qiskit-optimization[cplex]'``. Docplex is automatically installed, as a dependent, when you install Qiskit Optimization."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:24
msgid "If you want to use Gurobi and Gurobipy, you need to install ``pip install 'qiskit-optimization[gurobi]'``."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:26
msgid "Note that these solvers installed via pip are free versions, which have some limitations such as number of variables. Also note that the latest version 20.1 of CPLEX is available only for Python 3.7 and 3.8 as of July 2021. See the following pages for details."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:28
msgid "https://pypi.org/project/cplex/"
msgstr "https://pypi.org/project/cplex/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:29
msgid "https://pypi.org/project/gurobipy/"
msgstr "https://pypi.org/project/gurobipy/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:41
msgid "CplexSolver and GurobiSolver"
msgstr "CplexSolver와 GurobiSolver"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:43
msgid "Qiskit Optimization supports the classical solvers of CPLEX and Gurobi as ``CplexSolver`` and ``GurobiSolver``, respectively. We can solve ``QuadraticProgram`` with ``CplexSolver`` and ``GurobiSolver`` as follows."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:182
msgid "We can set the solver parameter of CPLEX as follows. We can display the solver message of CPLEX by setting ``disp=True``. See `Parameters of CPLEX <https://www.ibm.com/docs/en/icos/20.1.0?topic=cplex-parameters>`__ for details of CPLEX parameters."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:271
msgid "We get the same optimal solution by QAOA as follows."
msgstr "다음과 같이 QAOA를 이용하여 동일한 최적의 해결책을 얻는다."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:343
msgid "Translators between ``QuadraticProgram`` and Docplex/Gurobipy"
msgstr "``QuadraticProgram`` 와 Docplex/Gurobipy 간 번역기"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:345
msgid "Qiskit Optimization can load ``QuadraticProgram`` from a Docplex model and a Gurobipy model."
msgstr "Qiskit 최적화는 Docplex 모델과 Gurobipy 모델을 통해 ``QuadraticProgram`` 을 로드할 수 있다."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:347
msgid "First, we define an optimization problem by Docplex and Gurobipy."
msgstr "먼저, Docplex 및 Gurobipy에 의한 최적화 문제를 정의한다."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:475
msgid "We can generate ``QuadraticProgram`` object from both Docplex and Gurobipy models. We see that the two ``QuadraticProgram`` objects generated from Docplex and Gurobipy are identical."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:607
msgid "We can generate a Docplex model and a Gurobipy model from ``QuadraticProgram`` too."
msgstr "우리는  ``QuadraticProgram`` 에서 Docplex 모델과 Gurobipy 모델을 생성할 수 있다."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:708
msgid "Indicator constraints of Docplex"
msgstr "Docplex의 표시기 제한조건"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:710
msgid "``from_docplex_mp`` supports indicator constraints, e.g., ``u = 0 => x + y <= z`` (u: binary variable) when we convert a Docplex model into ``QuadraticProgram``. It converts indicator constraints into linear constraints using the big-M formulation."
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:796
msgid "Let’s compare the solutions of the model with an indicator constraint by"
msgstr "모델의 해결책을 표시기 제한조건과 비교해보자."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:798
msgid "applying CPLEX directly to the Docplex model (without translating it to ``QuadraticProgram``. CPLEX solver natively supports the indicator constraints),"
msgstr ""

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:799
msgid "applying QAOA to ``QuadraticProgram`` obtained by ``from_docplex_mp``."
msgstr "QAOA를 ``from_docplex_mp`` 로 얻은 ``QuadraticProgram`` 에 적용하는 것."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:801
msgid "We see the solutions are same."
msgstr "해결책이 같다는 것을 알 수 있다."

