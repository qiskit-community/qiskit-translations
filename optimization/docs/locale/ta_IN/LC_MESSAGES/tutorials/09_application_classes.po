msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 21:12+0000\n"
"PO-Revision-Date: 2022-08-11 21:46\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/09_application_classes.po\n"
"X-Crowdin-File-ID: 9658\n"
"Language: ta_IN\n"

#: ../../tutorials/09_application_classes.ipynb:9
msgid "This page was generated from `docs/tutorials/09_application_classes.ipynb`__."
msgstr "இந்தப் பக்கம் இதிலிருந்து உருவாக்கப்பட்டது `docs/tutorials/09_application_classes.ipynb`__."

#: ../../tutorials/09_application_classes.ipynb:9
msgid "Application Classes for Optimization Problems"
msgstr "தேர்வுமுறை பிரச்சனைகளுக்கான பயன்பாட்டு வகுப்புகள்"

#: ../../tutorials/09_application_classes.ipynb:21
msgid "Introduction"
msgstr "முன்னுரை"

#: ../../tutorials/09_application_classes.ipynb:23
msgid "We introduce application classes for the following optimization problems so that users can easily try various optimization problems on quantum computers."
msgstr "பின்வரும் தேர்வுமுறை சிக்கல்களுக்கான பயன்பாட்டு வகுப்புகளை நாங்கள் அறிமுகப்படுத்துகிறோம், இதனால் பயனர்கள் எளிதாக குவாண்டம் கணினிகளில் பல்வேறு தேர்வுமுறை சிக்கல்களை முயற்சி செய்யலாம்."

#: ../../tutorials/09_application_classes.ipynb:25
msgid "Exact cover problem"
msgstr "சரியான கவர் சிக்கல்"

#: ../../tutorials/09_application_classes.ipynb:27
msgid "Given a collection of subsets of items, find a subcollection such that each item is covered exactly once."
msgstr "உருப்படிகளின் துணைக்குழுக்களின் தொகுப்பைக் கொண்டு, ஒவ்வொரு பொருளும் சரியாக ஒரு முறை மூடப்பட்டிருக்கும் ஒரு துணைத் தொகுப்பைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:29
#: ../../tutorials/09_application_classes.ipynb:424
msgid "Knapsack problem"
msgstr "நாப்சாக் சிக்கல்"

#: ../../tutorials/09_application_classes.ipynb:31
msgid "Given a set of items, find a subset of items such that the total weight is within the capacity and the total value is maximized."
msgstr "பொருட்களின் தொகுப்பைக் கொண்டு, மொத்த எடை கொள்ளளவுக்குள் இருக்கும் மற்றும் மொத்த மதிப்பு அதிகபட்சமாக இருக்கும் உருப்படிகளின் உட்பிரிவைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:33
msgid "Number partition problem"
msgstr "எண் பகிர்வு பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:35
msgid "Given a multiset of positive integers, find a partition of the multiset into two subsets such that the sums of the subsets are equal."
msgstr "நேர்மறை முழு எண்களின் பன்முகத் தொகுப்பைக் கொண்டு, மல்டிசெட்டின் இரண்டு துணைக்குழுக்களாகப் பிரிப்பதைக் கண்டறியவும், அதாவது துணைக்குழுக்களின் தொகை சமமாக இருக்கும்."

#: ../../tutorials/09_application_classes.ipynb:37
msgid "Set packing problem"
msgstr "பக்க பிரச்சனை அமை"

#: ../../tutorials/09_application_classes.ipynb:39
msgid "Given a collection of subsets of items, find a subcollection such that all subsets of the subcollection are pairwise disjoint and the number of items in the subcollection is maximized."
msgstr "உருப்படிகளின் துணைக்குழுக்களின் தொகுப்பைக் கொண்டு, துணைத் தொகுப்பின் அனைத்து துணைப் பிரிவுகளும் ஜோடிப் பிரிந்திருக்கும் மற்றும் துணைத் தொகுப்பில் உள்ள பொருட்களின் எண்ணிக்கை அதிகபட்சமாக இருக்கும் ஒரு துணைத் தொகுப்பைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:41
msgid "Graph problems"
msgstr "வரைபட சிக்கல்கள்"

#: ../../tutorials/09_application_classes.ipynb:43
msgid "Clique problem"
msgstr "கிளிக் சிக்கல்"

#: ../../tutorials/09_application_classes.ipynb:45
msgid "Given an undirected graph, find a subset of nodes with a specified number or the maximum number such that the induced subgraph is complete."
msgstr "திசைதிருப்பப்படாத வரைபடத்தைக் கொண்டு, குறிப்பிடப்பட்ட எண் அல்லது அதிகபட்ச எண்ணைக் கொண்ட முனைகளின் துணைக்குழுவைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:47
msgid "Graph partition problem"
msgstr "வரைபட பகிர்வு பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:49
msgid "Given an undirected graph, find a partition into two components whose sizes are equal such that the total capacity of the edges between the two components is minimized."
msgstr "திசைதிருப்பப்படாத வரைபடத்தைக் கொண்டு, இரண்டு கூறுகளுக்கு இடையில் உள்ள விளிம்புகளின் மொத்த திறன் குறைக்கப்படும் அளவுக்கு சமமாக இருக்கும் இரண்டு பாகங்களாக ஒரு பகிர்வைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:51
msgid "Max-cut problem"
msgstr "அதிகபட்ச வெட்டு பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:53
msgid "Given an undirected graph, find a partition of nodes into two subsets such that the total weight of the edges between the two subsets is maximized."
msgstr "திசைதிருப்பப்படாத வரைபடத்தைக் கொண்டு, இரண்டு துணைக்குழுக்களுக்கிடையேயான விளிம்புகளின் மொத்த எடை அதிகபட்சமாக இருக்கும் வகையில் இரண்டு துணைக்குழுக்களாக முனைகளின் பகிர்வைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:55
msgid "Stable set problem"
msgstr "நிலையான தொகுப்பு பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:57
msgid "Given an undirected graph, find a subset of nodes such that no edge connects the nodes in the subset and the number of nodes is maximized."
msgstr "திசைதிருப்பப்படாத வரைபடத்தைக் கொண்டு, முனைகளின் துணைக்குழுவைக் கண்டுபிடி, அதாவது எந்த விளிம்பும் துணைக்குழுவில் உள்ள முனைகளை இணைக்காது மற்றும் முனைகளின் எண்ணிக்கை அதிகரிக்கிறது."

#: ../../tutorials/09_application_classes.ipynb:59
msgid "Traveling salesman problem"
msgstr "பயண விற்பனையாளர் பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:61
msgid "Given a graph, find a route with the minimum distance such that the route visits each city exactly once."
msgstr "ஒரு வரைபடத்தைக் கொண்டு, குறைந்தபட்ச தூரத்தைக் கொண்ட ஒரு வழியைக் கண்டறியவும், அந்த பாதை ஒவ்வொரு நகரத்திற்கும் சரியாக ஒரு முறை வருகை தரும்."

#: ../../tutorials/09_application_classes.ipynb:63
msgid "Vehicle routing problem"
msgstr "வாகன வழித்தடம் பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:65
msgid "Given a graph, a depot node, and the number of vehicles (routes), find a set of routes such that each node is covered exactly once except the depot and the total distance of the routes is minimized."
msgstr "ஒரு வரைபடம் கொண்டு, ஒரு டிப்போ முனை மற்றும் வாகனங்களின் எண்ணிக்கை (வழித்தடங்கள்) ஆகியவற்றைக் கருத்தில் கொண்டு, டிப்போவைத் தவிர ஒவ்வொரு முனையும் சரியாக ஒரு முறை மூடப்பட்டிருக்கும் வழிகளின் தொகுப்பைக் கண்டுபிடித்து, பாதைகளின் மொத்த தூரம் குறைக்கப்படும் வழிகளின் தொகுப்பைக் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:67
#: ../../tutorials/09_application_classes.ipynb:120
msgid "Vertex cover problem"
msgstr "வெர்டெக்ஸ் கவர் பிரச்சனை"

#: ../../tutorials/09_application_classes.ipynb:69
msgid "Given an undirected graph, find a subset of nodes with the minimum size such that each edge has at least one endpoint in the subsets."
msgstr "திசைதிருப்பப்படாத வரைபடத்தைக் கொண்டு, ஒவ்வொரு விளிம்பும் துணைக்குழுக்களில் குறைந்தபட்சம் ஒரு முனையைக் கொண்டிருக்கும் வகையில் குறைந்தபட்ச அளவு கொண்ட முனைகளின் துணைக்குழுவைத் கண்டறியவும்."

#: ../../tutorials/09_application_classes.ipynb:71
msgid "The application classes for graph problems (``GraphOptimizationApplication``) provide a functionality to draw graphs of an instance and a result. Note that you need to install ``matplotlib`` beforehand to utilize the functionality."
msgstr "வரைபடப் பிரச்சனைகளுக்கான விண்ணப்ப வகுப்புகள் (``GraphOptimizationApplication``) ஒரு நிகழ்வு மற்றும் முடிவின் வரைபடங்களை வரைய ஒரு செயல்பாட்டை வழங்குகிறது. செயல்பாட்டைப் பயன்படுத்த நீங்கள் ``matplotlib`` ஐ முன்பே நிறுவ வேண்டும் என்பதை நினைவில் கொள்க."

#: ../../tutorials/09_application_classes.ipynb:82
msgid "We introduce examples of the vertex cover problem and the knapsack problem in this page."
msgstr "இந்த பக்கத்தில் வெர்டெக்ஸ் கவர் பிரச்சனை மற்றும் நாப்சாக் பிரச்சனைக்கான உதாரணங்களை அறிமுகப்படுத்துகிறோம்."

#: ../../tutorials/09_application_classes.ipynb:84
msgid "Examples of the max-cut problem and the traveling salesman problem are available in `Max-Cut and Traveling Salesman Problem <06_examples_max_cut_and_tsp.ipynb>`__."
msgstr "அதிகபட்ச வெட்டு பிரச்சனை மற்றும் பயண விற்பனையாளர் பிரச்சனையின் எடுத்துக்காட்டுகள் `Max-Cut and Traveling Salesman Problem <06_examples_max_cut_and_tsp.ipynb>`__. இல் கிடைக்கின்றன."

#: ../../tutorials/09_application_classes.ipynb:95
msgid "We first import packages necessary for application classes."
msgstr "பயன்பாட்டு வகுப்புகளுக்குத் தேவையான தொகுப்புகளை நாங்கள் முதலில் இறக்குமதி செய்கிறோம்."

#: ../../tutorials/09_application_classes.ipynb:122
msgid "We introduce the application class for the vertex cover problem as an example of graph problems. Given an undirected graph, the vertex cover problem asks us to find a subset of nodes with the minimum size such that all edges are covered by any node selected."
msgstr "வரைபடச் சிக்கல்களுக்கு உதாரணமாக, உச்சநிலைப் பிரச்சனைக்கான விண்ணப்ப வகுப்பை அறிமுகப்படுத்துகிறோம். திசைதிருப்பப்படாத வரைபடத்தைக் கொடுத்தால், வெர்டெக்ஸ் கவர் சிக்கல், தேர்ந்தெடுக்கப்பட்ட எந்த முனையிலும் அனைத்து விளிம்புகளும் மூடப்பட்டிருக்கும் வகையில் குறைந்தபட்ச அளவு கொண்ட முனைகளின் துணைக்குழுவை கண்டுபிடிக்கும்படி கேட்கிறது."

#: ../../tutorials/09_application_classes.ipynb:124
msgid "We import the application class ``VertexCover`` for the vertex cover problem and ``networkx`` to generate a random graph."
msgstr "வெர்டெக்ஸ் கவர் பிரச்சனைக்காக ``VertexCover`` மற்றும் சீரற்ற வரைபடத்தை உருவாக்க ``networkx`` என்ற விண்ணப்ப வகுப்பை நாங்கள் இறக்குமதி செய்கிறோம்."

#: ../../tutorials/09_application_classes.ipynb:182
msgid "``VertexCover`` takes a graph as an instance and ``to_quadratic_program`` generates a corresponding ``QuadraticProgram`` of the instance of the vertex cover problem."
msgstr "``VertexCover`` ஒரு வரைபடத்தை ஒரு உதாரணமாக எடுத்துக்கொள்கிறது மற்றும் ``to_quadratic_program`` வெர்டெக்ஸ் கவர் பிரச்சனையின் தொடர்புடைய ``QuadraticProgram`` ஐ உருவாக்குகிறது."

#: ../../tutorials/09_application_classes.ipynb:285
msgid "You can solve the problem as follows. ``NumPyMinimumEigensolver`` finds the minimum eigen vector. You can also apply QAOA. Note that the solution by QAOA is not always optimal."
msgstr "நீங்கள் பின்வருமாறு சிக்கலை தீர்க்க முடியும். ``NumPyMinimumEigensolver`` குறைந்தபட்ச ஈஜென் திசையனை கண்டுபிடிக்கும். நீங்கள் QAOA ஐ விண்ணப்பிக்கலாம். QAOA இன் தீர்வு எப்போதும் உகந்ததல்ல என்பதை நினைவில் கொள்க."

#: ../../tutorials/09_application_classes.ipynb:426
msgid "The knapsack problem asks us to find a combination of items such that the total weight is within the capacity of the knapsack and maximize the total value of the items. The following examples solve an instance of the knapsack problem with 5 items by Numpy eigensolver and QAOA."
msgstr "நாப்சாக் பிரச்சனை, மொத்த எடை நாப்சாக்கின் திறனுக்குள் இருக்கும் பொருட்களின் கலவையை கண்டுபிடித்து, பொருட்களின் மொத்த மதிப்பை அதிகரிக்கும்படி கேட்கிறது. பின்வரும் எடுத்துக்காட்டுகள் Numpy eigensolver மற்றும் QAOA மூலம் 5 உருப்படிகளுடன் நாப்சாக் பிரச்சனையின் ஒரு உதாரணத்தை தீர்க்கின்றன."

#: ../../tutorials/09_application_classes.ipynb:624
msgid "How to check the Hamiltonian"
msgstr "ஹாமில்டோனியனை எவ்வாறு சரிபார்க்கலாம்"

#: ../../tutorials/09_application_classes.ipynb:626
msgid "If you want to check the actual Hamiltonian generated from your problem instance, you need to apply a converter as follows."
msgstr "உங்கள் பிரச்சனை நிகழ்விலிருந்து உருவாக்கப்பட்ட உண்மையான ஹாமில்டோனியனை நீங்கள் சரிபார்க்க விரும்பினால், நீங்கள் பின்வருமாறு ஒரு மாற்றி பயன்படுத்த வேண்டும்."

