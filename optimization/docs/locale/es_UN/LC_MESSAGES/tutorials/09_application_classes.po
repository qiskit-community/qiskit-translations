msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 13:48+0000\n"
"PO-Revision-Date: 2021-12-16 15:28\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/09_application_classes.po\n"
"X-Crowdin-File-ID: 9658\n"
"Language: es_UN\n"

#: ../../tutorials/09_application_classes.ipynb:9
msgid "This page was generated from `docs/tutorials/09_application_classes.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/09_application_classes.ipynb`__."

#: ../../tutorials/09_application_classes.ipynb:9
msgid "Application Classes for Optimization Problems"
msgstr "Clases de Aplicaciones para Problemas de Optimización"

#: ../../tutorials/09_application_classes.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/09_application_classes.ipynb:23
msgid "We introduce application classes for the following optimization problems so that users can easily try various optimization problems on quantum computers."
msgstr "Introducimos clases de aplicaciones para los siguientes problemas de optimización para que los usuarios puedan probar fácilmente varios problemas de optimización en computadoras cuánticas."

#: ../../tutorials/09_application_classes.ipynb:25
msgid "Exact cover problem"
msgstr "Problema de cobertura exacta"

#: ../../tutorials/09_application_classes.ipynb:27
msgid "Given a collection of subsets of items, find a subcollection such that each item is covered exactly once."
msgstr "Dada una colección de subconjuntos de elementos, encuentra una subcolección tal que cada elemento se cubra exactamente una vez."

#: ../../tutorials/09_application_classes.ipynb:29
#: ../../tutorials/09_application_classes.ipynb:432
msgid "Knapsack problem"
msgstr "Problema de la mochila (knapsack)"

#: ../../tutorials/09_application_classes.ipynb:31
msgid "Given a set of items, find a subset of items such that the total weight is within the capacity and the total value is maximized."
msgstr "Dado un conjunto de elementos, encuentra un subconjunto de elementos de modo que el peso total esté dentro de la capacidad y el valor total sea maximizado."

#: ../../tutorials/09_application_classes.ipynb:33
msgid "Number partition problem"
msgstr "Problema de partición de números"

#: ../../tutorials/09_application_classes.ipynb:35
msgid "Given a multiset of positive integers, find a partition of the multiset into two subsets such that the sums of the subsets are equal."
msgstr "Dado un conjunto múltiple de enteros positivos, encuentra una partición del conjunto múltiple en dos subconjuntos de modo que las sumas de los subconjuntos sean iguales."

#: ../../tutorials/09_application_classes.ipynb:37
msgid "Set packing problem"
msgstr "Problema del empaquetamiento de conjuntos"

#: ../../tutorials/09_application_classes.ipynb:39
msgid "Given a collection of subsets of items, find a subcollection such that all subsets of the subcollection are pairwise disjoint and the number of items in the subcollection is maximized."
msgstr "Dada una colección de subconjuntos de elementos, encuentra una subcolección tal que todos los subconjuntos de la subcolección estén separados por pares y se maximice el número de elementos de la subcolección."

#: ../../tutorials/09_application_classes.ipynb:41
msgid "Graph problems"
msgstr "Problemas con grafos"

#: ../../tutorials/09_application_classes.ipynb:43
msgid "Clique problem"
msgstr "Problema del clan (clique)"

#: ../../tutorials/09_application_classes.ipynb:45
msgid "Given an undirected graph, find a subset of nodes with a specified number or the maximum number such that the induced subgraph is complete."
msgstr "Dado un grafo no dirigido, encuentra un subconjunto de nodos con un número especificado o el número máximo de modo que el subgrafo inducido esté completo."

#: ../../tutorials/09_application_classes.ipynb:47
msgid "Graph partition problem"
msgstr "Problema de partición de grafos"

#: ../../tutorials/09_application_classes.ipynb:49
msgid "Given an undirected graph, find a partition into two components whose sizes are equal such that the total capacity of the edges between the two components is minimized."
msgstr "Dado un grafo no dirigido, encuentra una partición en dos componentes cuyos tamaños sean iguales de tal manera que la capacidad total de las aristas entre los dos componentes sea mínima."

#: ../../tutorials/09_application_classes.ipynb:51
msgid "Max-cut problem"
msgstr "Problema de máximo corte (max-cut)"

#: ../../tutorials/09_application_classes.ipynb:53
msgid "Given an undirected graph, find a partition of nodes into two subsets such that the total weight of the edges between the two subsets is maximized."
msgstr "Dado un grafo no dirigido, encuentra una partición de nodos en dos subconjuntos de modo que se maximice el peso total de las aristas entre los dos subconjuntos."

#: ../../tutorials/09_application_classes.ipynb:55
msgid "Stable set problem"
msgstr "Problema del conjunto estable"

#: ../../tutorials/09_application_classes.ipynb:57
msgid "Given an undirected graph, find a subset of nodes such that no edge connects the nodes in the subset and the number of nodes is maximized."
msgstr "Dado un grafo no dirigido, encuentra un subconjunto de nodos de modo que ninguna arista conecte los nodos en el subconjunto y se maximice el número de nodos."

#: ../../tutorials/09_application_classes.ipynb:59
msgid "Traveling salesman problem"
msgstr "Problema del vendedor viajero"

#: ../../tutorials/09_application_classes.ipynb:61
msgid "Given a graph, find a route with the minimum distance such that the route visits each city exactly once."
msgstr "Dado un grafo, encuentra una ruta con la distancia mínima tal que la ruta visite cada ciudad exactamente una vez."

#: ../../tutorials/09_application_classes.ipynb:63
msgid "Vehicle routing problem"
msgstr "Problema de las rutas de vehículos"

#: ../../tutorials/09_application_classes.ipynb:65
msgid "Given a graph, a depot node, and the number of vehicles (routes), find a set of routes such that each node is covered exactly once except the depot and the total distance of the routes is minimized."
msgstr "Dado un grafo, un nodo de depósito y el número de vehículos (rutas), encuentra un conjunto de rutas de modo que cada nodo se cubra exactamente una vez, excepto el depósito, y la distancia total de las rutas sea minimizada."

#: ../../tutorials/09_application_classes.ipynb:67
#: ../../tutorials/09_application_classes.ipynb:120
msgid "Vertex cover problem"
msgstr "Problema da la cobertura de vértices"

#: ../../tutorials/09_application_classes.ipynb:69
msgid "Given an undirected graph, find a subset of nodes with the minimum size such that each edge has at least one endpoint in the subsets."
msgstr "Dado un grafo no dirigido, encuentra un subconjunto de nodos con el tamaño mínimo tal que cada arista tenga al menos un punto final en los subconjuntos."

#: ../../tutorials/09_application_classes.ipynb:71
msgid "The application classes for graph problems (``GraphOptimizationApplication``) provide a functionality to draw graphs of an instance and a result. Note that you need to install ``matplotlib`` beforehand to utilize the functionality."
msgstr "Las clases de aplicaciones para problemas de grafos (``GraphOptimizationApplication``) proporcionan una funcionalidad para dibujar los grafos de una instancia y un resultado. Ten en cuenta que debes instalar ``matplotlib`` de antemano para utilizar la funcionalidad."

#: ../../tutorials/09_application_classes.ipynb:82
msgid "We introduce examples of the vertex cover problem and the knapsack problem in this page."
msgstr "Introducimos ejemplos del problema de la cobertura de vértices y el problema de la mochila (knapsack) en esta página."

#: ../../tutorials/09_application_classes.ipynb:84
msgid "Examples of the max-cut problem and the traveling salesman problem are available in `Max-Cut and Traveling Salesman Problem <06_examples_max_cut_and_tsp.ipynb>`__."
msgstr "Ejemplos del problema max-cut y el problema del vendedor viajero están disponibles en `Max-Cut y Problema del Vendedor Viajero <06_examples_max_cut_and_tsp.ipynb>`__."

#: ../../tutorials/09_application_classes.ipynb:95
msgid "We first import packages necessary for application classes."
msgstr "Primero importamos los paquetes necesarios para las clases de aplicaciones."

#: ../../tutorials/09_application_classes.ipynb:122
msgid "We introduce the application class for the vertex cover problem as an example of graph problems. Given an undirected graph, the vertex cover problem asks us to find a subset of nodes with the minimum size such that all edges are covered by any node selected."
msgstr "Introducimos la clase de aplicación para el problema de cobertura de vértices como un ejemplo de problemas de grafos. Dado un grafo no dirigido, el problema de la cobertura de vértices nos pide que busquemos un subconjunto de nodos con el tamaño mínimo tal que todas las aristas estén cubiertas por cualquier nodo seleccionado."

#: ../../tutorials/09_application_classes.ipynb:124
msgid "We import the application class ``VertexCover`` for the vertex cover problem and ``networkx`` to generate a random graph."
msgstr "Importamos la clase de aplicación ``VertexCover`` para el problema de cobertura de vértices y ``networkx`` para generar un grafo aleatorio."

#: ../../tutorials/09_application_classes.ipynb:191
msgid "``VertexCover`` takes a graph as an instance and ``to_quadratic_program`` generates a corresponding ``QuadraticProgram`` of the instance of the vertex cover problem."
msgstr "``VertexCover`` toma un grafo como instancia y ``to_quadratic_program`` genera un correspondiente ``QuadraticProgram`` de la instancia del problema de cobertura de vértices."

#: ../../tutorials/09_application_classes.ipynb:287
msgid "You can solve the problem as follows. ``NumPyMinimumEigensolver`` finds the minimum eigen vector. You can also apply QAOA. Note that the solution by QAOA is not always optimal."
msgstr "Puedes resolver el problema de la siguiente manera. ``NumPyMinimumEigensolver`` encuentra el vector propio mínimo. También puedes aplicar QAOA. Ten en cuenta que la solución de QAOA no siempre es óptima."

#: ../../tutorials/09_application_classes.ipynb:434
msgid "The knapsack problem asks us to find a combination of items such that the total weight is within the capacity of the knapsack and maximize the total value of the items. The following examples solve an instance of the knapsack problem with 5 items by Numpy eigensolver and QAOA."
msgstr "El problema de la mochila (knapsack) nos pide que encontremos una combinación de artículos de manera que el peso total esté dentro de la capacidad de la mochila y maximicemos el valor total de los artículos. Los siguientes ejemplos resuelven una instancia del problema de la mochila con 5 artículos usando el solucionador propio de Numpy y QAOA."

#: ../../tutorials/09_application_classes.ipynb:619
msgid "How to check the Hamiltonian"
msgstr "Cómo revisar el Hamiltoniano"

#: ../../tutorials/09_application_classes.ipynb:621
msgid "If you want to check the actual Hamiltonian generated from your problem instance, you need to apply a converter as follows."
msgstr "Si desea verificar el Hamiltoniano real generado a partir de tu instancia del problema, debes aplicar un convertidor de la siguiente manera."

