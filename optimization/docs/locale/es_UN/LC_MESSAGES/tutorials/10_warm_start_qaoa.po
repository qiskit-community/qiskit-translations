msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-06 17:29+0000\n"
"PO-Revision-Date: 2022-07-06 18:26\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/10_warm_start_qaoa.po\n"
"X-Crowdin-File-ID: 9660\n"
"Language: es_UN\n"

#: ../../tutorials/10_warm_start_qaoa.ipynb:9
msgid "This page was generated from `docs/tutorials/10_warm_start_qaoa.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/10_warm_start_qaoa.ipynb`__."

#: ../../tutorials/10_warm_start_qaoa.ipynb:9
msgid "Warm-starting quantum optimization"
msgstr "Optimización cuántica de arranque en caliente (warm-starting)"

#: ../../tutorials/10_warm_start_qaoa.ipynb:12
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/10_warm_start_qaoa.ipynb:14
msgid "Optimization problems with integer variables or constraints are often hard to solve. For example, the Quadratic Unconstrained Binary Optimization (QUBO) problem, i.e."
msgstr "Los problemas de optimización con variables enteras o restricciones a menudo son difíciles de resolver. Por ejemplo, el problema de Optimización Binaria Cuadrática Sin Restricciones (Quadratic Unconstrained Binary Optimization, QUBO), es decir,"

#: ../../tutorials/10_warm_start_qaoa.ipynb:16
msgid ":nbsphinx-math:`\\begin{align} \\min_{x\\in\\{0,1\\}^n}x^T\\Sigma x + \\mu^Tx, \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} \\min_{x\\in\\{0,1\\}^n}x^T\\Sigma x + \\mu^Tx, \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:20
msgid "is NP-Hard. Here, :math:`\\Sigma` is an :math:`n\\times n` matrix and :math:`x` is a vector of :math:`n` binary variables. Note that we could have added the linear term :math:`\\mu` to the diagonal as :math:`x_i^2=x_i` for :math:`x_i\\in\\{0, 1\\}`. While QUBOs are hard to solve there exists many ways to relax them to problems that are easier to solve. For example, if :math:`\\Sigma` is semi-definite positive the QUBO can be relaxed and results in a convex Quadratic Program"
msgstr "es NP difícil. Aquí, :math:`\\Sigma` es una matriz :math:`n\\times n` y :math:`x` es un vector de :math:`n` variables binarias. Ten en cuenta que podríamos haber agregado el término lineal :math:`\\mu` a la diagonal como :math:`x_i^2=x_i` para :math:`x_i\\in\\{0, 1\\}`. Si bien los QUBO son difíciles de resolver, existen muchas formas de relajarlos a problemas que son más fáciles de resolver. Por ejemplo, si :math:`\\Sigma` es semi-definido positivo, el QUBO se puede relajar y da como resultado un Programa Cuadrático convexo"

#: ../../tutorials/10_warm_start_qaoa.ipynb:22
msgid ":nbsphinx-math:`\\begin{align} \\min_{x\\in[0,1]^n}x^T\\Sigma x, \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} \\min_{x\\in[0,1]^n}x^T\\Sigma x, \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:26
msgid "which becomes easy to solve as :math:`x` now represents :math:`n` continuous variables bound to the range :math:`[0, 1]`. Such relaxations can be leveraged to warm-start quantum optimization algorithms as shown in [1]."
msgstr "que se vuelve fácil de resolver como :math:`x` ahora representa :math:`n` variables continuas restringidas al rango :math:`[0, 1]`. Estas relajaciones pueden aprovecharse para arrancar en caliente (warm-start) algoritmos de optimización cuántica como se muestra en [1]."

#: ../../tutorials/10_warm_start_qaoa.ipynb:29
msgid "References"
msgstr "Referencias"

#: ../../tutorials/10_warm_start_qaoa.ipynb:31
msgid "[1] `D. J. Egger, J Marecek, S. Woerner, Warm-starting quantum optimization, arXiv:2009.10095 <http://arxiv.org/abs/2009.10095>`__"
msgstr "[1] `D. J. Egger, J Marecek, S. Woerner, Warm-starting quantum optimization, arXiv:2009.10095 <http://arxiv.org/abs/2009.10095>`__"

#: ../../tutorials/10_warm_start_qaoa.ipynb:68
msgid "Preliminaries: relaxing QUBOs"
msgstr "Preliminares: relajando QUBOs"

#: ../../tutorials/10_warm_start_qaoa.ipynb:70
msgid "First, we show how to relax a QUBO built with a semi-definite positive matrix to obtain an easy-to-solve QP."
msgstr "Primero, mostramos cómo relajar un QUBO construido con una matriz semi-definida positiva para obtener un QP fácil de resolver."

#: ../../tutorials/10_warm_start_qaoa.ipynb:115
msgid "For this example, we use a positive semi-definite matrix :math:`\\Sigma` and a linear term :math:`\\mu` as defined below."
msgstr "Para este ejemplo, usamos una matriz semi-definida positiva :math:`\\Sigma` y un término lineal :math:`\\mu` como se define a continuación."

#: ../../tutorials/10_warm_start_qaoa.ipynb:146
msgid "Using DOCPLEX we build a model with binary variables."
msgstr "Utilizando DOCPLEX construimos un modelo con variables binarias."

#: ../../tutorials/10_warm_start_qaoa.ipynb:243
msgid "Such binary problems are hard to deal with but can be solved if the problem instance is small enough. Our example above has as solution"
msgstr "Tales problemas binarios son difíciles de tratar, pero se pueden resolver si la instancia del problema es lo suficientemente pequeña. Nuestro ejemplo anterior tiene como solución"

#: ../../tutorials/10_warm_start_qaoa.ipynb:295
msgid "We can create a relaxation of this problem in which the variables are no longer binary. Note that we use the ``QuadraticProgramToQubo`` converter to convert the constraint into a quadratic penalty term. We do this to remain consistent with the steps that the Qiskit optimization module applies internally."
msgstr "Podemos crear una relajación de este problema en el que las variables ya no son binarias. Ten en cuenta que usamos el convertidor ``QuadraticProgramToQubo`` para transformar la restricción en un término de penalización cuadrático. Hacemos esto para mantener la coherencia con los pasos que aplica internamente el módulo de optimización de Qiskit."

#: ../../tutorials/10_warm_start_qaoa.ipynb:410
msgid "The solution of this continuous relaxation is different from the solution to the binary problem but can be used to warm-start a solver when dealing with the binary problem."
msgstr "La solución de esta relajación continua es diferente de la solución del problema binario, pero se puede utilizar para iniciar en caliente (warm-start) un solucionador cuando se trata de un problema binario."

#: ../../tutorials/10_warm_start_qaoa.ipynb:498
msgid "QAOA"
msgstr "QAOA"

#: ../../tutorials/10_warm_start_qaoa.ipynb:500
msgid "Here, we illustrate how to warm-start the quantum approximate optimization algorithm (QAOA) by leveraging the relaxed problem shown above."
msgstr "Aquí, ilustramos cómo arrancar en caliente (warm-start) el algoritmo cuántico de optimización aproximada (quantum approximate optimization algorithm, QAOA) aprovechando el problema relajado que se muestra arriba."

#: ../../tutorials/10_warm_start_qaoa.ipynb:503
msgid "Standard QAOA"
msgstr "QAOA estándar"

#: ../../tutorials/10_warm_start_qaoa.ipynb:505
msgid "First, we use standard QAOA to solve the QUBO. To do this, we convert the QUBO to Qiskit’s QuadraticProgram class (note that the resulting problem is still a binary problem)."
msgstr "Primero, usamos QAOA estándar para resolver el QUBO. Para hacer esto, convertimos QUBO a la clase QuadraticProgram de Qiskit (ten en cuenta que el problema resultante sigue siendo un problema binario)."

#: ../../tutorials/10_warm_start_qaoa.ipynb:585
#: ../../tutorials/10_warm_start_qaoa.ipynb:896
msgid "Warm-start QAOA"
msgstr "QAOA de arranque en caliente (warm-start)"

#: ../../tutorials/10_warm_start_qaoa.ipynb:587
msgid "Next, we compare this result to a warm-start QAOA in which we use the solution to the continuous relaxation of the problem. First, we create the initial state"
msgstr "A continuación, comparamos este resultado con un QAOA de arranque en caliente (warm-start) en el que usamos la solución para la relajación continua del problema. Primero, creamos el estado inicial"

#: ../../tutorials/10_warm_start_qaoa.ipynb:589
msgid ":nbsphinx-math:`\\begin{align} |\\phi^*\\rangle=\\bigotimes_{i=0}^{n-1}R_y(\\theta_i)|0\\rangle_n . \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} |\\phi^*\\rangle=\\bigotimes_{i=0}^{n-1}R_y(\\theta_i)|0\\rangle_n . \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:593
msgid "which is given by applying :math:`R_y` rotations with an angle :math:`\\theta=2\\arcsin(\\sqrt{c^*_i})` that depends on the solution to the relaxed problem. Here, :math:`c^*_i` the value of variable :math:`i` of the relaxed problem."
msgstr "que se obtiene aplicando rotaciones :math:`R_y` con un ángulo :math:`\\theta=2\\arcsin(\\sqrt{c^*_i})` que depende de la solución al problema relajado. Aquí, :math:`c^*_i` es el valor de la variable :math:`i` del problema relajado."

#: ../../tutorials/10_warm_start_qaoa.ipynb:631
msgid "Next, we create the mixer operator for QAOA. When warm-starting QAOA we must ensure that the mixer operator has the initial state as ground state. We therefore chose the Hamiltonian"
msgstr "Después, creamos el operador mezclador para QAOA. Al arrancar QAOA en caliente (warm-starting), debemos asegurarnos de que el operador del mezclador tenga el estado inicial como estado fundamental. Por lo tanto, elegimos el Hamiltoniano"

#: ../../tutorials/10_warm_start_qaoa.ipynb:633
msgid ":nbsphinx-math:`\\begin{align} H_{M,i}^{(ws)}= \\begin{pmatrix} 2c_i^*-1 & -2\\sqrt{c_i^*(1-c_i^*)} \\\\ -2\\sqrt{c_i^*(1-c_i^*)} & 1-2c_i^* \\end{pmatrix} \\end{align}`"
msgstr ":nbsphinx-math:`\\begin{align} H_{M,i}^{(ws)}= \\begin{pmatrix} 2c_i^*-1 & -2\\sqrt{c_i^*(1-c_i^*)} \\\\ -2\\sqrt{c_i^*(1-c_i^*)} & 1-2c_i^* \\end{pmatrix} \\end{align}`"

#: ../../tutorials/10_warm_start_qaoa.ipynb:641
msgid "as mixer operator for qubit :math:`i`. Once multiplied by :math:`-i\\beta` and exponentiated this mixer produces the following mixer circuit."
msgstr "como operador mezclador para el qubit :math:`i`. Una vez multiplicado por :math:`-i\\beta` y exponenciado, este mezclador produce el siguiente circuito mezclador."

#: ../../tutorials/10_warm_start_qaoa.ipynb:681
msgid "The initial state and mixer operator can then be passed to QAOA."
msgstr "El estado inicial y el operador mezclador se pueden pasar a QAOA."

#: ../../tutorials/10_warm_start_qaoa.ipynb:759
msgid "Analysis"
msgstr "Análisis"

#: ../../tutorials/10_warm_start_qaoa.ipynb:761
msgid "Both results appear to give the same result. However, when we look at the underlying probability distribution we observe that the warm-start QAOA has a much higher probability of sampling the optimal solution."
msgstr "Ambos resultados parecen dar el mismo resultado. Sin embargo, cuando observamos la distribución subyacente de probabilidades observamos que el arranque en caliente (warm-start) de QAOA tiene una probabilidad mucho mayor de muestrear la solución óptima."

#: ../../tutorials/10_warm_start_qaoa.ipynb:898
msgid "The warm-start features above are available in the Qiskit optimization module as a single optimizer named ``WarmStartQAOAOptimizer`` which is illustrated below. This solver will solve a QUBO with a warm-start QAOA. It computes :math:`c^*` by relaxing the problem. This behavior is controlled by setting ``relax_for_pre_solver`` to ``True``."
msgstr "Las características del inicio en caliente (warm-start) anteriores están disponibles en el módulo de optimización de Qiskit como un optimizador único llamado ``WarmStartQAOAOptimizer`` que se ilustra a continuación. Este solucionador resolverá un QUBO con un QAOA de arranque en caliente (warm-start). Calcula :math:`c^*` relajando el problema. Este comportamiento se controla configurando ``relax_for_pre_solver`` en ``True``."

