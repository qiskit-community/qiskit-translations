msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 15:08+0000\n"
"PO-Revision-Date: 2022-02-14 19:06\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/05_admm_optimizer.po\n"
"X-Crowdin-File-ID: 9650\n"
"Language: es_UN\n"

#: ../../tutorials/05_admm_optimizer.ipynb:9
msgid "This page was generated from `docs/tutorials/05_admm_optimizer.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/05_admm_optimizer.ipynb`__."

#: ../../tutorials/05_admm_optimizer.ipynb:9
msgid "ADMM Optimizer"
msgstr "Optimizador ADMM"

#: ../../tutorials/05_admm_optimizer.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/05_admm_optimizer.ipynb:32
msgid "The ADMM Optimizer can solve classes of mixed-binary constrained optimization problems, hereafter (MBCO), which often appear in logistic, finance, and operation research. In particular, the ADMM Optimizer here designed can tackle the following optimization problem :math:`(P)`:"
msgstr "El optimizador ADMM puede resolver clases de problemas de optimización con restricciones binarias mixtas, en adelante (MBCO, mixed-binary constrained optimization problems), que a menudo aparecen en la investigación de operaciones, finanzas y logística. En particular, el optimizador ADMM diseñado aquí puede abordar el siguiente problema de optimización :math:`(P)`:"

#: ../../tutorials/05_admm_optimizer.ipynb:34
msgid "\\min_{x \\in \\mathcal{X},u\\in\\mathcal{U} \\subseteq \\mathbb{R}^l } \\quad q(x) + \\varphi(u),"
msgstr "\\min_{x \\in \\mathcal{X},u\\in\\mathcal{U} \\subseteq \\mathbb{R}^l } \\quad q(x) + \\varphi(u),"

#: ../../tutorials/05_admm_optimizer.ipynb:39
msgid "subject to the constraints:"
msgstr "sujeto a las restricciones:"

#: ../../tutorials/05_admm_optimizer.ipynb:41
msgid "\\mathrm{s.t.:~} \\quad G x = b, \\quad  g(x) \\leq 0, \\quad \\ell(x, u) \\leq 0,"
msgstr "\\mathrm{s.t.:~} \\quad G x = b, \\quad  g(x) \\leq 0, \\quad \\ell(x, u) \\leq 0,"

#: ../../tutorials/05_admm_optimizer.ipynb:46
msgid "with the corresponding functional assumptions."
msgstr "con los correspondientes supuestos funcionales."

#: ../../tutorials/05_admm_optimizer.ipynb:48
msgid "Function :math:`q: \\mathbb{R}^n \\to \\mathbb{R}` is quadratic, i.e., :math:`q(x) = x^{\\intercal} Q x + a^{\\intercal} x` for a given symmetric squared matrix :math:`Q \\in \\mathbb{R}^n \\times \\mathbb{R}^n, Q = Q^{\\intercal}`, and vector :math:`a \\in \\mathbb{R}^n`;"
msgstr "La función :math:`q: \\mathbb{R}^n \\to \\mathbb{R}` es cuadrática, es decir, :math:`q(x) = x^{\\intercal} Q x + a^{\\intercal} x` para una matriz cuadrada simétrica :math:`Q \\in \\mathbb{R}^n \\times \\mathbb{R}^n, Q = Q^{\\intercal}` dada, y el vector :math:`a \\in \\mathbb{R}^n`;"

#: ../../tutorials/05_admm_optimizer.ipynb:49
msgid "The set :math:`\\mathcal{X} = \\{0,1\\}^n = \\{x_{(i)} (1-x_{(i)}) = 0, \\forall i\\}` enforces the binary constraints;"
msgstr "El conjunto :math:`\\mathcal{X} = \\{0,1\\}^n = \\{x_{(i)} (1-x_{(i)}) = 0, \\forall i\\}` impone las restricciones binarias;"

#: ../../tutorials/05_admm_optimizer.ipynb:50
msgid "Matrix :math:`G\\in\\mathbb{R}^n \\times \\mathbb{R}^{n'}`, vector :math:`b \\in \\mathbb{R}^{n'}`, and function :math:`g: \\mathbb{R}^n \\to \\mathbb{R}` is convex;"
msgstr "La matriz :math:`G\\in\\mathbb{R}^n \\times \\mathbb{R}^{n'}`, el vector :math:`b \\in \\mathbb{R}^{n'}`, y la función :math:`g: \\mathbb{R}^n \\to \\mathbb{R}` es convexa;"

#: ../../tutorials/05_admm_optimizer.ipynb:51
msgid "Function :math:`\\varphi: \\mathbb{R}^l \\to \\mathbb{R}` is convex and :math:`\\mathcal{U}` is a convex set;"
msgstr "La función :math:`\\varphi: \\mathbb{R}^l \\to \\mathbb{R}` es convexa y :math:`\\mathcal{U}` es un conjunto convexo;"

#: ../../tutorials/05_admm_optimizer.ipynb:52
msgid "Function :math:`\\ell: \\mathbb{R}^n\\times \\mathbb{R}^l \\to \\mathbb{R}` is *jointly* convex in :math:`x, u`."
msgstr "La función :math:`\\ell: \\mathbb{R}^n\\times \\mathbb{R}^l \\to \\mathbb{R}` es *conjuntamente* convexa en :math:`x, u`."

#: ../../tutorials/05_admm_optimizer.ipynb:63
msgid "In order to solve MBO problems, [1] proposed heuristics for :math:`(P)` based on the Alternating Direction Method of Multipliers (ADMM) [2]. ADMM is an operator splitting algorithm with a long history in convex optimization, and it is known to have residual, objective and dual variable convergence properties, provided that convexity assumptions are holding."
msgstr "Para resolver problemas MBO, [1] propone heurísticas para :math:`(P)` basadas en el Método de Multiplicadores de Dirección Alterna (Alternating Direction Method of Multipliers, ADMM) [2]. ADMM es un algoritmo de división de operadores con una larga historia en la optimización convexa, y se sabe que tiene propiedades de convergencia de variables residuales, objetivas y duales, siempre que se cumplan los supuestos de convexidad."

#: ../../tutorials/05_admm_optimizer.ipynb:65
msgid "The method of [1] (referred to as 3-ADMM-H) leverages the ADMM operator-splitting procedure to devise a decomposition for certain classes of MBOs into:"
msgstr "El método de [1] (denominado 3-ADMM-H) aprovecha el procedimiento de división del operador ADMM para diseñar una descomposición de ciertas clases de MBO en:"

#: ../../tutorials/05_admm_optimizer.ipynb:67
msgid "a QUBO subproblem to be solved by on the quantum device via variational algorithms, such as VQE or QAOA;"
msgstr "un subproblema QUBO que se resolverá en el dispositivo cuántico mediante algoritmos variacionales, como VQE o QAOA;"

#: ../../tutorials/05_admm_optimizer.ipynb:68
msgid "continuous convex constrained subproblem, which can be efficiently solved with classical optimization solvers."
msgstr "subproblema restringido convexo continuo, que se puede resolver de manera eficiente con solucionadores clásicos de optimización."

#: ../../tutorials/05_admm_optimizer.ipynb:70
msgid "The algorithm 3-ADMM-H works as follows:"
msgstr "El algoritmo 3-ADMM-H funciona de la siguiente manera:"

#: ../../tutorials/05_admm_optimizer.ipynb:72
msgid "Initialization phase (set the parameters and the QUBO and convex solvers);"
msgstr "Fase de inicialización (configurar los parámetros y los solucionadores QUBO y convexos);"

#: ../../tutorials/05_admm_optimizer.ipynb:73
msgid "For each ADMM iterations ($k = 1, 2, :nbsphinx-math:`\\ldots`, $) until termination:"
msgstr "Para cada iteración de ADMM ($k = 1, 2, :nbsphinx-math:`\\ldots`, $) hasta terminar:"

#: ../../tutorials/05_admm_optimizer.ipynb:75
msgid "Solve a properly defined QUBO subproblem (with a classical or quantum solver);"
msgstr "Resolver un subproblema QUBO correctamente definido (con un solucionador clásico o cuántico);"

#: ../../tutorials/05_admm_optimizer.ipynb:76
msgid "Solve properly defined convex problems (with a classical solver);"
msgstr "Resolver problemas convexos correctamente definidos (con un solucionador clásico);"

#: ../../tutorials/05_admm_optimizer.ipynb:77
msgid "Update the dual variables."
msgstr "Actualizar las variables duales."

#: ../../tutorials/05_admm_optimizer.ipynb:79
msgid "Return optimizers and cost."
msgstr "Regresar optimizadores y costo."

#: ../../tutorials/05_admm_optimizer.ipynb:81
msgid "A comprehensive discussion on the conditions for convergence, feasibility and optimality of the algorithm can be found in [1]. A variant with 2 ADMM blocks, namely a QUBO subproblem, and a continuous convex constrained subproblem, is also introduced in [1]."
msgstr "En [1] se puede encontrar una discusión exhaustiva sobre las condiciones para la convergencia, viabilidad y optimización del algoritmo. Una variante con 2 bloques ADMM, es decir, un subproblema QUBO y un subproblema restringido convexo continuo también es introducido en [1]."

#: ../../tutorials/05_admm_optimizer.ipynb:84
msgid "References"
msgstr "Referencias"

#: ../../tutorials/05_admm_optimizer.ipynb:86
msgid "[1] `C. Gambella and A. Simonetto, Multi-block ADMM heuristics for mixed-binary optimization, on classical and quantum computers, arXiv preprint arXiv:2001.02069 (2020). <https://arxiv.org/abs/2001.02069>`__"
msgstr "[1] `C. Gambella and A. Simonetto, Multi-block ADMM heuristics for mixed-binary optimization, on classical and quantum computers, arXiv preprint arXiv:2001.02069 (2020). <https://arxiv.org/abs/2001.02069>`__"

#: ../../tutorials/05_admm_optimizer.ipynb:88
msgid "[2] `S. Boyd, N. Parikh, E. Chu, B. Peleato, and J. Eckstein, Distributed optimization and statistical learning via the alternating direction method of multipliers, Foundations and Trends in Machine learning, 3, 1–122 (2011). <https://web.stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf>`__"
msgstr "[2] `S. Boyd, N. Parikh, E. Chu, B. Peleato, and J. Eckstein, Distributed optimization and statistical learning via the alternating direction method of multipliers, Foundations and Trends in Machine learning, 3, 1–122 (2011). <https://web.stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf>`__"

#: ../../tutorials/05_admm_optimizer.ipynb:100
msgid "Initialization"
msgstr "Inicialización"

#: ../../tutorials/05_admm_optimizer.ipynb:102
msgid "First of all we load all the packages that we need."
msgstr "En primer lugar cargamos todos los paquetes que necesitamos."

#: ../../tutorials/05_admm_optimizer.ipynb:141
msgid "We first initialize all the algorithms we plan to use later in this tutorial."
msgstr "Primero inicializamos todos los algoritmos que planeamos usar más adelante en este tutorial."

#: ../../tutorials/05_admm_optimizer.ipynb:143
msgid "To solve the QUBO problems we can choose between"
msgstr "Para solucionar los problemas de QUBO podemos elegir entre"

#: ../../tutorials/05_admm_optimizer.ipynb:145
msgid "``MinimumEigenOptimizer`` using different ``MinimumEigensolver``, such as ``VQE``, ``QAOA`` or ``NumpyMinimumEigensolver`` (classical)"
msgstr "``MinimumEigenOptimizer`` usando diferentes ``MinimumEigensolver``, como ``VQE``, ``QAOA`` o ``NumpyMinimumEigensolver`` (clásico)"

#: ../../tutorials/05_admm_optimizer.ipynb:146
msgid "``GroverOptimizer``"
msgstr "``GroverOptimizer``"

#: ../../tutorials/05_admm_optimizer.ipynb:147
msgid "``CplexOptimizer`` (classical, if CPLEX is installed)"
msgstr "``CplexOptimizer`` (clásico, si CPLEX está instalado)"

#: ../../tutorials/05_admm_optimizer.ipynb:149
msgid "and to solve the convex continuous problems we can choose between the following classical solvers:"
msgstr "y para resolver los problemas continuos convexos podemos elegir entre los siguientes solucionadores clásicos:"

#: ../../tutorials/05_admm_optimizer.ipynb:151
msgid "``CplexOptimizer`` (if CPLEX is installed)"
msgstr "``CplexOptimizer`` (si CPLEX está instalado)"

#: ../../tutorials/05_admm_optimizer.ipynb:152
msgid "``CobylaOptimizer``"
msgstr "``CobylaOptimizer``"

#: ../../tutorials/05_admm_optimizer.ipynb:154
msgid "In case CPLEX is not available, the ``CobylaOptimizer`` (for convex continuous problems) and the ``MinimumEigenOptimizer`` using the ``NumpyMinimumEigensolver`` (for QUBOs) can be used as classical alternatives to CPLEX for testing, validation, and benchmarking."
msgstr "En caso de que CPLEX no esté disponible, el ``CobylaOptimizer`` (para problemas continuos convexos) y el ``MinimumEigenOptimizer`` usando el ``NumpyMinimumEigensolver`` (para QUBOs) se pueden utilizar como alternativas clásicas a CPLEX para pruebas, validación, y evaluación comparativa."

#: ../../tutorials/05_admm_optimizer.ipynb:188
msgid "Example"
msgstr "Ejemplo"

#: ../../tutorials/05_admm_optimizer.ipynb:190
msgid "We test 3-ADMM-H algorithm on a simple Mixed-Binary Quadratic Problem with equality and inequality constraints (Example 6 reported in [1]). We first construct a docplex problem and then load it into a ``QuadraticProgram``."
msgstr "Probamos el algoritmo 3-ADMM-H en un problema cuadrático mixto-binario simple con restricciones de igualdad y desigualdad (ejemplo 6 reportado en [1]). Primero construimos un problema docplex y luego lo cargamos en un ``QuadraticProgram``."

#: ../../tutorials/05_admm_optimizer.ipynb:307
msgid "Classical Solution"
msgstr "Solución Clásica"

#: ../../tutorials/05_admm_optimizer.ipynb:309
msgid "3-ADMM-H needs a QUBO optimizer to solve the QUBO subproblem, and a continuous optimizer to solve the continuous convex constrained subproblem. We first solve the problem classically: we use the ``MinimumEigenOptimizer`` with the ``NumPyMinimumEigenSolver`` as a classical and exact QUBO solver and we use the ``CobylaOptimizer`` as a continuous convex solver. 3-ADMM-H supports any other suitable solver available in Qiskit. For instance, VQE, QAOA, and GroverOptimizer can be invoked as quantum solvers, as demonstrated later. If CPLEX is installed, the ``CplexOptimizer`` can also be used as both, a QUBO and convex solver."
msgstr "3-ADMM-H necesita un optimizador QUBO para resolver el subproblema QUBO y un optimizador continuo para resolver el subproblema restringido convexo continuo. Primero resolvemos el problema de manera clásica: usamos el ``MinimumEigenOptimizer`` con el ``NumPyMinimumEigenSolver`` como solucionador QUBO clásico y exacto y usamos el ``CobylaOptimizer`` como solucionador convexo continuo. 3-ADMM-H admite cualquier otro solucionador adecuado disponible en Qiskit. Por ejemplo, VQE, QAOA y GroverOptimizer pueden ser usados como solucionadores cuánticos, como se demuestra más adelante. Si CPLEX está instalado, el ``CplexOptimizer`` también se puede utilizar tanto como solucionador QUBO, como solucionador convexo."

#: ../../tutorials/05_admm_optimizer.ipynb:322
msgid "Parameters"
msgstr "Parámetros"

#: ../../tutorials/05_admm_optimizer.ipynb:324
msgid "The 3-ADMM-H are wrapped in class ``ADMMParameters``. Customized parameter values can be set as arguments of the class. In this example, parameters :math:`\\rho, \\beta` are initialized to :math:`1001` and :math:`1000`, respectively. The penalization ``factor_c`` of equality constraints :math:`Gx = b` is set to :math:`900`. The tolerance ``tol`` for primal residual convergence is set to ``1.e-6``. In this case, the 3-block implementation is guaranteed to converge for Theorem 4 of [1], because the inequality constraint with the continuous variable is always active. The 2-block implementation can be run by setting ``three_block=False``, and practically converges to a feasible not optimal solution."
msgstr "Los 3-ADMM-H son parte de la clase ``ADMMParameters``. Los valores de los parámetros personalizados se pueden establecer como argumentos de la clase. En este ejemplo, los parámetros :math:`\\rho, \\beta` se inicializan a :math:`1001` y :math:`1000`, respectivamente. La penalización ``factor_c`` de las restricciones de igualdad :math:`Gx = b` se establece a :math:`900`. La tolerancia ``tol`` para la convergencia residual primaria se establece a ``1.e-6``. En este caso, se garantiza que la implementación de 3 bloques convergerá para el Teorema 4 de [1], porque la restricción de desigualdad con la variable continua siempre está activa. La implementación de 2 bloques se puede ejecutar configurando ``three_block=False`` y prácticamente converge a una solución factible no óptima."

#: ../../tutorials/05_admm_optimizer.ipynb:349
msgid "Calling 3-ADMM-H algorithm"
msgstr "Llamando al algoritmo 3-ADMM-H"

#: ../../tutorials/05_admm_optimizer.ipynb:351
msgid "To invoke the 3-ADMM-H algorithm, an instance of the ``ADMMOptimizer`` class needs to be created. This takes ADMM-specific parameters and the subproblem optimizers separately into the constructor. The solution returned is an instance of ``OptimizationResult`` class."
msgstr "Para invocar el algoritmo 3-ADMM-H, es necesario crear una instancia de la clase ``ADMMOptimizer``. Esto toma los parámetros específicos de ADMM y los optimizadores de subproblemas por separado en el constructor. La solución devuelta es una instancia de la clase ``OptimizationResult``."

#: ../../tutorials/05_admm_optimizer.ipynb:395
msgid "Classical Solver Result"
msgstr "Resultado del Solucionador Clásico"

#: ../../tutorials/05_admm_optimizer.ipynb:397
msgid "The 3-ADMM-H solution can be then printed and visualized. The ``x`` attribute of the solution contains respectively, the values of the binary decision variables and the values of the continuous decision variables. The ``fval`` is the objective value of the solution."
msgstr "A continuación, se puede imprimir y visualizar la solución 3-ADMM-H. El atributo ``x`` de la solución contiene, respectivamente, los valores de las variables de decisión binarias y los valores de las variables de decisión continuas. El ``fval`` es el valor objetivo de la solución."

#: ../../tutorials/05_admm_optimizer.ipynb:445
msgid "Solution statistics can be accessed in the ``state`` field and visualized. We here display the convergence of 3-ADMM-H, in terms of primal residuals."
msgstr "Se puede acceder a las estadísticas de la solución en el campo ``state`` y visualizarlas. Aquí mostramos la convergencia de 3-ADMM-H, en términos de residuos primarios."

#: ../../tutorials/05_admm_optimizer.ipynb:478
msgid "Quantum Solution"
msgstr "Solución Cuántica"

#: ../../tutorials/05_admm_optimizer.ipynb:480
msgid "We now solve the same optimization problem with QAOA as QUBO optimizer, running on simulated quantum device. First, one need to select the classical optimizer of the eigensolver QAOA. Then, the simulation backend is set. Finally, the eigensolver is wrapped into the ``MinimumEigenOptimizer`` class. A new instance of ``ADMMOptimizer`` is populated with QAOA as QUBO optimizer."
msgstr "Ahora resolvemos el mismo problema de optimización con QAOA como optimizador QUBO, ejecutándolo en un dispositivo cuántico simulado. Primero, es necesario seleccionar el optimizador clásico del solucionador propio QAOA. Luego, se configura el backend de simulación. Finalmente, el solucionador propio se incluye en la clase ``MinimumEigenOptimizer``. Una nueva instancia de ``ADMMOptimizer`` se completa con QAOA como optimizador QUBO."

#: ../../tutorials/05_admm_optimizer.ipynb:523
msgid "Quantum Solver Results"
msgstr "Resultados de Solucionador Cuántico"

#: ../../tutorials/05_admm_optimizer.ipynb:525
msgid "Here we present the results obtained from the quantum solver. As in the example above ``x`` stands for the solution, the ``fval`` is for objective value."
msgstr "A continuación presentamos los resultados obtenidos del solucionador cuántico. Como en el ejemplo anterior, ``x`` representa la solución, el ``fval`` es el valor objetivo."

