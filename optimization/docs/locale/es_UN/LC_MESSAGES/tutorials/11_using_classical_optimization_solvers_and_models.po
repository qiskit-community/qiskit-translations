msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-06 17:29+0000\n"
"PO-Revision-Date: 2022-07-06 18:27\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/11_using_classical_optimization_solvers_and_models.po\n"
"X-Crowdin-File-ID: 9715\n"
"Language: es_UN\n"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "This page was generated from `docs/tutorials/11_using_classical_optimization_solvers_and_models.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/11_using_classical_optimization_solvers_and_models.ipynb`__."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:9
msgid "Using Classical Optimization Solvers and Models with Qiskit Optimization"
msgstr "Uso de Modelos y Solucionadores de Optimización Clásicos con Qiskit Optimization"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:20
msgid "We can use classical optimization solvers (CPLEX and Gurobi) with Qiskit Optimization. Docplex and Gurobipy are the Python APIs for CPLEX and Gurobi, respectively. We can load and save an optimization model by Docplex and Gurobipy and can apply CPLEX and Gurobi to ``QuadraticProgram``."
msgstr "Podemos utilizar solucionadores de optimización clásicos (CPLEX y Gurobi) con Qiskit Optimization. Docplex y Gurobipy son las API de Python para CPLEX y Gurobi, respectivamente. Podemos cargar y guardar un modelo de optimización de Docplex y Gurobipy y podemos aplicar CPLEX y Gurobi a un ``QuadraticProgram``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:22
msgid "If you want to use the CPLEX solver, you need to install ``pip install 'qiskit-optimization[cplex]'``. Docplex is automatically installed, as a dependent, when you install Qiskit Optimization."
msgstr "Si deseas utilizar el solucionador de CPLEX, debes instalar ``pip install 'qiskit-optimization[cplex]'``. Docplex se instala automáticamente, como dependencia, cuando instalas Qiskit Optimization."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:24
msgid "If you want to use Gurobi and Gurobipy, you need to install ``pip install 'qiskit-optimization[gurobi]'``."
msgstr "Si deseas utilizar Gurobi y Gurobipy, debes instalar ``pip install 'qiskit-optimization[gurobi]'``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:26
msgid "Note that these solvers installed via pip are free versions, which have some limitations such as number of variables. Also note that the latest version 20.1 of CPLEX is available only for Python 3.7 and 3.8 as of July 2021. See the following pages for details."
msgstr "Ten en cuenta que estos solucionadores instalados a través de pip son versiones gratuitas, que tienen algunas limitaciones, como el número de variables. También ten en cuenta que la última versión 20.1 de CPLEX está disponible solo para Python 3.7 y 3.8 a partir de julio de 2021. Consulta las páginas siguientes para obtener más detalles."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:28
msgid "https://pypi.org/project/cplex/"
msgstr "https://pypi.org/project/cplex/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:29
msgid "https://pypi.org/project/gurobipy/"
msgstr "https://pypi.org/project/gurobipy/"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:41
msgid "CplexSolver and GurobiSolver"
msgstr "CplexSolver y GurobiSolver"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:43
msgid "Qiskit Optimization supports the classical solvers of CPLEX and Gurobi as ``CplexSolver`` and ``GurobiSolver``, respectively. We can solve ``QuadraticProgram`` with ``CplexSolver`` and ``GurobiSolver`` as follows."
msgstr "Qiskit Optimization admite los solucionadores clásicos de CPLEX y Gurobi como ``CplexSolver`` y ``GurobiSolver``, respectivamente. Podemos resolver un ``QuadraticProgram`` con ``CplexSolver`` y ``GurobiSolver`` de la siguiente manera."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:208
msgid "We can set the solver parameter of CPLEX as follows. We can display the solver message of CPLEX by setting ``disp=True``. See `Parameters of CPLEX <https://www.ibm.com/docs/en/icos/20.1.0?topic=cplex-parameters>`__ for details of CPLEX parameters."
msgstr "Podemos establecer el parámetro de resolución de CPLEX de la siguiente manera. Podemos mostrar el mensaje del solucionador de CPLEX configurando ``disp=True``. Consulta `Parameters of CPLEX <https://www.ibm.com/docs/en/icos/20.1.0?topic=cplex-parameters>`__ para obtener detalles sobre los parámetros de CPLEX."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:299
msgid "We get the same optimal solution by QAOA as follows."
msgstr "Obtenemos la misma solución óptima con QAOA de la siguiente manera."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:385
msgid "Translators between ``QuadraticProgram`` and Docplex/Gurobipy"
msgstr "Traductores entre ``QuadraticProgram`` y Docplex/Gurobipy"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:387
msgid "Qiskit Optimization can load ``QuadraticProgram`` from a Docplex model and a Gurobipy model."
msgstr "Qiskit Optimization puede cargar un ``QuadraticProgram`` desde un modelo Docplex y un modelo Gurobipy."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:389
msgid "First, we define an optimization problem by Docplex and Gurobipy."
msgstr "Primero, definimos un problema de optimización por Docplex y Gurobipy."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:548
msgid "We can generate ``QuadraticProgram`` object from both Docplex and Gurobipy models. We see that the two ``QuadraticProgram`` objects generated from Docplex and Gurobipy are identical."
msgstr "Podemos generar un objeto ``QuadraticProgram`` a partir de los modelos Docplex y Gurobipy. Vemos que los dos objetos ``QuadraticProgram`` generados a partir de Docplex y Gurobipy son idénticos."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:697
msgid "We can generate a Docplex model and a Gurobipy model from ``QuadraticProgram`` too."
msgstr "También podemos generar un modelo Docplex y un modelo Gurobipy de un ``QuadraticProgram``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:847
msgid "Indicator constraints of Docplex"
msgstr "Restricciones de los indicadores de Docplex"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:849
msgid "``from_docplex_mp`` supports indicator constraints, e.g., ``u = 0 => x + y <= z`` (u: binary variable) when we convert a Docplex model into ``QuadraticProgram``. It converts indicator constraints into linear constraints using the big-M formulation."
msgstr "``from_docplex_mp`` admite restricciones de indicador, por ejemplo, ``u = 0 => x + y <= z`` (u: variable binaria) cuando convertimos un modelo Docplex en un ``QuadraticProgram``. Convierte las restricciones de los indicadores en restricciones lineales utilizando la formulación big-M."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:960
msgid "Let’s compare the solutions of the model with an indicator constraint by"
msgstr "Comparemos las soluciones del modelo con una restricción de indicador por"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:962
msgid "applying CPLEX directly to the Docplex model (without translating it to ``QuadraticProgram``. CPLEX solver natively supports the indicator constraints),"
msgstr "aplicando CPLEX directamente al modelo Docplex (sin traducirlo a un ``QuadraticProgram``. El solucionador CPLEX admite de forma nativa las restricciones del indicador),"

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:963
msgid "applying QAOA to ``QuadraticProgram`` obtained by ``from_docplex_mp``."
msgstr "aplicando QAOA a un ``QuadraticProgram`` obtenido por ``from_docplex_mp``."

#: ../../tutorials/11_using_classical_optimization_solvers_and_models.ipynb:965
msgid "We see the solutions are same."
msgstr "Vemos que las soluciones son las mismas."

