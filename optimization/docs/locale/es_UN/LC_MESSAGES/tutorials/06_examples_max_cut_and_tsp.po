msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-06 17:29+0000\n"
"PO-Revision-Date: 2022-07-06 18:25\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/06_examples_max_cut_and_tsp.po\n"
"X-Crowdin-File-ID: 9652\n"
"Language: es_UN\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:9
msgid "This page was generated from `docs/tutorials/06_examples_max_cut_and_tsp.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/06_examples_max_cut_and_tsp.ipynb`__."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:9
msgid "Max-Cut and Traveling Salesman Problem"
msgstr "Max-Cut y Problema del Vendedor Viajero"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:23
msgid "Many problems in quantitative fields such as finance and engineering are optimization problems. Optimization problems lie at the core of complex decision-making and definition of strategies."
msgstr "Muchos problemas en campos cuantitativos como las finanzas y la ingeniería son problemas de optimización. Los problemas de optimización se encuentran en el centro de la compleja toma de decisiones y la definición de estrategias."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:25
msgid "Optimization (or combinatorial optimization) means searching for an optimal solution in a finite or countably infinite set of potential solutions. Optimality is defined with respect to some criterion function, which is to be minimized or maximized. This is typically called cost function or objective function."
msgstr "Optimización (u optimización combinatoria) significa buscar una solución óptima en un conjunto finito o contablemente infinito de soluciones potenciales. La optimalidad se define con respecto a alguna función de criterio, que debe minimizarse o maximizarse. Esto normalmente se llama función de costo o función objetivo."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:27
msgid "**Typical optimization problems**"
msgstr "**Problemas típicos de optimización**"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:29
msgid "Minimization: cost, distance, length of a traversal, weight, processing time, material, energy consumption, number of objects"
msgstr "Minimización: costo, distancia, longitud de un recorrido, peso, tiempo de procesamiento, material, consumo de energía, número de objetos"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:31
msgid "Maximization: profit, value, output, return, yield, utility, efficiency, capacity, number of objects"
msgstr "Maximización: beneficio, valor, producción, retorno, rendimiento, utilidad, eficiencia, capacidad, número de objetos"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:33
msgid "We consider here max-cut problems of practical interest in many fields, and show how they can be mapped on quantum computers manually and how Qiskit’s optimization module supports this."
msgstr "Consideramos aquí problemas de máximo corte (max-cut) de interés práctico en muchos campos, y mostramos cómo se pueden mapear manualmente en computadoras cuánticas y cómo el módulo de optimización de Qiskit lo soporta."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:36
msgid "Weighted Max-Cut"
msgstr "Max-Cut Ponderado"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:38
msgid "Max-Cut is an NP-complete problem, with applications in clustering, network science, and statistical physics. To grasp how practical applications are mapped into given Max-Cut instances, consider a system of many people that can interact and influence each other. Individuals can be represented by vertices of a graph, and their interactions seen as pairwise connections between vertices of the graph, or edges. With this representation in mind, it is easy to model typical marketing problems. For example, suppose that it is assumed that individuals will influence each other’s buying decisions, and knowledge is given about how strong they will influence each other. The influence can be modeled by weights assigned on each edge of the graph. It is possible then to predict the outcome of a marketing strategy in which products are offered for free to some individuals, and then ask which is the optimal subset of individuals that should get the free products, in order to maximize revenues."
msgstr "Max-Cut (máximo corte) es un problema NP completo, con aplicaciones en agrupamiento (clustering), ciencia de redes y física estadística. Para comprender cómo se asignan las aplicaciones prácticas a instancias determinadas de Max-Cut, considera un sistema de muchas personas que pueden interactuar e influir entre sí. Los individuos se pueden representar mediante vértices de un grafo y sus interacciones se pueden ver como conexiones por pares entre vértices del grafo, o aristas. Con esta representación en mente, es fácil modelar los problemas típicos de mercadotecnia. Por ejemplo, supón que se asume que los individuos influirán en las decisiones de compra de los demás, y se da conocimiento sobre que tan fuerte se influirán entre sí. La influencia se puede modelar mediante los pesos asignados en cada arista del grafo. Entonces, es posible predecir el resultado de una estrategia de mercadotecnia en la que los productos se ofrecen de forma gratuita a algunos individuos, y luego preguntar cuál es el subconjunto óptimo de individuos que deberían obtener los productos gratuitos, para maximizar los ingresos."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:41
msgid "The formal definition of this problem is the following:"
msgstr "La definición formal de este problema es la siguiente:"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:43
msgid "Consider an :math:`n`-node undirected graph *G = (V, E)* where *\\|V\\| = n* with edge weights :math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, for :math:`(i, j)\\in E`. A cut is defined as a partition of the original set V into two subsets. The cost function to be optimized is in this case the sum of weights of edges connecting points in the two different subsets, *crossing* the cut. By assigning :math:`x_i=0` or :math:`x_i=1` to each node :math:`i`, one tries to maximize the global profit function (here and in the following summations run over indices 0,1,…n-1)"
msgstr "Considera un grafo *G = (V, E)* no dirigido de :math:`n` nodos, donde *\\|V\\| = n*, con pesos de arista :math:`w_{ij}>0`, :math:`w_{ij}=w_{ji}`, para :math:`(i, j)\\in E`. Un corte se define como una partición del conjunto V original en dos subconjuntos. La función de costo a optimizar es en este caso la suma de los pesos de las aristas que conectan los puntos en los dos subconjuntos diferentes, *cruzando* el corte. Al asignar :math:`x_i=0` o :math:`x_i=1` a cada nodo :math:`i`, se intenta maximizar la función de beneficio global (aquí y en las siguientes sumas los índices corren sobre 0,1,…n-1)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:46
msgid "\\tilde{C}(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j).\n\n"
msgstr "\\tilde{C}(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j).\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:48
msgid "In our simple marketing model, :math:`w_{ij}` represents the probability that the person :math:`j` will buy a product after :math:`i` gets a free one. Note that the weights :math:`w_{ij}` can in principle be greater than :math:`1` (or even negative), corresponding to the case where the individual :math:`j` will buy more than one product. Maximizing the total buying probability corresponds to maximizing the total future revenues. In the case where the profit probability will be greater than the cost of the initial free samples, the strategy is a convenient one. An extension to this model has the nodes themselves carry weights, which can be regarded, in our marketing model, as the likelihood that a person granted with a free sample of the product will buy it again in the future. With this additional information in our model, the objective function to maximize becomes"
msgstr "En nuestro modelo de mercadotecnia simple, :math:`w_{ij}` representa la probabilidad de que la persona :math:`j` compre un producto después de que la persona :math:`i` obtenga uno gratis. Ten en cuenta que los pesos :math:`w_{ij}` pueden, en principio, ser mayores que :math:`1` (o incluso negativos), correspondiente al caso en el que el individuo :math:`j` comprará más de un producto. Maximizar la probabilidad de compra total corresponde a maximizar los ingresos futuros totales. En el caso de que la probabilidad de ganancia sea mayor que el costo de las muestras gratuitas iniciales, la estrategia es conveniente. Una extensión de este modelo hace que los propios nodos tengan pesos, lo que puede considerarse, en nuestro modelo de mercadotecnia, como la probabilidad de que una persona a la que se le haya otorgado una muestra gratuita del producto lo vuelva a comprar en el futuro. Con esta información adicional en nuestro modelo, la función objetivo para maximizar se convierte en"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:51
msgid "C(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j)+\\sum_i w_i x_i.\n\n"
msgstr "C(\\textbf{x}) = \\sum_{i,j} w_{ij} x_i (1-x_j)+\\sum_i w_i x_i.\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:53
msgid "In order to find a solution to this problem on a quantum computer, one needs first to map it to an Ising Hamiltonian. This can be done with the assignment :math:`x_i\\rightarrow (1-Z_i)/2`, where :math:`Z_i` is the Pauli Z operator that has eigenvalues :math:`\\pm 1`. Doing this we find that"
msgstr "Para encontrar una solución a este problema en una computadora cuántica, primero es necesario mapearlo a un Hamiltoniano de Ising. Esto se puede hacer con la asignación :math:`x_i\\rightarrow (1-Z_i)/2`, donde :math:`Z_i` es el operador Z de Pauli que tiene valores propios :math:`\\pm 1`. Haciendo esto encontramos que"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:55
msgid "C(\\textbf{Z}) = \\sum_{i,j} \\frac{w_{ij}}{4} (1-Z_i)(1+Z_j) + \\sum_i \\frac{w_i}{2} (1-Z_i) = -\\frac{1}{2}\\left( \\sum_{i<j} w_{ij} Z_i Z_j +\\sum_i w_i Z_i\\right)+\\mathrm{const},\n\n"
msgstr "C(\\textbf{Z}) = \\sum_{i,j} \\frac{w_{ij}}{4} (1-Z_i)(1+Z_j) + \\sum_i \\frac{w_i}{2} (1-Z_i) = -\\frac{1}{2}\\left( \\sum_{i<j} w_{ij} Z_i Z_j +\\sum_i w_i Z_i\\right)+\\mathrm{const},\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:57
msgid "where :math:`\\mathrm{const} = \\sum_{i<j}w_{ij}/2+\\sum_i w_i/2`. In other terms, the weighted Max-Cut problem is equivalent to minimizing the Ising Hamiltonian"
msgstr "donde :math:`\\mathrm{const} = \\sum_{i<j}w_{ij}/2+\\sum_i w_i/2`. En otros términos, el problema de Max-Cut ponderado es equivalente a minimizar el Hamiltoniano de Ising"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:59
msgid "H = \\sum_i w_i Z_i + \\sum_{i<j} w_{ij} Z_iZ_j.\n\n"
msgstr "H = \\sum_i w_i Z_i + \\sum_{i<j} w_{ij} Z_iZ_j.\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:61
msgid "Qiskit’s optimization module can generate the Ising Hamiltonian for the first profit function :math:`\\tilde{C}`. To this extent, function :math:`\\tilde{C}` can be modeled as a ``QuadraticProgram``, which provides the ``to_ising()`` method."
msgstr "El módulo de optimización de Qiskit puede generar el Hamiltoniano de Ising para la primera función de ganancias :math:`\\tilde{C}`. En este sentido, la función :math:`\\tilde{C}` se puede modelar como un ``QuadraticProgram``, que proporciona el método ``to_ising()``."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:64
msgid "Approximate Universal Quantum Computing for Optimization Problems"
msgstr "Computación Cuántica Universal Aproximada para Problemas de Optimización"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:66
msgid "There has been a considerable amount of interest in recent times about the use of quantum computers to find a solution to combinatorial optimization problems. It is important to say that, given the classical nature of combinatorial problems, exponential speedup in using quantum computers compared to the best classical algorithms is not guaranteed. However, due to the nature and importance of the target problems, it is worth investigating heuristic approaches on a quantum computer that could indeed speed up some problem instances. Here we demonstrate an approach that is based on the *Quantum Approximate Optimization Algorithm* (QAOA) by Farhi, Goldstone, and Gutmann (2014). We frame the algorithm in the context of *approximate quantum computing*, given its heuristic nature."
msgstr "Ha habido un interés considerable en los últimos tiempos sobre el uso de computadoras cuánticas para encontrar una solución a los problemas de optimización combinatoria. Es importante decir que, dada la naturaleza clásica de los problemas combinatorios, no se garantiza una aceleración exponencial en el uso de computadoras cuánticas en comparación con los mejores algoritmos clásicos. Sin embargo, debido a la naturaleza y la importancia de los problemas objetivo, vale la pena investigar enfoques heurísticos en una computadora cuántica que de hecho podrían acelerar algunos ejemplos de problemas. Aquí demostramos un enfoque que se basa en el *Algoritmo Cuántico de Optimización Aproximada* (Quantum Approximate Optimization Algorithm, QAOA) de Farhi, Goldstone, y Gutmann (2014). Enmarcamos el algoritmo en el contexto de *computación cuántica aproximada*, dada su naturaleza heurística."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:69
msgid "The algorithm works as follows:"
msgstr "El algoritmo funciona de la siguiente manera:"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:71
msgid "Choose the :math:`w_i` and :math:`w_{ij}` in the target Ising problem. In principle, even higher powers of Z are allowed."
msgstr "Elegir :math:`w_i` y :math:`w_{ij}` en el problema de Ising objetivo. En principio, se permiten potencias de Z aún mayores."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:73
msgid "Choose the depth of the quantum circuit :math:`m`. Note that the depth can be modified adaptively."
msgstr "Elegir la profundidad del circuito cuántico :math:`m`. Se debe tener en cuenta que la profundidad se puede modificar de forma adaptativa."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:75
msgid "Choose a set of controls :math:`\\theta` and make a trial function :math:`|\\psi(\\boldsymbol\\theta)\\rangle`, built using a quantum circuit made of C-Phase gates and single-qubit Y rotations, parameterized by the components of :math:`\\boldsymbol\\theta`."
msgstr "Elegir un conjunto de controles :math:`\\theta` y hacer una función de prueba :math:`|\\psi(\\boldsymbol\\theta)\\rangle`, construida utilizando un circuito cuántico hecho de compuertas C-Phase y rotaciones Y de un solo qubit, parametrizada por los componentes de :math:`\\boldsymbol\\theta`."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:77
msgid "Evaluate"
msgstr "Evaluar"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:79
msgid "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"
msgstr "C(\\boldsymbol\\theta) = \\langle\\psi(\\boldsymbol\\theta)~|H|~\\psi(\\boldsymbol\\theta)\\rangle = \\sum_i w_i \\langle\\psi(\\boldsymbol\\theta)~|Z_i|~\\psi(\\boldsymbol\\theta)\\rangle+ \\sum_{i<j} w_{ij} \\langle\\psi(\\boldsymbol\\theta)~|Z_iZ_j|~\\psi(\\boldsymbol\\theta)\\rangle\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:81
msgid "by sampling the outcome of the circuit in the Z-basis and adding the expectation values of the individual Ising terms together. In general, different control points around :math:`\\boldsymbol\\theta` have to be estimated, depending on the classical optimizer chosen."
msgstr "muestreando el resultado del circuito en la base Z y sumando los valores esperados de los términos Ising individuales. En general, se deben estimar diferentes puntos de control alrededor de :math:`\\boldsymbol\\theta`, dependiendo del optimizador clásico elegido."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:83
msgid "Use a classical optimizer to choose a new set of controls."
msgstr "Utilizar un optimizador clásico para elegir un nuevo conjunto de controles."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:85
msgid "Continue until :math:`C(\\boldsymbol\\theta)` reaches a minimum, close enough to the solution :math:`\\boldsymbol\\theta^*`."
msgstr "Continuar hasta que :math:`C(\\boldsymbol\\theta)` alcance un mínimo, lo suficientemente cercano a la solución :math:`\\boldsymbol\\theta^*`."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:87
msgid "Use the last :math:`\\boldsymbol\\theta` to generate a final set of samples from the distribution :math:`|\\langle z_i~|\\psi(\\boldsymbol\\theta)\\rangle|^2\\;\\forall i` to obtain the answer."
msgstr "Utilizar la última :math:`\\boldsymbol\\theta` para generar un conjunto final de muestras de la distribución :math:`|\\langle z_i~|\\psi(\\boldsymbol\\theta)\\rangle|^2\\;\\forall i` para obtener la respuesta."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:89
msgid "It is our belief the difficulty of finding good heuristic algorithms will come down to the choice of an appropriate trial wavefunction. For example, one could consider a trial function whose entanglement best aligns with the target problem, or simply make the amount of entanglement a variable. In this tutorial, we will consider a simple trial function of the form"
msgstr "Creemos que la dificultad de encontrar buenos algoritmos heurísticos se reducirá a la elección de una función de onda de prueba adecuada. Por ejemplo, se podría considerar una función de prueba cuyo entrelazamiento se alinee mejor con el problema objetivo, o simplemente hacer que la cantidad de entrelazamiento sea una variable. En este tutorial, consideraremos una función de prueba simple de la forma"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:91
msgid "|\\psi(\\theta)\\rangle  = [U_\\mathrm{single}(\\boldsymbol\\theta) U_\\mathrm{entangler}]^m |+\\rangle\n\n"
msgstr "|\\psi(\\theta)\\rangle  = [U_\\mathrm{simple}(\\boldsymbol\\theta) U_\\mathrm{entrelazador}]^m |+\\rangle\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:93
msgid "where :math:`U_\\mathrm{entangler}` is a collection of C-Phase gates (fully entangling gates), and :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, where :math:`n` is the number of qubits and :math:`m` is the depth of the quantum circuit. The motivation for this choice is that for these classical problems this choice allows us to search over the space of quantum states that have only real coefficients, still exploiting the entanglement to potentially converge faster to the solution."
msgstr "donde :math:`U_\\mathrm{entrelazador}` es una colección de compuertas C-Phase (compuertas completamente entrelazadas), y :math:`U_\\mathrm{simple}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, donde :math:`n` es el número de qubits y :math:`m` es la profundidad del circuito cuántico. La motivación para esta elección es que para estos problemas clásicos, esta elección nos permite buscar en el espacio de estados cuánticos que solo tienen coeficientes reales, aprovechando el entrelazamiento para converger potencialmente más rápido a la solución."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:96
msgid "One advantage of using this sampling method compared to adiabatic approaches is that the target Ising Hamiltonian does not have to be implemented directly on hardware, allowing this algorithm not to be limited to the connectivity of the device. Furthermore, higher-order terms in the cost function, such as :math:`Z_iZ_jZ_k`, can also be sampled efficiently, whereas in adiabatic or annealing approaches they are generally impractical to deal with."
msgstr "Una ventaja de utilizar este método de muestreo en comparación con los enfoques adiabáticos es que el Hamiltoniano de Ising objetivo no tiene que implementarse directamente en el hardware, lo que permite que este algoritmo no se limite a la conectividad del dispositivo. Además, los términos de orden superior en la función de costo, como :math:`Z_iZ_jZ_k`, también se pueden muestrear de manera eficiente, mientras que en los enfoques adiabáticos o de annealing (recocido), generalmente no es práctico tratarlos."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:98
msgid "References:"
msgstr "Referencias:"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:100
msgid "A. Lucas, Frontiers in Physics 2, 5 (2014)"
msgstr "A. Lucas, Frontiers in Physics 2, 5 (2014)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:101
msgid "E. Farhi, J. Goldstone, S. Gutmann, e-print arXiv 1411.4028 (2014)"
msgstr "E. Farhi, J. Goldstone, S. Gutmann, e-print arXiv 1411.4028 (2014)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:102
msgid "D. Wecker, M. B. Hastings, M. Troyer, Phys. Rev. A 94, 022309 (2016)"
msgstr "D. Wecker, M. B. Hastings, M. Troyer, Phys. Rev. A 94, 022309 (2016)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:103
msgid "E. Farhi, J. Goldstone, S. Gutmann, H. Neven, e-print arXiv 1703.06199 (2017)"
msgstr "E. Farhi, J. Goldstone, S. Gutmann, H. Neven, e-print arXiv 1703.06199 (2017)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:115
msgid "Application classes"
msgstr "Clases de aplicación"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:117
msgid "We use the application classes for the max-cut problem and the traveling salesman problem in this page. There are application classes for other optimization problems available as well. See `Application Classes for Optimization Problems <09_application_classes.ipynb>`__ for details."
msgstr "Usamos las clases de aplicación para el problema de máximo corte y el problema del vendedor viajero en esta página. También hay disponibles clases de aplicación para otros problemas de optimización. Consulta `Clases de Aplicación para Problemas de Optimización <09_application_classes.ipynb>`__ para más detalles."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:153
msgid "Max-Cut problem"
msgstr "Problema de Máximo Corte (Max-Cut)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:253
#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:912
msgid "Brute force approach"
msgstr "Enfoque de fuerza bruta"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:255
msgid "Try all possible :math:`2^n` combinations. For :math:`n = 4`, as in this example, one deals with only 16 combinations, but for n = 1000, one has 1.071509e+30 combinations, which is impractical to deal with by using a brute force approach."
msgstr "Prueba todas las :math:`2^n` combinaciones posibles. Para :math:`n = 4`, como en este ejemplo, uno trata solo con 16 combinaciones, pero para n = 1000, uno tiene 1.071509e+30 combinaciones, lo cual no es práctico de manejar usando un enfoque de fuerza bruta."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:375
#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:1015
msgid "Mapping to the Ising problem"
msgstr "Mapear del problema de Ising"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:386
msgid "Qiskit provides functionality to generate ``QuadraticProgram`` from the problem specification as well as create the corresponding Ising Hamiltonian."
msgstr "Qiskit proporciona funcionalidad para generar el ``QuadraticProgram`` a partir de la especificación del problema, así como para crear el correspondiente Hamiltoniano de Ising."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:564
msgid "Since the problem was cast to a minimization problem, the solution of :math:`-4` corresponds to the optimum."
msgstr "Dado que el problema se convirtió en un problema de minimización, la solución de :math:`-4` corresponde al óptimo."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:576
#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:1342
msgid "Checking that the full Hamiltonian gives the right cost"
msgstr "Verificar que el Hamiltoniano completo proporcione el costo correcto"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:651
#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:1420
msgid "Running it on quantum computer"
msgstr "Ejecutar en una computadora cuántica"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:653
#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:1422
msgid "We run the optimization routine using a feedback loop with a quantum computer that uses trial functions built with Y single-qubit rotations, :math:`U_\\mathrm{single}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, and entangler steps :math:`U_\\mathrm{entangler}`."
msgstr "Ejecutamos la rutina de optimización usando un ciclo de retroalimentación con una computadora cuántica que usa funciones de prueba construidas con rotaciones Y de un solo qubit, :math:`U_\\mathrm{simple}(\\theta) = \\prod_{i=1}^n Y(\\theta_{i})`, y los pasos de entrelazamiento :math:`U_\\mathrm{entrelazador}`."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:808
msgid "Traveling Salesman Problem"
msgstr "Problema del Vendedor Viajero"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:810
msgid "In addition to being a notorious NP-complete problem that has drawn the attention of computer scientists and mathematicians for over two centuries, the Traveling Salesman Problem (TSP) has important bearings on finance and marketing, as its name suggests. Colloquially speaking, the traveling salesman is a person that goes from city to city to sell merchandise. The objective in this case is to find the shortest path that would enable the salesman to visit all the cities and return to its hometown, i.e. the city where he started traveling. By doing this, the salesman gets to maximize potential sales in the least amount of time."
msgstr "Además de ser notoriamente un problema NP completo que ha llamado la atención de científicos computacionales y matemáticos durante más de dos siglos, el Problema del Vendedor Viajero (Traveling Salesman Problem, TSP) tiene importantes repercusiones en las finanzas y la mercadotecnia, como su nombre lo indica. Coloquialmente hablando, el vendedor viajero es una persona que va de ciudad en ciudad para vender mercancía. El objetivo en este caso es encontrar el camino más corto que le permita al vendedor visitar todas las ciudades y regresar a su ciudad natal, es decir, la ciudad donde comenzó a viajar. Al hacer esto, el vendedor puede maximizar las ventas potenciales en la menor cantidad de tiempo."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:813
msgid "The problem derives its importance from its “hardness” and ubiquitous equivalence to other relevant combinatorial optimization problems that arise in practice."
msgstr "El problema deriva su importancia de su “dureza” y equivalencia ubicua con otros problemas de optimización combinatoria relevantes que surgen en la práctica."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:815
msgid "The mathematical formulation with some early analysis was proposed by W.R. Hamilton in the early 19th century. Mathematically the problem is, as in the case of Max-Cut, best abstracted in terms of graphs. The TSP on the nodes of a graph asks for the shortest *Hamiltonian cycle* that can be taken through each of the nodes. A Hamilton cycle is a closed path that uses every vertex of a graph once. The general solution is unknown and an algorithm that finds it efficiently (e.g., in polynomial time) is not expected to exist."
msgstr "La formulación matemática con algunos análisis tempranos fue propuesta por W.R. Hamilton a principios del siglo XIX. Matemáticamente, el problema es, como en el caso de Max-Cut, mejor resumido en términos de grafos. El TSP en los nodos de un grafo busca el *ciclo Hamiltoniano* más corto que se puede tomar a través de cada uno de los nodos. Un ciclo de Hamilton es un camino cerrado que usa cada vértice de un grafo una vez. Se desconoce la solución general y no se espera que exista un algoritmo que la encuentre de manera eficiente (por ejemplo, en tiempo polinomial)."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:818
msgid "Find the shortest Hamiltonian cycle in a graph :math:`G=(V,E)` with :math:`n=|V|` nodes and distances, :math:`w_{ij}` (distance from vertex :math:`i` to vertex :math:`j`). A Hamiltonian cycle is described by :math:`N^2` variables :math:`x_{i,p}`, where :math:`i` represents the node and :math:`p` represents its order in a prospective cycle. The decision variable takes the value 1 if the solution occurs at node :math:`i` at time order :math:`p`. We require that every node can only appear once in the cycle, and for each time a node has to occur. This amounts to the two constraints (here and in the following, whenever not specified, the summands run over 0,1,…N-1)"
msgstr "Encuentra el ciclo Hamiltoniano más corto en un grafo :math:`G=(V,E)` con :math:`n=|V|` nodos y distancias, :math:`w_{ij}` (distancia desde el vértice :math:`i` al vértice :math:`j`). Un ciclo Hamiltoniano se describe mediante :math:`N^2` variables :math:`x_{i,p}`, donde :math:`i` representa el nodo y :math:`p` representa su orden en una perspectiva de ciclo. La variable de decisión toma el valor 1 si la solución ocurre en el nodo :math:`i` en el orden de tiempo :math:`p`. Requerimos que cada nodo solo pueda aparecer una vez en el ciclo, y por cada vez un nodo tiene que ocurrir. Esto equivale a las dos restricciones (aquí y a continuación, siempre que no se especifique, los sumandos se ejecutan sobre 0,1,…N-1)"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:821
msgid "\\sum_{i} x_{i,p} = 1 ~~\\forall p\n\n"
msgstr "\\sum_{i} x_{i,p} = 1 ~~\\forall p\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:823
msgid "\\sum_{p} x_{i,p} = 1 ~~\\forall i.\n\n"
msgstr "\\sum_{p} x_{i,p} = 1 ~~\\forall i.\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:825
msgid "For nodes in our prospective ordering, if :math:`x_{i,p}` and :math:`x_{j,p+1}` are both 1, then there should be an energy penalty if :math:`(i,j) \\notin E` (not connected in the graph). The form of this penalty is"
msgstr "Para los nodos en nuestro ordenamiento prospectivo, si :math:`x_{i,p}` y :math:`x_{j,p+1}` son ambos 1, entonces debería haber una penalización de energía si :math:`(i,j) \\notin E` (no conectado en el grafo). La forma de esta penalización es"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:827
msgid "\\sum_{i,j\\notin E}\\sum_{p} x_{i,p}x_{j,p+1}>0,\n\n"
msgstr "\\sum_{i,j\\notin E}\\sum_{p} x_{i,p}x_{j,p+1}>0,\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:829
msgid "where it is assumed the boundary condition of the Hamiltonian cycles :math:`(p=N)\\equiv (p=0)`. However, here it will be assumed a fully connected graph and not include this term. The distance that needs to be minimized is"
msgstr "donde se asume la condición de frontera de los ciclos Hamiltonianos :math:`(p=N)\\equiv (p=0)`. Sin embargo, aquí se supondrá un grafo completamente conectado y no incluirá este término. La distancia que se debe minimizar es"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:831
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}.\n\n"
msgstr "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}.\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:833
msgid "Putting this all together in a single objective function to be minimized, we get the following:"
msgstr "Poniendo todo esto junto en una única función objetivo para minimizar, obtenemos lo siguiente:"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:835
msgid "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}+ A\\sum_p\\left(1- \\sum_i x_{i,p}\\right)^2+A\\sum_i\\left(1- \\sum_p x_{i,p}\\right)^2,\n\n"
msgstr "C(\\textbf{x})=\\sum_{i,j}w_{ij}\\sum_{p} x_{i,p}x_{j,p+1}+ A\\sum_p\\left(1- \\sum_i x_{i,p}\\right)^2+A\\sum_i\\left(1- \\sum_p x_{i,p}\\right)^2,\n\n"

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:837
msgid "where :math:`A` is a free parameter. One needs to ensure that :math:`A` is large enough so that these constraints are respected. One way to do this is to choose :math:`A` such that :math:`A > \\mathrm{max}(w_{ij})`."
msgstr "donde :math:`A` es un parámetro libre. Es necesario asegurarse de que :math:`A` sea lo suficientemente grande como para que se respeten estas restricciones. Una forma de hacer esto es elegir :math:`A` tal que :math:`A > \\mathrm{max}(w_{ij})`."

#: ../../tutorials/06_examples_max_cut_and_tsp.ipynb:839
msgid "Once again, it is easy to map the problem in this form to a quantum computer, and the solution will be found by minimizing a Ising Hamiltonian."
msgstr "Una vez más, es fácil mapear el problema de esta forma a una computadora cuántica, y la solución se encontrará minimizando un Hamiltoniano de Ising."

