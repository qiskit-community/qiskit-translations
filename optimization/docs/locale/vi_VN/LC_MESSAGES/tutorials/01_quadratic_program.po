msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 13:48+0000\n"
"PO-Revision-Date: 2021-12-16 15:16\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/01_quadratic_program.po\n"
"X-Crowdin-File-ID: 9642\n"
"Language: vi_VN\n"

#: ../../tutorials/01_quadratic_program.ipynb:9
msgid "This page was generated from `docs/tutorials/01_quadratic_program.ipynb`__."
msgstr "Trang này được tạo từ `docs/tutorials/01_quadratic_program.ipynb`__."

#: ../../tutorials/01_quadratic_program.ipynb:9
msgid "Quadratic Programs"
msgstr "Bài toán lập trình bậc hai"

#: ../../tutorials/01_quadratic_program.ipynb:21
msgid "Introduction"
msgstr "Giới thiệu"

#: ../../tutorials/01_quadratic_program.ipynb:32
msgid "In this tutorial, we briefly introduce how to build optimization problems using Qiskit’s optimization module. Qiskit introduces the ``QuadraticProgram`` class to make a model of an optimization problem. More precisely, it deals with quadratically constrained quadratic programs given as follows:"
msgstr "Trong hướng dẫn này, chúng tôi giới thiệu ngắn gọn cách xây dựng các vấn đề tối ưu hóa sử dụng module tối ưu hóa của Qiskit. Qiskit giới thiệu lớp ``QuadraticProgram`` để làm một mô hình của một vấn đề tối ưu hóa. Chính xác hơn, nó giải quyết các bài toán lập trình bậc hai bị ràng buộc bậc hai như dưới đây:"

#: ../../tutorials/01_quadratic_program.ipynb:34
msgid "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"
msgstr "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"

#: ../../tutorials/01_quadratic_program.ipynb:44
msgid "where the :math:`Q_i` are :math:`n \\times n` matrices, :math:`A` is a :math:`m \\times n` matrix , :math:`x`, and :math:`c` are :math:`n`-dimensional vectors, :math:`b` is an :math:`m`-dimensional vector, and where :math:`x` can be defined as binary, integer, or continuous variables. In addition to “:math:`\\leq`” constraints ``QuadraticProgram`` also supports “:math:`\\geq`” and “:math:`=`”."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:56
msgid "Loading a ``Quadratic Program`` from an LP file"
msgstr "Tải một ``QuadraticProgram`` từ một tệp LP"

#: ../../tutorials/01_quadratic_program.ipynb:67
msgid "As setup, you need to import the following module."
msgstr "Khi thiết lập, bạn cần nhập các mô-đun sau."

#: ../../tutorials/01_quadratic_program.ipynb:89
msgid "You start with an empty model. How to add variables and constraints to a model is explained in the section “Directly constructing a ``QuadraticProgram``”."
msgstr "Bạn sẽ bắt đầu với một mô hình rỗng. Cách thêm các biến và ràng buộc vào mô hình được giải thích tại phần “Xây dựng một bài toán ``Lập trình bậc hai`` trực tiếp”."

#: ../../tutorials/01_quadratic_program.ipynb:100
msgid "Qiskit’s optimization module supports the conversion from Docplex model. You can easily make a model of an optimization problem with Docplex. You can find the documentation of Docplex at https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"
msgstr "Mô-đun tối ưu hóa của Qiskit hỗ trợ việc chuyển đổi từ mô hình của Docplex. Bạn có thể dễ dàng tạo ra một mô hình tối ưu hóa vấn đề với Docplex. Bạn có thể tìm tài liệu về Docplex tại https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"

#: ../../tutorials/01_quadratic_program.ipynb:102
msgid "You can load a Docplex model to ``QuadraticProgram`` by using ``from_docplex_mp`` function."
msgstr "Bạn có thể tải một mô hình Docplex vào ``QuadraticProgram`` bằng cách dùng hàm ``from_docplex_mp``."

#: ../../tutorials/01_quadratic_program.ipynb:114
msgid "Loading a ``QuadraticProgram`` from a docplex model"
msgstr "Tải một ``Lập trình bậc hai`` từ một mô hình docplex"

#: ../../tutorials/01_quadratic_program.ipynb:275
msgid "Directly constructing a ``QuadraticProgram``"
msgstr "Xây dựng trực tiếp một ``QuadraticProgram``"

#: ../../tutorials/01_quadratic_program.ipynb:286
msgid "We then explain how to make model of an optimization problem directly using ``QuadraticProgram``. Let’s start from an empty model."
msgstr "Tiếp theo chúng tôi sẽ giải thích cách tạo một mô hình của một vấn đề tối ưu hóa trực tiếp bằng cách dùng ``QuadraticProgram``. Hãy bắt đầu với một mô hình rỗng."

#: ../../tutorials/01_quadratic_program.ipynb:348
msgid "The ``QuadraticProgram`` supports three types of variables:"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:350
msgid "Binary variable"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:351
msgid "Integer variable"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:352
msgid "Continuous variable"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:354
msgid "When you add variables, you can specify names, types, lower bounds and upper bounds."
msgstr "Khi thêm các biến, bạn có thể xác định tên, loại biến, giới hạn dưới và trên."

#: ../../tutorials/01_quadratic_program.ipynb:356
msgid "When you display your problem as LP format, ``Binaries`` denotes binary variables and ``Generals`` denotes integer variables. If variables are not included in either ``Binaries`` or ``Generals``, such variables are continuous ones with default lower bound = 0 and upper bound = infinity. Note that you cannot use ‘e’ or ‘E’ as the first character of names due to the `specification of LP format <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."
msgstr "Khi hiển thị vấn đề của bạn dưới định dạng LP, ``Binaries`` biểu thị biến nhị phân và ``Generals`` biểu thị biến số nguyên. Nếu các biến không được bao gồm trong``Binaries`` or ``Generals``, các biến đó sẽ là các biến liên tục có mặc định chặn dưới = 0 và chặn trên = vô hạn. Lưu ý rằng bạn không thể sử dụng 'e' hoặc' E' là ký tự đầu tiên của tên do định dạng LP <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."

#: ../../tutorials/01_quadratic_program.ipynb:439
msgid "You can set the objective function by invoking ``QuadraticProgram.minimize`` or ``QuadraticProgram.maximize``. You can add a constant term as well as linear and quadratic objective function by specifying linear and quadratic terms with either list, matrix or dictionary."
msgstr "Bạn có thể thiết lập hàm mục tiêu bằng cách gọi ``QuadraticProgram.minimize`` hoặc``QuadraticProgram.maximize``. Bạn có thể thêm một hằng số cũng như một số hạng tuyến tính và bậc hai bằng cách chỉ định các thuật ngữ tuyến tính và bậc hai với danh sách, ma trận hoặc từ điển."

#: ../../tutorials/01_quadratic_program.ipynb:441
msgid "Note that in the LP format the quadratic part has to be scaled by a factor :math:`1/2`. Thus, when printing as LP format, the quadratic part is first multiplied by 2 and then divided by 2 again."
msgstr "Lưu ý rằng trong định dạng LP, phần bậc hai phải được tỉ lệ với một hệ số :math:`1/2`. Do đó, khi in trong định dạng LP, đầu tiên phần bậc hai được nhân với 2 và sau đó chia cho 2 lần nữa."

#: ../../tutorials/01_quadratic_program.ipynb:443
msgid "For quadratic programs, there are 3 pieces that have to be specified: a constant (offset), a linear term (:math:`c^{T}x`), and a quadratic term (:math:`x^{T}Qx`)."
msgstr "Trong các chương trình bậc hai, có ba thành phần cần phải xác định: một hằng số (bù lại), một số hạng tuyến tính (:math:`c^{T}x`), và một số hạng bậc hai (:math:`x^{T}Qx`)."

#: ../../tutorials/01_quadratic_program.ipynb:445
msgid "The cell below shows how to declare an objective function using a dictionary. For the linear term, keys in the dictionary correspond to variable names, and the corresponding values are the coefficients. For the quadratic term, keys in the dictionary correspond to the two variables being multiplied, and the values are again the coefficients."
msgstr "Ô dưới đây cho thấy cách khai báo một hàm mục tiêu bằng cách sử dụng một từ điển. Đối với số hạng tuyến tính, các phím trong từ điển tương ứng với các tên biến, và các giá trị tương ứng là các hệ số. Đối với số hạng bậc hai, các phím trong từ điển tương ứng với hai biến được nhân với nhau, và các giá trị là các hệ số."

#: ../../tutorials/01_quadratic_program.ipynb:525
msgid "Another way to specify the quadratic program is using arrays. For the linear term, the array corresponds to the vector :math:`c` in the mathematical formulation. For the quadratic term, the array corresponds to the matrix :math:`Q`. Note that the ordering of the variables (:math:`x` in the mathematical formulation) is the order in which the variables were originally declared in the ``QuadraticProgram`` object."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:605
msgid "You can access the constant, the linear term, and the quadratic term by looking at ``Quadratic.objective.{constant, linear, quadratic}``, respectively. As for linear and quadratic terms, you can get a dense matrix (``to_array``), a sparse matrix (``coefficients``), and a dictionary (``to_dict``). For dictionaries, you can specify whether to use variable indices or names as keys. Note that the quadratic terms are stored in a compressed way, e.g., ``{('x', 'y'): 1, ('y', 'x'): 2}`` is stored as ``{('x', 'y'): 3}``. You can get the quadratic term as a symmetric matrix by calling ``to_array(symmetric=True)`` or ``to_dict(symmetric=True)``. If you call ``to_dict(name=True)``, you can get a dictionary whose keys are pairs of variable names."
msgstr "Bạn có thể truy cập hằng số, số hạng tuyến tính và số hạng bậc hai bằng cách xem ``Quadratic.objective.{constant, linear, quadratic}``, tương ứng. Như các số hạng tuyến tính và bậc hai, bạn có thể có một ma trận dày đặc (``to_array``), một ma trận thưa (``coefficients``), và một từ điển (``to_dict``). Đối với các từ điển, bạn có thể xác định xem nên sử dụng chỉ số biến hay tên như các phím. Lưu ý rằng các số hạng bậc hai được lưu vắn tắt, ví dụ, ``{('x', 'y'): 1, ('y', 'x'): 2}`` được lưu trữ như ``{('x', 'y'): 3}``. Bạn có thể tạo số hạng bậc hai như một ma trận đối xứng bằng cách gọi ``to_array(symmetric=True)`` hoặc ``to_dict(symmetric=True)``. Nếu bạn gọi ``to_dict(name=True)``, bạn có thể có được một từ điển có các phím là các cặp tên biến."

#: ../../tutorials/01_quadratic_program.ipynb:701
msgid "Adding/removing linear and quadratic constraints"
msgstr "Thêm/xóa các ràng buộc bậc một và bậc hai"

#: ../../tutorials/01_quadratic_program.ipynb:712
msgid "You can add linear constraints by setting name, linear expression, sense and right-hand-side value (rhs). You can use senses ‘EQ’, ‘LE’, and ‘GE’ as Docplex supports."
msgstr "Bạn có thể thêm các ràng buộc tuyến tính bằng cách cài đặt tên, phương trình tuyến tính, thuộc tính và các giá trị bên phải (rhs). Bạn cũng có thể dùng thuộc tính ‘EQ’, ‘LE’, và ‘GE’ như các hỗ trợ cho Docplex."

#: ../../tutorials/01_quadratic_program.ipynb:800
msgid "You can add quadratic constraints as well as objective function and linear constraints."
msgstr "Bạn có thể thêm các ràng buộc bậc hai cũng như các hàm mục tiêu và các ràng buộc tuyến tính."

#: ../../tutorials/01_quadratic_program.ipynb:912
msgid "You can access linear and quadratic terms of linear and quadratic constraints as in the same way as the objective function."
msgstr "Bạn có thể truy cập các số hạng tuyến tính và bậc hai của các ràng buộc tuyến tính và bậc hai tương tự như với hàm mục tiêu."

#: ../../tutorials/01_quadratic_program.ipynb:963
msgid "You can also remove linear/quadratic constraints by ``remove_linear_constraint`` and ``remove_quadratic_constraint``."
msgstr "Bạn cũng có thể loại bỏ các ràng buộc tuyến tính/bậc hai với ``remove_linear_constraint`` và ``remove_quadatic_constraint``."

#: ../../tutorials/01_quadratic_program.ipynb:1052
msgid "You can substitute some of variables with constants or other variables. More precisely, ``QuadraticProgram`` has a method ``substitute_variables(constants=..., variables=...)`` to deal with the following two cases."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:1054
msgid ":math:`x \\leftarrow c`: when ``constants`` have a dictionary ``{x: c}``."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:1055
msgid ":math:`x \\leftarrow c y`: when ``variables`` have a dictionary ``{x: (y, c)}``."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:1067
msgid "Substituting Variables"
msgstr "Thay thế các biến"

#: ../../tutorials/01_quadratic_program.ipynb:1138
msgid "If the resulting problem is infeasible due to lower bounds or upper bounds, the methods returns the status ``Status.INFEASIBLE``. We try to replace variable ``x`` with -1, but -1 is out of range of ``x`` (0 <= ``x`` <= 1). So, it returns ``Status.INFEASIBLE``."
msgstr "Nếu kết quả không khả thi do các giới hạn dưới hoặc giới hạn trên, các phương thức trả về trạng thái ``Status.INFEASIBLE``. Chúng ta cố gắng thay thế biến ``x`` bằng -1, nhưng -1 nằm ngoài giới hạn của ``x`` (0 <= ``x`` <= 1). Vì vậy, kết quả trả về là ``Status.INFEASIBLE``."

#: ../../tutorials/01_quadratic_program.ipynb:1200
msgid "You cannot substitute variables multiple times. The method raises an error in such a case."
msgstr "Bạn không thể thế thế các biến nhiều lần. Hàm sẽ báo lỗi trong trường hợp đó."

