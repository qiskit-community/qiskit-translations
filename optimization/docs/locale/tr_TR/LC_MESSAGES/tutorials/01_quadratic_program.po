msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-22 16:46+0000\n"
"PO-Revision-Date: 2021-09-22 17:27\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/optimization/docs/locale/en/LC_MESSAGES/tutorials/01_quadratic_program.po\n"
"X-Crowdin-File-ID: 9642\n"
"Language: tr_TR\n"

#: ../../tutorials/01_quadratic_program.ipynb:9
msgid "This page was generated from `docs/tutorials/01_quadratic_program.ipynb`__."
msgstr "Bu sayfa, `docs/tutorials/01_quadratic_program.ipynb`__ sayfasından oluşturulmuştur."

#: ../../tutorials/01_quadratic_program.ipynb:9
msgid "Quadratic Programs"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:32
msgid "In this tutorial, we briefly introduce how to build optimization problems using Qiskit’s optimization module. Qiskit introduces the ``QuadraticProgram`` class to make a model of an optimization problem. More precisely, it deals with quadratically constrained quadratic programs given as follows:"
msgstr "Bu eğitici dokümanda, kısaca Qiskit'in optimizasyon modülünü kullanarak optimizasyon problemlerinin nasıl oluşturulacabileceğinden bahsedilmektedir. Qiskit, bir optimizasyon problemi modeli oluşturmak için ``QuadraticProgram`` sınıfını sunar. Daha iyi ifade etmek gerekirse, aşağıdaki gibi verilen ikinci dereceden kısıtlanmış ikinci dereceden programlarla ilgilenir:"

#: ../../tutorials/01_quadratic_program.ipynb:34
msgid "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"
msgstr "\\begin{align}\n"
"\\text{minimize}\\quad& x^\\top Q_0 x + c^\\top x\\\\\n"
"\\text{subject to}\\quad& A x \\leq b\\\\\n"
"& x^\\top Q_i x + a_i^\\top x \\leq r_i, \\quad 1,\\dots,i,\\dots,q\\\\\n"
"& l_i \\leq x_i \\leq u_i, \\quad 1,\\dots,i,\\dots,n,\n"
"\\end{align}"

#: ../../tutorials/01_quadratic_program.ipynb:44
msgid "where the :math:`Q_i` are :math:`n \\times n` matrices, :math:`A` is a :math:`m \\times n` matrix , :math:`x`, and :math:`c` are :math:`n`-dimensional vectors, :math:`b` is an :math:`m`-dimensional vector, and where :math:`x` can defined as binary, integer, or continuous variables. In addition to “:math:`\\leq`” constraints ‘QuadraticProgram’ also supports “:math:`\\geq`” and “:math:`=`”."
msgstr ":math:`Q_i` nın :math:`n \\times n` matrisleri olduğu yerde, :math:`A` , :math:`m \\times n` matrisidir ve :math:`x` nin ikili (binary), tam sayı (integer) ya da sürekli değişken olarak tanımlanabildiği yerde :math:`x`, ve :math:`c` , :math:`n` boyutlu vektörlerdir, :math:`b` , :math:`m` boyutlu vektördür. 'QuadraticProgram' ı kısıtayan \":math:`\\leq`\" ne ek olarak \":math:`\\geq`\" ve \":math:`=`\" de desteklenir."

#: ../../tutorials/01_quadratic_program.ipynb:56
msgid "Loading a ``Quadratic Program`` from an LP file"
msgstr "LP dosyasından ``Quadratic Program`` yüklenmesi"

#: ../../tutorials/01_quadratic_program.ipynb:67
msgid "As setup, you need to import the following module."
msgstr "Kurulum olarak, aşağıdaki modülü içe aktarmanız gerekir."

#: ../../tutorials/01_quadratic_program.ipynb:89
msgid "You start with an empty model. How to add variables and constraints to a model is explained in the section “Directly constructing a ``QuadraticProgram``”."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:100
msgid "Qiskit’s optimization module supports the conversion from Docplex model. You can easily make a model of an optimization problem with Docplex. You can find the documentation of Docplex at https://ibmdecisionoptimization.github.io/docplex-doc/mp/index.html"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:102
msgid "You can load a Docplex model to ``QuadraticProgram`` by using ``from_docplex_mp`` function."
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:114
msgid "Loading a ``QuadraticProgram`` from a docplex model"
msgstr ""

#: ../../tutorials/01_quadratic_program.ipynb:275
msgid "Directly constructing a ``QuadraticProgram``"
msgstr "Doğrudan ``QuadraticProgram`` oluşturulması"

#: ../../tutorials/01_quadratic_program.ipynb:286
msgid "We then explain how to make model of an optimization problem directly using ``QuadraticProgram``. Let’s start from an empty model."
msgstr "Daha sonra doğrudan ``QuadraticProgram`` kullanarak bir optimizasyon probleminin modelinin nasıl yapıldığını açıklıyoruz. Boş bir modelden başlayalım."

#: ../../tutorials/01_quadratic_program.ipynb:348
msgid "The ``QuadraticProgram`` supports three types of variables: - Binary variable - Integer variable - Continuous variable"
msgstr "``QuadraticProgram`` üç değişken tipini destekler: - İkili değişken - Tamsayı değişkeni - Sürekli değişken"

#: ../../tutorials/01_quadratic_program.ipynb:350
msgid "When you add variables, you can specify names, types, lower bounds and upper bounds."
msgstr "Değişkenler eklediğinizde adları, çeşitleri, alt sınırları ve üst sınırları belirtebilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:352
msgid "When you display your problem as LP format, ``Binaries`` denotes binary variables and ``Generals`` denotes integer variables. If variables are not included in either ``Binaries`` or ``Generals``, such variables are continuous ones with default lower bound = 0 and upper bound = infinity. Note that you cannot use ‘e’ or ‘E’ as the first character of names due to the `specification of LP format <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__."
msgstr "Probleminizi LP formatında görüntülediğinizde, ``Binaries`` ikili değişkenleri, ``Generals`` ise tamsayı değişkenlerini belirtir. Değişkenler ``Binaries`` veya ``Generals`` içinde yer almıyorsa, bu tür değişkenler, varsayılan alt sınır = 0 ve üst sınır = sonsuz olan sürekli değişkenlerdir. `specification of LP format <https://www.ibm.com/support/knowledgecenter/SSSA5P_12.7.1/ilog.odms.cplex.help/CPLEX/FileFormats/topics/LP_VariableNames.html>`__ nedeniyle adların ilk karakteri olarak ‘e’ veya ‘E’ kullanamayacağınızı unutmayın."

#: ../../tutorials/01_quadratic_program.ipynb:435
msgid "You can set the objective function by invoking ``QuadraticProgram.minimize`` or ``QuadraticProgram.maximize``. You can add a constant term as well as linear and quadratic objective function by specifying linear and quadratic terms with either list, matrix or dictionary."
msgstr "``QuadraticProgram.minimize`` veya ``QuadraticProgram.maximize`` komutlarını çağırarak amaç fonksiyonunu ayarlayabilirsiniz. Liste, matris veya sözlük ile doğrusal ve ikinci dereceden terimler belirterek bir sabit terimin yanı sıra doğrusal ve ikinci dereceden amaç fonksiyonu ekleyebilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:437
msgid "Note that in the LP format the quadratic part has to be scaled by a factor :math:`1/2`. Thus, when printing as LP format, the quadratic part is first multiplied by 2 and then divided by 2 again."
msgstr "LP biçimde ikinci dereceden bir bölümün :math:`1/2` faktör olarak ölçeklendirilmesi gerektiğini unutmayın. Bu yüzden, LP biçiminde yazdırırken ikinci dereceden olan kısım ilk olarak 2 ile çarpılır ve sonra 2'ye bölünmelidir."

#: ../../tutorials/01_quadratic_program.ipynb:439
msgid "For quadratic programs, there are 3 pieces that have to be specified: a constant (offset), a linear term (:math:`c^{T}x`), and a quadratic term (:math:`x^{T}Qx`)."
msgstr "Karesel programlar için, belirtilmesi gereken 3 parça vardır: sabit (göreli konum), doğrusal bir terim (:math:` c ^{T}x `) ve karesel bir terim (:math:` x ^{T}Qx `)."

#: ../../tutorials/01_quadratic_program.ipynb:441
msgid "The cell below shows how to declare an objective function using a dictionary. For the linear term, keys in the dictionary correspond to variable names, and the corresponding values are the coefficients. For the quadratic term, keys in the dictionary correspond to the two variables being multiplied, and the values are again the coefficients."
msgstr "Aşağıdaki hücre, bir sözlüğü kullanarak nesnel bir işlevin nasıl bildirileceğini gösterir. Doğrusal terim için, sözlükteki anahtarlar değişken adlara karşılık gelir ve karşılık gelen değerler katsayılardır. Karesel terim için, sözlükteki anahtarlar, çarpılan iki değişkene karşılık gelir ve değerler yine katsayılardır."

#: ../../tutorials/01_quadratic_program.ipynb:521
msgid "Another way to specify the quadratic program is using arrays. For the linear term, the array corresponds to the vector :math:`c` in the mathematical formulation. For the quadratic term, the array corresponds to the matrix :math:`Q`. Note that the ordering of the variables (:math:`x` in the mathematical formulation) is the order in which the variables were originally declared in the QuadraticProgram object."
msgstr "Karesel programı belirlemenin başka bir yolu dizileri kullanmaktadır. Doğrusal terim için dizi, matematiksel formülasyonda vektör :math:`c` ye karşılık gelir. Karesel terim için dizi, :math:`Q` matrisine karşılık gelir. Değişkenlerin sırasının (matematiksel formülasyondaki :math:`x`), değişkenlerin QuadraticProgram nesnesinde ilk olarak bildirilmiş olduğu sıralama olduğunu unutmayın."

#: ../../tutorials/01_quadratic_program.ipynb:601
msgid "You can access the constant, the linear term, and the quadratic term by looking at ``Quadratic.objective.{constant, linear, quadratic}``, respectively. As for linear and quadratic terms, you can get a dense matrix (``to_array``), a sparse matrix (``coefficients``), and a dictionary (``to_dict``). For dictionaries, you can specify whether to use variable indices or names as keys. Note that the quadratic terms are stored in a compressed way, e.g., ``{('x', 'y'): 1, ('y', 'x'): 2}`` is stored as ``{('x', 'y'): 3}``. You can get the quadratic term as a symmetric matrix by calling ``to_array(symmetric=True)`` or ``to_dict(symmetric=True)``. If you call ``to_dict(name=True)``, you can get a dictionary whose keys are pairs of variable names."
msgstr "``Quadratic.objective.{constant, linear, quadratic}``e bakarak sırasıyla sabite, doğrusal terime ve karasel terime ulaşabilirsiniz. Doğrusal ve karesel terimlere gelince, yoğun bir matris (``to_array``), seyrek bir matris (``coefficients``) ve bir sözlük (``to_dict``) elde edebilirsiniz. Sözlükler için, anahtar olarak değişken dizinlerin mi yoksa adların mı kullanılacağını belirtebilirsiniz. İkinci dereceden terimlerin sıkıştırılmış bir şekilde saklandığına dikkat edin, örneğin, ``{('x', 'y'): 1, ('y', 'x'): 2}``, ``{('x', 'y'): 3}`` olarak saklanır. İkinci dereceden terimi, ``to_array(symmetric=True)`` veya ``to_dict(symmetric=True)`` öğesini çağırarak simetrik bir matris olarak alabilirsiniz. ``to_dict(name=True)`` öğesini çağırırsanız, anahtarları değişken adlarının çiftleri olan bir sözlük alabilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:694
msgid "Adding/removing linear and quadratic constraints"
msgstr "Doğrusal ve karesel kısıtlamaları ekleme/kaldırma"

#: ../../tutorials/01_quadratic_program.ipynb:705
msgid "You can add linear constraints by setting name, linear expression, sense and right-hand-side value (rhs). You can use senses ‘EQ’, ‘LE’, and ‘GE’ as Docplex supports."
msgstr "Ad, doğrusal ifade, anlam ve sağ taraf değeri (rhs) ayarlayarak doğrusal kısıtlamalar ekleyebilirsiniz. Docplex'in desteklediği gibi ‘EQ’, ‘LE’ ve ‘GE’ uslarını kullanabilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:793
msgid "You can add quadratic constraints as well as objective function and linear constraints."
msgstr "Karesel kısıtlamaların yanı sıra amaç fonksiyonu ve doğrusal kısıtlamalar ekleyebilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:887
msgid "You can access linear and quadratic terms of linear and quadratic constraints as in the same way as the objective function."
msgstr "Doğrusal ve karesel kısıtların doğrusal ve karesel terimlerine, amaç fonksiyonu ile aynı şekilde erişebilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:932
msgid "You can also remove linear/quadratic constraints by ``remove_linear_constraint`` and ``remove_quadratic_constraint``."
msgstr "Ayrıca ``remove_linear_constraint`` ve ``remove_quadratic_constraint`` ile doğrusal/karesel kısıtları ortadan kaldırabilirsiniz."

#: ../../tutorials/01_quadratic_program.ipynb:1021
msgid "You can substitute some of variables with constants or other variables. More precisely, ``QuadraticProgram`` has a method ``substitute_variables(constants=..., variables=...)`` to deal with the following two cases. - :math:`x \\leftarrow c`: when ``constants`` have a dictionary ``{x: c}``. - :math:`x \\leftarrow c y`: when ``variables`` have a dictionary ``{x: (y, c)}``."
msgstr "Bazı değişkenleri sabitler veya diğer değişkenlerle değiştirebilirsiniz. Daha doğrusu, ``QuadraticProgram``, aşağıdaki iki durumla başa çıkmak için ``substitute_variables(constants=..., variables=...)`` yöntemine sahiptir. - :math:`x \\leftarrow c`: ``constants`` bir ``{x: c}`` sözlüğü olduğunda. - :math:`x \\leftarrow c y`: ``variables`` ``{x: (y, c)}`` sözlüğüne sahip olduğunda."

#: ../../tutorials/01_quadratic_program.ipynb:1033
msgid "Substituting Variables"
msgstr "Değişkenleri Değiştirme"

#: ../../tutorials/01_quadratic_program.ipynb:1104
msgid "If the resulting problem is infeasible due to lower bounds or upper bounds, the methods returns the status ``Status.INFEASIBLE``. We try to replace variable ``x`` with -1, but -1 is out of range of ``x`` (0 <= ``x`` <= 1). So, it returns ``Status.INFEASIBLE``."
msgstr "Ortaya çıkan sorun, alt veya üst sınırlar nedeniyle mümkün değilse, yöntemler ``Status.INFEASIBLE`` durumunu döndürür. ``x`` değişkenini -1 ile değiştirmeye çalışıyoruz fakat -1, ``x`` in aralığının dışında (0 <= ``x`` <= 1). Bu yüzden, ``Status.INFEASIBLE`` durumunu döndürür."

#: ../../tutorials/01_quadratic_program.ipynb:1166
msgid "You cannot substitute variables multiple times. The method raises an error in such a case."
msgstr "Değişkenleri birden çok kez değiştiremezsiniz. Bu yöntem böyle bir durumda hata verir."

