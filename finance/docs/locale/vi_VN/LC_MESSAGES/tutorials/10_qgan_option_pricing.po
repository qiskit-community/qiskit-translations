msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 18:08+0000\n"
"PO-Revision-Date: 2021-12-15 18:27\n"
"Last-Translator: \n"
"Language-Team: Vietnamese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: vi\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/10_qgan_option_pricing.po\n"
"X-Crowdin-File-ID: 9702\n"
"Language: vi_VN\n"

#: ../../tutorials/10_qgan_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/10_qgan_option_pricing.ipynb`__."
msgstr "Trang này được tạo từ `docs/tutorials/10_qgan_option_pricing.ipynb`__."

#: ../../tutorials/10_qgan_option_pricing.ipynb:9
msgid "Option Pricing with qGANs"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:12
msgid "Introduction"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:14
msgid "In this notebook, we discuss how a Quantum Machine Learning Algorithm, namely a quantum Generative Adversarial Network (qGAN), can facilitate the pricing of a European call option. More specifically, a qGAN can be trained such that a quantum circuit models the spot price of an asset underlying a European call option. The resulting model can then be integrated into a Quantum Amplitude Estimation based algorithm to evaluate the expected payoff - see `European Call Option Pricing <03_european_call_option_pricing.ipynb>`__. For further details on learning and loading random distributions by training a qGAN please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019. <https://www.nature.com/articles/s41534-019-0223-2>`__"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:48
msgid "Uncertainty Model"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:50
msgid "The Black-Scholes model assumes that the spot price at maturity :math:`S_T` for a European call option is log-normally distributed. Thus, we can train a qGAN on samples from a log-normal distribution and use the result as an uncertainty model underlying the option. In the following, we construct a quantum circuit that loads the uncertainty model. The circuit output reads"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:52
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"

#: ../../tutorials/10_qgan_option_pricing.ipynb:54
msgid "where the probabilities :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, represent a model of the target distribution."
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:95
#: ../../tutorials/10_qgan_option_pricing.ipynb:200
msgid "Evaluate Expected Payoff"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:97
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option’s payoff function with Quantum Amplitude Estimation."
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:123
msgid "Plot the probability distribution"
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:125
msgid "Next, we plot the trained probability distribution and, for reasons of comparison, also the target probability distribution."
msgstr ""

#: ../../tutorials/10_qgan_option_pricing.ipynb:202
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option’s payoff function analytically and with Quantum Amplitude Estimation."
msgstr ""

