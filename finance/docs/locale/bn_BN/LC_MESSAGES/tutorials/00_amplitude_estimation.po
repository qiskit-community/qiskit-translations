msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 23:26+0000\n"
"PO-Revision-Date: 2022-11-11 00:10\n"
"Last-Translator: \n"
"Language-Team: Bengali Language\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: bengali\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/00_amplitude_estimation.po\n"
"X-Crowdin-File-ID: 9709\n"
"Language: bn_BN\n"

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "This page was generated from `docs/tutorials/00_amplitude_estimation.ipynb`__."
msgstr "এই পৃষ্ঠাটি `docs/tutorials/00_amplitude_estimation.ipynb`__ থেকে বানানো হয়েছে।"

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "Quantum Amplitude Estimation"
msgstr "কোয়ান্টাম বিস্তার অনুমান"

#: ../../tutorials/00_amplitude_estimation.ipynb:11
msgid "Given an operator :math:`\\mathcal{A}` that acts as"
msgstr "প্রদত্ত :math:`\\mathcal{A}` অপারেটরটি যেভাবে কাজ করে,"

#: ../../tutorials/00_amplitude_estimation.ipynb:13
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"
msgstr "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"

#: ../../tutorials/00_amplitude_estimation.ipynb:18
msgid "Quantum Amplitude Estimation (QAE) is the task of finding an estimate for the amplitude :math:`a` of the state :math:`|\\Psi_1\\rangle`:"
msgstr "কোয়ান্টাম বিস্তার অনুমান (QAE) হল :math:`|\\Psi_1\\rangle` অবস্থার :math:`a` বিস্তারের জন্য একটি অনুমান খুঁজে বের করার কাজ:"

#: ../../tutorials/00_amplitude_estimation.ipynb:20
msgid "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."
msgstr "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."

#: ../../tutorials/00_amplitude_estimation.ipynb:25
msgid "This task has first been investigated by Brassard et al. [1] in 2000 and their algorithm uses a combination of the Grover operator"
msgstr "এই কাজটি প্রথমে ব্রাসার্ড et al. [১] দ্বারা 2000 সালে তদন্ত করা হয়েছে এবং তাদের অ্যালগরিদম গ্রোভার অপারেটরের সংমিশ্রণ ব্যবহার করে"

#: ../../tutorials/00_amplitude_estimation.ipynb:27
msgid "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"
msgstr "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"

#: ../../tutorials/00_amplitude_estimation.ipynb:32
msgid "where :math:`\\mathcal{S}_0` and :math:`\\mathcal{S}_{\\Psi_1}` are reflections about the :math:`|0\\rangle` and :math:`|\\Psi_1\\rangle` states, respectively, and phase estimation. However this algorithm, called ``AmplitudeEstimation`` in Qiskit, requires large circuits and is computationally expensive. Therefore, other variants of QAE have been proposed, which we will showcase in this tutorial for a simple example."
msgstr "যেখানে :math:`\\mathcal{S}_0` এবং :math:`\\mathcal{S}_{\\Psi_1}` এর প্রতিফলন হল :math:`|0\\rangle` এবং :math:`|\\Psi_1\\rangle` অবস্থা, যথাক্রমে, এবং পর্যায় অনুমান। তবে এই অ্যালগরিদম, যাকে Qiskit এর ``AmplitudeEstimation`` বলা হয়, এর জন্য বড় সার্কিটের প্রয়োজন হয় এবং এটি কম্পিউটেশনালভাবে ব্যয়বহুল। অতএব, QAE এর অন্যান্য রূপগুলি প্রস্তাব করা হয়েছে, যা আমরা একটি সহজ উদাহরণের জন্য এই টিউটোরিয়ালে দেখাব।"

#: ../../tutorials/00_amplitude_estimation.ipynb:34
msgid "In our example, :math:`\\mathcal{A}` describes a Bernoulli random variable with (assumed to be unknown) success probability :math:`p`:"
msgstr "আমাদের উদাহরণে, :math:`\\mathcal{A}` একটি বার্নোলি (Bernoulli) দৈব চল রাশি বর্ণনা করে (অজানা বলে ধরে নেওয়া হয়) সাফল্যের সম্ভাবনা :math:`p`:"

#: ../../tutorials/00_amplitude_estimation.ipynb:36
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."
msgstr "\\mathcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."

#: ../../tutorials/00_amplitude_estimation.ipynb:41
msgid "On a quantum computer, we can model this operator with a rotation around the :math:`Y`-axis of a single qubit"
msgstr "একটি কোয়ান্টাম কম্পিউটারে আমরা এই অপারেটরকে একটি একক কিউবিটের :math:`Y` অক্ষের চারদিকে ঘুরিয়ে মডেল করতে পারি"

#: ../../tutorials/00_amplitude_estimation.ipynb:43
msgid "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."
msgstr "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."

#: ../../tutorials/00_amplitude_estimation.ipynb:48
msgid "The Grover operator for this case is particularly simple"
msgstr "এই ক্ষেত্রে গ্রোভার অপারেটর বেশ সহজ"

#: ../../tutorials/00_amplitude_estimation.ipynb:50
msgid "\\mathcal{Q} = R_Y(2\\theta_p),"
msgstr "\\mathcal{Q} = R_Y(2\\theta_p),"

#: ../../tutorials/00_amplitude_estimation.ipynb:55
msgid "whose powers are very easy to calculate: :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`."
msgstr "যার ক্ষমতা গণনা করা খুব সহজ: :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`।"

#: ../../tutorials/00_amplitude_estimation.ipynb:66
msgid "We’ll fix the probability we want to estimate to :math:`p = 0.2`."
msgstr "আমরা যে সম্ভাবনাটি অনুমান করতে চাই তা :math:`p = 0.2` এ ঠিক করব।"

#: ../../tutorials/00_amplitude_estimation.ipynb:87
msgid "Now we can define circuits for :math:`\\mathcal{A}` and :math:`\\mathcal{Q}`."
msgstr "এখন আমরা :math:`\\mathcal{A}` এবং :math:`\\mathcal{Q}` এর জন্য বর্তনী (সার্কিট) সংজ্ঞায়িত করতে পারি।"

#: ../../tutorials/00_amplitude_estimation.ipynb:147
msgid "Qiskit’s Amplitude Estimation workflow"
msgstr "Qiskit বিস্তার নির্ণয় কর্মধারা"

#: ../../tutorials/00_amplitude_estimation.ipynb:158
msgid "Qiskit implements several QAE algorithms that all derive from the ``AmplitudeEstimator`` interface. In the initializer we specify algorithm specific settings and the ``estimate`` method, which does all the work, takes an ``EstimationProblem`` as input and returns an ``AmplitudeEstimationResult`` object. Since all QAE variants follow the same interface, we can use them all to solve the same problem instance."
msgstr "Qiskit বেশ কয়েকটি QAE অ্যালগরিদম প্রয়োগ করে যা সমস্ত ``AmplitudeEstimator`` ইন্টারফেস থেকে প্রাপ্ত। ইনিশিয়ালাইজারে আমরা অ্যালগরিদম সুনির্দিষ্ট সেটিংস এবং ``estimate`` পদ্ধতি উল্লেখ করি, যা সমস্ত কাজ করে, একটি ``EstimationProblem`` ইনপুট হিসাবে নেয় এবং একটি ``AmplitudeEstimationResult`` অবজেক্ট প্রদান করে। যেহেতু সব QAE ভেরিয়েন্ট একই ইন্টারফেস অনুসরণ করে, তাই আমরা একই সমস্যা সমাধানের জন্য তাদের সব ব্যবহার করতে পারি।"

#: ../../tutorials/00_amplitude_estimation.ipynb:160
msgid "Next, we’ll run all different QAE algorithms. To do so, we first define the estimation problem which will contain the :math:`\\mathcal{A}` and :math:`\\mathcal{Q}` operators as well as how to identify the :math:`|\\Psi_1\\rangle` state, which in this simple example is just :math:`|1\\rangle`."
msgstr "পরবর্তী, আমরা সমস্ত ভিন্ন QAE অ্যালগরিদম চালাব। এটি করার জন্য, আমরা প্রথমে অনুমানের সমস্যাটি সংজ্ঞায়িত করি যার মধ্যে :math:`\\mathcal{A}` এবং :math:`\\mathcal{Q}` অপারেটর থাকবে এবং সেইসাথে কিভাবে :math:`|\\Psi_1\\rangle` অবস্থা চিহ্নিত করতে হবে, যা এই সহজ উদাহরণে শুধু :math:`|1\\rangle`।"

#: ../../tutorials/00_amplitude_estimation.ipynb:187
msgid "To execute circuits we’ll use Qiskit’s statevector simulator."
msgstr "সার্কিট চালানোর জন্য আমরা Qiskit এর অবস্থা ভেক্টর বা দিকরাশি সিমুলেটর ব্যবহার করব।"

#: ../../tutorials/00_amplitude_estimation.ipynb:213
msgid "Canonical AE"
msgstr "ক্যানোনিকাল এ.ই (Canonical AE)"

#: ../../tutorials/00_amplitude_estimation.ipynb:215
msgid "Now let’s solve this with the original QAE implementation by Brassard et al. [1]."
msgstr "এখন আসুন ব্রাসার্ড এট আল দ্বারা মূল QAE বাস্তবায়নের সাহায্যে এটি সমাধান করি [১]।"

#: ../../tutorials/00_amplitude_estimation.ipynb:241
msgid "With the algorithm defined, we can call the ``estimate`` method and provide it with the problem to solve."
msgstr "অ্যালগরিদম সংজ্ঞায়িত করার সাথে, আমরা ``estimate`` পদ্ধতিটি কল করতে পারি এবং এই সমস্যার সমাধান করতে পারি।"

#: ../../tutorials/00_amplitude_estimation.ipynb:262
msgid "The estimate is available in the ``estimation`` key:"
msgstr "অনুমানটি ``estimate`` key তে পাওয়া যায়:"

#: ../../tutorials/00_amplitude_estimation.ipynb:307
msgid "We see that this is not a very good estimate for our target of :math:`p=0.2`! That’s due to the fact the canonical AE is restricted to a discrete grid, specified by the number of evaluation qubits:"
msgstr "আমরা দেখতে পাচ্ছি যে এটি আমাদের লক্ষ্যের জন্য খুব ভাল অনুমান নয় :math:`p = 0.2`! এটি এই কারণে যে ক্যানোনিকাল AE একটি পৃথক গ্রিডের মধ্যে সীমাবদ্ধ, যা মূল্যায়ন কিউবিটের সংখ্যা দ্বারা নির্দিষ্ট করা হয়েছে:"

#: ../../tutorials/00_amplitude_estimation.ipynb:351
msgid "To improve the estimate we can interpolate the measurement probabilities and compute the maximum likelihood estimator that produces this probability distribution:"
msgstr "অনুমানের উন্নতির জন্য আমরা পরিমাপের সম্ভাব্যতাকে বিভক্ত করতে পারি এবং এই সম্ভাব্যতা বণ্টন তৈরির সর্বোচ্চ সম্ভাব্যতা নির্ণয়কারীকে হিসাব করতে পারি:"

#: ../../tutorials/00_amplitude_estimation.ipynb:396
msgid "We can have a look at the circuit that AE executes:"
msgstr "আমরা AE যে সার্কিটটি চালায় তার দিকে নজর দিতে পারি:"

#: ../../tutorials/00_amplitude_estimation.ipynb:453
msgid "Iterative Amplitude Estimation"
msgstr "পুনরাবৃত্ত বিস্তার নির্ণয়"

#: ../../tutorials/00_amplitude_estimation.ipynb:455
msgid "See [2]."
msgstr "[২] দেখুন।"

#: ../../tutorials/00_amplitude_estimation.ipynb:509
msgid "The circuits here only consist of Grover powers and are much cheaper!"
msgstr "এখানে সার্কিট শুধুমাত্র গ্রোভার পাওয়ার নিয়ে গঠিত এবং অনেক সস্তা!"

#: ../../tutorials/00_amplitude_estimation.ipynb:541
msgid "Maximum Likelihood Amplitude Estimation"
msgstr "সর্বাধিক সম্ভাব্যতা বিস্তার নির্ণয়"

#: ../../tutorials/00_amplitude_estimation.ipynb:543
msgid "See [3]."
msgstr "[৩] দেখুন।"

#: ../../tutorials/00_amplitude_estimation.ipynb:596
msgid "Faster Amplitude Estimation"
msgstr "দ্রুততর বিস্তার নির্ণয়"

#: ../../tutorials/00_amplitude_estimation.ipynb:598
msgid "See [4]."
msgstr "[৪] দেখুন।"

#: ../../tutorials/00_amplitude_estimation.ipynb:682
msgid "References"
msgstr "তথ্যসূত্র (রেফারেন্স)"

#: ../../tutorials/00_amplitude_estimation.ipynb:684
msgid "[1] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"
msgstr "[১] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"

#: ../../tutorials/00_amplitude_estimation.ipynb:686
msgid "[2] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"
msgstr "[২] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"

#: ../../tutorials/00_amplitude_estimation.ipynb:688
msgid "[3] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"
msgstr "[৩] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"

#: ../../tutorials/00_amplitude_estimation.ipynb:690
msgid "[4] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"
msgstr "[৪] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"

