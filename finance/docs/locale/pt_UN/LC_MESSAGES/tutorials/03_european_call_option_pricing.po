msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-24 21:49+0000\n"
"PO-Revision-Date: 2022-03-24 22:02\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/03_european_call_option_pricing.po\n"
"X-Crowdin-File-ID: 9688\n"
"Language: pt_UN\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/03_european_call_option_pricing.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/03_european_call_option_pricing.ipynb`__."

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "Pricing European Call Options"
msgstr "Precificando Call Options Europeias"

#: ../../tutorials/03_european_call_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/03_european_call_option_pricing.ipynb:23
msgid "Suppose a European call option with strike price :math:`K` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "Suponha uma opção de compra Europeia com preço contratado :math:`K` e um ativo subjacente cujo preço à vista na maturidade :math:`S_T` segue uma determinada distribuição aleatória. A função de pagamento correspondente é definida como:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:25
msgid "\\max\\{S_T - K, 0\\}\n\n"
msgstr "\\max\\{S_T - K, 0\\}\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "A seguir, um algoritmo quântico baseado em estimativa de amplitude é usado para estimar o payoff esperado, ou seja, o preço justo, antes de descontar para a opção:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{S_T - K, 0\\} \\right]\n\n"
msgstr "\\mathbb{E}\\left[ \\max\\{S_T - K, 0\\} \\right]\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "assim como o :math:`\\Delta` correspondente, ou seja, a derivada do preço da opção com relação ao preço à vista, definido como:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:33
msgid "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"
msgstr "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"

#: ../../tutorials/03_european_call_option_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "A aproximação da função objetivo e uma introdução geral sobre precificação de opções e análise de risco em computadores quânticos são dadas nos seguintes artigos:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:40
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:41
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://quantum-journal.org/papers/q-2020-07-06-291/>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://quantum-journal.org/papers/q-2020-07-06-291/>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:72
msgid "Uncertainty Model"
msgstr "Modelo de incerteza"

#: ../../tutorials/03_european_call_option_pricing.ipynb:74
msgid "We construct a circuit to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[\\text{low}, \\text{high}]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit implements the following:"
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:76
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr "\\big | 0\\rangle_{n} \\mapsto \\big | \\psi\\rangle_{n} = \\sum_ {i= 0} ^ {2 ^ n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:78
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr "onde :math:`p_i` denotam as probabilidades correspondentes à distribuição truncada e discretizada e onde :math:`i` é mapeado para o intervalo correto utilizando o mapeamento afim:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:80
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"
msgstr "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:162
msgid "Payoff Function"
msgstr "Função Payoff"

#: ../../tutorials/03_european_call_option_pricing.ipynb:164
msgid "The payoff function equals zero as long as the spot price at maturity :math:`S_T` is less than the strike price :math:`K` and then increases linearly. The implementation uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\geq K`, and this ancilla is used to control the linear part of the payoff function."
msgstr "A função de Payoff é igual a zero enquanto o preço à vista na maturidade :math:`S_T` for menor do que o preço acordado :math:`K` e então aumentar o valor de forma linear. A implementação usa um comparador, que vira um qubit de ancila de :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\geq K`, e este ancila é usado para controlar a parte linear da função de payoff."

#: ../../tutorials/03_european_call_option_pricing.ipynb:166
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "A própria parte linear é então aproximada da seguinte maneira. Exploramos o fato de que :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` para :math:`|y|` pequeno. Assim, para um dado fator de reescalonamento de aproximação :math:`c_\\text{approx} \\in [0, 1]` e :math:`x \\in [0, 1]` consideramos"

#: ../../tutorials/03_european_call_option_pricing.ipynb:168
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:170
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ para :math:`c_\\text{approx}` pequeno."

#: ../../tutorials/03_european_call_option_pricing.ipynb:172
msgid "We can easily construct an operator that acts as"
msgstr "Podemos facilmente construir um operador que atua como"

#: ../../tutorials/03_european_call_option_pricing.ipynb:174
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:176
msgid "using controlled Y-rotations."
msgstr "usando rotações Y controladas."

#: ../../tutorials/03_european_call_option_pricing.ipynb:178
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Eventualmente, estamos interessados na probabilidade de medir :math:`\\big|1\\rangle` no último qubit, o que corresponde a :math:`\\sin^2(a*x+b)`. Juntamente com a aproximação, acima, isto permite aproximar os valores de interesse. Quanto menor o :math:`c_\\text{approx}` escolhido, melhor a aproximação. No entanto, uma vez que estamos estimando uma propriedade escalonada por :math:`c_\\text{approx}` em seguida, o número de qubits de avaliação :math:`m` precisa ser ajustado de acordo."

#: ../../tutorials/03_european_call_option_pricing.ipynb:180
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "Para mais detalhes sobre a aproximação, nós nos referimos a: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:402
msgid "Evaluate Expected Payoff"
msgstr "Avaliando o Payoff Esperado"

#: ../../tutorials/03_european_call_option_pricing.ipynb:589
msgid "Instead of constructing these circuits manually, Qiskit’s finance module offers the ``EuropeanCallPricing`` circuit, which already implements this functionality as building block."
msgstr "Ao invés de construir manualmente estes circuitos, o módulo de finanças do Qiskit oferece o circuito ``EuropeanCallPricing``, o qual já implementa essa funcionalidade como bloco de construção."

#: ../../tutorials/03_european_call_option_pricing.ipynb:671
msgid "Evaluate Delta"
msgstr "Avaliando o Delta"

#: ../../tutorials/03_european_call_option_pricing.ipynb:673
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use a comparator circuit and an ancilla qubit to identify the cases where :math:`S_T > K`. However, since we are only interested in the probability of this condition being true, we can directly use this ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "O Delta é um pouco mais simples de avaliar do que o pagamento esperado. Da mesma forma que o pagamento esperado, usamos um circuito de comparador e um qubit ancila para identificar os casos onde :math:`S_T > K`. No entanto, uma vez que só estamos interessados em que seja verdade a probabilidade dessa condição ser verdadeira, podemos usar diretamente este ancila qubit como o qubit objetivo em estimativa de amplitude sem qualquer aproximação adicional."

