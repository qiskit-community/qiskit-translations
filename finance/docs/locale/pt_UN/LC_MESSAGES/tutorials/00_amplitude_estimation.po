msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 21:34+0000\n"
"PO-Revision-Date: 2022-08-11 22:47\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/00_amplitude_estimation.po\n"
"X-Crowdin-File-ID: 9709\n"
"Language: pt_UN\n"

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "This page was generated from `docs/tutorials/00_amplitude_estimation.ipynb`__."
msgstr "Esta página foi gerada a partir de 'docs/tutorials/00_amplitude_estimation.ipynb'__."

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "Quantum Amplitude Estimation"
msgstr "Estimativa de Amplitude Quântica"

#: ../../tutorials/00_amplitude_estimation.ipynb:11
msgid "Given an operator :math:`\\mathcal{A}` that acts as"
msgstr "Dado um operador :math:`\\mathcal{A}` que age como"

#: ../../tutorials/00_amplitude_estimation.ipynb:13
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"
msgstr "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"

#: ../../tutorials/00_amplitude_estimation.ipynb:18
msgid "Quantum Amplitude Estimation (QAE) is the task of finding an estimate for the amplitude :math:`a` of the state :math:`|\\Psi_1\\rangle`:"
msgstr "Estimativa de Amplitude Quântica (EAQ) é a tarefa de encontrar uma estimativa para a amplitude :math:`a` do estado :math:`|\\Psi_1\\rangle`:"

#: ../../tutorials/00_amplitude_estimation.ipynb:20
msgid "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."
msgstr "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."

#: ../../tutorials/00_amplitude_estimation.ipynb:25
msgid "This task has first been investigated by Brassard et al. [1] in 2000 and their algorithm uses a combination of the Grover operator"
msgstr "Esta tarefa foi investigada pela primeira vez por Brassard et al. [1] em 2000 e seus algoritmos usam uma combinação do operador Grover"

#: ../../tutorials/00_amplitude_estimation.ipynb:27
msgid "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"
msgstr "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"

#: ../../tutorials/00_amplitude_estimation.ipynb:32
msgid "where :math:`\\mathcal{S}_0` and :math:`\\mathcal{S}_{\\Psi_1}` are reflections about the :math:`|0\\rangle` and :math:`|\\Psi_1\\rangle` states, respectively, and phase estimation. However this algorithm, called ``AmplitudeEstimation`` in Qiskit, requires large circuits and is computationally expensive. Therefore, other variants of QAE have been proposed, which we will showcase in this tutorial for a simple example."
msgstr "onde :math:`\\mathcal{S}_0` e :math:`\\mathcal{S}_{\\Psi_1}` são reflexos dos estados :math:`|0\\rangle` e :math:`|\\Psi_1\\rangle` respectivamente, e estimativa de fase. Contudo estes algoritmos, chamados ``AmplitudeEstimation`` no Qiskit, necessitam de grandes circuitos e são computacionalmente caros. Portanto, outras variantes do EAQ foram propostas, as quais iremos mostrar neste tutorial em um simples exemplo."

#: ../../tutorials/00_amplitude_estimation.ipynb:34
msgid "In our example, :math:`\\mathcal{A}` describes a Bernoulli random variable with (assumed to be unknown) success probability :math:`p`:"
msgstr "Em nosso exemplo, :math:`\\mathcal{A}` descreve uma variável aleatória de Bernoulli com (presumindo que seja desconhecida) probabilidade de sucesso :math:`p`:"

#: ../../tutorials/00_amplitude_estimation.ipynb:36
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."
msgstr "hcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."

#: ../../tutorials/00_amplitude_estimation.ipynb:41
msgid "On a quantum computer, we can model this operator with a rotation around the :math:`Y`-axis of a single qubit"
msgstr "Em um computador quântico, nós podemos moldar este operador com a rotação em torno do eixo-:math:`Y de um único qubit"

#: ../../tutorials/00_amplitude_estimation.ipynb:43
msgid "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."
msgstr "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."

#: ../../tutorials/00_amplitude_estimation.ipynb:48
msgid "The Grover operator for this case is particularly simple"
msgstr "O operador Grover para este caso é particularmente simples"

#: ../../tutorials/00_amplitude_estimation.ipynb:50
msgid "\\mathcal{Q} = R_Y(2\\theta_p),"
msgstr "\\mathcal{Q} = R_Y(2\\theta_p),"

#: ../../tutorials/00_amplitude_estimation.ipynb:55
msgid "whose powers are very easy to calculate: :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`."
msgstr "cujas potências são fáceis de calcular :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`."

#: ../../tutorials/00_amplitude_estimation.ipynb:66
msgid "We’ll fix the probability we want to estimate to :math:`p = 0.2`."
msgstr "Vamos corrigir a probabilidade que queremos estimar para :math:`p = 0.2`."

#: ../../tutorials/00_amplitude_estimation.ipynb:87
msgid "Now we can define circuits for :math:`\\mathcal{A}` and :math:`\\mathcal{Q}`."
msgstr "Agora nós podemos definir circuitos para :math:`\\mathcal{A}` e :math:`\\mathcal{Q}`."

#: ../../tutorials/00_amplitude_estimation.ipynb:147
msgid "Qiskit’s Amplitude Estimation workflow"
msgstr "Fluxo de trabalho de Estimativa de Amplitude do Qiskit"

#: ../../tutorials/00_amplitude_estimation.ipynb:158
msgid "Qiskit implements several QAE algorithms that all derive from the ``AmplitudeEstimator`` interface. In the initializer we specify algorithm specific settings and the ``estimate`` method, which does all the work, takes an ``EstimationProblem`` as input and returns an ``AmplitudeEstimationResult`` object. Since all QAE variants follow the same interface, we can use them all to solve the same problem instance."
msgstr "Qiskit implementa vários algoritmos QAE que derivam da interface ``AmplitudeEstimator``. No inicializador nós especificamos configurações específicas do algoritmo e o método ``estimate``, o qual faz todo o trabalho, recebe como entrada um ``EstimationProblem`` e retorna um objeto ``AmplitudeEstimationResult``. Já que todas variantes de QAE seguem a mesma interface, nós podemos utilizar todos eles para resolver a mesma instância de problema."

#: ../../tutorials/00_amplitude_estimation.ipynb:160
msgid "Next, we’ll run all different QAE algorithms. To do so, we first define the estimation problem which will contain the :math:`\\mathcal{A}` and :math:`\\mathcal{Q}` operators as well as how to identify the :math:`|\\Psi_1\\rangle` state, which in this simple example is just :math:`|1\\rangle`."
msgstr "A seguir, nós iremos executar diferentes algoritmos QAE. Para tanto, nós primeiro definimos o problema de estimação, o qual irá conter os operadores :math:`\\mathcal{A}` e :math:`\\mathcal{Q}`, bem como identificar o estado :math:`|\\Psi_1\\rangle`, que neste exemplo simples é apenas :math:`|1\\rangle`."

#: ../../tutorials/00_amplitude_estimation.ipynb:187
msgid "To execute circuits we’ll use Qiskit’s statevector simulator."
msgstr "Para executar circuitos nós iremos utilizar o simulador de vetor de estado do Qiskit."

#: ../../tutorials/00_amplitude_estimation.ipynb:213
msgid "Canonical AE"
msgstr "AE Canônico"

#: ../../tutorials/00_amplitude_estimation.ipynb:215
msgid "Now let’s solve this with the original QAE implementation by Brassard et al. [1]."
msgstr "Agora vamos resolver isso com a implementação original do QAE de Brassard et al. [1]."

#: ../../tutorials/00_amplitude_estimation.ipynb:241
msgid "With the algorithm defined, we can call the ``estimate`` method and provide it with the problem to solve."
msgstr "Com o algoritmo definido, nós podemos invocar o método ``estimate`` e fornecer a ele o problema para resolver."

#: ../../tutorials/00_amplitude_estimation.ipynb:262
msgid "The estimate is available in the ``estimation`` key:"
msgstr "A estimativa está disponível na chave ``estimation``:"

#: ../../tutorials/00_amplitude_estimation.ipynb:307
msgid "We see that this is not a very good estimate for our target of :math:`p=0.2`! That’s due to the fact the canonical AE is restricted to a discrete grid, specified by the number of evaluation qubits:"
msgstr "Nós observamos que essa não é uma boa estimativa muito boa para nosso alvo de :math:`p=0.2`! Isso se deve ao fato do AE canônico ser restrito a uma rede discreta, especificada pelo número de qubits de avaliação:"

#: ../../tutorials/00_amplitude_estimation.ipynb:351
msgid "To improve the estimate we can interpolate the measurement probabilities and compute the maximum likelihood estimator that produces this probability distribution:"
msgstr "Para melhorar a estimativa nós podemos interpolar as probabilidades de medição e computar o estimador de máxima verossimilhança que produz esta distribuição de probabilidade:"

#: ../../tutorials/00_amplitude_estimation.ipynb:396
msgid "We can have a look at the circuit that AE executes:"
msgstr "Nós podemos dar uma olhada no circuito que o AE executa:"

#: ../../tutorials/00_amplitude_estimation.ipynb:453
msgid "Iterative Amplitude Estimation"
msgstr "Estimativa de Amplitude Iterativa"

#: ../../tutorials/00_amplitude_estimation.ipynb:455
msgid "See [2]."
msgstr "Veja [2]."

#: ../../tutorials/00_amplitude_estimation.ipynb:509
msgid "The circuits here only consist of Grover powers and are much cheaper!"
msgstr "Os circuitos aqui consistem apenas de potências Grover e são muito mais baratos!"

#: ../../tutorials/00_amplitude_estimation.ipynb:541
msgid "Maximum Likelihood Amplitude Estimation"
msgstr "Estimativa de Amplitude de Máxima Verossimilhança"

#: ../../tutorials/00_amplitude_estimation.ipynb:543
msgid "See [3]."
msgstr "Veja [3]."

#: ../../tutorials/00_amplitude_estimation.ipynb:596
msgid "Faster Amplitude Estimation"
msgstr "Estimativa Mais Rápida de Amplitude"

#: ../../tutorials/00_amplitude_estimation.ipynb:598
msgid "See [4]."
msgstr "Veja [4]."

#: ../../tutorials/00_amplitude_estimation.ipynb:682
msgid "References"
msgstr "Referências"

#: ../../tutorials/00_amplitude_estimation.ipynb:684
msgid "[1] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"
msgstr "[1] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"

#: ../../tutorials/00_amplitude_estimation.ipynb:686
msgid "[2] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"
msgstr "[2] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"

#: ../../tutorials/00_amplitude_estimation.ipynb:688
msgid "[3] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"
msgstr "[3] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"

#: ../../tutorials/00_amplitude_estimation.ipynb:690
msgid "[4] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"
msgstr "[4] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"

