msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 21:34+0000\n"
"PO-Revision-Date: 2022-08-11 22:23\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/03_european_call_option_pricing.po\n"
"X-Crowdin-File-ID: 9688\n"
"Language: fr_FR\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/03_european_call_option_pricing.ipynb`__."
msgstr "Cette page a été générée et traduite à partir de `tutorials/finance/3_european_call_option_pricing.ipynb`__."

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "Pricing European Call Options"
msgstr "Prix des options d'achat européennes"

#: ../../tutorials/03_european_call_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/03_european_call_option_pricing.ipynb:23
msgid "Suppose a European call option with strike price :math:`K` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "Supposons une option d'achat européenne avec un prix d'exercice :math:`K` et un actif sous-jacent dont le prix au comptant à l'échéance :math:`S_T` suit une distribution aléatoire donnée. La fonction de gain correspondante est définie comme suit:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:25
msgid "\\max\\{S_T - K, 0\\}\n\n"
msgstr "\\max\\{S_T - K, 0\\}\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "Dans ce qui suit, un algorithme quantique basé sur l'estimation d'amplitude est utilisé pour évaluer le gain attendu, c'est-à-dire le juste prix avant remise, pour l'option :"

#: ../../tutorials/03_european_call_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{S_T - K, 0\\} \\right]\n\n"
msgstr "\\mathbb{E}\\left[ \\max\\{K - S_T, 0\\} \\right]\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "ainsi que le :math:\"\\Delta\" correspondant, c'est-à-dire le dérivé du prix de l'option par rapport au prix au comptant, défini comme suit:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:33
msgid "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"
msgstr "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"

#: ../../tutorials/03_european_call_option_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "L'approximation de la fonction objectif et une introduction générale à la tarification des options et à l'analyse des risques sur les ordinateurs quantiques sont données dans les articles suivants :"

#: ../../tutorials/03_european_call_option_pricing.ipynb:40
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:41
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://quantum-journal.org/papers/q-2020-07-06-291/>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://quantum-journal.org/papers/q-2020-07-06-291/>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:72
msgid "Uncertainty Model"
msgstr "Modèle d'incertitude"

#: ../../tutorials/03_european_call_option_pricing.ipynb:74
msgid "We construct a circuit to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[\\text{low}, \\text{high}]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit implements the following:"
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:76
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:78
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr "où les :math:`p_i` représentent les probabilités de la distribution tronquée et discrétisée et où les :math:`i` sont mappés sur l'intervalle approprié en utilisant la carte affine suivante :"

#: ../../tutorials/03_european_call_option_pricing.ipynb:80
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"
msgstr "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:162
msgid "Payoff Function"
msgstr "Fonction de Paiement"

#: ../../tutorials/03_european_call_option_pricing.ipynb:164
msgid "The payoff function equals zero as long as the spot price at maturity :math:`S_T` is less than the strike price :math:`K` and then increases linearly. The implementation uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\geq K`, and this ancilla is used to control the linear part of the payoff function."
msgstr "La fonction de gain est nulle tant que la somme des prix au comptant à l'échéance :math:`S_T` est inférieure au prix d'exercice :math:`K` puis cette fonction augmente linéairement. Cette implémentation repose sur un comparateur qui modifie un qubit ancillaire de :math:`\\big|0\\rangle` à :math:`\\big|1\\rangle` si :math:`S_T \\geq K` , puis cet ancillaire est utilisé pour contrôler la partie linéaire de la fonction de gain."

#: ../../tutorials/03_european_call_option_pricing.ipynb:166
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "La partie linéaire proprement dite suit l'approximation ci-dessous. On exploite le fait que :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` lorsque :math:`|y|` est petit. Ainsi, pour un facteur d'échelle d'approximation :math:`c_\\text{approx} \\in [0, 1]` et :math:`x \\in [0, 1]` on considère"

#: ../../tutorials/03_european_call_option_pricing.ipynb:168
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:170
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "pour de petites valeurs de :math:`c_\\text{approx}`."

#: ../../tutorials/03_european_call_option_pricing.ipynb:172
msgid "We can easily construct an operator that acts as"
msgstr "Nous pouvons facilement construire un opérateur qui agit ainsi :"

#: ../../tutorials/03_european_call_option_pricing.ipynb:174
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:176
msgid "using controlled Y-rotations."
msgstr "en utilisant des Y-rotations contrôlées."

#: ../../tutorials/03_european_call_option_pricing.ipynb:178
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Il est aussi intéressant de connaitre la probabilité de mesurer :math:`\\big|1\\rangle` sur le dernier qubit, correspondant à :math:`\\sin^2(a*x+b)`. En complément de l'approximation précédente, nous pouvons alors estimer la valeurs des intérêts. Plus :math:`c_\\text{approx}` est choisi petit, meilleure est l'approximation. Cependant, puisque nous estimons une propriété dépendant de :math:`c_\\text{approx}`, le nombre de qubits d'évaluation :math:`m` doit être choisi en conséquence."

#: ../../tutorials/03_european_call_option_pricing.ipynb:180
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "Pour plus de détails sur l'approximation, nous nous référons à : `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:404
msgid "Evaluate Expected Payoff"
msgstr "Evaluer le paiement attendu"

#: ../../tutorials/03_european_call_option_pricing.ipynb:593
msgid "Instead of constructing these circuits manually, Qiskit’s finance module offers the ``EuropeanCallPricing`` circuit, which already implements this functionality as building block."
msgstr "Au lieu de construire ces circuits manuellement, le module finance de Qiskit propose le circuit ``EuropeanCallExpectedValue``, qui implémente déjà cette fonctionnalité en tant que bloc de construction."

#: ../../tutorials/03_european_call_option_pricing.ipynb:676
msgid "Evaluate Delta"
msgstr "Evaluation du Delta"

#: ../../tutorials/03_european_call_option_pricing.ipynb:678
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use a comparator circuit and an ancilla qubit to identify the cases where :math:`S_T > K`. However, since we are only interested in the probability of this condition being true, we can directly use this ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "Le Delta est un peu plus simple à évaluer que la fonction de gain. Tout comme pour la fonction de gain, nous utilisons un circuit comparateur et un qubit ancillaire pour identifier les cas où :math:`S_T>K`. Cependant, puisque nous ne sommes intéressés que par la probabilité que cette condition soit vraie, nous pouvons utiliser le qubit ancillaire directement comme qubit objectif pour obtenir l'estimation d'amplitude sans approximations supplémentaires."

