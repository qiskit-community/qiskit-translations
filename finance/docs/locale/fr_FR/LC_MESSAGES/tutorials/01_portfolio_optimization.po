msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-14 09:35+0000\n"
"PO-Revision-Date: 2023-11-14 11:17\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/finance/docs/locale/en/LC_MESSAGES/tutorials/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9684\n"

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "This page was generated from `docs/tutorials/01_portfolio_optimization.ipynb`__."
msgstr "Cette page a été générée à partir de `docs/tutorials/01_portfolio_optimization.ipynb` __."

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "Portfolio Optimization"
msgstr "Optimisation de portefeuille"

#: ../../tutorials/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "Introduction"

#: ../../tutorials/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "Ce tutoriel montre comment résoudre un problème d'optimisation de variance moyenne pour un portefeuille contenant :math:`n` valeurs d'actifs :"

#: ../../tutorials/01_portfolio_optimization.ipynb:25
msgid "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"
msgstr "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"

#: ../../tutorials/01_portfolio_optimization.ipynb:32
msgid "where we use the following notation:"
msgstr "où nous utilisons la notation suivante:"

#: ../../tutorials/01_portfolio_optimization.ipynb:34
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0, 1\\}^n` indique le vecteur des variables de décision binaires, qui indiquent les actifs à choisir (:math:`x[i] = 1`) ou à ne pas choisir (:math:`x[i] = 0`),"

#: ../../tutorials/01_portfolio_optimization.ipynb:35
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^ n` représente les retours attendus des actifs,"

#: ../../tutorials/01_portfolio_optimization.ipynb:36
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^ {n \\times n }` spécifie les covariances entre les actifs,"

#: ../../tutorials/01_portfolio_optimization.ipynb:37
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` contrôle la propension au risque du décideur,"

#: ../../tutorials/01_portfolio_optimization.ipynb:38
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:40
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:42
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Sampling Variational Quantum Eigensolver (``SamplingVQE``) or the Quantum Approximate Optimization Algorithm (``QAOA``) from `Qiskit Algorithms <https://qiskit.org/ecosystem/algorithms/apidocs/qiskit_algorithms.html#minimum-eigensolvers>`__ to find the optimal solution for a given set of parameters."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:45
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>`__"
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:77
msgid "Define problem instance"
msgstr "Définir d'une instance du problème"

#: ../../tutorials/01_portfolio_optimization.ipynb:79
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "Ici, une instance d'opérateur est créée pour notre hamiltonien. Dans ce cas, les représentations de Pauli proviennent d'un hamiltonien d'Ising traduisant le problème du portefeuille. Nous utilisons un problème aléatoire de portefeuille pour ce bloc-notes. Il est tout à fait possible de l'étendre à l'utilisation de données financières réelles telles qu'illustrées dans ce document : `Chargement et Traitement des séries temporelles de données du marché d'action <11_time_series.ipynb>` __"

#: ../../tutorials/01_portfolio_optimization.ipynb:177
msgid "We define some utility methods to print the results in a nice format."
msgstr "Nous définissons des méthodes utilitaires pour imprimer les résultats dans un format élégant."

#: ../../tutorials/01_portfolio_optimization.ipynb:218
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (en tant que référence classique)"

#: ../../tutorials/01_portfolio_optimization.ipynb:220
msgid "Lets solve the problem. First classically..."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:222
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for 'ising'. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:288
msgid "Solution using ``SamplingVQE``"
msgstr "Solution utilisant ``SamplingVQE``"

#: ../../tutorials/01_portfolio_optimization.ipynb:290
msgid "We can now use the Sampling Variational Quantum Eigensolver (``SamplingVQE``) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "Nous pouvons maintenant utiliser le ``SamplingVQE`` (Sampling Variational Quantum Eigensolver) pour résoudre le problème. Nous préciserons l'optimiseur et la forme variationnelle à utiliser."

#: ../../tutorials/01_portfolio_optimization.ipynb:395
msgid "Solution using ``QAOA``"
msgstr "Solution utilisant ``QAOA``"

#: ../../tutorials/01_portfolio_optimization.ipynb:397
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (``QAOA``). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "Nous montrons également ici un résultat obtenu à l'aide de l'algorithme ``QAOA`` (Quantum Approximate Optimization Algorithm). Il s'agit d'un autre algorithme variationnel qui utilise une forme variationnelle interne qui est créée en fonction du problème."

