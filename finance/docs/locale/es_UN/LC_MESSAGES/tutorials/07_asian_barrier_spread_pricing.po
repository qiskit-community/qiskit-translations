msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-24 14:11+0000\n"
"PO-Revision-Date: 2021-08-24 14:32\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/07_asian_barrier_spread_pricing.po\n"
"X-Crowdin-File-ID: 9696\n"
"Language: es_UN\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "Pricing Asian Barrier Spreads"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:23
msgid "An Asian barrier spread is a combination of 3 different option types, and as such, combines multiple possible features that the Qiskit Finance option pricing framework supports:"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:25
msgid "`Asian option <https://www.investopedia.com/terms/a/asianoption.asp>`__: The payoff depends on the average price over the considered time horizon."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:26
msgid "`Barrier Option <https://www.investopedia.com/terms/b/barrieroption.asp>`__: The payoff is zero if a certain threshold is exceeded at any time within the considered time horizon."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:27
msgid "`(Bull) Spread <https://www.investopedia.com/terms/b/bullspread.asp>`__: The payoff follows a piecewise linear function (depending on the average price) starting at zero, increasing linear, staying constant."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:29
msgid "Suppose strike prices :math:`K_1 < K_2` and time periods :math:`t=1,2`, with corresponding spot prices :math:`(S_1, S_2)` following a given multivariate distribution (e.g. generated by some stochastic process), and a barrier threshold :math:`B>0`. The corresponding payoff function is defined as"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:31
msgid "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"
msgstr "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:40
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option"
msgstr "A continuación, se utiliza un algoritmo cuántico basado en la estimación de amplitud para estimar el rendimiento esperado, es decir, el precio justo antes del descuento, para la opción"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:42
msgid "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"
msgstr "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:44
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "La aproximación de la función objetivo y una introducción general a la fijación de precios de opciones y el análisis de riesgos en computadoras cuánticas se dan en los siguientes artículos:"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:46
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:47
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:79
msgid "Uncertainty Model"
msgstr "Modelo de Incertidumbre"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:81
msgid "We construct a circuit factory to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit factory implements the following:"
msgstr "Construimos una fábrica de circuitos para cargar una distribución aleatoria logarítmica normal multivariante en un estado cuántico en :math:`n` qubits. Para cada dimensión :math:`j = 1,\\ldots,d`, la distribución es truncada a un intervalo dado :math:`[\\text{low}_j, \\text{high}_j]` y discretizada usando una cuadrícula de :math:`2^{n_j}` puntos, donde :math:`n_j` denota el número de qubits usados para representar la dimensión :math:`j`, es decir, :math:`n_1+\\ldots+n_d = n`. El operador unitario correspondiente a la fábrica de circuitos implementa lo siguiente:"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:84
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:86
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "donde :math:`p_{i_1\\ldots i_d}` denota las probabilidades correspondientes a la distribución truncada y discretizada y donde :math:`i_j` se asigna al intervalo correcto usando el mapa afín:"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:88
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:90
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "Por simplicidad, asumimos que ambos precios de las acciones son independientes y están distribuidos de manera idéntica. Esta suposición simplemente simplifica la parametrización a continuación y se puede relajar fácilmente a distribuciones multivariadas más complejas y también correlacionadas. El único supuesto importante para la implementación actual es que la cuadrícula de discretización de las diferentes dimensiones tiene el mismo tamaño de paso."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:175
msgid "Payoff Function"
msgstr "Función de Rendimiento"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:177
msgid "For simplicity, we consider the sum of the spot prices instead of their average. The result can be transformed to the average by just dividing it by 2."
msgstr "Para simplificar, consideramos la suma de los precios al contado en lugar de su promedio. El resultado se puede transformar al promedio simplemente dividiéndolo entre 2."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:179
msgid "The payoff function equals zero as long as the sum of the spot prices :math:`(S_1 + S_2)` is less than the strike price :math:`K_1` and then increases linearly until the sum of the spot prices reaches :math:`K_2`. Then payoff stays constant to :math:`K_2 - K_1` unless any of the two spot prices exceeds the barrier threshold :math:`B`, then the payoff goes immediately down to zero. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_1 + S_2) \\geq K_1` and another comparator/ancilla to capture the case that :math:`(S_1 + S_2) \\geq K_2`. These ancillas are used to control the linear part of the payoff function."
msgstr "La función de rendimiento es igual a cero siempre que la suma de los precios al contado :math:`(S_1 + S_2)` sea menor que el precio de ejercicio :math:`K_1` y luego aumenta linealmente hasta que la suma de los precios al contado alcanza :math:`K_2`. Luego, el rendimiento permanece constante en :math:`K_2 - K_1` a menos que cualquiera de los dos precios al contado exceda el umbral de barrera :math:`B`, entonces el rendimiento baja inmediatamente a cero. La implementación primero usa un operador de suma ponderada para calcular la suma de los precios al contado en un registro ancilla, y luego usa un comparador, que cambia un qubit ancilla de :math:`\\big|0\\rangle` a :math:`\\big|1\\rangle` si :math:`(S_1 + S_2) \\geq K_1` y otro comparador/ancilla para capturar el caso de que :math:`(S_1 + S_2) \\geq K_2`. Estas ancillas se utilizan para controlar la parte lineal de la función de rendimiento."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:182
msgid "In addition, we add another ancilla variable for each time step and use additional comparators to check whether :math:`S_1`, respectively :math:`S_2`, exceed the barrier threshold :math:`B`. The payoff function is only applied if :math:`S_1, S_2 \\leq B`."
msgstr "Además, agregamos otra variable auxiliar para cada paso de tiempo y usamos comparadores adicionales para verificar si :math:`S_1`, respectivamente :math:`S_2`, excede el umbral de barrera :math:`B`. La función de rendimiento solo se aplica si :math:`S_1, S_2 \\leq B`."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:184
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "La parte lineal en sí se aproxima de la siguiente manera. Aprovechamos el hecho de que :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` para pequeños :math:`|y|`. Por lo tanto, para un factor de escala de aproximación dado :math:`c_\\text{approx} \\in [0, 1]` y :math:`x \\in [0, 1]` consideramos"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:186
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:188
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ para pequeños :math:`c_\\text{approx}`."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:190
msgid "We can easily construct an operator that acts as"
msgstr "Podemos construir fácilmente un operador que actúe como"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:192
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:194
msgid "using controlled Y-rotations."
msgstr "utilizando rotaciones Y controladas."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:196
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Finalmente, nos interesa la probabilidad de medir :math:`\\big|1\\rangle` en el último qubit, que corresponde a :math:`\\sin^2(a*x+b)`. Junto con la aproximación anterior, esto permite aproximar los valores de interés. Cuanto más pequeño elijamos :math:`c_\\text{approx}`, mejor será la aproximación. Sin embargo, dado que estamos estimando una propiedad escalada por :math:`c_\\text{approx}`, el número de qubits de evaluación :math:`m` debe ajustarse en consecuencia."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:198
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:200
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "Dado que el operador de suma ponderada (en su implementación actual) solo puede sumar números enteros, necesitamos mapear desde los rangos originales al rango representable para estimar el resultado y revertir este mapeo antes de interpretar el resultado. El mapeo corresponde esencialmente al mapeo afín descrito en el contexto del modelo de incertidumbre anterior."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:585
msgid "Evaluate Expected Payoff"
msgstr "Evaluar el Rendimiento Esperado"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:587
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "Primero verificamos el circuito cuántico simulándolo y analizando la probabilidad resultante para medir el estado :math:`|1\\rangle` en el qubit objetivo."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:693
msgid "Next we use amplitude estimation to estimate the expected payoff. Note that this can take a while since we are simulating a large number of qubits. The way we designed the operator (asian_barrier_spread) implies that the number of actual state qubits is significantly smaller, thus, helping to reduce the overall simulation time a bit."
msgstr ""

