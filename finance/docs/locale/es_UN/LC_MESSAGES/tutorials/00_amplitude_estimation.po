msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-16 17:30+0000\n"
"PO-Revision-Date: 2022-06-16 18:02\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/00_amplitude_estimation.po\n"
"X-Crowdin-File-ID: 9709\n"
"Language: es_UN\n"

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "This page was generated from `docs/tutorials/00_amplitude_estimation.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/00_amplitude_estimation.ipynb`__."

#: ../../tutorials/00_amplitude_estimation.ipynb:9
msgid "Quantum Amplitude Estimation"
msgstr "Estimación de Amplitud Cuántica"

#: ../../tutorials/00_amplitude_estimation.ipynb:11
msgid "Given an operator :math:`\\mathcal{A}` that acts as"
msgstr "Dado un operador :math:`\\mathcal{A}` que actúa como"

#: ../../tutorials/00_amplitude_estimation.ipynb:13
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"
msgstr "\\mathcal{A}|0\\rangle = \\sqrt{1 - a}|\\Psi_0\\rangle + \\sqrt{a}|\\Psi_1\\rangle"

#: ../../tutorials/00_amplitude_estimation.ipynb:18
msgid "Quantum Amplitude Estimation (QAE) is the task of finding an estimate for the amplitude :math:`a` of the state :math:`|\\Psi_1\\rangle`:"
msgstr "La Estimación de Amplitud Cuántica (Quantum Amplitude Estimation, QAE) es la tarea de encontrar una estimación de la amplitud :math:`a` del estado :math:`|\\Psi_1\\rangle`:"

#: ../../tutorials/00_amplitude_estimation.ipynb:20
msgid "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."
msgstr "a = |\\langle\\Psi_1 | \\Psi_1\\rangle|^2."

#: ../../tutorials/00_amplitude_estimation.ipynb:25
msgid "This task has first been investigated by Brassard et al. [1] in 2000 and their algorithm uses a combination of the Grover operator"
msgstr "Esta tarea fue investigada por primera vez por Brassard et al. [1] en 2000 y su algoritmo utiliza una combinación del operador Grover"

#: ../../tutorials/00_amplitude_estimation.ipynb:27
msgid "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"
msgstr "\\mathcal{Q} = \\mathcal{A}\\mathcal{S}_0\\mathcal{A}^\\dagger\\mathcal{S}_{\\Psi_1}"

#: ../../tutorials/00_amplitude_estimation.ipynb:32
msgid "where :math:`\\mathcal{S}_0` and :math:`\\mathcal{S}_{\\Psi_1}` are reflections about the :math:`|0\\rangle` and :math:`|\\Psi_1\\rangle` states, respectively, and phase estimation. However this algorithm, called ``AmplitudeEstimation`` in Qiskit, requires large circuits and is computationally expensive. Therefore, other variants of QAE have been proposed, which we will showcase in this tutorial for a simple example."
msgstr "donde :math:`\\mathcal{S}_0` y :math:`\\mathcal{S}_{\\Psi_1}` son reflexiones sobre los estados :math:`|0\\rangle` y :math:`|\\Psi_1\\rangle`, respectivamente, y la estimación de fase. Sin embargo, este algoritmo, llamado ``AmplitudeEstimation`` en Qiskit, requiere circuitos grandes y es computacionalmente costoso. Por lo tanto, se han propuesto otras variantes de QAE, que mostraremos en este tutorial para un ejemplo simple."

#: ../../tutorials/00_amplitude_estimation.ipynb:34
msgid "In our example, :math:`\\mathcal{A}` describes a Bernoulli random variable with (assumed to be unknown) success probability :math:`p`:"
msgstr "En nuestro ejemplo, :math:`\\mathcal{A}` describe una variable aleatoria de Bernoulli con (se supone que es desconocida) probabilidad de éxito :math:`p`:"

#: ../../tutorials/00_amplitude_estimation.ipynb:36
msgid "\\mathcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."
msgstr "\\mathcal{A}|0\\rangle = \\sqrt{1 - p}|0\\rangle + \\sqrt{p}|1\\rangle."

#: ../../tutorials/00_amplitude_estimation.ipynb:41
msgid "On a quantum computer, we can model this operator with a rotation around the :math:`Y`-axis of a single qubit"
msgstr "En una computadora cuántica, podemos modelar este operador con una rotación alrededor del eje :math:`Y` de un solo qubit"

#: ../../tutorials/00_amplitude_estimation.ipynb:43
msgid "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."
msgstr "\\mathcal{A} = R_Y(\\theta_p), \\theta_p = 2\\sin^{-1}(\\sqrt{p})."

#: ../../tutorials/00_amplitude_estimation.ipynb:48
msgid "The Grover operator for this case is particularly simple"
msgstr "El operador Grover para este caso es particularmente simple"

#: ../../tutorials/00_amplitude_estimation.ipynb:50
msgid "\\mathcal{Q} = R_Y(2\\theta_p),"
msgstr "\\mathcal{Q} = R_Y(2\\theta_p),"

#: ../../tutorials/00_amplitude_estimation.ipynb:55
msgid "whose powers are very easy to calculate: :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`."
msgstr "cuyas potencias son muy fáciles de calcular: :math:`\\mathcal{Q}^k = R_Y(2k\\theta_p)`."

#: ../../tutorials/00_amplitude_estimation.ipynb:66
msgid "We’ll fix the probability we want to estimate to :math:`p = 0.2`."
msgstr "Fijaremos la probabilidad que queremos estimar en :math:`p = 0.2`."

#: ../../tutorials/00_amplitude_estimation.ipynb:87
msgid "Now we can define circuits for :math:`\\mathcal{A}` and :math:`\\mathcal{Q}`."
msgstr "Ahora podemos definir circuitos para :math:`\\mathcal{A}` y :math:`\\mathcal{Q}`."

#: ../../tutorials/00_amplitude_estimation.ipynb:147
msgid "Qiskit’s Amplitude Estimation workflow"
msgstr "Flujo de Trabajo de Estimación de Amplitud de Qiskit"

#: ../../tutorials/00_amplitude_estimation.ipynb:158
msgid "Qiskit implements several QAE algorithms that all derive from the ``AmplitudeEstimator`` interface. In the initializer we specify algorithm specific settings and the ``estimate`` method, which does all the work, takes an ``EstimationProblem`` as input and returns an ``AmplitudeEstimationResult`` object. Since all QAE variants follow the same interface, we can use them all to solve the same problem instance."
msgstr "Qiskit implementa varios algoritmos QAE que se derivan de la interfaz ``AmplitudeEstimator``. En el inicializador especificamos la configuración específica del algoritmo y el método de ``estimate`` que hace todo el trabajo, toma un ``EstimationProblem`` como entrada y devuelve un objeto ``AmplitudeEstimationResult``. Dado que todas las variantes de QAE siguen la misma interfaz, podemos usarlas todas para resolver la misma instancia de problema."

#: ../../tutorials/00_amplitude_estimation.ipynb:160
msgid "Next, we’ll run all different QAE algorithms. To do so, we first define the estimation problem which will contain the :math:`\\mathcal{A}` and :math:`\\mathcal{Q}` operators as well as how to identify the :math:`|\\Psi_1\\rangle` state, which in this simple example is just :math:`|1\\rangle`."
msgstr "A continuación, ejecutaremos todos los diferentes algoritmos de QAE. Para hacerlo, primero definimos el problema de estimación que contendrá los operadores :math:`\\mathcal{A}` y :math:`\\mathcal{Q}` así como también cómo identificar el estado :math:`|\\Psi_1\\rangle`, que en este ejemplo simple es :math:`|1\\rangle`."

#: ../../tutorials/00_amplitude_estimation.ipynb:187
msgid "To execute circuits we’ll use Qiskit’s statevector simulator."
msgstr "Para ejecutar circuitos usaremos el simulador de vector de estado de Qiskit."

#: ../../tutorials/00_amplitude_estimation.ipynb:213
msgid "Canonical AE"
msgstr "AE Canónica"

#: ../../tutorials/00_amplitude_estimation.ipynb:215
msgid "Now let’s solve this with the original QAE implementation by Brassard et al. [1]."
msgstr "Ahora solucionemos esto con la implementación QAE original de Brassard et al. [1]."

#: ../../tutorials/00_amplitude_estimation.ipynb:241
msgid "With the algorithm defined, we can call the ``estimate`` method and provide it with the problem to solve."
msgstr "Con el algoritmo definido, podemos llamar al método ``estimate`` y proporcionarle el problema a resolver."

#: ../../tutorials/00_amplitude_estimation.ipynb:262
msgid "The estimate is available in the ``estimation`` key:"
msgstr "La estimación está disponible en la llave de ``estimation``:"

#: ../../tutorials/00_amplitude_estimation.ipynb:307
msgid "We see that this is not a very good estimate for our target of :math:`p=0.2`! That’s due to the fact the canonical AE is restricted to a discrete grid, specified by the number of evaluation qubits:"
msgstr "¡Vemos que esta no es una estimación muy buena para nuestro objetivo de :math:`p=0.2`! Eso se debe al hecho de que el AE canónico está restringido a una cuadrícula discreta, especificada por el número de qubits de evaluación:"

#: ../../tutorials/00_amplitude_estimation.ipynb:351
msgid "To improve the estimate we can interpolate the measurement probabilities and compute the maximum likelihood estimator that produces this probability distribution:"
msgstr "Para mejorar la estimación, podemos interpolar las probabilidades de medición y calcular el estimador de máxima verosimilitud que produce esta distribución de probabilidad:"

#: ../../tutorials/00_amplitude_estimation.ipynb:396
msgid "We can have a look at the circuit that AE executes:"
msgstr "Podemos echar un vistazo al circuito que se ejecuta:"

#: ../../tutorials/00_amplitude_estimation.ipynb:453
msgid "Iterative Amplitude Estimation"
msgstr "Estimación de Amplitud Iterativa"

#: ../../tutorials/00_amplitude_estimation.ipynb:455
msgid "See [2]."
msgstr "Véase [2]."

#: ../../tutorials/00_amplitude_estimation.ipynb:509
msgid "The circuits here only consist of Grover powers and are much cheaper!"
msgstr "¡Los circuitos de aquí solo consisten en potencias de Grover y son mucho más baratos!"

#: ../../tutorials/00_amplitude_estimation.ipynb:541
msgid "Maximum Likelihood Amplitude Estimation"
msgstr "Estimación de Amplitud de Máxima Verosimilitud"

#: ../../tutorials/00_amplitude_estimation.ipynb:543
msgid "See [3]."
msgstr "Véase [3]."

#: ../../tutorials/00_amplitude_estimation.ipynb:596
msgid "Faster Amplitude Estimation"
msgstr "Estimación de Amplitud Más Rápida"

#: ../../tutorials/00_amplitude_estimation.ipynb:598
msgid "See [4]."
msgstr "Véase [4]."

#: ../../tutorials/00_amplitude_estimation.ipynb:682
msgid "References"
msgstr "Referencias"

#: ../../tutorials/00_amplitude_estimation.ipynb:684
msgid "[1] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"
msgstr "[1] Quantum Amplitude Amplification and Estimation. Brassard et al (2000). https://arxiv.org/abs/quant-ph/0005055"

#: ../../tutorials/00_amplitude_estimation.ipynb:686
msgid "[2] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"
msgstr "[2] Iterative Quantum Amplitude Estimation. Grinko, D., Gacon, J., Zoufal, C., & Woerner, S. (2019). https://arxiv.org/abs/1912.05559"

#: ../../tutorials/00_amplitude_estimation.ipynb:688
msgid "[3] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"
msgstr "[3] Amplitude Estimation without Phase Estimation. Suzuki, Y., Uno, S., Raymond, R., Tanaka, T., Onodera, T., & Yamamoto, N. (2019). https://arxiv.org/abs/1904.10246"

#: ../../tutorials/00_amplitude_estimation.ipynb:690
msgid "[4] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"
msgstr "[4] Faster Amplitude Estimation. K. Nakaji (2020). https://arxiv.org/pdf/2003.02417.pdf"

