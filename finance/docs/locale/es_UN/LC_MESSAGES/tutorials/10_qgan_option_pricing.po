msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-14 09:35+0000\n"
"PO-Revision-Date: 2023-11-14 11:57\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /main/finance/docs/locale/en/LC_MESSAGES/tutorials/10_qgan_option_pricing.po\n"
"X-Crowdin-File-ID: 9702\n"

#: ../../tutorials/10_qgan_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/10_qgan_option_pricing.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/10_qgan_option_pricing.ipynb`__."

#: ../../tutorials/10_qgan_option_pricing.ipynb:9
msgid "Option Pricing with qGANs"
msgstr "Fijación de Precios de Opciones con qGANs"

#: ../../tutorials/10_qgan_option_pricing.ipynb:12
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/10_qgan_option_pricing.ipynb:14
msgid "In this notebook, we discuss how a Quantum Machine Learning Algorithm, namely a quantum Generative Adversarial Network (qGAN), can facilitate the pricing of a European call option. More specifically, a qGAN can be trained such that a quantum circuit models the spot price of an asset underlying a European call option. The resulting model can then be integrated into a Quantum Amplitude Estimation based algorithm to evaluate the expected payoff - see `European Call Option Pricing <03_european_call_option_pricing.ipynb>`__. For further details on learning and loading random distributions by training a qGAN please refer to `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019. <https://www.nature.com/articles/s41534-019-0223-2>`__"
msgstr "En este cuaderno, discutimos cómo un Algoritmo Cuántico de Machine Learning, es decir, una Red Generativa Antagónica cuántica (quantum Generative Adversarial Network, qGAN), puede facilitar la fijación de precios de una opción de compra europea. Más específicamente, una qGAN se puede entrenar de manera que un circuito cuántico modele el precio al contado de un activo subyacente a una opción de compra europea. El modelo resultante se puede integrar en un algoritmo basado en Estimación de Amplitud Cuántica para evaluar la rentabilidad esperada; consulta `Fijación de Precios de Opciones de Compra Europeas <03_european_call_option_pricing.ipynb>`__. Para obtener más detalles sobre el aprendizaje y la carga de distribuciones aleatorias mediante el entrenamiento de una qGAN, consulta `Quantum Generative Adversarial Networks for Learning and Loading Random Distributions. Zoufal, Lucchi, Woerner. 2019. <https://www.nature.com/articles/s41534-019-0223-2>`__"

#: ../../tutorials/10_qgan_option_pricing.ipynb:47
msgid "Uncertainty Model"
msgstr "Modelo de Incertidumbre"

#: ../../tutorials/10_qgan_option_pricing.ipynb:49
msgid "The Black-Scholes model assumes that the spot price at maturity :math:`S_T` for a European call option is log-normally distributed. Thus, we can train a qGAN on samples from a log-normal distribution and use the result as an uncertainty model underlying the option. In the following, we construct a quantum circuit that loads the uncertainty model. The circuit output reads"
msgstr "El modelo Black-Scholes asume que el precio al contado al vencimiento :math:`S_T` para una opción de compra europea tiene una distribución logarítmica normal. Por lo tanto, podemos entrenar una qGAN con muestras de una distribución logarítmica normal y usar el resultado como un modelo de incertidumbre subyacente a la opción. A continuación, construimos un circuito cuántico que carga el modelo de incertidumbre. La salida del circuito dice que"

#: ../../tutorials/10_qgan_option_pricing.ipynb:51
msgid "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"
msgstr "\\big| g_{\\theta}\\rangle = \\sum_{j=0}^{2^n-1}\\sqrt{p_{\\theta}^{j}} \\big| j \\rangle ,\n\n"

#: ../../tutorials/10_qgan_option_pricing.ipynb:53
msgid "where the probabilities :math:`p_{\\theta}^{j}`, for :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, represent a model of the target distribution."
msgstr "donde las probabilidades :math:`p_{\\theta}^{j}`, para :math:`j\\in \\left\\{0, \\ldots, {2^n-1} \\right\\}`, representan un modelo de la distribución objetivo."

#: ../../tutorials/10_qgan_option_pricing.ipynb:94
#: ../../tutorials/10_qgan_option_pricing.ipynb:190
msgid "Evaluate Expected Payoff"
msgstr "Evaluar el Rendimiento Esperado"

#: ../../tutorials/10_qgan_option_pricing.ipynb:96
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function with Quantum Amplitude Estimation."
msgstr "Ahora, el modelo de incertidumbre entrenado se puede utilizar para evaluar el valor esperado de la función de rendimiento de la opción con Estimación de Amplitud Cuántica."

#: ../../tutorials/10_qgan_option_pricing.ipynb:122
msgid "Plot the probability distribution"
msgstr "Graficar la distribución de probabilidad"

#: ../../tutorials/10_qgan_option_pricing.ipynb:124
msgid "Next, we plot the trained probability distribution and, for reasons of comparison, also the target probability distribution."
msgstr "A continuación, graficamos la distribución de probabilidad entrenada y, para poder comparar, también la distribución de probabilidad objetivo."

#: ../../tutorials/10_qgan_option_pricing.ipynb:192
msgid "Now, the trained uncertainty model can be used to evaluate the expectation value of the option's payoff function analytically and with Quantum Amplitude Estimation."
msgstr "Ahora, el modelo de incertidumbre entrenado se puede utilizar para evaluar el valor esperado de la función de rendimiento de la opción de forma analítica y con la Estimación de Amplitud Cuántica."

