msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 15:52+0000\n"
"PO-Revision-Date: 2022-03-28 13:50\n"
"Last-Translator: \n"
"Language-Team: German\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9684\n"
"Language: de_DE\n"

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "This page was generated from `docs/tutorials/01_portfolio_optimization.ipynb`__."
msgstr "Diese Seite wurde aus` docs/tutorials/01_portfolio_optimization.ipynb ` __ generiert."

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "Portfolio Optimization"
msgstr "Portfolio-Optimierung"

#: ../../tutorials/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "Einführung"

#: ../../tutorials/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "Dieses Tutorial zeigt, wie das folgende Problem der Durchschnittvarianz-Portfoliooptimierung für :math:`n` Assets gelöst werden kann:"

#: ../../tutorials/01_portfolio_optimization.ipynb:25
msgid "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"
msgstr "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"

#: ../../tutorials/01_portfolio_optimization.ipynb:32
msgid "where we use the following notation:"
msgstr "in dem folgende Notation verwendet wird:"

#: ../../tutorials/01_portfolio_optimization.ipynb:34
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0, 1\\}^n` bezeichnet den Vektor der binären Entscheidungsvariablen, die angeben, welche Assets ausgewählt (:math:`x[i] = 1`) und welche nicht ausgewählt werden sollen (:math:`x[i] = 0`),"

#: ../../tutorials/01_portfolio_optimization.ipynb:35
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` definiert die erwarteten Erlöse der Assets,"

#: ../../tutorials/01_portfolio_optimization.ipynb:36
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` gibt die Kovarianzen zwischen den Assets an,"

#: ../../tutorials/01_portfolio_optimization.ipynb:37
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` kontrolliert die Risikoaversität des Entscheiders"

#: ../../tutorials/01_portfolio_optimization.ipynb:38
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr "und :math:`B` enthält das Budget, also die Anzahl der ausgewählten Assets aus :math:`n`."

#: ../../tutorials/01_portfolio_optimization.ipynb:40
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr "Wir setzen folgende Vereinfachungen voraus: - alle Assets haben den gleichen Preis (normiert auf 1), - das volle Budget :math:`B` muss ausgegeben werden, also genau :math:`B` Assets müssen ausgewählt werden."

#: ../../tutorials/01_portfolio_optimization.ipynb:42
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Variational Quantum Eigensolver (VQE) or the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal solution for a given set of parameters."
msgstr "Die Bedingung :math:`1^T x = B` wird einem Strafterm :math:`(1^T x - B)^2` zugeordnet, der durch einen Parameter skaliert und von der Zielfunktion abgezogen wird. Das daraus resultierende Problem kann einem Hamiltonian zugeordnet werden, dessen Grundzustand der optimalen Lösung entspricht. Dieses Notizbuch zeigt, wie man mit dem Variational Quantum Eigensolver (VQE) oder dem Quantum Approximate Optimization Algorithmus (QAOA) die optimale Lösung für einen bestimmten Satz von Parametern findet."

#: ../../tutorials/01_portfolio_optimization.ipynb:44
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>`__"
msgstr "Experimente auf realer Quantenhardware für dieses Problem werden beispielsweise in folgender Arbeit diskutiert: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>` __"

#: ../../tutorials/01_portfolio_optimization.ipynb:78
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr "[Optional] Einrichten eines Tokens zur Durchführung des Experiments auf einem echten Quantumgerät"

#: ../../tutorials/01_portfolio_optimization.ipynb:80
msgid "If you would like to run the experiment on a real device, you need to setup your account first."
msgstr "Wenn das Experiment auf einem echten Quantencomputer ausgeführt werden soll, muss zunächst ein Konto eingerichtet werden."

#: ../../tutorials/01_portfolio_optimization.ipynb:82
msgid "Note: If you do not store your token yet, use ``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr "Hinweis: Falls der Token noch nicht gespeichert wurde, benutze zuerst ``IBMQ.save_account('MY_API_TOKEN')`` für die Speicherung."

#: ../../tutorials/01_portfolio_optimization.ipynb:94
msgid "Define problem instance"
msgstr "Probleminstanz definieren"

#: ../../tutorials/01_portfolio_optimization.ipynb:96
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "Hier wird beispielsweise ein Operator für unsere Hamilton-Funktion generiert. In diesem Fall sind die Pauli-Gates von einer Ising Hamilton-Funktion aus dem Problemportfolio übersetzt. Wir benutzen ein zufälliges bestehendes Problem für dieses Notebook. Dieses kann wie hier dargestellt: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__ einfach um reale Finanzdaten erweitert werden"

#: ../../tutorials/01_portfolio_optimization.ipynb:265
msgid "We define some utility methods to print the results in a nice format."
msgstr "Wir definieren einige Hilfsmethoden, um die Ergebnisse in einem schönen Format auzugeben."

#: ../../tutorials/01_portfolio_optimization.ipynb:310
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (als klassischen Verweis)"

#: ../../tutorials/01_portfolio_optimization.ipynb:312
msgid "Lets solve the problem. First classically…"
msgstr "Lasst uns das Problem zunächst klassisch lösen…"

#: ../../tutorials/01_portfolio_optimization.ipynb:314
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for ‘ising’. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:424
msgid "Solution using VQE"
msgstr "Lösung mit VQE"

#: ../../tutorials/01_portfolio_optimization.ipynb:426
msgid "We can now use the Variational Quantum Eigensolver (VQE) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "Wir nutzen den Variational-Quantum-Eigensolver (VQE) um das Problem zu lösen und legen die zu nutzenden Optimierer und variationale Form fest."

#: ../../tutorials/01_portfolio_optimization.ipynb:428
msgid "Note: You can switch to different backends by providing the name of backend."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:546
msgid "Solution using QAOA"
msgstr "Lösung mit QAOA"

#: ../../tutorials/01_portfolio_optimization.ipynb:548
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (QAOA). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "Hier ist eine Lösung unter Verwendung des Quantum Approximate Optimization Algorithm (QAOA) gezeigt. Das ist ein anderer variationale Algorithmus, der eine interne variationale Form benutzt, die auf Basis des Problems erstellt wird."

