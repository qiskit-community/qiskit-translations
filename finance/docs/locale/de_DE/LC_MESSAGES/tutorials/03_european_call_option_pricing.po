msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-14 09:35+0000\n"
"PO-Revision-Date: 2023-11-14 11:19\n"
"Last-Translator: \n"
"Language: de\n"
"Language-Team: German\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: de\n"
"X-Crowdin-File: /main/finance/docs/locale/en/LC_MESSAGES/tutorials/03_european_call_option_pricing.po\n"
"X-Crowdin-File-ID: 9688\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/03_european_call_option_pricing.ipynb`__."
msgstr "Diese Seite wurde aus `docs/tutorials/03_european_call_option_pricing.ipynb`__ generiert."

#: ../../tutorials/03_european_call_option_pricing.ipynb:9
msgid "Pricing European Call Options"
msgstr "Bepreisung von Europäischen Call-Optionen"

#: ../../tutorials/03_european_call_option_pricing.ipynb:21
msgid "Introduction"
msgstr "Einführung"

#: ../../tutorials/03_european_call_option_pricing.ipynb:23
msgid "Suppose a European call option with strike price :math:`K` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "Betrachte eine europäische Call-Option mit Ausübungspreis :math:`K` und einem zugrundeliegendem Asset mit Kassakurs bei Fälligkeit :math:`S_T`, die eine gegebene Zufallsverteilung befolgt. Die Auszahlungsfunktion ist gegeben als:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:25
msgid "\\max\\{S_T - K, 0\\}\n\n"
msgstr "\\max\\{S_T - K, 0\\}\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "Im Folgenden wird ein auf Amplitudenschätzung basierter Quantenalgorithmus verwendet, um die Erwartende Auszahlung, also den beizulegenden Zeitpreis vor der Diskontierung für die Option abzuschätzen:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{S_T - K, 0\\} \\right]\n\n"
msgstr "\\mathbb{E}\\left[ \\max\\{S_T - K, 0\\} \\right]\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "sowie das zugehörige :math:`\\Delta`, d.h. die Ableitung des Optionspreises in Bezug auf den Kassamarktpreis, definiert als:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:33
msgid "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"
msgstr "\\Delta = \\mathbb{P}\\left[S_T \\geq K\\right]"

#: ../../tutorials/03_european_call_option_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "Die Näherung der Objektfunktion und eine allgemeine Einführung zur Kassapreisgestaltung und Risikoanalyse auf Quantencomputern findet man in folgenden Arbeiten:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:40
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:41
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://quantum-journal.org/papers/q-2020-07-06-291/>`__"
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:72
msgid "Uncertainty Model"
msgstr "Modellunsicherheit"

#: ../../tutorials/03_european_call_option_pricing.ipynb:74
msgid "We construct a circuit to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[\\text{low}, \\text{high}]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit implements the following:"
msgstr "Es wird ein Schaltkreis konstruiert, um eine logarithmisch-normalisierte Zufallsverteilung in einen Quantenzustand zu laden. Die Verteilung wird auf ein bestimmtes Intervall :math:`[\\text{low}, \\text{high}]` zugeschnitten und mit :math:`2^n` Rasterpunkten diskretisiert, wobei :math:`n` die Anzahl der verwendeten Qubits bezeichnet. Der Einheitsoperator, der dem Schaltkreis entspricht, implementiert die folgenden Schritte:"

#: ../../tutorials/03_european_call_option_pricing.ipynb:76
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:78
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:80
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"
msgstr "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:153
msgid "Payoff Function"
msgstr "Auszahlungsfunktion"

#: ../../tutorials/03_european_call_option_pricing.ipynb:155
msgid "The payoff function equals zero as long as the spot price at maturity :math:`S_T` is less than the strike price :math:`K` and then increases linearly. The implementation uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\geq K`, and this ancilla is used to control the linear part of the payoff function."
msgstr "Die Auszahlungsfunktion entspricht Null, solange der Kassapreis bei Fälligkeit :math:`S_T` kleiner ist als der Ausfallpreis :math:`K` und erhöht sich im Anschluss linear. Die Implementierung verwendet einen Komparator, das ein Hilfs-Qubit von :math:`\\big|0\\rangle` zu :math:`\\big|1\\rangle` umdreht, wenn :math:`S_T \\geq K`. Dieses Hilfs-Qubit wird verwendet, um den linearen Teil der Auszahlungsfunktion zu steuern."

#: ../../tutorials/03_european_call_option_pricing.ipynb:157
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "Der lineare Teil selbst wird dann wie folgt genähert: Man nutzt die Tatsache, dass :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` für kleine :math:`|y|`. Man betrachtet für einen gegebenen Näherungs-Umskalierungsfaktor :math:`c_\\text{approx} \\in [0, 1]` und :math:`x \\in [0, 1]`"

#: ../../tutorials/03_european_call_option_pricing.ipynb:159
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:161
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ for small :math:`c_\\text{approx}`."

#: ../../tutorials/03_european_call_option_pricing.ipynb:163
msgid "We can easily construct an operator that acts as"
msgstr "Der zugehörige Operator kann einfach bestimmt werden. Der fungiert nämlich als"

#: ../../tutorials/03_european_call_option_pricing.ipynb:165
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/03_european_call_option_pricing.ipynb:167
msgid "using controlled Y-rotations."
msgstr "unter Verwendung kontrollierter Y-Rotationen."

#: ../../tutorials/03_european_call_option_pricing.ipynb:169
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "Schließlich betrachtet man die Wahrscheinlichkeitsmessung im letzten Qubit :math:`\\big|1\\rangle`, welche :math:`\\sin^2(a*x+b)` entspricht. Zusammen mit der obigen Näherung erlaubt dies die Annäherung der Werte, die uns interessieren. Je kleiner :math:`c_\\text{approx}` gewählt wird, desto besser die Näherung. Da jedoch eine durch :math:`c_\\text{approx}` skalierte Eigenschaft geschätzt wird, muss die Anzahl der Bewertungsqubits :math:`m` entsprechend angepasst werden."

#: ../../tutorials/03_european_call_option_pricing.ipynb:171
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"
msgstr "Für Einzelheiten zur Approximation: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://www.nature.com/articles/s41534-019-0130-6>`__"

#: ../../tutorials/03_european_call_option_pricing.ipynb:386
msgid "Evaluate Expected Payoff"
msgstr "Werte die erwartete Auszahlung aus"

#: ../../tutorials/03_european_call_option_pricing.ipynb:576
msgid "Instead of constructing these circuits manually, the Qiskit Finance module offers the ``EuropeanCallPricing`` circuit, which already implements this functionality as a building block."
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:660
msgid "Evaluate Delta"
msgstr ""

#: ../../tutorials/03_european_call_option_pricing.ipynb:662
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use a comparator circuit and an ancilla qubit to identify the cases where :math:`S_T > K`. However, since we are only interested in the probability of this condition being true, we can directly use this ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "Das Delta ist einfacher auszuwerten als die Erwartete Auszahlung. Ähnlich wie zuvor verwenden wir eine Komparatorschaltung und ein Hilfs-Qubit, um die Fälle zu identifizieren, in denen :math:`S_T > K` gilt. Da jedoch nur die Wahrscheinlichkeit der Bedingung von Interesse ist, können wir diesen Hilfs-Qubit direkt als Zielqubit in der Amplitudenschätzung ohne weitere Näherung verwenden."

