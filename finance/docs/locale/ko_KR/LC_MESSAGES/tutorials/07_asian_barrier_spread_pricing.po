msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-15 18:08+0000\n"
"PO-Revision-Date: 2022-01-26 15:49\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/07_asian_barrier_spread_pricing.po\n"
"X-Crowdin-File-ID: 9696\n"
"Language: ko_KR\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__ 에서 생성되었다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "Pricing Asian Barrier Spreads"
msgstr "아시아 통화 가격 하락"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:23
msgid "An Asian barrier spread is a combination of 3 different option types, and as such, combines multiple possible features that the Qiskit Finance option pricing framework supports:"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:25
msgid "`Asian option <https://www.investopedia.com/terms/a/asianoption.asp>`__: The payoff depends on the average price over the considered time horizon."
msgstr "` 아시안 옵션 <https://www.investopedia.com/terms/a/asianoption.asp>` __: 보수는 고려된 투자 시간 지평 동안의 평균 가격에 따라 달라진다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:26
msgid "`Barrier Option <https://www.investopedia.com/terms/b/barrieroption.asp>`__: The payoff is zero if a certain threshold is exceeded at any time within the considered time horizon."
msgstr "`배리어 옵션 <https://www.investopedia.com/terms/b/barrieroption.asp> __: 고려된 투자 시간 지평 내에서 언제라도 특정 임계값을 초과하면 보수는 0이 된다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:27
msgid "`(Bull) Spread <https://www.investopedia.com/terms/b/bullspread.asp>`__: The payoff follows a piecewise linear function (depending on the average price) starting at zero, increasing linear, staying constant."
msgstr "`(볼)스프레드 <https://www.investopedia.com/terms/b/bullspread.asp>`__: 보수는 (평균 가격에 따라) 0에서 시작하여 선형적으로 증가하고 일정하게 유지되는 단편적인 선형 함수를 따른다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:29
msgid "Suppose strike prices :math:`K_1 < K_2` and time periods :math:`t=1,2`, with corresponding spot prices :math:`(S_1, S_2)` following a given multivariate distribution (e.g. generated by some stochastic process), and a barrier threshold :math:`B>0`. The corresponding payoff function is defined as"
msgstr "주어진 다변량 분포 (예를 들어, 일부 확률적 프로세스에 의해 생성됨), 및 배리어 임계값 :math:`B>0` 다음에 대응하는 스팟 가격 :math:`(S_1, S_2)` 을 갖는 파업 가격 :math:`K_1 < K_2` 및 시간 기간 :math:`t=1,2` 을 가정하자. 해당 페이오프 기능은 다음과 같이 정의된다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:31
msgid "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"
msgstr "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:40
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option"
msgstr "다음에서, 진폭 추정에 기초한 양자 알고리즘은 옵션에 대하여 기대수익, 즉 할인 전에 적정 가격을 추정하는데 사용된다"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:42
msgid "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"
msgstr "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:44
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "목표 함수의 근사치와 양자 컴퓨터에 대한 옵션 가격 결정 및 위험 분석에 대한 일반 소개는 다음과 연구자료에서 설명한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:46
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:47
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:80
msgid "Uncertainty Model"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:82
msgid "We construct a circuit factory to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit factory implements the following:"
msgstr "우리는 다변량 로그 정규 랜덤 분포를 :math:`n` 큐 비트의 양자 상태로로드하는 회로 공장을 구성한다. 모든 차원에 대해 :math:`j = 1,\\ldots,d`, 분포는 주어진 간격으로 잘리고 :math:`[\\text{low}_j, \\text{high}_j]`및 :math:`2^{n_j}` 를 사용하여 이산화된다. 그리드 포인트, 여기서 . :math:`j`는 차원을 나타내는 데 사용되는 큐 비트 수를 나타낸다, i.e., :math:`n_1+\\ldots+n_d = n`. 회로 공장에 해당하는 단일 연산자는 다음을 구현한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:85
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:87
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:89
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:91
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "단순하게 하기 위해, 우리는 두 주가가 독립적이고 동일하게 분배된다고 가정한다. 이러한 가정은 단지 파라미터화를 단순화하고, 더 복잡하게 완화될 수 있고 또한 다변량 분포를 상관시킬 수 있다. 현재 구현에 대한 유일한 중요한 가정은 상이한 치수의 분할 그리드가 동일한 스텝 크기를 갖는다는 것이다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:176
msgid "Payoff Function"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:178
msgid "For simplicity, we consider the sum of the spot prices instead of their average. The result can be transformed to the average by just dividing it by 2."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:180
msgid "The payoff function equals zero as long as the sum of the spot prices :math:`(S_1 + S_2)` is less than the strike price :math:`K_1` and then increases linearly until the sum of the spot prices reaches :math:`K_2`. Then payoff stays constant to :math:`K_2 - K_1` unless any of the two spot prices exceeds the barrier threshold :math:`B`, then the payoff goes immediately down to zero. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_1 + S_2) \\geq K_1` and another comparator/ancilla to capture the case that :math:`(S_1 + S_2) \\geq K_2`. These ancillas are used to control the linear part of the payoff function."
msgstr "지불 함수는 현물 가격의 합이 :math:`(S_1 + S_2)`가 행사 가격 :math:`K_1` 보다 적고 현물 가격의 합이 :math:`K_2`.에 도달 할 때까지 선형 적으로 증가하는 한 0이다. 그런 다음 두 현물 가격이 장벽 임계 값을 초과하지 않는 한 :math:`K_2 - K_1`에 대한 보수는 일정하게 유지된다. :math:`B`, 보수는 즉시 0으로 내려간다. :math:`(S_1 + S_2) \\geq K_1`및 다른 비교기 / ancilla는 :math:`(S_1 + S_2) \\geq K_2` 과 같은 경우, 구현은 먼저 가중치 합계 연산자를 사용하여 현물 가격의 합계를 ancilla 레지스터로 계산 한 다음 비교기를 사용하여 ancilla 큐 비트를 :math:`\\big|0\\rangle` 에서 :math:`\\big|1\\rangle` 뒤집는다.. 이 ancilla는 페이오프함수의 선형 부분을 제어하는 ​​데 사용된다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:183
msgid "In addition, we add another ancilla variable for each time step and use additional comparators to check whether :math:`S_1`, respectively :math:`S_2`, exceed the barrier threshold :math:`B`. The payoff function is only applied if :math:`S_1, S_2 \\leq B`."
msgstr "또한 각 시간 단계에 대해 다른 ancilla 변수를 추가하고 다른 비교기를 사용하여 각각 :math:`S_1` 인 :math:`S_2` 가 장볍 임계값 :math:`B` 를 초과하는지 여부를 점검한다. 페이오프 함수는 :math:`S_1, S_2 \\leq B` 일 경우에만 적용된다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:185
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "선형 부품 자체는 다음과 같이 근사화된다. 우리는 작은 :math:`|y|` 에 대해 :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` 이라는 사실을 이용한다. 따라서 주어진 근사 배율 조정 계수 :math:`c_\\text{approx} \\in [0, 1]` 및 :math:`x \\in [0, 1]` 에 대해 고려한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:187
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:189
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:191
msgid "We can easily construct an operator that acts as"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:193
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:195
msgid "using controlled Y-rotations."
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:197
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "결국 우리는 마지막 큐비트에서 :math:`\\big|1\\rangle` 을 측정 할 확률에 관심이 있다. 이는 :math:`\\sin^2(a*x+b)` 에 해당한다. 위의 근사치와 함께이를 통해 관심있는 값을 근사화 할 수 있다. :math:`c_\\text{approx}` 를 작게 선택할수록 근사치가 더 좋다. 그러나 다음으로 :math:`c_\\text{approx}` 에 의해 스케일링 된 속성을 추정하기 때문에 평가 큐 비트 수 :math:`m` 을 적절히 조정해야한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:199
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "근사화에 대한 더 자세한 내용은 `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__ 에서 참조할 수 있다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:201
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "가중치 합계 연산자 (현재 구현의 경우) 는 정수만 합산할 수 있으므로 원래 범위에서 결과를 추정할 수 있는 범위로 맵핑하고 결과를 해석하기 전에 이 맵핑을 반대로 맵핑해야 합니다. 상기 매핑은 본질적으로 상기 불확실성 모델과 관련하여 기술된 아핀 맵핑에 상응한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:598
msgid "Evaluate Expected Payoff"
msgstr ""

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:600
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "우리는 이를 시뮬레이트하고 그 결과 확률을 분석하여 :math:`|1\\rangle` 상태를 객관적으로 측정함으로써 양자 회로를 확인한다."

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:706
msgid "Next we use amplitude estimation to estimate the expected payoff. Note that this can take a while since we are simulating a large number of qubits. The way we designed the operator (asian_barrier_spread) implies that the number of actual state qubits is significantly smaller, thus, helping to reduce the overall simulation time a bit."
msgstr "다음으로 진폭 추정을 사용하여 페이오프를 추정한다. 많은 수의 큐비트를 시뮬레이션하고 있기 때문에 이 작업은 시간이 걸릴 수 있다. 연산자를 설계한 방법(asian_barrier_spread) 은 실제 상태 큐비트 수가 상당히 적다는 것을 의미하므로 전체 시뮬레이션 시간을 약간 줄이는 데 도움이 된다."

