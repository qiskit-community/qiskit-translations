msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-16 17:30+0000\n"
"PO-Revision-Date: 2022-06-16 17:45\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9700\n"
"Language: ko_KR\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:9
msgid "This page was generated from `docs/tutorials/09_credit_risk_analysis.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/09_credit_risk_analysis.ipynb`__ 에서 생성되었다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:9
msgid "Credit Risk Analysis"
msgstr "신용 위험 분석"

#: ../../tutorials/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers:"
msgstr "이 튜토리얼에서는 양자 알고리즘이 신용 위험 분석에 어떻게 사용될 수 있는지를 보여 준다. 더 정확히 말하면, Quantum Amplitude Estimation (QAE) 를 사용하여 고전적인 몬테 카를로 시뮬레이션에 비해 제곱 배 만큼 향상된 성능으로 위험 측정치를 추정할 수 있다. 이 학습서는 다음과 같은 문서를 기반으로 한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:25
msgid "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"
msgstr "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"

#: ../../tutorials/09_credit_risk_analysis.ipynb:26
msgid "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"
msgstr "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"

#: ../../tutorials/09_credit_risk_analysis.ipynb:28
msgid "A general introduction to QAE can be found in the following paper:"
msgstr "QAE에 대한 일반적인 소개는 다음 논문에서 확인할 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:30
msgid "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"
msgstr "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:32
msgid "The structure of the tutorial is as follows:"
msgstr "본 튜토리얼의 구조는 다음과 같다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:34
msgid "`Problem Definition <#Problem-Definition>`__"
msgstr "`문제 정의 <#Problem-Definition>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:35
msgid "`Uncertainty Model <#Uncertainty-Model>`__"
msgstr "`불확실성 모델 <#Uncertainty-Model>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:36
msgid "`Expected Loss <#Expected-Loss>`__"
msgstr "`기대 손실 <#Expected-Loss>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:37
msgid "`Cumulative Distribution Function <#Cumulative-Distribution-Function>`__"
msgstr "`누적 분포 함수 (CDF) <#Cumulative-Distribution-Function>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:38
msgid "`Value at Risk <#Value-at-Risk>`__"
msgstr "`최대예상손실액 (VaR) <#Value-at-Risk>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:39
msgid "`Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr "`조건부 최대예상손실액 (CVaR) <#Conditional-Value-at-Risk>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:67
msgid "Problem Definition"
msgstr "문제 정의"

#: ../../tutorials/09_credit_risk_analysis.ipynb:69
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr "이 튜토리얼에서는 :math:의 K 자산 포트폴리오의 신용 위험을 분석하고자 합니다. 모든 자산 :math:`k` 의 디폴트 확률은 *Gaussian 조건부 독립* 모델을 따르며, 즉 표준 정규 분포에 이어서 잠재적인 무작위 변수 :math:`Z` 로부터 샘플링된 값 :math:`z` 가 제공되며, 자산 :math:`k` 의 디폴트 확률은 다음과 같이 주어진다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:71
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:73
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr "여기서 :math:`F` 는 :math:`Z` 의 누적 분포 함수를 나타내고, :math:`p_k ^ 0` 은 :math:`z = 0` 에 대한 자산 :math:`k` 의 기본 확률이며 :math:`\\rho_k` 는 :math:`Z` 에 대한 자산 :math:`k` 의 기본 확률에 대한 민감도이다. 따라서 :math:`Z` 의 구체적인 실현이 주어지면 개별 기본 이벤트는 서로 독립적 인 것으로 간주된다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:75
msgid "We are interested in analyzing risk measures of the total loss"
msgstr "총 손실의 위험 수치를 분석해 보자."

#: ../../tutorials/09_credit_risk_analysis.ipynb:77
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr "L = \\sum_ {k= 1} ^ K \\lambda_k X_k (Z)\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:79
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr "여기서 :math:`\\lambda_k` 는 자산 :math:`k` 의 *부도시 손실률* 을 의미하며, :math:`Z` 가 주어졌을 때 :math:`X_k(Z)` 는 자산 :math:`k` 의 기본 사건을 나타내는 베르누이 변수를 의미한다. 더 정확히 말하면, 우리는 기대값 :math:`\\mathbb{E}[L]`, :math:`L` 의 최대손실금액 (Value at Risk, VaR), 그리고 :math:`L` 의 Expected Shortfall이라고도 불리는 조건부 최대손실금액 (Conditional Value at Risk, CVaR)에 관심이 있다. 여기서 VaR과 CVaR은 다음과 같이 정의된다:"

#: ../../tutorials/09_credit_risk_analysis.ipynb:81
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:83
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr "신뢰수준 :math:`\\alpha \\in [0, 1]`, 및"

#: ../../tutorials/09_credit_risk_analysis.ipynb:85
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr "\\text{CVaR}_ {\\alpha} (L) = \\mathbb{E}[L \\mid L \\geq \\text{VaR}_ {\\alpha} (L)].\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:87
msgid "For more details on the considered model, see, e.g., `Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca <https://arxiv.org/abs/1412.1183>`__"
msgstr "고려된 모델에 대한 자세한 내용은 예를 들어 `Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca <https://arxiv.org/abs/1412.1183>`__ 를 참조하라"

#: ../../tutorials/09_credit_risk_analysis.ipynb:89
msgid "The problem is defined by the following parameters:"
msgstr "이 문제는 다음 매개 변수로 정의된다:"

#: ../../tutorials/09_credit_risk_analysis.ipynb:91
msgid "number of qubits used to represent :math:`Z`, denoted by :math:`n_z`"
msgstr ":math:`Z` 를 나타내는데 사용되는 큐비트 수는 :math:`n_z` 이다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:92
msgid "truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}`"
msgstr ":math:`z_{\\text{max}}` 로 표시되는 :math:`Z` 의 절단값. 즉, Z는 :math:`\\{-z_{max}, ..., +z_{max}\\}` 에서 :math:`2^{n_z}` 등거리 값을 가진다고 가정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:93
msgid "the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K`"
msgstr "각 자산 :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` 에 대한 채무 불이행 확률"

#: ../../tutorials/09_credit_risk_analysis.ipynb:94
msgid "sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)`"
msgstr ":math:`\\rho_k \\in [0, 1)` 로 표시되는 :math:`Z` 에 대한 채무 불이행 확률의 민감도"

#: ../../tutorials/09_credit_risk_analysis.ipynb:95
msgid "loss given default for asset :math:`k`, denoted by :math:`\\lambda_k`"
msgstr ":math:`\\lambda_k` 로 표시되는 자산:math:`k` 의 부도시 손실률(loss given default)"

#: ../../tutorials/09_credit_risk_analysis.ipynb:96
msgid "confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr "vaR / CVaR :math:`\\alpha \\in [0, 1]` 의 신뢰 구간"

#: ../../tutorials/09_credit_risk_analysis.ipynb:126
msgid "Uncertainty Model"
msgstr "불확실성 모델"

#: ../../tutorials/09_credit_risk_analysis.ipynb:128
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr "이제 불확실성 모델을로드하는 회로를 구성합니다. 이것은 표준 정규 분포에 따라 :math:`Z`를 나타내는 :math:`n_z` 큐비트의 레지스터에 양자 상태를 생성함으로써 달성 할 수 있다. 그런 다음이 상태는 :math:`K` 큐 비트의 두 번째 큐 비트 레지스터에서 단일 큐 비트 Y 회전을 제어하는 ​​데 사용된다. 여기서 큐비트 :math:`k`의 :math:`| 1 \\rangle` 상태는 기본 이벤트를 나타낸다. 자산의 :math:`k`. 결과 양자 상태는 다음과 같이 쓸 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:130
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"

#: ../../tutorials/09_credit_risk_analysis.ipynb:135
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr "여기서 우리는 :math:`z_i `의 :math:`i` 번째 값을 표기하며, :math:'Z`로 표기한다. [Egger2019]"

#: ../../tutorials/09_credit_risk_analysis.ipynb:238
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for"
msgstr "이제 시뮬레이터를 사용하여 :math:`|\\Psi\\rangle` 를 구성하는 회로의 유효성을 검증하고 해당하는 정확한 값을 계산한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:240
msgid "expected loss :math:`\\mathbb{E}[L]`"
msgstr "예상 손실 :math:`\\mathbb{E}[L]`"

#: ../../tutorials/09_credit_risk_analysis.ipynb:241
msgid "PDF and CDF of :math:`L`"
msgstr ":math:`L` 의 PDF 및 CDF"

#: ../../tutorials/09_credit_risk_analysis.ipynb:242
msgid "value at risk :math:`VaR(L)` and corresponding probability"
msgstr "최대예상손실액(Value at risk) :math:`VaR(L)` 과 해당 확률"

#: ../../tutorials/09_credit_risk_analysis.ipynb:243
msgid "conditional value at risk :math:`CVaR(L)`"
msgstr "조건부 위험 가치(Conditional value at risk) :math:`CVaR(L)`"

#: ../../tutorials/09_credit_risk_analysis.ipynb:471
msgid "Expected Loss"
msgstr "예상 손실"

#: ../../tutorials/09_credit_risk_analysis.ipynb:473
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr "예상 손실을 추정하기 위해 먼저 가중치 합계 연산자를 적용하여 총 손실에 대한 개별 손실을 합산합니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:475
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr "* mathcal{S}: |x_1, ..., x_K \\rangle_K | 0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K | \\lambda_1x_1+...+\\lambda_K x_K\\rangle_{n_S}.\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:477
msgid "The required number of qubits to represent the result is given by"
msgstr "결과를 표시하는 데 필요한 필수 비트 수는 다음과 같이 제공됩니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:479
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:481
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr "일단 양자 레지스터에서 전체 손실 분포를 갖게 되면, [Woerner2019] 에 설명된 기술을 사용하여 총 손실 :math:`L \\in\\{0, ..., 2 ^{n_s}-1\\}` 을 운영자에 의해 목표 금액의 진폭으로 맵핑할 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:483
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"

#: ../../tutorials/09_credit_risk_analysis.ipynb:488
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "이것은 예상 손실을 평가하기 위해 진폭 추정을 실행할 수 있도록 한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:541
msgid "Create the state preparation circuit:"
msgstr "상태 준비 회로를 작성한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:686
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr "QAE를 사용하여 예상 손실을 추정하기 전에, 이를 직접 시뮬레이션하고 :math:`|1\\rangle` 상태에 있는 목표의 확률을 분석하여 목표 함수를 나타내는 양자 회로의 유효성을 확인한다. 즉, 값 QAE가 결과적으로 근사하게 된다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:760
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "다음은 QAE를 실행하여 고전적인 Monte Carlo 시뮬레이션을 능가하는 2차 속도로 예상 손실을 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:830
msgid "Cumulative Distribution Function"
msgstr "누적 분포 함수"

#: ../../tutorials/09_credit_risk_analysis.ipynb:832
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr "예상 손실 대신 (고전적 기법을 사용하여 효과적으로 평가할 수 있음) 이제 손실의 누적 분포 함수 (CDF) 를 추정합니다. 이는 기본적으로 기본 자산의 가능한 조합을 모두 평가하거나 Monte Carlo 시뮬레이션에 있는 많은 고전적 샘플을 평가하는 것을 포함한다. QAE에 기반한 알고리즘은 미래에 이러한 분석을 상당히 향상시킬 수 있는 잠재력을 갖고 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:834
msgid "To estimate the CDF, i.e., the probability :math:`\\mathbb{P}[L \\leq x]`, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr "CDF, 즉 확률 :math:`\\mathbb{P}[L \\leq x]` 을 추정하려면, 다시 :math:`\\mathcal{S}` 를 적용하여 전체 손실을 계산하고, 주어진 값 :math:`x` 에 대해 다음 역할을 하는 비교기를 적용한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:836
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"

#: ../../tutorials/09_credit_risk_analysis.ipynb:844
msgid "The resulting quantum state can be written as"
msgstr "결과적인 양자 상태는 다음과 같이 기록될 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:846
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|0\\rangle,"
msgstr " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|0\\rangle,"

#: ../../tutorials/09_credit_risk_analysis.ipynb:851
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr "여기서 우리는 불확실성 모델의 세부사항들을 제시하는 대신에 합산된 손실 값들 및 대응하는 확률들을 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:853
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr "CDF(\\ :math:`x`) 는 목적 큐비트와 QAE 에서 :math:`|1\\rangle` 을 측정하는 확률과 동일하며, QAE는 그것을 추정하는데 직접 사용될 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:985
#: ../../tutorials/09_credit_risk_analysis.ipynb:1651
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr "다시, 양자회로의 유효성을 검증하기 위해 양자 시뮬레이션을 먼저 사용합니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1166
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "그 다음에 QAE를 실행하여 주어진 :math:`x` 에 대한 CDF를 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1232
msgid "Value at Risk"
msgstr "최대예상손실액 (Value at Risk)"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1234
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr "다음에는 이중 검색 및 QAE를 사용하여 위험에 있는 값을 추정하기 위해 CDF를 효율적으로 평가합니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1467
msgid "Conditional Value at Risk"
msgstr "최대예상손실액 (Value at Risk) 조건부"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1469
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr "마지막으로, CVaR (VaR 보다 크거나 같은 손실 조건의 예상된 값)을 계산한다. 이렇게 하기 위해서, 이에 의해 제공되는, 총 손실 :math:`L` 에 의존하여, 단편적인 선형 목표 함수 :math:`f(L)` 를 평가한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1471
msgid "f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr "f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1479
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr "이를 정상화하기 위해, 본 발명자들은 결과적으로 예상되는 값을 VaR 확률로, 즉, 다음과 같이 분할해야 한다.i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1726
msgid "Next we run QAE to estimate the CVaR."
msgstr "다음에는 QAE를 실행하여 CVS를 추정한다."

