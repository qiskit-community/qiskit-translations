msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-07-22 16:47+0000\n"
"PO-Revision-Date: 2021-07-24 15:01\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/09_credit_risk_analysis.po\n"
"X-Crowdin-File-ID: 9700\n"
"Language: ko_KR\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:9
msgid "This page was generated from `docs/tutorials/09_credit_risk_analysis.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/09_credit_risk_analysis.ipynb`__ 에서 생성되었다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:9
msgid "Credit Risk Analysis"
msgstr "신용 위험 분석"

#: ../../tutorials/09_credit_risk_analysis.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/09_credit_risk_analysis.ipynb:23
msgid "This tutorial shows how quantum algorithms can be used for credit risk analysis. More precisely, how Quantum Amplitude Estimation (QAE) can be used to estimate risk measures with a quadratic speed-up over classical Monte Carlo simulation. The tutorial is based on the following papers:"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:25
msgid "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"
msgstr "`Quantum Risk Analysis. Stefan Woerner, Daniel J. Egger. <https://www.nature.com/articles/s41534-019-0130-6>`__ [Woerner2019]"

#: ../../tutorials/09_credit_risk_analysis.ipynb:26
msgid "`Credit Risk Analysis using Quantum Computers. Egger et al. (2019) <https://arxiv.org/abs/1907.03044>`__ [Egger2019]"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:28
msgid "A general introduction to QAE can be found in the following paper:"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:30
msgid "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"
msgstr "`Quantum Amplitude Amplification and Estimation. Gilles Brassard et al. <http://arxiv.org/abs/quant-ph/0005055>`__"

#: ../../tutorials/09_credit_risk_analysis.ipynb:32
msgid "The structure of the tutorial is as follows:"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:34
msgid "`Problem Definition <#Problem-Definition>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:35
msgid "`Uncertainty Model <#Uncertainty-Model>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:36
msgid "`Expected Loss <#Expected-Loss>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:37
msgid "`Cumulative Distribution Function <#Cumulative-Distribution-Function>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:38
msgid "`Value at Risk <#Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:39
msgid "`Conditional Value at Risk <#Conditional-Value-at-Risk>`__"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:67
msgid "Problem Definition"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:69
msgid "In this tutorial we want to analyze the credit risk of a portfolio of :math:`K` assets. The default probability of every asset :math:`k` follows a *Gaussian Conditional Independence* model, i.e., given a value :math:`z` sampled from a latent random variable :math:`Z` following a standard normal distribution, the default probability of asset :math:`k` is given by"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:71
msgid "p_k(z) = F\\left( \\frac{F^{-1}(p_k^0) - \\sqrt{\\rho_k}z}{\\sqrt{1 - \\rho_k}} \\right)\n\n"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:73
msgid "where :math:`F` denotes the cumulative distribution function of :math:`Z`, :math:`p_k^0` is the default probability of asset :math:`k` for :math:`z=0` and :math:`\\rho_k` is the sensitivity of the default probability of asset :math:`k` with respect to :math:`Z`. Thus, given a concrete realization of :math:`Z` the individual default events are assumed to be independent from each other."
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:75
msgid "We are interested in analyzing risk measures of the total loss"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:77
msgid "L = \\sum_{k=1}^K \\lambda_k X_k(Z)\n\n"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:79
msgid "where :math:`\\lambda_k` denotes the *loss given default* of asset :math:`k`, and given :math:`Z`, :math:`X_k(Z)` denotes a Bernoulli variable representing the default event of asset :math:`k`. More precisely, we are interested in the expected value :math:`\\mathbb{E}[L]`, the Value at Risk (VaR) of :math:`L` and the Conditional Value at Risk of :math:`L` (also called Expected Shortfall). Where VaR and CVaR are defined as"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:81
msgid "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"
msgstr "\\text{VaR}_{\\alpha}(L) = \\inf \\{ x \\mid \\mathbb{P}[L <= x] \\geq 1 - \\alpha \\}\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:83
msgid "with confidence level :math:`\\alpha \\in [0, 1]`, and"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:85
msgid "\\text{CVaR}_{\\alpha}(L) = \\mathbb{E}[ L \\mid L \\geq \\text{VaR}_{\\alpha}(L) ].\n\n"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:87
msgid "For more details on the considered model, see, e.g., `Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca <https://arxiv.org/abs/1412.1183>`__"
msgstr "고려된 모델에 대한 자세한 내용은 예를 들어 `Regulatory Capital Modeling for Credit Risk. Marek Rutkowski, Silvio Tarca <https://arxiv.org/abs/1412.1183>`__ 를 참조하라"

#: ../../tutorials/09_credit_risk_analysis.ipynb:89
msgid "The problem is defined by the following parameters: - number of qubits used to represent :math:`Z`, denoted by :math:`n_z` - truncation value for :math:`Z`, denoted by :math:`z_{\\text{max}}`, i.e., Z is assumed to take :math:`2^{n_z}` equidistant values in :math:`\\{-z_{max}, ..., +z_{max}\\}` - the base default probabilities for each asset :math:`p_0^k \\in (0, 1)`, :math:`k=1, ..., K` - sensitivities of the default probabilities with respect to :math:`Z`, denoted by :math:`\\rho_k \\in [0, 1)` - loss given default for asset :math:`k`, denoted by :math:`\\lambda_k` - confidence level for VaR / CVaR :math:`\\alpha \\in [0, 1]`."
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:120
msgid "Uncertainty Model"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:122
msgid "We now construct a circuit that loads the uncertainty model. This can be achieved by creating a quantum state in a register of :math:`n_z` qubits that represents :math:`Z` following a standard normal distribution. This state is then used to control single qubit Y-rotations on a second qubit register of :math:`K` qubits, where a :math:`|1\\rangle` state of qubit :math:`k` represents the default event of asset :math:`k`. The resulting quantum state can be written as"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:124
msgid " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"
msgstr " |\\Psi\\rangle = \\sum_{i=0}^{2^{n_z}-1} \\sqrt{p_z^i} |z_i \\rangle \\bigotimes_{k=1}^K\n"
"\\left( \\sqrt{1 - p_k(z_i)}|0\\rangle + \\sqrt{p_k(z_i)}|1\\rangle\\right),"

#: ../../tutorials/09_credit_risk_analysis.ipynb:129
msgid "where we denote by :math:`z_i` the :math:`i`-th value of the discretized and truncated :math:`Z` [Egger2019]."
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:218
msgid "We now use the simulator to validate the circuit that constructs :math:`|\\Psi\\rangle` and compute the corresponding exact values for - expected loss :math:`\\mathbb{E}[L]` - PDF and CDF of :math:`L` - value at risk :math:`VaR(L)` and corresponding probability - conditional value at risk :math:`CVaR(L)`"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:435
msgid "Expected Loss"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:437
msgid "To estimate the expected loss, we first apply a weighted sum operator to sum up individual losses to total loss:"
msgstr ""

#: ../../tutorials/09_credit_risk_analysis.ipynb:439
msgid "\\mathcal{S}: |x_1, ..., x_K \\rangle_K |0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K |\\lambda_1x_1 + ... + \\lambda_K x_K\\rangle_{n_S}.\n\n"
msgstr "* mathcal{S}: |x_1, ..., x_K \\rangle_K | 0\\rangle_{n_S} \\mapsto |x_1, ..., x_K \\rangle_K | \\lambda_1x_1+...+\\lambda_K x_K\\rangle_{n_S}.\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:441
msgid "The required number of qubits to represent the result is given by"
msgstr "결과를 표시하는 데 필요한 필수 비트 수는 다음과 같이 제공됩니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:443
msgid "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"
msgstr "n_s = \\lfloor \\log_2( \\lambda_1 + ... + \\lambda_K ) \\rfloor + 1.\n\n"

#: ../../tutorials/09_credit_risk_analysis.ipynb:445
msgid "Once we have the total loss distribution in a quantum register, we can use the techniques described in [Woerner2019] to map a total loss :math:`L \\in \\{0, ..., 2^{n_s}-1\\}` to the amplitude of an objective qubit by an operator"
msgstr "일단 양자 레지스터에서 전체 손실 분포를 갖게 되면, [Woerner2019] 에 설명된 기술을 사용하여 총 손실 :math:`L \\in\\{0, ..., 2 ^{n_s}-1\\}` 을 운영자에 의해 목표 금액의 진폭으로 맵핑할 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:447
msgid " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"
msgstr " | L \\rangle_{n_s}|0\\rangle \\mapsto\n"
"| L \\rangle_{n_s} \\left( \\sqrt{1 - L/(2^{n_s}-1)}|0\\rangle + \\sqrt{L/(2^{n_s}-1)}|1\\rangle \\right),"

#: ../../tutorials/09_credit_risk_analysis.ipynb:452
msgid "which allows to run amplitude estimation to evaluate the expected loss."
msgstr "이것은 예상 손실을 평가하기 위해 진폭 추정을 실행할 수 있도록 한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:504
msgid "Create the state preparation circuit:"
msgstr "상태 준비 회로를 작성한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:628
msgid "Before we use QAE to estimate the expected loss, we validate the quantum circuit representing the objective function by just simulating it directly and analyzing the probability of the objective qubit being in the :math:`|1\\rangle` state, i.e., the value QAE will eventually approximate."
msgstr "QAE를 사용하여 예상 손실을 추정하기 전에, 이를 직접 시뮬레이션하고 :math:`| 1\\r각도` 상태에 있는 목표의 확률을 분석하여 목표 함수를 나타내는 양자 회로의 유효성을 확인한다. 즉, 값 QAE가 결과적으로 근사하게 된다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:692
msgid "Next we run QAE to estimate the expected loss with a quadratic speed-up over classical Monte Carlo simulation."
msgstr "다음은 QAE를 실행하여 고전적인 Monte Carlo 시뮬레이션을 능가하는 2차 속도로 예상 손실을 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:753
msgid "Cumulative Distribution Function"
msgstr "누적 분포 함수"

#: ../../tutorials/09_credit_risk_analysis.ipynb:755
msgid "Instead of the expected loss (which could also be estimated efficiently using classical techniques) we now estimate the cumulative distribution function (CDF) of the loss. Classically, this either involves evaluating all the possible combinations of defaulting assets, or many classical samples in a Monte Carlo simulation. Algorithms based on QAE have the potential to significantly speed up this analysis in the future."
msgstr "예상 손실 대신 (고전적 기법을 사용하여 효과적으로 평가할 수 있음) 이제 손실의 누적 분포 함수 (CDF) 를 추정합니다. 이는 기본적으로 기본 자산의 가능한 조합을 모두 평가하거나 Monte Carlo 시뮬레이션에 있는 많은 고전적 샘플을 평가하는 것을 포함한다. QAE에 기반한 알고리즘은 미래에 이러한 분석을 상당히 향상시킬 수 있는 잠재력을 갖고 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:757
msgid "To estimate the CDF, i.e., the probability :math:`\\mathbb{P}[L \\leq x]`, we again apply :math:`\\mathcal{S}` to compute the total loss, and then apply a comparator that for a given value :math:`x` acts as"
msgstr "CDF, 즉 확률 :math:`\\mathbb{P}[L \\leq x]` 을 추정하려면, 다시 :math:`\\mathcal{S}` 를 적용하여 전체 손실을 계산하고, 주어진 값 :math:`x` 에 대해 다음 역할을 하는 비교기를 적용한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:759
msgid " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"
msgstr " \\mathcal{C}: |L\\rangle_n|0> \\mapsto\n"
"\\begin{cases}\n"
"|L\\rangle_n|1> & \\text{if}\\quad L \\leq x \\\\\n"
"|L\\rangle_n|0> & \\text{if}\\quad L > x.\n"
"\\end{cases}"

#: ../../tutorials/09_credit_risk_analysis.ipynb:767
msgid "The resulting quantum state can be written as"
msgstr "결과적인 양자 상태는 다음과 같이 기록될 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:769
msgid " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"
msgstr " \\sum_{L = 0}^{x} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle +\n"
"\\sum_{L = x+1}^{2^{n_s}-1} \\sqrt{p_{L}}|L\\rangle_{n_s}|1\\rangle,"

#: ../../tutorials/09_credit_risk_analysis.ipynb:774
msgid "where we directly assume the summed up loss values and corresponding probabilities instead of presenting the details of the uncertainty model."
msgstr "여기서 우리는 불확실성 모델의 세부사항들을 제시하는 대신에 합산된 손실 값들 및 대응하는 확률들을 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:776
msgid "The CDF(\\ :math:`x`) equals the probability of measuring :math:`|1\\rangle` in the objective qubit and QAE can be directly used to estimate it."
msgstr "CDF(\\ :math:`x`) 는 객관적인 큐비트와 QAE 에서 :math:`|1\\rangle` 을 측정하는 확률과 동일하며, QAE는 그것을 추정하는데 직접 사용될 수 있다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:894
#: ../../tutorials/09_credit_risk_analysis.ipynb:1460
msgid "Again, we first use quantum simulation to validate the quantum circuit."
msgstr "다시, 양자회로의 유효성을 검증하기 위해 양자 시뮬레이션을 먼저 사용합니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1045
msgid "Next we run QAE to estimate the CDF for a given :math:`x`."
msgstr "그 다음에 QAE를 실행하여 주어진 :math:'x' 에 대한 CDF를 추정한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1105
msgid "Value at Risk"
msgstr "최대예상손실액 (Value at Risk)"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1107
msgid "In the following we use a bisection search and QAE to efficiently evaluate the CDF to estimate the value at risk."
msgstr "다음에는 이중 검색 및 QAE를 사용하여 위험에 있는 값을 추정하기 위해 CDF를 효율적으로 평가합니다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1296
msgid "Conditional Value at Risk"
msgstr "최대예상손실액 (Value at Risk) 조건부"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1298
msgid "Last, we compute the CVaR, i.e. the expected value of the loss conditional to it being larger than or equal to the VaR. To do so, we evaluate a piecewise linear objective function :math:`f(L)`, dependent on the total loss :math:`L`, that is given by"
msgstr "마지막으로, CVaR (VaR 보다 크거나 같은 손실 조건의 예상된 값)을 계산한다. 이렇게 하기 위해서, 이에 의해 제공되는, 총 손실 :math:'L' 에 의존하여, 단편적인 선형 목표 함수 ( :math:'f (L)') 를 평가한다."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1300
msgid "f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"
msgstr "f(L) = \\begin{cases}\n"
"0 & \\text{if}\\quad L \\leq VaR \\\\\n"
"L & \\text{if}\\quad L > VaR.\n"
"\\end{cases}"

#: ../../tutorials/09_credit_risk_analysis.ipynb:1308
msgid "To normalize, we have to divide the resulting expected value by the VaR-probability, i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."
msgstr "이를 정상화하기 위해, 본 발명자들은 결과적으로 예상되는 값을 VaR 확률로, 즉, 다음과 같이 분할해야 한다.i.e. \\ :math:`\\mathbb{P}[L \\leq VaR]`."

#: ../../tutorials/09_credit_risk_analysis.ipynb:1526
msgid "Next we run QAE to estimate the CVaR."
msgstr "다음에는 QAE를 실행하여 CVS를 추정한다."

