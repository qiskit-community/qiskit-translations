msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-14 09:35+0000\n"
"PO-Revision-Date: 2023-11-14 11:29\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/finance/docs/locale/en/LC_MESSAGES/tutorials/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9684\n"

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "This page was generated from `docs/tutorials/01_portfolio_optimization.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/01_portfolio_optimization.ipynb`__ 에서 생성되었다."

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "Portfolio Optimization"
msgstr "포트폴리오 최적화"

#: ../../tutorials/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "이 학습서는 :math:`n` 개의 자산들에 대한 평균-분산 포트폴리오 최적화 문제를 해결하는 방법을 보여준다."

#: ../../tutorials/01_portfolio_optimization.ipynb:25
msgid "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"
msgstr "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"

#: ../../tutorials/01_portfolio_optimization.ipynb:32
msgid "where we use the following notation:"
msgstr "여기서 다음과 같은 표기법을 사용한다:"

#: ../../tutorials/01_portfolio_optimization.ipynb:34
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0, 1\\}^n` 은 어떤 자산을 선택하거나 (:math:`x[i] = 1`) 선택하지 않는 (:math:`x[i] = 0`) 것을 나타내는 이진 의사 결정 변수의 벡터를 표기한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:35
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` 은 자산들의 예상 수익을 정의한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:36
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` 는 자산들 사이의 공분산(covariance)을 나타낸다."

#: ../../tutorials/01_portfolio_optimization.ipynb:37
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` 은 의사 결정자의 리스크 선호를 제어한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:38
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:40
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:42
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Sampling Variational Quantum Eigensolver (``SamplingVQE``) or the Quantum Approximate Optimization Algorithm (``QAOA``) from `Qiskit Algorithms <https://qiskit.org/ecosystem/algorithms/apidocs/qiskit_algorithms.html#minimum-eigensolvers>`__ to find the optimal solution for a given set of parameters."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:45
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>`__"
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:77
msgid "Define problem instance"
msgstr "문제 인스턴스 정의"

#: ../../tutorials/01_portfolio_optimization.ipynb:79
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "여기에 해밀토니안에 대한 Operator 인스턴스가 생성되었다. 이 경우, Pauli들은 포트폴리오 문제에 해당하는 이징 해밀토니안(Ising Hamiltonian)에서부터 나왔다. 이 노트북에선 무작위 포트폴리오를 사용한다. 실제 재무 데이터를 사용하여 이를 확장하는 것은 `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__ 에서 볼수 있다."

#: ../../tutorials/01_portfolio_optimization.ipynb:177
msgid "We define some utility methods to print the results in a nice format."
msgstr "결과를 적절한 형태로 보여주고자 몇 가지 유용한 메서드를 정의한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:218
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (고전적 참고치로서)"

#: ../../tutorials/01_portfolio_optimization.ipynb:220
msgid "Lets solve the problem. First classically..."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:222
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for 'ising'. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:288
msgid "Solution using ``SamplingVQE``"
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:290
msgid "We can now use the Sampling Variational Quantum Eigensolver (``SamplingVQE``) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:395
msgid "Solution using ``QAOA``"
msgstr ""

#: ../../tutorials/01_portfolio_optimization.ipynb:397
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (``QAOA``). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr ""

