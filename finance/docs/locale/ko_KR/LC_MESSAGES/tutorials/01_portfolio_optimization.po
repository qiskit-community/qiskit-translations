msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 15:52+0000\n"
"PO-Revision-Date: 2022-02-14 16:39\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/01_portfolio_optimization.po\n"
"X-Crowdin-File-ID: 9684\n"
"Language: ko_KR\n"

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "This page was generated from `docs/tutorials/01_portfolio_optimization.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/01_portfolio_optimization.ipynb`__ 에서 생성되었다."

#: ../../tutorials/01_portfolio_optimization.ipynb:9
msgid "Portfolio Optimization"
msgstr "포트폴리오 최적화"

#: ../../tutorials/01_portfolio_optimization.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/01_portfolio_optimization.ipynb:23
msgid "This tutorial shows how to solve the following mean-variance portfolio optimization problem for :math:`n` assets:"
msgstr "이 학습서는 :math:`n` 개의 자산들에 대한 평균-분산 포트폴리오 최적화 문제를 해결하는 방법을 보여준다."

#: ../../tutorials/01_portfolio_optimization.ipynb:25
msgid "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"
msgstr "\\begin{aligned}\n"
"\\min_{x \\in \\{0, 1\\}^n}  q x^T \\Sigma x - \\mu^T x\\\\\n"
"\\text{subject to: } 1^T x = B\n"
"\\end{aligned}"

#: ../../tutorials/01_portfolio_optimization.ipynb:32
msgid "where we use the following notation:"
msgstr "여기서 다음과 같은 표기법을 사용한다:"

#: ../../tutorials/01_portfolio_optimization.ipynb:34
msgid ":math:`x \\in \\{0, 1\\}^n` denotes the vector of binary decision variables, which indicate which assets to pick (:math:`x[i] = 1`) and which not to pick (:math:`x[i] = 0`),"
msgstr ":math:`x \\in \\{0, 1\\}^n` 은 어떤 자산을 선택하거나 (:math:`x[i] = 1`) 선택하지 않는 (:math:`x[i] = 0`) 것을 나타내는 이진 의사 결정 변수의 벡터를 표기한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:35
msgid ":math:`\\mu \\in \\mathbb{R}^n` defines the expected returns for the assets,"
msgstr ":math:`\\mu \\in \\mathbb{R}^n` 은 자산들의 예상 수익을 정의한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:36
msgid ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` specifies the covariances between the assets,"
msgstr ":math:`\\Sigma \\in \\mathbb{R}^{n \\times n}` 는 자산들 사이의 공분산(covariance)을 나타낸다."

#: ../../tutorials/01_portfolio_optimization.ipynb:37
msgid ":math:`q > 0` controls the risk appetite of the decision maker,"
msgstr ":math:`q > 0` 은 의사 결정자의 리스크 선호를 제어한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:38
msgid "and :math:`B` denotes the budget, i.e. the number of assets to be selected out of :math:`n`."
msgstr "그리고 :math:`B` 는 예산, 즉 :math:`n` 중에서 선택할 수 있는 자산의 수를 의미한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:40
msgid "We assume the following simplifications: - all assets have the same price (normalized to 1), - the full budget :math:`B` has to be spent, i.e. one has to select exactly :math:`B` assets."
msgstr "다음과 같은 단순화를 가정한다: - 모든 자산은 동일한 가격을 가지고 있다 (1로 정규화됨), - 전체 예산 :math:`B` 를 소비해야 한다. 즉, 정확히 :math:`B` 개의 자산을 선택해야 한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:42
msgid "The equality constraint :math:`1^T x = B` is mapped to a penalty term :math:`(1^T x - B)^2` which is scaled by a parameter and subtracted from the objective function. The resulting problem can be mapped to a Hamiltonian whose ground state corresponds to the optimal solution. This notebook shows how to use the Variational Quantum Eigensolver (VQE) or the Quantum Approximate Optimization Algorithm (QAOA) to find the optimal solution for a given set of parameters."
msgstr "주어진 등식 :math:`1^T x = B` 는 매개변수에 의해 스케일링되고 목적 함수로부터 차감되는 페널티 항 :math:`(1^T x - B)^2` 에 매핑된다. 여기서 도출되는 문제는 바닥 상태가 최적의 해에 해당하는 해밀토니안에 매핑될 수 있다. 이 지침서는 VQE (Variational Quantum Eigensolver) 또는 QAOA (Quantum Approximate Optimization Algorithm)를 사용하여 지정된 매개변수 집합에 대한 최적의 솔루션을 찾는 방법을 보여준다."

#: ../../tutorials/01_portfolio_optimization.ipynb:44
msgid "Experiments on real quantum hardware for this problem are reported for instance in the following paper: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>`__"
msgstr "이 문제에 대해 실제 양자 하드웨어에서 행한 실험들은 다음의 논문에서 발표되었다: `Improving Variational Quantum Optimization using CVaR. Barkoutsos et al. 2019. <https://arxiv.org/abs/1907.04769>`__"

#: ../../tutorials/01_portfolio_optimization.ipynb:78
msgid "[Optional] Setup token to run the experiment on a real device"
msgstr "[Optional] 실제 장치에서 실험을 실행하기 위한 토큰 설정"

#: ../../tutorials/01_portfolio_optimization.ipynb:80
msgid "If you would like to run the experiment on a real device, you need to setup your account first."
msgstr "실제 장치에서 실험을 실행하려면 먼저 계정을 설정해야 한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:82
msgid "Note: If you do not store your token yet, use ``IBMQ.save_account('MY_API_TOKEN')`` to store it first."
msgstr "참고: 아직 토큰을 저장하지 않은 경우 ``IBMQ.save_account('MY_API_TOKEN')`` 을 사용하여 저장한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:94
msgid "Define problem instance"
msgstr "문제 인스턴스 정의"

#: ../../tutorials/01_portfolio_optimization.ipynb:96
msgid "Here an Operator instance is created for our Hamiltonian. In this case the paulis are from an Ising Hamiltonian translated from the portfolio problem. We use a random portfolio problem for this notebook. It is straight-forward to extend this to using real financial data as illustrated here: `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__"
msgstr "여기에 해밀토니안에 대한 Operator 인스턴스가 생성되었다. 이 경우, Pauli들은 포트폴리오 문제에 해당하는 이징 해밀토니안(Ising Hamiltonian)에서부터 나왔다. 이 노트북에선 무작위 포트폴리오를 사용한다. 실제 재무 데이터를 사용하여 이를 확장하는 것은 `Loading and Processing Stock-Market Time-Series Data <11_time_series.ipynb>`__ 에서 볼수 있다."

#: ../../tutorials/01_portfolio_optimization.ipynb:265
msgid "We define some utility methods to print the results in a nice format."
msgstr "결과를 적절한 형태로 보여주고자 몇 가지 유용한 메서드를 정의한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:310
msgid "NumPyMinimumEigensolver (as a classical reference)"
msgstr "NumPyMinimumEigensolver (고전적 참고치로서)"

#: ../../tutorials/01_portfolio_optimization.ipynb:312
msgid "Lets solve the problem. First classically…"
msgstr "문제를 풀어보자. 먼저 고전적으로…"

#: ../../tutorials/01_portfolio_optimization.ipynb:314
msgid "We can now use the Operator we built above without regard to the specifics of how it was created. We set the algorithm for the NumPyMinimumEigensolver so we can have a classical reference. The problem is set for ‘ising’. Backend is not required since this is computed classically not using quantum computation. The result is returned as a dictionary."
msgstr "어떻게 만들어졌는지와는 상관 없이 위에서 구축한 Operator를 사용할 수 있다. NumPyMinimumEigensolver에 대한 알고리즘을 설정하여 고전적 참고치를 얻을 수 있다. 문제는 ‘ising’으로 정해져 있다. 이것은 양자 연산을 사용하지 않고 고전적으로 계산되기 때문에 백엔드가 필요하지 않다. 결과는 사전 타입으로 반환된다."

#: ../../tutorials/01_portfolio_optimization.ipynb:424
msgid "Solution using VQE"
msgstr "VQE를 사용한 해"

#: ../../tutorials/01_portfolio_optimization.ipynb:426
msgid "We can now use the Variational Quantum Eigensolver (VQE) to solve the problem. We will specify the optimizer and variational form to be used."
msgstr "이제 VQE를 사용하여 문제를 푼다. 사용할 최적자 및 변분 형태를 지정한다."

#: ../../tutorials/01_portfolio_optimization.ipynb:428
msgid "Note: You can switch to different backends by providing the name of backend."
msgstr "참고: 백엔드의 이름을 설정하여 다른 백엔드로 전환할 수 있다."

#: ../../tutorials/01_portfolio_optimization.ipynb:546
msgid "Solution using QAOA"
msgstr "QAOA를 사용한 해"

#: ../../tutorials/01_portfolio_optimization.ipynb:548
msgid "We also show here a result using the Quantum Approximate Optimization Algorithm (QAOA). This is another variational algorithm and it uses an internal variational form that is created based on the problem."
msgstr "QAOA를 사용한 결과 또한 보여 준다. 이는 다른 변분 알고리즘이며 문제를 기반으로 만들어지는 내부 변분 형태를 사용한다."

