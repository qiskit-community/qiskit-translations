msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-24 21:49+0000\n"
"PO-Revision-Date: 2022-05-19 18:56\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/05_bull_spread_pricing.po\n"
"X-Crowdin-File-ID: 9692\n"
"Language: ko_KR\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/05_bull_spread_pricing.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/05_bull_spread_pricing.ipynb`__ 에서 생성되었다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:9
msgid "Pricing Bull Spreads"
msgstr "가격 하락 확산"

#: ../../tutorials/05_bull_spread_pricing.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/05_bull_spread_pricing.ipynb:23
msgid "Suppose a `bull spread <http://www.theoptionsguide.com/bull-call-spread.aspx>`__ with strike prices :math:`K_1 < K_2` and an underlying asset whose spot price at maturity :math:`S_T` follows a given random distribution. The corresponding payoff function is defined as:"
msgstr "`불 스프레드 <http://www.theoptionsguide.com/bull-call-spread.aspx>`__ 의 행사 가격이 :math:`K_1 < K_2` 이며 만기시 현물가격이 :math:`S_T` 인 기준자산이 주어진 랜덤분포를 따른다고 가정해보자. 그러면 이에 상응하는 보수(payoff) 함수는 다음과 같이 정의할 수 있다:"

#: ../../tutorials/05_bull_spread_pricing.ipynb:25
msgid "\\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\}\n\n"
msgstr "\\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\}\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "다음에서, 진폭 추정에 기초한 양자 알고리즘은 옵션에 대하여 예상되는 지불가격, 즉 할인 전에 적정 가격을 추정하는데 사용된다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\} \\right]\n\n"
msgstr "\\mathbb{E}\\left[ \\min\\{\\max\\{S_T - K_1, 0\\}, K_2 - K_1\\} \\right]\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:31
msgid "as well as the corresponding :math:`\\Delta`, i.e., the derivative of the option price with respect to the spot price, defined as:"
msgstr "뿐만 아니라 대응하는  :math:`\\Delta`, 즉, 현물 가격에 대한 옵션 가격의 미분은 다음과 같이 정의된다:"

#: ../../tutorials/05_bull_spread_pricing.ipynb:33
msgid "\\Delta = \\mathbb{P}\\left[K_1 \\leq S \\leq K_2\\right]"
msgstr "\\Delta = \\mathbb{P}\\left[K_1 \\leq S \\leq K_2\\right]"

#: ../../tutorials/05_bull_spread_pricing.ipynb:38
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "목표 함수의 근사값과 양자 컴퓨터의 옵션 가격 결정 및 위험 분석에 대한 일반적인 소개는 다음의 연구 자료에서 설명한다:"

#: ../../tutorials/05_bull_spread_pricing.ipynb:40
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"

#: ../../tutorials/05_bull_spread_pricing.ipynb:41
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"

#: ../../tutorials/05_bull_spread_pricing.ipynb:72
msgid "Uncertainty Model"
msgstr "불확실성 모델"

#: ../../tutorials/05_bull_spread_pricing.ipynb:74
msgid "We construct a circuit to load a log-normal random distribution into a quantum state. The distribution is truncated to a given interval :math:`[\\text{low}, \\text{high}]` and discretized using :math:`2^n` grid points, where :math:`n` denotes the number of qubits used. The unitary operator corresponding to the circuit implements the following:"
msgstr "로그 정규 랜덤 분포를 양자 상태로 로딩하기 위해 회로를 구성한다. 분포는 주어진 간격 :math:`[\\text{low}, \\text{high}]` 으로 잘리고 :math:`2^n` 격자점을 이용해 이산화되어 있으며, 여기서 :math:`n` 은 사용된 큐비트의 수를 나타낸다. 회로에 해당하는 유니타리 연산자는 다음을 구현한다:"

#: ../../tutorials/05_bull_spread_pricing.ipynb:76
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i=0}^{2^n-1} \\sqrt{p_i}\\big|i\\rangle_{n},\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:78
msgid "where :math:`p_i` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i` is mapped to the right interval using the affine map:"
msgstr "여기서 :math:`p_i` 는 절단되고 분리된 분포에 대응하는 확률을 나타내며, :math:`i` 는 아핀 맵을 사용하여 우측 간격으로 맵핑된다:"

#: ../../tutorials/05_bull_spread_pricing.ipynb:80
msgid "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"
msgstr "\\{0, \\ldots, 2^n-1\\} \\ni i \\mapsto \\frac{\\text{high} - \\text{low}}{2^n - 1} * i + \\text{low} \\in [\\text{low}, \\text{high}].\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:161
msgid "Payoff Function"
msgstr "페이오프 함수"

#: ../../tutorials/05_bull_spread_pricing.ipynb:163
msgid "The payoff function equals zero as long as the spot price at maturity :math:`S_T` is less than the strike price :math:`K_1`, then increases linearly, and is bounded by :math:`K_2`. The implementation uses two comparators, that flip an ancilla qubit each from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`S_T \\geq K_1` and :math:`S_T \\leq K_2`, and these ancillas are used to control the linear part of the payoff function."
msgstr "만기 시 현물 가격의 합 :math:`(S_T^1 + S_T^2)`가 행사가 :math:`K` 보다 적고 선형 적으로 증가하는 한 지불 함수는 0이다. 만약 :math:`(S_T^1 + S_T^2) \\geq K` 라면, 구현에서는 먼저 가중치 합산 연산자를 사용하여 현물 가격의 합계를 ancilla 레지스터로 계산 한 다음 비교기를 사용하여 ancilla 큐비트를 :math:`\\big|0\\rangle` 에서 :math:`\\big|1\\rangle` 로 뒤집는다.이 ancilla는 페이오프 함수의 선형 부분을 제어하는 ​​데 사용된다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:165
msgid "The linear part itself is then approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "선형 부분 자체는 다음과 같이 근사화된다. 우리는 작은 :math:`|y|` 에 대해 :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` 이라는 사실을 이용한다. 따라서 근사 배율 조정 계수 :math:`c_\\text{approx} \\in [0, 1]` 와 :math:`x \\in [0, 1]` 가 주어졌을 때 우리는 다음을"

#: ../../tutorials/05_bull_spread_pricing.ipynb:167
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:169
msgid "for small :math:`c_\\text{approx}`."
msgstr "for small :math:`c_\\text{approx}`."

#: ../../tutorials/05_bull_spread_pricing.ipynb:171
msgid "We can easily construct an operator that acts as"
msgstr "다음과 같이 작동하는 연산자를 쉽게 구성할 수 있다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:173
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/05_bull_spread_pricing.ipynb:175
msgid "using controlled Y-rotations."
msgstr "제어된 Y-회전을 이용하자."

#: ../../tutorials/05_bull_spread_pricing.ipynb:177
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "결국 우리는 마지막 큐비트에서 :math:`\\big|1\\rangle` 을 측정 할 확률에 관심이 있다. 이는 :math:`\\sin^2(a*x+b)` 에 해당한다. 위의 근사치와 함께이를 통해 관심있는 값을 근사화 할 수 있다. :math:`c_\\text{approx}` 를 작게 선택할수록 근사치가 더 좋다. 그러나 다음으로 :math:`c_\\text{approx}` 에 의해 스케일링 된 속성을 추정하기 때문에 평가 큐비트 수 :math:`m` 을 적절히 조정해야한다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:179
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "근사화에 대한 더 자세한 내용은 `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__ 에서 참조할 수 있다."

#: ../../tutorials/05_bull_spread_pricing.ipynb:305
msgid "Evaluate Expected Payoff"
msgstr "기대수익 (Expected Payoff) 평가"

#: ../../tutorials/05_bull_spread_pricing.ipynb:390
msgid "Evaluate Delta"
msgstr "델타 (Delta) 평가"

#: ../../tutorials/05_bull_spread_pricing.ipynb:392
msgid "The Delta is a bit simpler to evaluate than the expected payoff. Similarly to the expected payoff, we use comparator circuits and ancilla qubits to identify the cases where :math:`K_1 \\leq S_T \\leq K_2`. However, since we are only interested in the probability of this condition being true, we can directly use an ancilla qubit as the objective qubit in amplitude estimation without any further approximation."
msgstr "델타는 예상 급여보다 평가할 수 있는 비트입니다. 예상되는 페이오프와 마찬가지로, 본 발명자들은 :math:`K_1 \\leq S_T \\leq K_2` 를 식별하기 위해 비교기 회로 (비교기 회로와 ancilla qubits) 를 사용한다."

