msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-19 22:32+0000\n"
"PO-Revision-Date: 2023-02-19 22:53\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/06_basket_option_pricing.po\n"
"X-Crowdin-File-ID: 9694\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/06_basket_option_pricing.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/06_basket_option_pricing.ipynb`__ 에서 생성되었다."

#: ../../tutorials/06_basket_option_pricing.ipynb:9
msgid "Pricing Basket Options"
msgstr "가격 책정 바스켓 옵션"

#: ../../tutorials/06_basket_option_pricing.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/06_basket_option_pricing.ipynb:23
msgid "Suppose a basket option with strike price :math:`K` and two underlying assets whose spot price at maturity :math:`S_T^1`, :math:`S_T^2` follow given random distributions. The corresponding payoff function is defined as:"
msgstr "파업가격 :math:`K` 와 성숙도 :math:`S_T^1` 에서 현물 가격이 :math:`S_T^2` 의 현물 가격을 가지고 있는 2개의 기본 자산을 갖는 바구니 옵션이 있다고 가정해 보자. 상응하는 페이로드 함수는 다음과 같이 정의된다."

#: ../../tutorials/06_basket_option_pricing.ipynb:25
msgid "\\max\\{S_T^1 + S_T^2 - K, 0\\}\n\n"
msgstr "\\max\\{S_T^1 + S_T^2 - K, 0\\}\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:27
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option:"
msgstr "다음에서, 진폭 추정에 기초한 양자 알고리즘은 옵션에 대하여 예상되는 지불가격, 즉 할인 전에 적정 가격을 추정하는데 사용된다."

#: ../../tutorials/06_basket_option_pricing.ipynb:29
msgid "\\mathbb{E}\\left[ \\max\\{S_T^1 + S_T^2 - K, 0\\} \\right].\n\n"
msgstr "\\mathbb{E}\\left[ \\max\\{S_T^1 + S_T^2 - K, 0\\} \\right].\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:31
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "목표 함수의 근사치와 양자 컴퓨터에 대한 옵션 가격 결정 및 위험 분석에 대한 일반 소개는 다음과 연구자료에서 설명한다."

#: ../../tutorials/06_basket_option_pricing.ipynb:33
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"

#: ../../tutorials/06_basket_option_pricing.ipynb:34
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"

#: ../../tutorials/06_basket_option_pricing.ipynb:66
msgid "Uncertainty Model"
msgstr "불확실성 모델"

#: ../../tutorials/06_basket_option_pricing.ipynb:68
msgid "We construct a circuit to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit implements the following:"
msgstr "다변량 로그 정규 무작위 분포를 :math:`n` 큐비트를 가지는 양자 상태로 로드하는 회로를 구성한다. 각 차원 :math:`j = 1,\\ldots,d` 에 대해 분포는 주어진 간격 :math:`[\\text{low}_j, \\text{high}_j]` 으로 잘리고 :math:`2^{n_j}` 격자점을 이용해 이산화되어 있으며, 여기서 :math:`n_j` 는 :math:`j` 차원을 나타내는데 사용되는 큐비트 수를 나타낸다. 즉 :math:`n_1+\\ldots+n_d = n` 이다. 회로에 해당하는 유니타리 연산자는 다음을 구현한다:"

#: ../../tutorials/06_basket_option_pricing.ipynb:70
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:72
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "여기서 :math:`p_{i_1\\ldots i_d}` 는 절단되고 분리된 분포에 대응하는 확률을 나타내고, 여기서 :math:`i_j` 는 에린 맵을 사용하여 우측 구간에 매핑된다."

#: ../../tutorials/06_basket_option_pricing.ipynb:74
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:76
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "단순하게 하기 위해, 우리는 두 주가가 독립적이고 동일하게 분배된다고 가정한다. 이러한 가정은 단지 파라미터화를 단순화하고, 더 복잡하게 완화될 수 있고 또한 다변량 분포를 상관시킬 수 있다. 현재 구현에 대한 유일한 중요한 가정은 상이한 치수의 분할 그리드가 동일한 스텝 크기를 갖는다는 것이다."

#: ../../tutorials/06_basket_option_pricing.ipynb:161
msgid "Payoff Function"
msgstr "페이오프 함수"

#: ../../tutorials/06_basket_option_pricing.ipynb:163
msgid "The payoff function equals zero as long as the sum of the spot prices at maturity :math:`(S_T^1 + S_T^2)` is less than the strike price :math:`K` and then increases linearly. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_T^1 + S_T^2) \\geq K`. This ancilla is used to control the linear part of the payoff function."
msgstr "만기시 현물 가격의 합 :math:`(S_T^1 + S_T^2)` 가 행사가 :math:`K` 보다 적고 선형 적으로 증가하는 한 지불 함수는 0이다. 만약 :math:`(S_T^1 + S_T^2) \\geq K` 라면, 구현에서는 먼저 가중치 합산 연산자를 사용하여 현물 가격의 합계를 ancilla 레지스터로 계산 한 다음 비교기를 사용하여 ancilla 큐 비트를 :math:`\\big|0\\rangle` 에서 :math:`\\big|1\\rangle` 로 뒤집는다.이 ancilla는 페이오프함수의 선형 부분을 제어하는 ​​데 사용된다."

#: ../../tutorials/06_basket_option_pricing.ipynb:166
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation rescaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "선형 부품 자체는 다음과 같이 근사화된다. 우리는 작은 :math:`|y|` 에 대해 :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` 이라는 사실을 이용한다. 따라서 주어진 근사 배율 조정 계수 :math:`c_\\text{approx} \\in [0, 1]` 및 :math:`x \\in [0, 1]` 에 대해 고려한다."

#: ../../tutorials/06_basket_option_pricing.ipynb:168
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:170
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "\\ 작은 :math:`c_\\text{approx}` 값에 대해 고려할 수 있다."

#: ../../tutorials/06_basket_option_pricing.ipynb:172
msgid "We can easily construct an operator that acts as"
msgstr "다음과 같이 작동하는 연산자를 쉽게 구성할 수 있다."

#: ../../tutorials/06_basket_option_pricing.ipynb:174
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/06_basket_option_pricing.ipynb:176
msgid "using controlled Y-rotations."
msgstr "제어된 Y-회전을 이용하자."

#: ../../tutorials/06_basket_option_pricing.ipynb:178
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "결국 우리는 마지막 큐비트에서 :math:`\\big|1\\rangle` 을 측정 할 확률에 관심이 있다. 이는 :math:`\\sin^2(a*x+b)` 에 해당한다. 위의 근사치와 함께이를 통해 관심있는 값을 근사화 할 수 있다. :math:`c_\\text{approx}` 를 작게 선택할수록 근사치가 더 좋다. 그러나 다음으로 :math:`c_\\text{approx}` 에 의해 스케일링 된 속성을 추정하기 때문에 평가 큐비트 수 :math:`m` 을 적절히 조정해야한다."

#: ../../tutorials/06_basket_option_pricing.ipynb:180
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "근사화에 대한 더 자세한 내용은 `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__ 에서 참조할 수 있다."

#: ../../tutorials/06_basket_option_pricing.ipynb:182
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "가중치 합계 연산자 (현재 구현의 경우) 는 정수만 합산할 수 있으므로 원래 범위에서 결과를 추정할 수 있는 범위로 맵핑하고 결과를 해석하기 전에 이 맵핑을 반대로 맵핑해야 합니다. 상기 매핑은 본질적으로 상기 불확실성 모델과 관련하여 기술된 아핀 맵핑에 상응한다."

#: ../../tutorials/06_basket_option_pricing.ipynb:436
msgid "Evaluate Expected Payoff"
msgstr "기대수익 (Expected Payoff) 평가"

#: ../../tutorials/06_basket_option_pricing.ipynb:438
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "우리는 이를 시뮬레이트하고 그 결과 확률을 분석하여 :math:`|1\\rangle` 상태를 객관적으로 측정함으로써 양자 회로를 확인한다."

#: ../../tutorials/06_basket_option_pricing.ipynb:559
msgid "Next we use amplitude estimation to estimate the expected payoff."
msgstr "다음으로 기대 보수(payoff) 를 예측하기 위해 진폭 추정을 사용한다."

