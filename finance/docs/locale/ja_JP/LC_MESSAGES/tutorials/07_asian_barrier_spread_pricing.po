msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 23:26+0000\n"
"PO-Revision-Date: 2022-11-10 23:43\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/finance/docs/locale/en/LC_MESSAGES/tutorials/07_asian_barrier_spread_pricing.po\n"
"X-Crowdin-File-ID: 9696\n"
"Language: ja_JP\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "This page was generated from `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__."
msgstr "このページは `docs/tutorials/07_asian_barrier_spread_pricing.ipynb`__ から生成されました。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:9
msgid "Pricing Asian Barrier Spreads"
msgstr "アジアン・バリア・スプレッドの価格推定"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:23
msgid "An Asian barrier spread is a combination of 3 different option types, and as such, combines multiple possible features that the Qiskit Finance option pricing framework supports:"
msgstr "アジアン・バリア・スプレッドは３つの異なるタイプを組み合わせたオプションで、それゆえに Qiskit Finance オプションの価格設定フレームワークがサポートする複数の機能を組み合わせています。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:25
msgid "`Asian option <https://www.investopedia.com/terms/a/asianoption.asp>`__: The payoff depends on the average price over the considered time horizon."
msgstr "`アジアン・オプション <https://www.investopedia.com/terms/a/asianoption.asp>`__: ペイオフが対象期間の平均価格によって変化します。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:26
msgid "`Barrier Option <https://www.investopedia.com/terms/b/barrieroption.asp>`__: The payoff is zero if a certain threshold is exceeded at any time within the considered time horizon."
msgstr "`バリア・オプション <https://www.investopedia.com/terms/b/barrieroption.asp>`__: ペイオフが対象期間中に閾値を超えるとゼロになります。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:27
msgid "`(Bull) Spread <https://www.investopedia.com/terms/b/bullspread.asp>`__: The payoff follows a piecewise linear function (depending on the average price) starting at zero, increasing linear, staying constant."
msgstr "`(ブル)・スプレッド <https://www.investopedia.com/terms/b/bullspread.asp>`__: ペイオフはゼロから始まり、線形に増加し、一定に維持される、(平均価格に依存した) 区分線形関数に従います。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:29
msgid "Suppose strike prices :math:`K_1 < K_2` and time periods :math:`t=1,2`, with corresponding spot prices :math:`(S_1, S_2)` following a given multivariate distribution (e.g. generated by some stochastic process), and a barrier threshold :math:`B>0`. The corresponding payoff function is defined as"
msgstr "権利行使価格 :math:`K_1 < K_2` と期間 :math:`t=1,2` が，与えられた多変量分布 (確率過程によって生成されたものなど) に従うスポット価格 :math:`(S_1, S_2)` とバリア閾値 :math:`B>0` に対応するとします。対応するペイオフ関数は次のように定義されます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:31
msgid "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"
msgstr "P(S_1, S_2) =\n"
"\\begin{cases}\n"
"\\min\\left\\{\\max\\left\\{\\frac{1}{2}(S_1 + S_2) - K_1, 0\\right\\}, K_2 - K_1\\right\\}, & \\text{ if } S_1, S_2 \\leq B \\\\\n"
"0, & \\text{otherwise.}\n"
"\\end{cases}"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:40
msgid "In the following, a quantum algorithm based on amplitude estimation is used to estimate the expected payoff, i.e., the fair price before discounting, for the option"
msgstr "以下では、振幅推定に基づく量子アルゴリズムを使用して、期待されるペイオフ、すなわちオプションの割引前の適正価格を見積もります。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:42
msgid "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"
msgstr "\\mathbb{E}\\left[ P(S_1, S_2) \\right].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:44
msgid "The approximation of the objective function and a general introduction to option pricing and risk analysis on quantum computers are given in the following papers:"
msgstr "目的関数の近似と量子コンピューターによる一般的なオプション価格設定とリスク分析は、以下の論文で紹介されています。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:46
msgid "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "`Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:47
msgid "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"
msgstr "`Option Pricing using Quantum Computers. Stamatopoulos et al. 2019. <https://arxiv.org/abs/1905.02666>`__"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:80
msgid "Uncertainty Model"
msgstr "不確実性モデル"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:82
msgid "We construct a circuit to load a multivariate log-normal random distribution into a quantum state on :math:`n` qubits. For every dimension :math:`j = 1,\\ldots,d`, the distribution is truncated to a given interval :math:`[\\text{low}_j, \\text{high}_j]` and discretized using :math:`2^{n_j}` grid points, where :math:`n_j` denotes the number of qubits used to represent dimension :math:`j`, i.e., :math:`n_1+\\ldots+n_d = n`. The unitary operator corresponding to the circuit implements the following:"
msgstr "多変量対数正規ランダム分布を :math:`n` 量子ビットの量子状態にロードする回路を構築します。 すべての次元 :math:`j = 1,\\ldots,d` について、分布は指定された区間 :math:`[\\text{low}_j, \\text{high}_j]` に切り捨てられ、 :math:`2^{n_j}` グリッドポイントを使用して離散化されます。ここで、 :math:`n_j` は次元 :math:`j` を表すために使用される量子ビットの数を示します。つまり :math:`n_1+\\ldots+n_d = n` です。 回路に対応するユニタリー演算子は、以下のように実装されます:"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:84
msgid "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"
msgstr "\\big|0\\rangle_{n} \\mapsto \\big|\\psi\\rangle_{n} = \\sum_{i_1,\\ldots,i_d} \\sqrt{p_{i_1\\ldots i_d}}\\big|i_1\\rangle_{n_1}\\ldots\\big|i_d\\rangle_{n_d},\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:86
msgid "where :math:`p_{i_1\\ldots i_d}` denote the probabilities corresponding to the truncated and discretized distribution and where :math:`i_j` is mapped to the right interval using the affine map:"
msgstr "ここで :math:`p_{i_1\\ldots i_d}` は、切り捨てられ離散化された分布を与える確率を表し、 :math:`i_j` はアフィン写像で正しい区間にマップされます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:88
msgid "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"
msgstr "\\{0, \\ldots, 2^{n_j}-1\\} \\ni i_j \\mapsto \\frac{\\text{high}_j - \\text{low}_j}{2^{n_j} - 1} * i_j + \\text{low}_j \\in [\\text{low}_j, \\text{high}_j].\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:90
msgid "For simplicity, we assume both stock prices are independent and identically distributed. This assumption just simplifies the parametrization below and can be easily relaxed to more complex and also correlated multivariate distributions. The only important assumption for the current implementation is that the discretization grid of the different dimensions has the same step size."
msgstr "簡単のため、株価はどちらも独立同分布とします。この仮定は以下のパラメーター化を単純にするだけのものであり、より複雑で相関のある多変量分布に容易に緩和することができます。現在の実装で唯一の重要な仮定は、異なる次元の離散化グリッドが同じステップサイズであるということです。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:175
msgid "Payoff Function"
msgstr "ペイオフ関数"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:177
msgid "For simplicity, we consider the sum of the spot prices instead of their average. The result can be transformed to the average by just dividing it by 2."
msgstr "簡単のため、平均の代わりにスポット価格の合計を考えます。結果を２で割るだけで平均にできます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:179
msgid "The payoff function equals zero as long as the sum of the spot prices :math:`(S_1 + S_2)` is less than the strike price :math:`K_1` and then increases linearly until the sum of the spot prices reaches :math:`K_2`. Then payoff stays constant to :math:`K_2 - K_1` unless any of the two spot prices exceeds the barrier threshold :math:`B`, then the payoff goes immediately down to zero. The implementation first uses a weighted sum operator to compute the sum of the spot prices into an ancilla register, and then uses a comparator, that flips an ancilla qubit from :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` if :math:`(S_1 + S_2) \\geq K_1` and another comparator/ancilla to capture the case that :math:`(S_1 + S_2) \\geq K_2`. These ancillas are used to control the linear part of the payoff function."
msgstr "ペイオフ関数は、スポット価格合計 :math:`(S_1 + S_2)` が権利行使価格 :math:`K_1` よりも小さい間ゼロであり、その後スポット価格合計が :math:`K_2` になるまで線形に増加します。そしてペイオフはどちらかのスポット価格がバリアしきい値 :math:`B` を超えるまで、一定 :math:`K_2 - K_1` ですが、その後ペイオフは直ちにゼロに落ちます。実装では初め加重合計演算子を使って補助量子ビットにスポット価格合計を計算しますが、それからコンパレーターを使って、もし :math:`(S_1 + S_2) \\geq K_1` ならば補助量子ビットを :math:`\\big|0\\rangle` to :math:`\\big|1\\rangle` にフリップします。そしてもう一つのコンパレーターと補助量子ビットを :math:`(S_1 + S_2) \\geq K_2` のケースを記録するためにフリップします。これらの補助量子ビットはペイオフ関数の線形部分をコントロールするために使われます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:182
msgid "In addition, we add another ancilla variable for each time step and use additional comparators to check whether :math:`S_1`, respectively :math:`S_2`, exceed the barrier threshold :math:`B`. The payoff function is only applied if :math:`S_1, S_2 \\leq B`."
msgstr "それに加え、別の補助量子ビットを時間ステップごとに追加します。そして追加のコンパレーターで :math:`S_1` とそれぞれの :math:`S_2` がバリアしきい値 :math:`B` を超えていないかチェックします。ペイオフ関数は :math:`S_1, S_2 \\leq B` の場合のみ適用されます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:184
msgid "The linear part itself is approximated as follows. We exploit the fact that :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` for small :math:`|y|`. Thus, for a given approximation scaling factor :math:`c_\\text{approx} \\in [0, 1]` and :math:`x \\in [0, 1]` we consider"
msgstr "線形部分自体は次のように近似されます。 小さい :math:`|y|` に対して :math:`\\sin^2(y + \\pi/4) \\approx y + 1/2` という事実を利用します。 したがって、与えられた近似スケーリング係数 :math:`c_\\text{approx} \\in [0, 1]` および :math:`x \\in [0, 1]` に対して、次を考えます。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:186
msgid "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"
msgstr "\\sin^2( \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + \\pi/4) \\approx \\pi/2 * c_\\text{approx} * ( x - 1/2 ) + 1/2\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:188
msgid "\\ for small :math:`c_\\text{approx}`."
msgstr "ここで、:math:`c_\\text{approx}` は十分小さいものとします。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:190
msgid "We can easily construct an operator that acts as"
msgstr "次のように機能する演算子を簡単に構築できます"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:192
msgid "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"
msgstr "\\big|x\\rangle \\big|0\\rangle \\mapsto \\big|x\\rangle \\left( \\cos(a*x+b) \\big|0\\rangle + \\sin(a*x+b) \\big|1\\rangle \\right),\n\n"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:194
msgid "using controlled Y-rotations."
msgstr "制御 Y-回転を用います。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:196
msgid "Eventually, we are interested in the probability of measuring :math:`\\big|1\\rangle` in the last qubit, which corresponds to :math:`\\sin^2(a*x+b)`. Together with the approximation above, this allows to approximate the values of interest. The smaller we choose :math:`c_\\text{approx}`, the better the approximation. However, since we are then estimating a property scaled by :math:`c_\\text{approx}`, the number of evaluation qubits :math:`m` needs to be adjusted accordingly."
msgstr "最終的には、 :math:`\\sin^2(a*x+b)` に対応する最後の量子ビットで :math:`\\big|1\\rangle` を測定する確率に関心があります。 上記の近似と合わせて、対象の値を近似できます。小さい :math:`c_\\text{approx}` を選択するほど、近似は良くなります。 ただし、 :math:`c_\\text{approx}` でスケーリングされたプロパティを推定しているため、それに応じて評価量子ビットの数 :math:`m` を調整する必要があります。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:198
msgid "For more details on the approximation, we refer to: `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"
msgstr "近似の詳細については、次を参照してください： `Quantum Risk Analysis. Woerner, Egger. 2018. <https://arxiv.org/abs/1806.06893>`__"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:200
msgid "Since the weighted sum operator (in its current implementation) can only sum up integers, we need to map from the original ranges to the representable range to estimate the result, and reverse this mapping before interpreting the result. The mapping essentially corresponds to the affine mapping described in the context of the uncertainty model above."
msgstr "(現在実装中の) 加重合計演算子は整数のみを合計することができるため、結果を推定するために元の範囲から表現可能な範囲に写像し、結果を解釈する前に逆写像する必要があります。このマッピングは不確定性モデルのコンテキストに出てきたアフィン写像に一致します。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:665
msgid "Evaluate Expected Payoff"
msgstr "期待ペイオフの評価"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:667
msgid "We first verify the quantum circuit by simulating it and analyzing the resulting probability to measure the :math:`|1\\rangle` state in the objective qubit."
msgstr "我々は、まず量子回路を検証します。シミュレートで目的量子ビットの :math:`|1\\rangle` 状態の観測確率を分析します。"

#: ../../tutorials/07_asian_barrier_spread_pricing.ipynb:787
msgid "Next we use amplitude estimation to estimate the expected payoff. Note that this can take a while since we are simulating a large number of qubits. The way we designed the operator (asian_barrier_spread) implies that the number of actual state qubits is significantly smaller, thus, helping to reduce the overall simulation time a bit."
msgstr "次に振幅推定で期待ペイオフを推定します。多数の量子ビットをシミュレートするため、推定には時間がかかることに注意してください。我々が設計した演算子 (asian_barrier_spread) は実際の状態量子ビット数よりもかなり少なくなっていますが、これはシミュレーション時間を短縮するためです。"

