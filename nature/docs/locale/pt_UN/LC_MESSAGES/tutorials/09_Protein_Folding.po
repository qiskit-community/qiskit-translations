msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 18:10+0000\n"
"PO-Revision-Date: 2022-08-11 18:17\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/09_Protein_Folding.po\n"
"X-Crowdin-File-ID: 9713\n"
"Language: pt_UN\n"

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "This page was generated from `docs/tutorials/09_Protein_Folding.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/09_Protein_Folding.ipynb`__."

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "Protein Folding"
msgstr "Enovelamento de Proteínas"

#: ../../tutorials/09_Protein_Folding.ipynb:21
msgid "Introduction"
msgstr "Introdução"

#: ../../tutorials/09_Protein_Folding.ipynb:32
msgid "The structure and function of many natural and human-engineered proteins is still only poorly understood. As a result, our understanding of processes connected with protein folding, such as those encountered in Alzheimer’s disease, vaccine development, and crop improvement research, has remained limited."
msgstr "A estrutura e função de muitas proteínas naturais e de engenharia humana ainda são mal compreendidas. Como resultado, nossa compreensão dos processos relacionados ao enovelamento de proteínas, como aqueles encontrados na doença de Alzheimer, desenvolvimento de vacinas, e pesquisa de melhoria de safra, tem permanecido limitada."

#: ../../tutorials/09_Protein_Folding.ipynb:34
msgid "Unfolded polypeptides have a very large number of degrees of freedom and thus an enormous number of potential conformations. For example, a chain with :math:`100` aminoacids has on the order of :math:`10^{47}` conformations. In reality, however, many proteins fold to their native structure within seconds. This is known as Levinthal’s paradox [1]."
msgstr "Polipeptídeos não dobrados têm um número muito grande de graus de liberdade e, portanto, um número enorme de conformações potenciais. Por exemplo, uma cadeia com :math:`100` aminoácidos tem conformações da ordem de :math:`10^{47}`. Na realidade, entretanto, muitas proteínas se dobram à sua estrutura nativa em segundos. Isso é conhecido como Paradoxo de Levinthal [1]."

#: ../../tutorials/09_Protein_Folding.ipynb:36
msgid "The exponential growth of potential conformations with chain length makes the problem intractable for classical computers. In the quantum framework, our resource-efficient algorithm scales linearly with the number of aminoacids N."
msgstr "O crescimento exponencial de conformações potenciais com comprimento de cadeia torna o problema intratável para computadores clássicos. No framework quântico, nosso algoritmo eficiente em recursos escala linearmente com o número de aminoácidos N."

#: ../../tutorials/09_Protein_Folding.ipynb:47
msgid "The goal of this work is to determine the minimum energy conformation of a protein. Starting from a random configuration, the protein’s structure is optimized to lower the energy. This can be achieved by encoding the protein folding problem into a qubit operator and ensuring that all physical constraints are satisfied."
msgstr "O objetivo deste trabalho é determinar a conformação energética mínima de uma proteína. A partir de uma configuração aleatória, a estrutura da proteína é otimizada para reduzir a energia. Isso pode ser alcançado codificando o problema de enovelamento de proteína em um operador qubit e garantindo que todas as restrições físicas sejam satisfeitas."

#: ../../tutorials/09_Protein_Folding.ipynb:58
msgid "For the problem encoding we use:"
msgstr "Para a codificação do problema usamos:"

#: ../../tutorials/09_Protein_Folding.ipynb:60
msgid "Configuration qubits: qubits that are used to describe the configurations and the relative position of the different beads"
msgstr "Qubits de configuração: qubits que são usados para descrever as configurações e a posição relativa das diferentes contas"

#: ../../tutorials/09_Protein_Folding.ipynb:62
msgid "Interaction qubits: qubits that encode interactions between the different aminoacids"
msgstr "Qubits de interação: qubits que codificam interações entre os diferentes aminoácidos"

#: ../../tutorials/09_Protein_Folding.ipynb:64
msgid "For our case we use a tetrahedral lattice (diamond shape lattice) where we encode the movement through the configuration qubits (see image below)."
msgstr "Para nosso caso usamos uma rede tetraédrica (rede em forma de diamante) onde codificamos o movimento através dos qubits de configuração (veja a imagem abaixo)."

#: ../../tutorials/09_Protein_Folding.ipynb:66
msgid "|b91f87eab7204e89a62abf4555806032|"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:68
msgid "b91f87eab7204e89a62abf4555806032"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:79
msgid "The Hamiltonian of the system for a set of qubits :math:`\\mathbf{q}=\\{\\mathbf{q}_{cf}, \\mathbf{q}_{in}\\}` is"
msgstr "O Hamiltoniano do sistema para um conjunto de qubits :math:`\\mathbf{q}=\\{\\mathbf{q}_{cf}, \\mathbf{q}_{in}\\}` é"

#: ../../tutorials/09_Protein_Folding.ipynb:81
msgid "H(\\mathbf{q}) = H_{gc}(\\mathbf{q}_{cf}) + H_{ch}(\\mathbf{q}_{cf}) + H_{in}(\\mathbf{q}_{cf}, \\mathbf{q}_{in})\n\n"
msgstr "H(\\mathbf{q}) = H_{gc}(\\mathbf{q}_{cf}) + H_{ch}(\\mathbf{q}_{cf}) + H_{in}(\\mathbf{q}_{cf}, \\mathbf{q}_{in})\n\n"

#: ../../tutorials/09_Protein_Folding.ipynb:83
msgid "where"
msgstr "onde"

#: ../../tutorials/09_Protein_Folding.ipynb:85
msgid ":math:`H_{gc}` is the geometrical constraint term (governing the growth of the primary sequence of aminoacids without bifurcations)"
msgstr ":math:`H_{gc}` é o termo de restrição geométrica (governando o crescimento da sequência primária de aminoácidos sem bifurcações)"

#: ../../tutorials/09_Protein_Folding.ipynb:87
msgid ":math:`H_{ch}` is the chirality constraint (enforcing the right stereochemistry for the system)"
msgstr ":math:`H_{ch}` é a restrição de quiralidade (reforçando a estereoquímica correta para o sistema)"

#: ../../tutorials/09_Protein_Folding.ipynb:89
msgid ":math:`H_{in}` is the interaction energy terms of the system. In our case we consider only nearest neighbor interactions."
msgstr ":math:`H_{in}` são os termos de energia de interação do sistema. No nosso caso, consideramos apenas as interações com o vizinho mais próximo."

#: ../../tutorials/09_Protein_Folding.ipynb:100
msgid "Further details about the used model and the encoding of the problem can be found in [2]."
msgstr "Maiores detalhes sobre o modelo utilizado e a codificação do problema podem ser encontrados em [2]."

#: ../../tutorials/09_Protein_Folding.ipynb:137
msgid "Protein Main Chain"
msgstr "Cadeia Principal da Proteína"

#: ../../tutorials/09_Protein_Folding.ipynb:148
msgid "The Protein consists of a main chain that is a linear chain of aminoacids. For the naming of different residues we use the one-letter code as defined in Ref. [3]. Further details about the naming and the type of aminoacids can also be found in [4]."
msgstr "A proteína consiste de uma cadeia principal que é uma cadeia linear de aminoácidos. Para nomear os diferentes resíduos, usamos o código de uma letra, como definido na Ref. [3]. Maiores detalhes sobre a nomenclatura e o tipo dos aminoácidos também podem ser encontrados em [4]."

#: ../../tutorials/09_Protein_Folding.ipynb:150
msgid "For this particular case we demonstrate the generation of the qubit operator in a neuropeptide with the main chain consisting of 7 aminoacids with letter codes APRLRFY (see also [2])."
msgstr "Para este caso particular, demonstramos a geração do operador qubit em um neuropeptídeo com a cadeia principal consistindo de 7 aminoácidos com os códigos de letras APRLRFY (ver também [2])."

#: ../../tutorials/09_Protein_Folding.ipynb:172
msgid "Side Chains"
msgstr "Cadeias Laterais"

#: ../../tutorials/09_Protein_Folding.ipynb:183
msgid "Beyond the main chain of the protein there may be aminoacids attached to the residues of the main chain. Our model allows for side chains of the maximum length of one. Elongated side chains would require the introduction of additional penalty terms which are still under development. In this example we do not consider any side chains to keep the real structure of the neuropeptide."
msgstr "Além da cadeia principal da proteína, podem haver aminoácidos ligados aos resíduos da cadeia principal. O nosso modelo permite para as cadeias laterais o comprimento máximo de um. Cadeia laterais alongadas necessitariam a introdução de termos de penalidade adicionais que ainda estão em desenvolvimento. Neste exemplo, não consideramos nenhuma cadeia lateral para manter a estrutural real do neuropeptídeo."

#: ../../tutorials/09_Protein_Folding.ipynb:205
msgid "Interaction between Aminoacids"
msgstr "Interação entre Aminoácidos"

#: ../../tutorials/09_Protein_Folding.ipynb:216
msgid "For the description of inter-residue contacts for proteins we use knowledge-based (statistical) potentials derived using quasi-chemical approximation. The potentials used here are introduced by Miyazawa, S. and Jernigan, R. L. in [5]."
msgstr "Para a descrição dos contatos entre resíduos para proteínas, utilizamos potenciais baseados em conhecimento (estatístico) derivados mediante aproximação quase-química. Os potenciais usados aqui são introduzidos por Miyazawa, S. e Jernigan, R. L. em [5]."

#: ../../tutorials/09_Protein_Folding.ipynb:218
msgid "Beyond this model we also allow for random contact maps (interactions) that provide a random interaction map. One can also introduce a custom interaction map that enhances certain configurations of the protein (e.g. alpha helix, beta sheet etc)."
msgstr "Além deste modelo, também permitimos mapas de contato aleatórios (interações) que fornecem um mapa de interação aleatório. Também pode-se introduzir um mapa de interação personalizado que aprimora certas configurações da proteína (por exemplo, hélice alfa, folha beta, etc)."

#: ../../tutorials/09_Protein_Folding.ipynb:241
msgid "Physical Constraints"
msgstr "Restrições Físicas"

#: ../../tutorials/09_Protein_Folding.ipynb:252
msgid "To ensure that all physical constraints are respected we introduce penalty functions. The different penalty terms used are:"
msgstr "Para garantir que todas as restrições físicas sejam respeitadas, introduzimos funções de penalidade. Os diferentes termos de penalidade utilizados são:"

#: ../../tutorials/09_Protein_Folding.ipynb:254
msgid "penalty_chiral: A penalty parameter used to impose the right chirality."
msgstr "penalty_chiral: Um parâmetro de penalidade usado para impor a quiralidade correta."

#: ../../tutorials/09_Protein_Folding.ipynb:256
msgid "penalty_back: A penalty parameter used to penalize turns along the same axis. This term is used to eliminate sequences where the same axis is chosen twice in a row. In this way we do not allow for a chain to fold back into itself."
msgstr "penalty_back: Um parâmetro de penalidade usado para penalizar voltas ao longo do mesmo eixo. Este termo é usado para eliminar sequências em que o mesmo eixo é escolhido duas vezes consecutivas. Desta forma, não permitimos que uma cadeia dobre sobre si mesma."

#: ../../tutorials/09_Protein_Folding.ipynb:258
msgid "penalty_1: A penalty parameter used to penalize local overlap between beads within a nearest neighbor contact."
msgstr "penalty_1: Um parâmetro de penalidade usado para penalizar sobreposição local entre contas dentro de um contato de vizinho mais próximo."

#: ../../tutorials/09_Protein_Folding.ipynb:284
msgid "Peptide Definition"
msgstr "Definição de Peptídeo"

#: ../../tutorials/09_Protein_Folding.ipynb:295
msgid "Based on the main chain and possible side chains we define the peptide object that includes all the structural information of the modeled system."
msgstr "Com base na cadeia principal e nas possíveis cadeias laterias, definimos o objeto peptídeo que inclui todas as informações estruturais do sistema modelado."

#: ../../tutorials/09_Protein_Folding.ipynb:317
msgid "Protein Folding Problem"
msgstr "Problema de Enovelamento de Proteínas"

#: ../../tutorials/09_Protein_Folding.ipynb:328
msgid "Based on the defined peptide, the interaction (contact map) and the penalty terms we defined for our model we define the protein folding problem that returns qubit operators."
msgstr "Baseado no peptídeo definido, na interação (mapa de contato) e nos termos de penalidade que definimos para nosso modelo, definimos o problema do enovelamento de proteína que retorna operadores qubit."

#: ../../tutorials/09_Protein_Folding.ipynb:613
msgid "Using VQE with CVaR expectation value for the solution of the problem"
msgstr "Usando o VQE com o valor esperado de CVaR para a solução do problema"

#: ../../tutorials/09_Protein_Folding.ipynb:624
msgid "The problem that we are tackling has now implemented all the physical constraints and has a diagonal Hamiltonian. For the particular case we are targeting the single bitstring that gives us the minimum energy (corresponding to the folded structure of the protein). Thus, we can use the Variational Quantum Eigensolver with Conditional Value at Risk (CVaR) expectation values for the solution of the problem and for finding the minimum configuration energy [6] . We follow the same approach as in Ref. [2] but here we use COBYLA for the classical optimization part. One can also use the standard VQE or QAOA algorithm for the solution of the problem, though as discussed in Ref. [2] CVaR is more suitable."
msgstr "O problema que estamos enfrentando agora implementou todas as restrições físicas e tem um Hamiltoniano diagonal. Para o caso particular, temos como alvo o bitstring único que nos dá a energia mínima (correspondente à estrutura dobrada da proteína). Assim, podemos usar o Variacional Quantum Eigensolver com os valores esperados de Valor Condicional em Risco (CVaR) para a solução do problema e para encontrar a energia mínima de configuração [6] . Seguimos a mesma abordagem da Ref. [2], mas aqui usamos COBYLA para a parte da otimização clássica. Também pode-se uitlizar o algoritmos VQE ou QAOA padrão para a solução do problema, embora, como discutido na Ref. [2], o CVaR seja mais indicado."

#: ../../tutorials/09_Protein_Folding.ipynb:1735
msgid "Visualizing the answer"
msgstr "Visualizando a resposta"

#: ../../tutorials/09_Protein_Folding.ipynb:1746
msgid "In order to reduce computational costs, we have reduced the problem’s qubit operator to the minimum amount of qubits needed to represent the shape of the protein. In order to decode the answer we need to understand how this has been done. \\* The shape of the protein has been encoded by a sequence of turns , :math:`\\{0,1,2,3\\}`. Each turn represents a different direction in the lattice. \\* For a main bead of :math:`N_{aminoacids}` in a lattice, we need :math:`N_{aminoacids}-1` turns in order to represent its shape. However, the orientation of the protein is not relevant to its energy. Therefore the first two turns of the shape can be set to :math:`[1,0]` without loss of generality. \\* If the second bead does not have any side chain, we can also set the :math:`6^{th}` qubit to :math:`[1]` without breaking symmetry. \\* Since the length of the secondary chains is always limited to :math:`1` we only need one turn to describe the shape of the chain."
msgstr "Para reduzir os custos computacionais, reduzimos o operador de qubit do problema para a quantidade mínima de qubits necessária para representar a forma da proteína. Para decodificar a resposta, precisamos entender como isso foi feito. \\* A forma da proteína foi codificada por uma sequência de voltas , :math:`\\{0,1,2,3\\}`. Cada volta representa uma direção diferente na rede. \\* Para uma conta principal de :math:`N_{aminoacids}` em uma rede, precisamos de :math:`N_{aminoacids}-1` voltas para representar sua forma. No entanto, a orientação da proteína não é relevante para sua energia. Portanto, as duas primeiras voltas da forma podem ser definidas como :math:`[1,0]` sem perda de generalidade. \\* Se a segunda conta não tiver nenhuma cadeia lateral, também podemos definir o qubit :math:`6^{th}` para :math:`[1]` sem quebrar a simetria. \\* Como o comprimento das cadeias secundárias é sempre limitado a :math:`1`, precisamos apenas de uma volta para descrever a forma da cadeia."

#: ../../tutorials/09_Protein_Folding.ipynb:1749
msgid "The total amount of qubits we need to represent the shape of the protein will be :math:`2(N_{aminoacids}-3)` if there is a secondary chain coming out of the second bead or :math:`2(N_{aminoacids}-3) - 1`, otherwise. All the other qubits will remain unused during the optimization process. See:"
msgstr "A quantidade total de qubits que precisamos para representar a forma da proteína será :math:`2(N_{aminoacids}-3)` se houver uma cadeia secundária saindo da segunda esfera ou :math:`2(N_ {aminoacids}-3) - 1`, caso contrário. Todos os outros qubits permanecerão sem uso durante o processo de otimização. Ver:"

#: ../../tutorials/09_Protein_Folding.ipynb:1802
msgid "Now that we know which qubits encode which information, we can decode the bitstring into the explicit turns that form the shape of the protein."
msgstr "Agora que sabemos quais qubits codificam qual informação, podemos decodificar a bitstring nas voltas explícitas que formam a forma da proteína."

#: ../../tutorials/09_Protein_Folding.ipynb:1851
msgid "From this sequence of turns we can get the cartesian coordinates of each of the aminoacids of the protein."
msgstr "Desta sequência de voltas podemos obteras coordenadas cartesianas de cada um dos aminoácidos da proteína."

#: ../../tutorials/09_Protein_Folding.ipynb:1914
msgid "And finally, we can also plot the structure of the protein in 3D. Note that when rendered with the proper backend this plot can be interactively rotated."
msgstr "E finalmente, também podemos plotar a estrutura da proteína em 3D. Note que quando renderizada com o backend adequado, está imagem pode ser rotacionada de forma interativa."

#: ../../tutorials/09_Protein_Folding.ipynb:1944
msgid "And here is an example with side chains."
msgstr "E aqui está um exemplo com cadeias laterais."

#: ../../tutorials/09_Protein_Folding.ipynb:1989
msgid "References"
msgstr "Referências"

#: ../../tutorials/09_Protein_Folding.ipynb:2000
#, python-format
msgid "[1] https://en.wikipedia.org/wiki/Levinthal%27s_paradox"
msgstr "[1] https://en.wikipedia.org/wiki/Levinthal%27s_paradox"

#: ../../tutorials/09_Protein_Folding.ipynb:2002
msgid "[2] A.Robert, P.Barkoutsos, S.Woerner and I.Tavernelli, Resource-efficient quantum algorithm for protein folding, NPJ Quantum Information, 2021, https://doi.org/10.1038/s41534-021-00368-4"
msgstr "[2] A.Robert, P.Barkoutsos, S.Woerner and I.Tavernelli, Resource-efficient quantum algorithm for protein folding, NPJ Quantum Information, 2021, https://doi.org/10.1038/s41534-021-00368-4"

#: ../../tutorials/09_Protein_Folding.ipynb:2004
msgid "[3] IUPAC–IUB Commission on Biochemical Nomenclature (1972). “A one-letter notation for aminoacid sequences”. Pure and Applied Chemistry. 31 (4): 641–645. doi:10.1351/pac197231040639. PMID 5080161."
msgstr "[3] IUPAC–IUB Commission on Biochemical Nomenclature (1972). “A one-letter notation for aminoacid sequences”. Pure and Applied Chemistry. 31 (4): 641–645. doi:10.1351/pac197231040639. PMID 5080161."

#: ../../tutorials/09_Protein_Folding.ipynb:2006
msgid "[4] https://en.wikipedia.org/wiki/Amino_acid"
msgstr "[4] https://en.wikipedia.org/wiki/Amino_acid"

#: ../../tutorials/09_Protein_Folding.ipynb:2008
msgid "[5] S. Miyazawa and R. L.Jernigan, Residue – Residue Potentials with a Favorable Contact Pair Term and an Unfavorable High Packing Density Term for Simulation and Threading, J. Mol. Biol.256, 623–644, 1996, Table 3, https://doi.org/10.1006/jmbi.1996.0114"
msgstr "[5] S. Miyazawa and R. L.Jernigan, Residue – Residue Potentials with a Favorable Contact Pair Term and an Unfavorable High Packing Density Term for Simulation and Threading, J. Mol. Biol.256, 623–644, 1996, Table 3, https://doi.org/10.1006/jmbi.1996.0114"

#: ../../tutorials/09_Protein_Folding.ipynb:2010
msgid "[6] P.Barkoutsos, G. Nannichini, A.Robert, I.Tavernelli, S.Woerner, Improving Variational Quantum Optimization using CVaR, Quantum 4, 256, 2020, https://doi.org/10.22331/q-2020-04-20-256"
msgstr "[6] P.Barkoutsos, G. Nannichini, A.Robert, I.Tavernelli, S.Woerner, Improving Variational Quantum Optimization using CVaR, Quantum 4, 256, 2020, https://doi.org/10.22331/q-2020-04-20-256"

