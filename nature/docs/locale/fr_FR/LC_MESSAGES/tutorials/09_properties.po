msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-28 15:28+0000\n"
"PO-Revision-Date: 2023-11-29 12:58\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/nature/docs/locale/en/LC_MESSAGES/tutorials/09_properties.po\n"
"X-Crowdin-File-ID: 9873\n"

#: ../../tutorials/09_properties.ipynb:9
msgid "This page was generated from `docs/tutorials/09_properties.ipynb`__."
msgstr ""

#: ../../tutorials/09_properties.ipynb:9
msgid "Properties - or - Operator Factories"
msgstr ""

#: ../../tutorials/09_properties.ipynb:11
msgid "Qiskit Nature has various built-in \"properties\". These objects are effectively operator factories, since they allow the programming of operator blueprints based on a minimal set of required information. Some commonly used examples are the ``ParticleNumber``, ``AngularMomentum`` and ``Magnetization`` properties, all of which take only the system size as their only input, and generate a ``SparseLabelOp`` of the required size."
msgstr ""

#: ../../tutorials/09_properties.ipynb:13
msgid "These properties can be registered in a ``problem`` instance which will cause them to be evaluated once a ground state and/or excited states of that problem have been found. In the following, we will explain the general concept of how this works."
msgstr ""

#: ../../tutorials/09_properties.ipynb:24
msgid "The ``BaseProblem`` base class dictates the existence of the ``.properties`` attribute on any ``problem`` instance. This attribute is of type ``PropertiesContainer`` which is an object that can hold at most one instance of any ``SparseLabelOpsFactory`` (or property class, as we commonly refer to them)."
msgstr ""

#: ../../tutorials/09_properties.ipynb:74
msgid "You can now modify the contents of the ``PropertiesContainer`` to your desire:"
msgstr ""

#: ../../tutorials/09_properties.ipynb:143
msgid "The specific subclasses of ``BaseProblem`` for the various stacks such as `electronic structure <01_electronic_structure.ipynb>`__, `vibrational structure <02_vibrational_structure.ipynb>`__ or `lattice models <10_lattice_models.ipynb>`__ make things even simpler for you, because they provide direct attributes for the built-in properties of Qiskit Nature:"
msgstr ""

#: ../../tutorials/09_properties.ipynb:208
msgid "Note that the ``ElectronicDipoleMoment`` is populated by default. To exclude it, you can use the drivers ``to_problem()`` method and provide the ``include_dipole=False`` keyword argument. Refer to the drivers documentation for more details."
msgstr ""

#: ../../tutorials/09_properties.ipynb:219
msgid "You can see, that all properties come pre-populated except for the ``ElectronicDensity``. But this is easy to add:"
msgstr ""

#: ../../tutorials/09_properties.ipynb:247
msgid "The same concepts apply to the ``VibrationalStructureProblem`` and the ``LatticeModelProblem``."
msgstr ""

