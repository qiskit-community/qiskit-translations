msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-18 17:30+0000\n"
"PO-Revision-Date: 2022-11-18 20:18\n"
"Last-Translator: \n"
"Language-Team: Russian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=4; plural=((n%10==1 && n%100!=11) ? 0 : ((n%10 >= 2 && n%10 <=4 && (n%100 < 12 || n%100 > 14)) ? 1 : ((n%10 == 0 || (n%10 >= 5 && n%10 <=9)) || (n%100 >= 11 && n%100 <= 14)) ? 2 : 3));\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ru\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/01_electronic_structure.po\n"
"X-Crowdin-File-ID: 9666\n"
"Language: ru_RU\n"

#: ../../tutorials/01_electronic_structure.ipynb:9
msgid "This page was generated from `docs/tutorials/01_electronic_structure.ipynb`__."
msgstr "Страница создана на основе `docs/tutorials/01_electronic_structure.ipynb`__."

#: ../../tutorials/01_electronic_structure.ipynb:9
msgid "Electronic structure"
msgstr "Электронная структура"

#: ../../tutorials/01_electronic_structure.ipynb:21
msgid "Introduction"
msgstr "Введение"

#: ../../tutorials/01_electronic_structure.ipynb:23
msgid "The molecular Hamiltonian is"
msgstr "Гамильтониан молекулы может быть записан в виде"

#: ../../tutorials/01_electronic_structure.ipynb:25
msgid "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"
msgstr "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"

#: ../../tutorials/01_electronic_structure.ipynb:30
msgid "Because the nuclei are much heavier than the electrons they do not move on the same time scale and therefore, the behavior of nuclei and electrons can be decoupled. This is the Born-Oppenheimer approximation."
msgstr "Поскольку атомные ядра намного тяжелее электронов, характерные времена изменения их состояний сильно различаются, и можно рассматривать поведение этих систем раздельно. Данное приближение называется приближением Борна — Оппенгеймера (адиабатическим приближением)."

#: ../../tutorials/01_electronic_structure.ipynb:32
msgid "Therefore, one can first tackle the electronic problem with the nuclear coordinates entering only as parameters. The energy levels of the electrons in the molecule can then be found by solving the non-relativistic time independent Schroedinger equation,"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:34
msgid "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"
msgstr "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"

#: ../../tutorials/01_electronic_structure.ipynb:39
msgid "where"
msgstr "где"

#: ../../tutorials/01_electronic_structure.ipynb:41
msgid "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."
msgstr "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."

#: ../../tutorials/01_electronic_structure.ipynb:46
msgid "In particular the ground state energy is given by:"
msgstr "В частности, энергия основного состояния может быть записана как:"

#: ../../tutorials/01_electronic_structure.ipynb:48
msgid "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"
msgstr "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"

#: ../../tutorials/01_electronic_structure.ipynb:53
msgid "where :math:`\\Psi_0` is the ground state of the system."
msgstr "где :math:`\\Psi_0` — волновая функция основного состояния системы."

#: ../../tutorials/01_electronic_structure.ipynb:55
msgid "However, the dimensionality of this problem grows exponentially with the number of degrees of freedom. To tackle this issue we would like to prepare :math:`\\Psi_0` on a quantum computer and measure the Hamiltonian expectation value (or :math:`E_0`) directly."
msgstr "Однако размерность этой задачи возрастает экспоненциально с количеством степеней свободы. Для решения этой проблемы на квантовом компьютере необходимо подготовить :math:`\\Psi_0` и затем непосредственно измерить ожидаемое значения гамильтониана (:math:`E_0`)."

#: ../../tutorials/01_electronic_structure.ipynb:57
msgid "So how do we do that concretely?"
msgstr "Как же это сделать?"

#: ../../tutorials/01_electronic_structure.ipynb:69
msgid "Starting from the Hartree-Fock solution"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:71
msgid "A good starting point for solving this problem is the Hartree-Fock (HF) method. This method approximates the N-body problem by N one-body problems where each electron evolves in the mean-field of the others. Classically solving the HF equations is efficient and leads to the exact exchange energy but does not include any electron correlation. Therefore, it is usually a good starting point to which to add correlation."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:73
msgid "The Hamiltonian can then be re-expressed in the basis of the solutions of the HF method, also called Molecular Orbitals (MOs):"
msgstr "После этого гамильтониан может быть представлен в базисе собственных функций HF метода, которые называются молекулярными орбиталями (MO):"

#: ../../tutorials/01_electronic_structure.ipynb:75
msgid "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"
msgstr "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"

#: ../../tutorials/01_electronic_structure.ipynb:81
msgid "with the 1-body integrals"
msgstr "с одночастичными"

#: ../../tutorials/01_electronic_structure.ipynb:83
msgid "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)dr"
msgstr "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)dr"

#: ../../tutorials/01_electronic_structure.ipynb:88
msgid "and 2-body integrals"
msgstr "и двухчастичными интегралами"

#: ../../tutorials/01_electronic_structure.ipynb:90
msgid "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}dr_1dr_2."
msgstr "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}dr_1dr_2."

#: ../../tutorials/01_electronic_structure.ipynb:95
msgid "The MOs (:math:`\\phi_u`) can be occupied or virtual (unoccupied). One MO can contain 2 electrons. However, in what follows we actually work with Spin Orbitals which are associated with a spin up (:math:`\\alpha`) of spin down (:math:`\\beta`) electron. Thus Spin Orbitals can contain one electron or be unoccupied."
msgstr "MO (:math:`\\phi_u`) могут быть заполненными или виртуальными (свободными). Одна MO может содержать два электрона. Однако нужно уточнить, что далее мы будем рассматривать так называемые спин-орбитали, которые связаны со спином электрона, находящимся в состоянии вверх (:math:`\\alpha`) или вниз (:math:`\\beta`). Поэтому спин-орбиталь может либо содержать один электрон, либо оставаться свободной."

#: ../../tutorials/01_electronic_structure.ipynb:97
msgid "Note: when referring to the number of orbitals, we will be using the number of *spatial* orbitals. This refers to any orbital in Cartesian space (whether its a molecular orbital or in another basis does not matter here). Each spatial orbital is then generally split into two *spin* orbitals."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:99
msgid "We now show how to concretely realise these steps with Qiskit."
msgstr "Посмотрим, как реализовать эти шаги в Qiskit."

#: ../../tutorials/01_electronic_structure.ipynb:111
msgid "Obtaining an initial Hartree-Fock solution"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:113
msgid "Qiskit is interfaced with different classical codes which are able to find the HF solutions. Interfacing between Qiskit and the following codes is already available:"
msgstr "Qiskit предоставляет интерфейс к различным классическим программам для решения задачи HF. На настоящий момент это:"

#: ../../tutorials/01_electronic_structure.ipynb:115
msgid "Gaussian"
msgstr "Gaussian"

#: ../../tutorials/01_electronic_structure.ipynb:116
msgid "Psi4"
msgstr "Psi4"

#: ../../tutorials/01_electronic_structure.ipynb:117
msgid "PySCF"
msgstr "PySCF"

#: ../../tutorials/01_electronic_structure.ipynb:119
msgid "In the following we set up a PySCF driver, for the hydrogen molecule at equilibrium bond length (0.735 angstrom) in the singlet state and with no charge."
msgstr "В следующем примере мы используем PySCF драйвер для описания нейтральной синглетной молекулы водорода в состоянии равновесной геометрии (с межъядерным расстоянием 0,735 ангстрем)."

#: ../../tutorials/01_electronic_structure.ipynb:149
msgid "Running this driver, will yield an ``ElectronicStructureProblem``, Qiskit Nature’s representation of the electronic structure problem which we are interested in solving. For further information about the drivers see https://qiskit.org/documentation/nature/apidocs/qiskit_nature.second_q.drivers.html"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:196
msgid "The ``ElectronicStructureProblem`` and its components"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:198
msgid "Let us spend some time to understand this problem instance and its components."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:210
msgid "The ``ElectronicEnergy`` Hamiltonian"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:212
msgid "The most important aspect is the internal Hamiltonian; in this case an ``ElectronicEnergy`` hamiltonian. This class is able to generate the second-quantized operator from the 1- and 2-body integrals which the classical code has computed for us."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:214
msgid "**IMPORTANT:** The container class for the integral coefficients (``PolynomialTensor``) requires the 2-body terms to be provided in **physicist order**!"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:456
msgid "Note, that this is purely the **electronic** Hamiltonian of the system. That means, that the *nuclear repulsion energy* is not included. Instead, Qiskit Nature will add this constant energy offset in a post-processing step, in order to compute the total energy of your system. To learn how to include the nuclear repulsion energy in this operator, please refer to the documentation of the ``ElectronicEnergy`` class `here <https://qiskit.org/documentation/nature/apidocs/qiskit_nature.second_q.hamiltonians.ElectronicEnergy.html>`__."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:504
msgid "More attributes of the ``ElectronicStructureProblem``"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:506
msgid "Below we list some additional attributes of our ``problem`` instance:"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:692
msgid "To learn more about the basis of your problem, please refer to the tutorial on the ```BasisTransformer`` <05_problem_transformers.ipynb>`__."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:704
msgid "Additional observables"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:706
msgid "The ``ElectronicStructureProblem`` also contains additional operator factories, which will generate observables to be evaluated at the ground- and excited-states at the end of your computation."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:892
msgid "For more information about these properties, please refer to `their tutorial <09_properties.ipynb>`__."
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:904
msgid "Solving the ``ElectronicStructureProblem``"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:906
msgid "In the following, we will compute the ground-state of our problem instance. To learn more about the individual components that go into the ``GroundStateSolver``, please refer to the `ground state tutorial <./03_ground_state_solvers.ipynb>`__."
msgstr ""

