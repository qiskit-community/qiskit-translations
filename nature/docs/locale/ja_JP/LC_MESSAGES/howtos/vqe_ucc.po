msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-09 17:24+0000\n"
"PO-Revision-Date: 2023-11-09 17:40\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/nature/docs/locale/en/LC_MESSAGES/howtos/vqe_ucc.po\n"
"X-Crowdin-File-ID: 9969\n"

#: ../../howtos/vqe_ucc.rst:4
msgid "Use a UCC-like ansatz with a VQE"
msgstr "VQEにおけるUCCのようなansatzの使用"

#: ../../howtos/vqe_ucc.rst:6
msgid "When using a :class:`~qiskit_nature.second_q.circuit.library.UCC`-style ansatz with a :class:`~qiskit_algorithms.VQE` one needs to pay particular attention to the :attr:`~qiskit_algorithms.VQE.initial_point` attribute which indicates from which set of initial parameters the optimization routine should start. By default, VQE will start from a *random* initial point. In this how to we show how one can set a custom initial point instead (for example to guarantee that one starts from the Hartree-Fock state)."
msgstr ""

#: ../../howtos/vqe_ucc.rst:14
msgid "We obtain an :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` which we want to solve:"
msgstr "解決したい :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` クラスを取得します。"

#: ../../howtos/vqe_ucc.rst:23
msgid "We setup our :class:`~qiskit_nature.second_q.mappers.QubitMapper`:"
msgstr ":class:`~qiskit_nature.second_q.mappers.QubitMapper` を設定します："

#: ../../howtos/vqe_ucc.rst:30
msgid "We setup our ansatz:"
msgstr "Ansatz をセットアップします:"

#: ../../howtos/vqe_ucc.rst:46
msgid "We setup a :class:`~qiskit_algorithms.VQE`:"
msgstr ""

#: ../../howtos/vqe_ucc.rst:56
msgid "Now comes the key step: choosing the initial point. Since we picked the :class:`~qiskit_nature.second_q.circuit.library.HartreeFock` initial state before, in order to ensure we start from that, we need to initialize our ``initial_point`` with all-zero parameters. One way to do that is like so:"
msgstr "ここで重要なのが、初期点の選択です。:class:`~qiskit_nature.second_q.circuit.library.HartreeFock` を初期点に選んだので、それを確実にするためには、 `` initial_point`` をすべてゼロのパラメーターで初期化する必要があります。 その一つの方法は以下の通りです："

#: ../../howtos/vqe_ucc.rst:65
msgid "Alternatively, one can also use :class:`~qiskit_nature.second_q.algorithms.initial_points.HFInitialPoint` like so:"
msgstr "また、次のように :class:`~qiskit_nature.second_q.algorithms.initial_points.HFInitialPoint` を使用することもできます："

#: ../../howtos/vqe_ucc.rst:76
msgid "This may seem like it is not adding a lot of benefit, but the key aspect here is that you can build your code on top of the :class:`~qiskit_nature.second_q.algorithms.initial_points.InitialPoint` interface based on which we also have the :class:`~qiskit_nature.second_q.algorithms.initial_points.MP2InitialPoint` which allows you to start from an MP2 starting point like so:"
msgstr "一見、あまり利点がないように見えるかもしれませんが、ここで重要なのは、 :class:`~qiskit_nature.second_q.algorithms.initial_points.InitialPoint` インターフェイスの上にコードを構築できることです。このベースは、 :class:`~qiskit_nature.second_q.algorithms.initial_points.MP2InitialPoint` クラスで、MP2スタート地点から以下のように始めることができます："

#: ../../howtos/vqe_ucc.rst:90
msgid "Finally, we can now actually solve our problem:"
msgstr "最終的に、私たちの問題を解決できるようになりました。"

