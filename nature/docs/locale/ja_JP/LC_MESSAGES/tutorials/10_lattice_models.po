msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-11 18:10+0000\n"
"PO-Revision-Date: 2022-08-11 18:26\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/10_lattice_models.po\n"
"X-Crowdin-File-ID: 9725\n"
"Language: ja_JP\n"

#: ../../tutorials/10_lattice_models.ipynb:9
msgid "This page was generated from `docs/tutorials/10_lattice_models.ipynb`__."
msgstr "このページは `docs/tutorials/10_lattice_models.ipynb`__ から生成されました。"

#: ../../tutorials/10_lattice_models.ipynb:9
msgid "Lattice models"
msgstr "格子モデル"

#: ../../tutorials/10_lattice_models.ipynb:21
msgid "Introduction"
msgstr "はじめに"

#: ../../tutorials/10_lattice_models.ipynb:23
msgid "In quantum physics (including condensed matter physics and high energy physics) we often study models on lattices. For example, when we think about behavior of electrons in a solid, we can study a model defined on a lattice by considering the positions of atoms as lattice points. This notebook demonstrates how we can utilize ``Lattice`` classes to generate various lattice systems such as ``LineLattice``, ``SquareLattice``, ``HyperCubicLattice``, ``TriangularLattice``, and a general lattice. It also includes an example of a lattice model, the Fermi-Hubbard model. We see how we can define the Hamiltonian of the Fermi-Hubbard model for a given lattice using ``FermiHubbardModel`` class."
msgstr "量子物理学（物性物理学や高エネルギー物理学を含む）では、格子上のモデルを研究することがよくあります。たとえば、固体中の電子の振る舞いを考えるとき、原子の位置を格子点として考えることで、格子上に定義されたモデルを研究することができます。このノートブックは、 ``Lattice`` クラスを利用して、 ``LineLattice`` 、 ``SquareLattice`` 、 ``HyperCubicLattice`` 、 ``TriangularLattice`` 、および一般的な格子などのさまざまな格子システムを生成する方法を示しています。また、格子モデルの例であるフェルミ・ハバードモデルも含まれています。 ``FermiHubbardModel`` クラスを使用して、特定の格子の フェルミ・ハバードモデルモデルのハミルトニアンを定義する方法を確認します。"

#: ../../tutorials/10_lattice_models.ipynb:59
msgid "LineLattice"
msgstr "LineLattice"

#: ../../tutorials/10_lattice_models.ipynb:61
msgid "``LineLattice`` provides a one-dimensional lattice. We can construct a one-dimensional lattice as follows."
msgstr "``LineLattice`` は、一次元の格子を提供します。次のように一次元格子を構築することができます。"

#: ../../tutorials/10_lattice_models.ipynb:84
msgid "Here, it is visualized."
msgstr "ここでは、それが視覚化されています。"

#: ../../tutorials/10_lattice_models.ipynb:113
msgid "We can also construct a one-dimensional lattice with the periodic boundary conditions by specifying ``BoundaryCondition.PERIODIC`` as the argument of ``boundary_condition``."
msgstr "また、 ``boundary_condition`` の引数として ``BoundaryCondition.PERIODIC`` を指定することにより、周期境界条件を使用して一次元格子を構築することもできます。"

#: ../../tutorials/10_lattice_models.ipynb:146
msgid "When we want to draw the lattice ignoring the boundary conditions, we use the method ``draw_without_boundary``."
msgstr "境界条件を無視して格子を描画する場合は、メソッド ``draw_without_boundary`` を使用します。"

#: ../../tutorials/10_lattice_models.ipynb:175
msgid "We can define real or complex weights for the edges of the lattice. This is done by giving a value to the argument ``edge_parameter``. We can also give a value for the self-loops of the lattice by passing the value for ``onsite_parameter``."
msgstr "格子のエッジに実数または複素数の重みを定義できます。これは、引数 ``edge_parameter`` に値を与えることによって行われます。 ``onsite_parameter`` の値を渡すことにより、格子の自己ループの値を指定することもできます。"

#: ../../tutorials/10_lattice_models.ipynb:294
msgid "The connectivity of the lattice can be seen as the adjacency matrix, which is done by ``to_adjacency_matrix``."
msgstr "格子の接続性は、 ``to_adjacency_matrix`` によって実行される隣接行列と見なすことができます。"

#: ../../tutorials/10_lattice_models.ipynb:370
msgid "By setting ``weighted=True``, we obtain a Hermitian matrix whose matrix elements are the weights."
msgstr "``weighted=True`` を設定することにより、行列要素が重みとなっているエルミート行列を取得します。"

#: ../../tutorials/10_lattice_models.ipynb:480
msgid "SquareLattice"
msgstr "SquareLattice"

#: ../../tutorials/10_lattice_models.ipynb:482
msgid "``SquareLattice`` provides a two-dimensional lattice. Here, we make a two-dimensional lattice with the open boundary conditions."
msgstr "``SquareLattice`` は二次元の格子を提供します。ここでは、開いた境界条件で二次元格子を作成します。"

#: ../../tutorials/10_lattice_models.ipynb:516
msgid "We can specify the boundary conditions for each direction by setting ``boundary_condition`` as a tuple."
msgstr "``border_condition`` をタプルとして設定することにより、各方向の境界条件を指定できます。"

#: ../../tutorials/10_lattice_models.ipynb:553
msgid "Again, we can give weights on the edges and the self-loops of the lattice. Here, it is possible to give weights for each direction as a tuple."
msgstr "ここでも、格子のエッジと自己ループに重みを付けることができます。ここでは、各方向にタプルとして重みを付けることができます。"

#: ../../tutorials/10_lattice_models.ipynb:781
msgid "HyperCubicLattice"
msgstr "HyperCubicLattice"

#: ../../tutorials/10_lattice_models.ipynb:783
msgid "``HyperCubicLattice`` is a generalization of ``LineLattice`` and ``SquareLattice``. It provides an arbitrary d-dimensional lattice. Here, we make a three-dimensional lattice of size 3 by 4 by 5 as an example. The size is given as a tuple, and the boundary conditions can be specified for each direction too. In the example, the boundary conditions are open."
msgstr "``HyperCubicLattice`` は、 ``LineLattice`` と ``SquareLattice`` を一般化したものです。任意のd次元格子を提供します。ここでは、例としてサイズ 3 x 4 x5 の三次元格子を作成します。サイズはタプルとして指定され、境界条件は方向ごとに指定することもできます。この例では、境界条件は開いています。"

#: ../../tutorials/10_lattice_models.ipynb:810
msgid "We draw the cubic lattice specifying the positions of the lattice points."
msgstr "格子点の位置を指定して立方格子を描画します。"

#: ../../tutorials/10_lattice_models.ipynb:855
msgid "TriangularLattice"
msgstr "TriangularLattice"

#: ../../tutorials/10_lattice_models.ipynb:857
msgid "``TriangularLattice`` provides a triangular lattice, which can be seen as a two-dimensional lattice with diagonal edges. The argument ``boundary_condition`` can take either “open” or “periodic”."
msgstr "``TriangularLattice`` は三角形の格子を提供します。これは、対角線のエッジを持つ二次元の格子と見なすことができます。引数 ``boundary_condition`` は、 \"open\" または \"periodic\" のいずれかを取ることができます。"

#: ../../tutorials/10_lattice_models.ipynb:917
msgid "General Lattice"
msgstr "一般的な格子"

#: ../../tutorials/10_lattice_models.ipynb:919
msgid "Above, we have seen translational invariant lattices. Here, we consider a general lattice. We can construct a general lattice consisting of nodes and edges using an instance of PyGraph."
msgstr "上記では、並進不変格子を見てきました。ここでは、一般的な格子について考えます。PyGraph のインスタンスを使用して、ノードとエッジで構成される一般的な格子を構築できます。"

#: ../../tutorials/10_lattice_models.ipynb:994
msgid "Here is its visualization."
msgstr "これがその可視化です。"

#: ../../tutorials/10_lattice_models.ipynb:1023
msgid "When we want to visualize the self-loops in the lattice, we set ``self_loop`` to True."
msgstr "格子内の自己ループを視覚化する場合は、 ``self_loop`` を True に設定します。"

#: ../../tutorials/10_lattice_models.ipynb:1052
msgid "The labels of the lattice sites are drawn when ``with_labels`` is True."
msgstr "``with_labels`` が True の場合、格子サイトのラベルが描画されます。"

#: ../../tutorials/10_lattice_models.ipynb:1082
msgid "The Fermi-Hubbard model"
msgstr "フェルミ・ハバードモデル"

#: ../../tutorials/10_lattice_models.ipynb:1084
msgid "The Fermi-Hubbard model is the simplest model describing electrons moving on a lattice and interaction with each other at the same site. The Hamiltonian is given as follows:"
msgstr "フェルミ・ハバードモデルは、格子上を移動する電子と同じサイトでの相互作用を表す最も単純なモデルです。ハミルトニアンは次のように与えられます。"

#: ../../tutorials/10_lattice_models.ipynb:1095
msgid "H = \\sum_{i, j}\\sum_{\\sigma = \\uparrow, \\downarrow} t_{i, j} c_{i, \\sigma}^\\dagger c_{j, \\sigma} + U \\sum_{i} n_{i, \\uparrow} n_{i, \\downarrow},"
msgstr "H = \\sum_{i, j}\\sum_{\\sigma = \\uparrow, \\downarrow} t_{i, j} c_{i, \\sigma}^\\dagger c_{j, \\sigma} + U \\sum_{i} n_{i, \\uparrow} n_{i, \\downarrow},"

#: ../../tutorials/10_lattice_models.ipynb:1109
msgid "where :math:`c_{i, \\sigma}^\\dagger` and :math:`c_{i, \\sigma}` are creation and annihilation operators of fermion at the site :math:`i` with spin :math:`\\sigma`. The operator :math:`n_{i, \\sigma}` is the number operator, which is defined by :math:`n_{i, \\sigma} = c_{i, \\sigma}^\\dagger c_{i, \\sigma}`. The matrix :math:`t_{i, j}` is a Hermitian matrix called interaction matrix. The parameter :math:`U` represents the strength of the interaction."
msgstr "ここで、 :math:`c_{i, \\sigma}^\\dagger` と :math:`c_{i, \\sigma}` は、スピン :math:`\\sigma` を伴うサイト :math:`i` でのフェルミ粒子の生成および消滅演算子です。演算子 :math:`n_{i, \\sigma}` は、 :math:`n_{i, \\sigma} = c_{i, \\sigma}^\\dagger c_{i, \\sigma}` で定義される個数演算子です。 行列 :math:`t_{i, j}` は、相互作用行列と呼ばれるエルミート行列です。 パラメータ :math:`U` は、相互作用の強さを表します。"

#: ../../tutorials/10_lattice_models.ipynb:1120
msgid "We can generate the corresponding Hamiltonian of a given lattice using ``FermiHubbardModel`` class. Here, we construct the Hamiltonian with uniform interaction and interaction parameters on a two-dimensional lattice."
msgstr "``FermiHubbardModel`` クラスを使用して、特定の格子の対応するハミルトニアンを生成できます。ここでは、二次元格子上に均一な相互作用と相互作用パラメーターを持つハミルトニアンを構築します。"

#: ../../tutorials/10_lattice_models.ipynb:1152
msgid "To obtain the Hamiltonian in terms of the fermionic operators, we use ``second_q_ops`` method. The Hamiltonian is returned as an instance of ``FermionicOp``."
msgstr "フェルミ粒子演算子の観点からハミルトニアンを取得するには、 ``second_q_ops`` メソッドを使用します。ハミルトニアンは ``FermionicOp`` のインスタンスとして返されます。"

#: ../../tutorials/10_lattice_models.ipynb:1163
msgid "Note"
msgstr "注記"

#: ../../tutorials/10_lattice_models.ipynb:1165
msgid "The number of fermionic operators required is twice the number of lattice sites because of the spin degrees of freedom."
msgstr "スピンの自由度のため、必要なフェルミ粒子演算子の数は格子サイトの数の2倍です。"

#: ../../tutorials/10_lattice_models.ipynb:1166
msgid "In the implementation, even indexes correspond to up-spin and odd indexes to down-spin."
msgstr "実装では、偶数インデックスはアップスピンに対応し、奇数インデックスはダウンスピンに対応します。"

#: ../../tutorials/10_lattice_models.ipynb:1239
msgid "``Lattice`` has weights on its edges, so we can define a general interaction matrix using a Lattice instance. Here, we consider the Fermi-Hubbard model on a general lattice on which non-uniform interaction parameters are given. In this case, the weights of the lattice are regarded as the interaction matrix. After generating the Hamiltonian (``second_q_ops``) we can use a qubit converter to generate the qubit operators and/or use any of the available algorithms to solver the corresponding lattice problem."
msgstr "``Lattice`` のエッジには重みがあるため、Latticeインスタンスを使用して一般的な相互作用行列を定義できます。ここでは、不均一な相互作用パラメータが与えられている一般的な格子上のフェルミ・ハバードモデルを検討します。この場合、格子の重みは相互作用行列と見なされます。ハミルトニアン（ ``second_q_ops`` ）を生成した後、量子ビットコンバーターを使用して量子ビット演算子を生成したり、使用可能なアルゴリズムのいずれかを使用して対応する格子問題を解決したりできます。"

#: ../../tutorials/10_lattice_models.ipynb:1392
msgid "LatticeModelProblem"
msgstr "格子モデル問題"

#: ../../tutorials/10_lattice_models.ipynb:1394
msgid "Qiskit Nature also has a ``LatticeModelProblem`` class which allows the usage of the ``GroundStateEigensolver`` to calculate the ground state energy of a given lattice. You can use this class as follows:"
msgstr "Qiskit Natureには、 ``LatticeModelProblem`` クラスもあります。これにより、 ``GroundStateEigensolver`` を使用して、特定の格子の基底状態エネルギーを計算できます。このクラスは次のように使用できます。"

