msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-17 13:18+0000\n"
"PO-Revision-Date: 2023-05-17 13:50\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/getting_started.po\n"
"X-Crowdin-File-ID: 9560\n"

#: ../../getting_started.rst:5
msgid "Getting started"
msgstr "はじめに"

#: ../../getting_started.rst:8
msgid "Installation"
msgstr "インストール"

#: ../../getting_started.rst:10
msgid "Qiskit Nature depends on the main Qiskit package which has its own `Qiskit Getting Started <https://qiskit.org/documentation/getting_started.html>`__ detailing the installation options for Qiskit and its supported environments/platforms. You should refer to that first. Then the information here can be followed which focuses on the additional installation specific to Qiskit Nature."
msgstr "Qiskit Natureは、 Qiskit のインストール・オプションとそのサポート環境/プラットフォームを詳述した「`Qiskit はじめに <https://qiskit.org/documentation/getting_started.html>`__ 」にて説明された主要 Qiskit パッケージに依存しています。 まずそれを参照してください。次に、ここで説明する情報に従って、Qiskit Natureに固有の追加インストールをしましょう。"

#: ../../getting_started.rst:16
msgid "Qiskit Nature has some functions that have been made optional where the dependent code and/or support program(s) are not (or cannot be) installed by default. These include, for example, classical library/programs for molecular problems. See :ref:`optional_installs` for more information."
msgstr "Qiskit Natureには、デフォルトで依存コードまたはサポート・プログラム ( あるいはその両方 ) がインストールされていない (または、それらを使用できない ) ような、オプション機能がいくつかあります。例えば、分子問題に対する古典的なライブラリやプログラムです。詳細については、 :ref:`optional_installs` を参照してください。"

#: ../../getting_started.rst
msgid "Start locally"
msgstr "ローカルからの開始"

#: ../../getting_started.rst:25
msgid "The simplest way to get started is to follow the `getting started 'Start locally' guide for Qiskit <https://qiskit.org/documentation/getting_started.html>`__"
msgstr "最も簡単な方法は「 `Qiskit はじめに <https://qiskit.org/documentation/getting_started.html>`__ 」の「ローカルで始める」のガイドを参照して開始することです。"

#: ../../getting_started.rst:28
msgid "In your virtual environment where you installed Qiskit simply add ``nature`` to the extra list in a similar manner to how the extra ``visualization`` support is installed for Qiskit, i.e:"
msgstr "Qiskit をインストールした仮想環境で、 Qiskit に追加の ``visualization`` サポートをインストールした方法と同様の方法で、以下のようにして追加リストに ``nature`` を追加してください:"

#: ../../getting_started.rst:36
msgid "It is worth pointing out that if you're a zsh user (which is the default shell on newer versions of macOS), you'll need to put ``qiskit[nature]`` in quotes:"
msgstr "Zshユーザー（新しいバージョンのmacOSのデフォルトシェル）の場合は、 ``qiskit[nature]`` を引用符で囲む必要があります。"

#: ../../getting_started.rst
msgid "Install from source"
msgstr "ソースからのインストール"

#: ../../getting_started.rst:46
msgid "Installing Qiskit Nature from source allows you to access the most recently updated version under development instead of using the version in the Python Package Index (PyPI) repository. This will give you the ability to inspect and extend the latest version of the Qiskit Nature code more efficiently."
msgstr "ソースから Qiskit Natureをインストールすることにより、Python Package Index (PyPI) リポジトリーのバージョンを使う代わりに、最新の Qiskit バージョンにアクセスすることができます。これにより、Qiskit Natureコードの最新版を調査したり、拡張することがより効果的にできるようになります。"

#: ../../getting_started.rst:51
msgid "Since Qiskit Nature depends on Qiskit, and its latest changes may require new or changed features of Qiskit, you should first follow Qiskit's `\"Install from source\"` instructions here `Qiskit Getting Started <https://qiskit.org/documentation/getting_started.html>`__"
msgstr "Qiskit Natureは Qiskit に依存しており、最新の変更が Qiskit の新規機能または変更された機能を必要とする場合があるので、まず「 `Qiskit はじめに <https://qiskit.org/documentation/getting_started.html>`__ 」の `「ソースからのインストール」` の指示に従ってください。"

#: ../../getting_started.rst:59
msgid "Using the same development environment that you installed Qiskit in you are ready to install Qiskit Nature."
msgstr "Qiskit をインストールしたものと同じ開発環境を使用して、 Qiskit Natureをインストールすることができます。"

#: ../../getting_started.rst:62
msgid "Clone the Qiskit Nature repository."
msgstr "Qiskit Natureリポジトリーをクローンします。"

#: ../../getting_started.rst:68
msgid "Cloning the repository creates a local folder called ``qiskit-nature``."
msgstr "レポジトリーをクローンすると、 ``qiskit-nature`` という名前のローカル・フォルダが作成されます。"

#: ../../getting_started.rst:74
msgid "If you want to run tests or linting checks, install the developer requirements."
msgstr "もし、テストを実行したり文法をチェックしたい場合は、開発者向けライブラリをインストールします。"

#: ../../getting_started.rst:80
msgid "Install ``qiskit-nature``."
msgstr " ``qiskit-nature`` をインストールします。"

#: ../../getting_started.rst:86
msgid "If you want to install it in editable mode, meaning that code changes to the project don't require a reinstall to be applied, you can do this with:"
msgstr "編集可能モード(プロジェクトのコードを変更しても再インストールする必要なし) でインストールする場合は、次の手順を実行します:"

#: ../../getting_started.rst:97
msgid "Optional installs"
msgstr "オプションのインストール"

#: ../../getting_started.rst:99
msgid "Qiskit Nature supports the use of different classical libraries and programs, via drivers, which compute molecular information, such as one and two body integrals. This is needed as problem input to algorithms that compute properties of molecules, such as the ground state energy, so at least one such library/program should be installed. As you can choose which driver you use, you can install as many, or as few as you wish, that are supported by your platform etc."
msgstr "Qiskit Natureは、1体、2体積分などの分子情報を計算するドライバーを介して、異なる古典ライブラリやプログラムの使用をサポートしています。 これは分子の性質、例えば基底状態のエネルギーを計算するアルゴリズムへの問題入力として必要となります。 ですので、少なくとも1つのライブラリ/プログラムをインストールする必要があります。 どのドライバーを使用するか選択できるので、できるだけ多くインストールすることも、必要な数だけインストールすることも、プラットフォームなどによってサポートされている数だけインストールすることもできます。"

#: ../../getting_started.rst:105
msgid "See `Driver installation <./apidocs/qiskit_nature.second_q.drivers.html>`__ which lists each driver and how to install the dependent library/program that it requires."
msgstr "各ドライバーのリストや必要な依存ライブラリ/プログラムのインストール方法については、`ドライバーのインストール <./apidocs/qiskit_nature.second_q.drivers.html>`__ を参照してください。"

#: ../../getting_started.rst:108
msgid "Additionally, you may find the following optional dependencies useful:"
msgstr "さらに、以下のオプションの依存関係が役立つ場合があります。"

#: ../../getting_started.rst:110
msgid "`sparse <https://github.com/pydata/sparse/>`_, a library for sparse multi-dimensional arrays. When installed, Qiskit Nature can leverage this to reduce the memory requirements of your calculations."
msgstr "`sparse <https://github.com/pydata/sparse/>`_ スパース多次元配列のライブラリ。インストールすると、Qiskit Natureがこれを利用して計算のメモリ要件を減らすことができます。"

#: ../../getting_started.rst:111
msgid "`opt_einsum <https://github.com/dgasmith/opt_einsum>`_, a tensor contraction order optimizer for ``np.einsum``."
msgstr "`opt_einsum <https://github.com/dgasmith/opt_einsum>`_ ``np.einsum``のためのテンソルの縮約順序オプティマイザー"

#: ../../getting_started.rst:116
msgid "Ready to get going?..."
msgstr "準備はいいですか？..."

#: ../../getting_started.rst:118
msgid "Now that Qiskit Nature is installed, let's try a chemistry application experiment using the :class:`~qiskit.algorithms.minimum_eigensolvers.VQE` (Variational Quantum Eigensolver) algorithm to compute the ground-state (minimum) energy of a molecule."
msgstr "Qiskit Natureがインストールされたので、分子の基底状態 (最小) エネルギーを計算するための :class:`~qiskit.algorithms.minimum_eigensolvers.VQE` (Variational Quantum Eigensolver) アルゴリズムを使用して化学アプリケーションの実験を試してみましょう。"

#: ../../getting_started.rst:208
msgid "The program above computes the ground state energy of molecular Hydrogen, H<sub>2</sub>, where the two atoms are configured to be at a distance of 0.735 angstroms. The molecular input specification is processed by the PySCF driver. This driver produces an :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` which gathers all the problem information required by Qiskit Nature. The second-quantized operators contained in that problem can be mapped to qubit operators with a :class:`~qiskit_nature.second_q.mappers.QubitMapper`. Here, we chose the :class:`~qiskit_nature.second_q.mappers.ParityMapper` which automatically removes 2 qubits due to inherit symmetries when the `num_particles` are provided to it; a reduction in complexity that is particularly advantageous for NISQ computers."
msgstr "上記プログラムは、2つの原子が0.735オングストロームの距離で構成されている水素分子 H<sub>2</sub> の基底エネルギーを計算します。分子の入力仕様はPySCFドライバーにより処理されます。ドライバーはQiskit Natureが要求するすべての問題情報を集めた :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` クラスを生成します。その問題に含まれた第２量子化オペレーターは、 :class:`~qiskit_nature.second_q.mappers.QubitMapper` クラスと量子ビット・オペレーターにマップされます。ここで、 `num_particles` が与えられたとき対称性を継承するため２量子ビットを自動的に除去する :class:`~qiskit_nature.second_q.mappers.ParityMapper` クラスを選択します。NISQコンピューターでは特に有用な複雑さの軽減を実現しています。"

#: ../../getting_started.rst:221
msgid "For actually finding the ground state solution, the Variational Quantum Eigensolver (:class:`~qiskit.algorithms.minimum_eigensolvers.VQE`) algorithm is used. Its main three components are the estimator primitive (:class:`~qiskit.primitives.Estimator`), wavefunction ansatz (:class:`~qiskit_nature.second_q.circuit.library.UCCSD`), and optimizer (:class:`~qiskit.algorithms.optimizers.L_BFGS_B`). The :class:`~qiskit_nature.second_q.circuit.library.UCCSD` component is the only one provided directly by Qiskit Nature and it is usually paired with the :class:`~qiskit_nature.second_q.circuit.library.HartreeFock` initial state and an all-zero initial point for the optimizer."
msgstr "基底状態の解を実際に見つけるために、Variational Quantum Eigensolver (:class:`~qiskit.algorithms.minimum_eigensolvers.VQE`) アルゴリズムが使用されます。主な 3 つの構成要素は、estimator primitive (:class:`~qiskit.primitives.Estimator`)、波動関数ansatz (:class:`~qiskit_nature.second_q.circuit.library.UCCSD`)、およびオプティマイザー (:class:`~qiskit.algorithms.optimizers.L_BFGS_B`) です。 :class:`~qiskit_nature.second_q.circuit.library.UCCSD` コンポーネントは、直接 Qiskit Natureによって提供される唯一のコンポーネントであり、通常は :class:`~qiskit_nature.second_q.circuit.library.HartreeFock` の初期状態と最適化プログラムのすべてのゼロの初期点と対になっています。"

#: ../../getting_started.rst:232
msgid "The entire problem is then solved using a :class:`~qiskit_nature.second_q.algorithms.GroundStateEigensolver` which wraps both, the :class:`~qiskit_nature.second_q.mappers.ParityMapper` and :class:`~qiskit.algorithms.minimum_eigensolvers.VQE`. Since an :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` is provided to it (which was the output of the :class:`~qiskit_nature.second_q.drivers.PySCFDriver`) it also returns an :class:`~qiskit_nature.second_q.problems.ElectronicStructureResult`."
msgstr "問題全体は、:class:`~qiskit_nature.second_q.mappers.ParityMapper` と :class:`~qiskit.algorithms.minimum_eigensolvers.VQE`の両方をラップする :class:`~qiskit_nature.second_q.algorithms.GroundStateEigensolver` で解決されます。 :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` が提供されているので( :class:`~qiskit_nature.second_q.drivers.PySCFDriver`の出力)、 :class:`~qiskit_nature.second_q.problems.ElectronicStructureResult` も返します。"

