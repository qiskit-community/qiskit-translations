msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-28 15:28+0000\n"
"PO-Revision-Date: 2023-11-29 13:34\n"
"Last-Translator: \n"
"Language: te\n"
"Language-Team: Telugu\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: te\n"
"X-Crowdin-File: /main/nature/docs/locale/en/LC_MESSAGES/migration/0.6_b_mes_factory.po\n"
"X-Crowdin-File-ID: 9987\n"

#: ../../migration/0.6_b_mes_factory.rst:2
msgid "The (Minimum)EigensolverFactory Migration Guide"
msgstr "`(Minimum)EigensolverFactory మైగ్రేషన్ గైడ్`_"

#: ../../migration/0.6_b_mes_factory.rst:4
msgid "All the factory classes which could be used to construct :class:`~qiskit.algorithms.minimum_eigensolvers.MinimumEigensolver` or :class:`~qiskit.algorithms.eigensolvers.Eigensolver` objects have been deprecated as part of version 0.6 of Qiskit Nature."
msgstr ":class:`~qiskit.algorithms.minimum_eigensolvers.MinimumEigensolver` లేదా :class:`~qiskit.algorithms.eigensolvers.Eigensolver` ఒబ్జెచ్త్స్ నిర్మించడానికి ఉపయోగించబడే అన్ని ఫ్యాక్టరీ క్లాస్లు Qiskit Nature వెర్షన్ 0.6లో భాగంగా \n"
"తిరస్కరించబడ్డాయి."

#: ../../migration/0.6_b_mes_factory.rst:9
msgid "Their benefit over an improved documentation on how to properly set these algorithms up for use with Qiskit Nature has diminished over time. Thus, you can now find proper **How-to guides**, as listed below, detailing how you can achieve the same functionality which used to be provided by these classes. The table below summarizes where you need to look for the steps to replace a factory class:"
msgstr "Qiskit Natureతో ఉపయోగం కోసం ఈ అల్గారిథమ్‌లను ఎలా సరిగ్గా సెటప్ చేయాలనే దానిపై మెరుగైన డాక్యుమెంటేషన్‌పై వారి ప్రయోజనం కాలక్రమేణా తగ్గిపోయింది. ఈ విధంగా, మీరు ఇప్పుడు సరైన **ఎలా-చేయాలి గైడ్‌లను** కనుగొనవచ్చు, దిగువ జాబితా చేయబడినట్లుగా, ఈ క్లాస్ ల ద్వారా అందించబడిన అదే కార్యాచరణను మీరు ఎలా సాధించవచ్చో వివరిస్తారు. ఫ్యాక్టరీ క్లాస్ ని భర్తీ చేయడానికి మీరు దశల కోసం ఎక్కడ వెతకాలి అని దిగువ పట్టిక సంగ్రహిస్తుంది:"

#: ../../migration/0.6_b_mes_factory.rst:14
msgid "(Minimum)EigensolverFactory Replacements"
msgstr "(Minimum)EigensolverFactory ప్రత్యామ్నాయాలు"

#: ../../migration/0.6_b_mes_factory.rst:17
msgid "Legacy class"
msgstr "లెగసీ క్లాస్"

#: ../../migration/0.6_b_mes_factory.rst:18
msgid "How-to guide"
msgstr "ఎలా-మార్గనిర్దేశం చేయాలి"

#: ../../migration/0.6_b_mes_factory.rst:19
msgid ":class:`~qiskit_nature.second_q.algorithms.NumPyEigensolverFactory`"
msgstr ":class:` ~ qiskit_nature.second_q.algorithms.NumPyEigensolverFactory `"

#: ../../migration/0.6_b_mes_factory.rst:20
msgid ":ref:`Finding excited state energies with a NumPyEigensolver <how-to-numpy>`"
msgstr ":ref:` NumPyEigensolverతో ఎక్ససీటెడ్ స్టేట్ ఎనర్జీలను కనుగొనడం <how-to-numpy>`"

#: ../../migration/0.6_b_mes_factory.rst:21
msgid ":class:`~qiskit_nature.second_q.algorithms.NumPyMinimumEigensolverFactory`"
msgstr ":class:`~qiskit_nature.second_q.algorithms.NumPyMinimumEigensolverFactory`"

#: ../../migration/0.6_b_mes_factory.rst:22
msgid ":ref:`Finding the ground state energy with a NumPyMinimumEigensolver <how-to-numpy-min>`"
msgstr ":ref:` NumPyMinimumEigensolverతో గ్రౌండ్ స్టేట్ ఎనర్జీని కనుగొనడం <how-to-numpy-min>`"

#: ../../migration/0.6_b_mes_factory.rst:23
msgid ":class:`~qiskit_nature.second_q.algorithms.VQEUCCFactory`"
msgstr ":class:`~qiskit_nature.second_q.algorithms.VQEUCCFactory`"

#: ../../migration/0.6_b_mes_factory.rst:24
msgid ":ref:`Using a UCC-like ansatz with a VQE <how-to-vqe-ucc>`"
msgstr ":ref:`VQEతో UCC లాంటి అన్సట్జ్ని ఉపయోగించడం <how-to-vqe-ucc>`"

#: ../../migration/0.6_b_mes_factory.rst:25
msgid ":class:`~qiskit_nature.second_q.algorithms.VQEUVCCFactory`"
msgstr ":class:`~qiskit_nature.second_q.algorithms.VQEUVCCFactory`"

#: ../../migration/0.6_b_mes_factory.rst:26
msgid ":ref:`Using a UVCC-like ansatz with a VQE <how-to-vqe-uvcc>`"
msgstr ":ref:`VQEతో UVCC లాంటి అన్సట్జ్ని ఉపయోగించడం<how-to-vqe-uvcc>`"

#: ../../migration/0.6_b_mes_factory.rst:28
msgid "To make the transition to these guides easier, we provide one example for the :class:`~qiskit_nature.second_q.algorithms.VQEUCCFactory` and one for the :class:`~qiskit_nature.second_q.algorithms.NumPyEigensolverFactory` below."
msgstr "ఈ గైడ్‌లకు బదిలీని సులభతరం చేయడానికి, మేము దీనికి ఒక ఉదాహరణను అందిస్తాము :class:` ~ qiskit_nature.second_q.algorithms.VQEUCCFactory ` మరియు :class:` ~ qiskit_nature.second_q.algorithms.NumPyEigensolverFactory ` కోసం ఒకటి."

#: ../../migration/0.6_b_mes_factory.rst:33
msgid "Setup"
msgstr "సెట్ అప్"

#: ../../migration/0.6_b_mes_factory.rst:35
msgid "For the following examples, we need a simple :class:`~qiskit_nature.second_q.problems.ElectronicStructureProblem` which we can obtain from a :class:`~qiskit_nature.second_q.drivers.PySCFDriver` like so:"
msgstr "కింది ఉదాహరణల కోసం, మనకు సాధారణ :class:` ~ qiskit_nature.second_q.problems.ElectronicStructureProblem` అవసరం` ఇది మనం :class:`~ qiskit_nature.second_q.drivers.PySCFDriver ` వంటి క్లాస్ నుండి పొందవచ్చు :"

#: ../../migration/0.6_b_mes_factory.rst:57
msgid "VQEUCCFactory"
msgstr "VQEUCCFactory"

#: ../../migration/0.6_b_mes_factory.rst:59
#: ../../migration/0.6_b_mes_factory.rst:117
msgid "The old way:"
msgstr "పాత పద్ధతి:"

#: ../../migration/0.6_b_mes_factory.rst:79
#: ../../migration/0.6_b_mes_factory.rst:141
msgid "And the corresponding new way:"
msgstr "మరియు సంబంధిత కొత్త పద్దతి:"

#: ../../migration/0.6_b_mes_factory.rst:115
msgid "NumPyEigensolverFactory"
msgstr "NumPyEigensolverFactory"

