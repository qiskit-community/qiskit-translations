msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-09 14:51+0000\n"
"PO-Revision-Date: 2021-09-28 08:47\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/07_leveraging_qiskit_runtime.po\n"
"X-Crowdin-File-ID: 9678\n"
"Language: ta_IN\n"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:9
msgid "This page was generated from `docs/tutorials/07_leveraging_qiskit_runtime.ipynb`__."
msgstr "இந்தப் பக்கம் `docs/tutorials/07_leveraging_qiskit_runtime.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:9
msgid "Leveraging Qiskit Runtime"
msgstr "Qiskit இயக்க நேரத்தை மேம்படுத்துதல்"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:20
msgid "Iterative algorithms, such as the Variational Quantum Eigensolver (VQE), traditionally send one batch of circuits (one “job”) to be executed on the quantum device in each iteration. Sending a job involves certain overhead, mainly"
msgstr "வேரியேஷனல் குவாண்டம் ஈஜென்சால்வர் (VQE) போன்ற வழக்கமான வழிமுறைகள், ஒவ்வொரு மறு செய்கையிலும் குவாண்டம் சாதனத்தில் செயல்படுத்தப்படும் ஒரு தொகுதி சுற்றுகளை (ஒரு \"வேலை\") பாரம்பரியமாக அனுப்புகின்றன. ஒரு வேலையை அனுப்புவது முக்கியமாக சில மேல்நிலைகளை உள்ளடக்கியது"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:22
msgid "the time to process the requests and send the data (API overhead, usually about 10s)"
msgstr "கோரிக்கைகளை செயலாக்க மற்றும் தரவை அனுப்ப நேரம் (API மேல்நிலை, பொதுவாக சுமார் 10 கள்)"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:23
msgid "the job queue time, that is how long you have to wait before it’s your turn to run on the device (usually about 2min)"
msgstr "வேலை வரிசை நேரம், சாதனத்தில் இயங்குவதற்கான உங்கள் முறை வரும் வரை நீங்கள் எவ்வளவு நேரம் காத்திருக்க வேண்டும் (வழக்கமாக சுமார் 2 நிமிடங்கள்)"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:25
msgid "If we send hundreds of jobs iteratively, this overhead quickly dominates the execution time of our algorithm. Qiskit Runtime allows us to tackle these issues and significantly speed up (especially) iterative algorithms. With Qiskit Runtime, one job does not contain only a batch of circuits but the *entire* algorithm. That means we only experience the API overhead and queue wait *once* instead of in every iteration! You’ll be able to either upload algorithm parameters and delegate all the complexity to the cloud, where your program is executed, or upload your personal algorithm directly."
msgstr "நாங்கள் நூற்றுக்கணக்கான வேலைகளை மீண்டும் மீண்டும் அனுப்பினால், இந்த மேல்நிலை எங்கள் வழிமுறையின் செயல்பாட்டு நேரத்தை விரைவாக ஆதிக்கம் செலுத்துகிறது. Qiskit இயக்க நேரம் இந்த சிக்கல்களைச் சமாளிக்கவும், (குறிப்பாக) மறு செயல்பாட்டு வழிமுறைகளை கணிசமாக வேகப்படுத்தவும் அனுமதிக்கிறது. Qiskit இயக்க நேரத்துடன், ஒரு வேலையில் ஒரு தொகுதி சுற்றுகள் மட்டும் இல்லை ஆனால் *முழு* வழிமுறையும் உள்ளது. அதாவது ஒவ்வொரு மறு செய்கையிலும் *ஒரு முறை* API மேல்நிலை மற்றும் வரிசை காத்திருப்பை மட்டுமே நாங்கள் அனுபவிக்கிறோம்! நீங்கள் அல்காரிதம் அளவுருக்களை பதிவேற்றலாம் மற்றும் உங்கள் நிரல் செயல்படுத்தப்படும் மேகக்கணிக்கு அனைத்து சிக்கல்களையும் வழங்கலாம் அல்லது உங்கள் தனிப்பட்ட வழிமுறையை நேரடியாக பதிவேற்றலாம்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:28
msgid "For the VQE, the integration of Qiskit Runtime in your existing code is a piece of cake. There is a (almost) drop-in replacement, called ``VQEProgram`` for the ``VQE`` class."
msgstr "VQE க்கு, உங்கள் தற்போதைய குறியீட்டில் Qiskit இயக்க நேரத்தின் ஒருங்கிணைப்பு ஒரு துண்டு கேக் ஆகும். ``VQE`` வகுப்பிற்கு ``VQEProgram`` எனப்படும் (கிட்டத்தட்ட) டிராப்-இன் மாற்று உள்ளது."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:30
msgid "Let’s see how you can leverage the runtime on a simple chemistry example: Finding the ground state energy of the lithium hydrate (LiH) molecule at a given bond distance."
msgstr "ஒரு எளிய வேதியியல் உதாரணத்தில் நீங்கள் இயக்க நேரத்தை எவ்வாறு மேம்படுத்துவது என்று பார்ப்போம்: கொடுக்கப்பட்ட பிணைப்பு தூரத்தில் லித்தியம் ஹைட்ரேட் (LiH) மூலக்கூறின் தரை நிலை ஆற்றலைக் கண்டறிதல்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:42
msgid "Problem specification: LiH molecule"
msgstr "சிக்கல் விவரக்குறிப்பு: LiH மூலக்கூறு"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:44
msgid "First, we specify the molecule whose ground state energy we seek. Here, we look at LiH with a bond distance of 2.5 Å."
msgstr "முதலில், மூலக்கூறின் நிலத்தடி ஆற்றலை நாம் தேடுகிறோம். இங்கே, நாங்கள் 2.5 Å பிணைப்பு தூரத்துடன் LiH ஐப் பார்க்கிறோம்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:105
msgid "Classical reference solution"
msgstr "கிளாசிக்கல் குறிப்பு தீர்வு"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:116
msgid "As a reference solution we can solve this system classically with the ``NumPyEigensolver``."
msgstr "குறிப்பு தீர்வாக நாம் இந்த அமைப்பை ``NumPyEigensolver`` மூலம் கிளாசிக்கல் முறையில் தீர்க்க முடியும்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:175
msgid "VQE"
msgstr ""

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:177
msgid "To run the VQE we need to select a parameterized quantum circuit acting as ansatz and a classical optimizer. Here we’ll choose a heuristic, hardware efficient ansatz and the SPSA optimizer."
msgstr "VQE ஐ இயக்க நாம் அன்சட்ஸ் மற்றும் கிளாசிக்கல் ஆப்டிமைசராக செயல்படும் ஒரு அளவுரு குவாண்டம் சர்க்யூட்டை தேர்ந்தெடுக்க வேண்டும். இங்கே நாம் ஒரு ஹியூரிஸ்டிக், வன்பொருள் திறமையான அன்சட்ஸ் மற்றும் SPSA ஆப்டிமைசரை தேர்ந்தெடுப்போம்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:225
msgid "Before executing the VQE in the cloud using Qiskit Runtime, let’s execute a local VQE first."
msgstr "Qiskit இயக்க நேரத்தைப் பயன்படுத்தி கிளவுட்டில் VQE ஐ செயல்படுத்துவதற்கு முன், முதலில் ஒரு லோக்கல் VQE ஐ இயக்கலாம்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:306
msgid "Runtime VQE"
msgstr "இயக்க நேரம் VQE"

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:308
msgid "Let’s exchange the eigensolver from a local VQE algorithm to a VQE executed using Qiskit Runtime – simply by exchanging the ``VQE`` class by the ``VQEProgram``."
msgstr "ஒரு லோக்கல் VQE அல்காரிதத்தில் இருந்து ஒரு VQE க்கு Qiskit Runtime- ஐ பயன்படுத்தி செயல்படுத்தப்படும் Eigensolver ஐ மாற்றுவோம் - ``VQEProgram`` மூலம் ``VQE`` வகுப்பை பரிமாறிக்கொள்வதன் மூலம்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:310
msgid "First, we’ll have to load a provider to access Qiskit Runtime. **Note:** You have to replace the next cell with your provider."
msgstr "முதலில், Qiskit இயக்க நேரத்தை அணுக ஒரு வழங்குநரை ஏற்ற வேண்டும். **குறிப்பு**: அடுத்த கலத்தை உங்கள் வழங்குநரிடம் மாற்ற வேண்டும்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:336
msgid "Now we can set up the ``VQEProgram``. In this first release, the optimizer must be provided as a dictionary, in future releases you’ll be able to pass the same optimizer object as in the traditional VQE."
msgstr "இப்போது நாம் ``VQEProgram`` ஐ அமைக்கலாம். இந்த முதல் வெளியீட்டில், ஆப்டிமைசர் ஒரு அகராதியாக வழங்கப்பட வேண்டும், எதிர்கால வெளியீடுகளில் நீங்கள் பாரம்பரிய VQE இல் உள்ள அதே ஆப்டிமைசர் பொருளை அனுப்ப முடியும்."

#: ../../tutorials/07_leveraging_qiskit_runtime.ipynb:413
msgid "If we are interested in the development of the energy, the ``VQEProgram`` allows access to the history of the optimizer, which contains the loss per iteration (along with the parameters and a timestamp). We can access this data via the ``raw_result`` attribute of the ground state solver."
msgstr "ஆற்றலின் வளர்ச்சியில் நாம் ஆர்வமாக இருந்தால், ``VQEProgram`` ஆப்டிமைசரின் வரலாற்றை அணுக அனுமதிக்கிறது, இதில் மறு செய்கை இழப்பு (அளவுருக்கள் மற்றும் நேர முத்திரையுடன்) உள்ளது. தரை நிலை கரைப்பானின் ``raw_result`` பண்பு வழியாக இந்தத் தரவை நாம் அணுகலாம்."

