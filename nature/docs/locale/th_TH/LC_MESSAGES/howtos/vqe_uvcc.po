msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-01 15:27+0000\n"
"PO-Revision-Date: 2023-08-14 19:48\n"
"Last-Translator: \n"
"Language: th\n"
"Language-Team: Thai\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: th\n"
"X-Crowdin-File: /main/nature/docs/locale/en/LC_MESSAGES/howtos/vqe_uvcc.po\n"
"X-Crowdin-File-ID: 9971\n"

#: ../../howtos/vqe_uvcc.rst:4
msgid "Use a UVCC-like ansatz with a VQE"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:6
msgid "When using a :class:`~qiskit_nature.second_q.circuit.library.UVCC`-style ansatz with a :class:`~qiskit.algorithms.minimum_eigensolvers.VQE` one needs to pay particular attention to the :attr:`~qiskit.algorithms.minimum_eigensolvers.VQE.initial_point` attribute which indicates from which set of initial parameters the optimization routine should start. By default, VQE will start from a *random* initial point. In this how to we show how one can set a custom initial point instead (for example to guarantee that one starts from the VSCF state)."
msgstr ""

#: ../../howtos/vqe_uvcc.rst:14
msgid "The basics of this how-to are identical to the UCC-like ansatz how-to (TODO: add link). Thus, here we will simply show how to use the :class:`~qiskit_nature.second_q.algorithms.initial_points.VSCFInitialPoint` like so:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:18
msgid "Assuming we already have our :class:`~qiskit_nature.second_q.problems.VibrationalStructureProblem` and :class:`~qiskit_nature.second_q.mappers.QubitMapper`:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:29
msgid "We setup our ansatz:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:43
msgid "We setup a :class:`~qiskit.algorithms.minimum_eigensolvers.VQE`:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:53
msgid "Now comes the key step: choosing the initial point. Since we picked the :class:`~qiskit_nature.second_q.circuit.library.VSCF` initial state before, in order to ensure we start from that, we need to initialize our ``initial_point`` with all-zero parameters. One way to do that is like so:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:62
msgid "Alternatively, one can also use :class:`~qiskit_nature.second_q.algorithms.initial_points.VSCFInitialPoint` like so:"
msgstr ""

#: ../../howtos/vqe_uvcc.rst:73
msgid "Just like in the :ref:`UCC-ansatz case <how-to-vqe-ucc>`, this is mostly useful when building more code on top of the :class:`~qiskit_nature.second_q.algorithms.initial_points.InitialPoint` interface."
msgstr ""

