msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-13 20:52+0000\n"
"PO-Revision-Date: 2021-10-13 21:23\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/01_electronic_structure.po\n"
"X-Crowdin-File-ID: 9666\n"
"Language: ko_KR\n"

#: ../../tutorials/01_electronic_structure.ipynb:9
msgid "This page was generated from `docs/tutorials/01_electronic_structure.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/01_electronic_structure.ipynb`__ 에서 생성되었다."

#: ../../tutorials/01_electronic_structure.ipynb:9
msgid "Electronic structure"
msgstr "전자 구조"

#: ../../tutorials/01_electronic_structure.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/01_electronic_structure.ipynb:23
msgid "The molecular Hamiltonian is"
msgstr "분자 해밀톤은"

#: ../../tutorials/01_electronic_structure.ipynb:25
msgid "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"
msgstr "\\mathcal{H} = - \\sum_I \\frac{\\nabla_{R_I}^2}{M_I} - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|} + \\sum_I\\sum_{J>I} \\frac{Z_I Z_J e^2}{|R_I-R_J|}"

#: ../../tutorials/01_electronic_structure.ipynb:30
msgid "Because the nuclei are much heavier than the electrons they do not move on the same time scale and therefore, the behavior of nuclei and electrons can be decoupled. This is the Born-Oppenheimer approximation."
msgstr "핵들은 동일한 시간 축척으로 이동하지 않는 전자들보다 훨씬 더 무거운 것이기 때문에, 핵들 및 전자들의 거동은 분리될 수 있다. 이것은 Born-Oppenheimer 근사치이다."

#: ../../tutorials/01_electronic_structure.ipynb:32
msgid "Therefore, one can first tackle the electronic problem with nuclear coordinate entering only as parameters. The energy levels of the electrons in the molecule can be found by solving the non-relativistic time independent Schroedinger equation,"
msgstr "그러므로, 핵 좌표를 매개 변수로만 입력하는 전자 문제를 먼저 다룰 수 있다. 분자 내의 전자의 에너지 수준은 비-상대성의 시간 독립적인 Schrodinger 방정식을 해결함으로써 발견될 수 있다."

#: ../../tutorials/01_electronic_structure.ipynb:34
msgid "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"
msgstr "\\mathcal{H}_{\\text{el}} |\\Psi_{n}\\rangle = E_{n} |\\Psi_{n}\\rangle"

#: ../../tutorials/01_electronic_structure.ipynb:39
msgid "where"
msgstr "여기서"

#: ../../tutorials/01_electronic_structure.ipynb:41
msgid "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."
msgstr "\\mathcal{H}_{\\text{el}} = - \\sum_i \\frac{\\nabla_{r_i}^2}{m_e} - \\sum_I\\sum_i  \\frac{Z_I e^2}{|R_I-r_i|} + \\sum_i \\sum_{j>i} \\frac{e^2}{|r_i-r_j|}."

#: ../../tutorials/01_electronic_structure.ipynb:46
msgid "In particular the ground state energy is given by:"
msgstr "특히, 바닥 상태 에너지는 다음과 같다:"

#: ../../tutorials/01_electronic_structure.ipynb:48
msgid "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"
msgstr "E_0 = \\frac{\\langle \\Psi_0 | H_{\\text{el}} | \\Psi_0 \\rangle}{\\langle \\Psi_0 | \\Psi_0 \\rangle}"

#: ../../tutorials/01_electronic_structure.ipynb:53
msgid "where :math:`\\Psi_0` is the ground state of the system."
msgstr "여기서 :math:`\\Psi_0` 는 시스템의 바닥 상태이다."

#: ../../tutorials/01_electronic_structure.ipynb:55
msgid "However, the dimensionality of this problem grows exponentially with the number of degrees of freedom. To tackle this issue we would like to prepare :math:`\\Psi_0` on a quantum computer and measure the Hamiltonian expectation value (or :math:`E_0`) directly."
msgstr "그러나, 이 문제의 차원은 자유도의 수에 따라 기하급수적으로 증가한다. 이러한 문제를 해결하기 위해 우리는 양자 컴퓨터에 :math:`\\Psi_0` 을 준비하고 Hamiltonian 기대값 (또는 :math:`E_0`) 을 직접 측정하고자 한다."

#: ../../tutorials/01_electronic_structure.ipynb:57
msgid "So how do we do that concretely?"
msgstr "그러면 어떻게 구체적으로 표현할 수 있을까?"

#: ../../tutorials/01_electronic_structure.ipynb:69
msgid "The Hartree-Fock initial state"
msgstr "Hartree-Fock 초기 상태"

#: ../../tutorials/01_electronic_structure.ipynb:71
msgid "A good starting point for solving this problem is the Hartree-Fock (HF) method. This method approximates a N-body problem into N one-body problems where each electron evolves in the mean-field of the others. Classically solving the HF equations is efficient and leads to the exact exchange energy but does not include any electron correlation. Therefore, it is usually a good starting point to start adding correlation."
msgstr "이 문제를 해결하기 위한 좋은 출발점은 HF (Hartree-Fock)방식이다. 이 방법은 다체 문제를, 각각의 전자가 다른 것들의 평균-장에서 진화하는 N개의 일체 문제 (one-body problem)로 근사화한다. HF 방정식을 고전적으로 해결하는 것은 효율적이며 정확한 교환 에너지를 유도하지만 어떠한 전자 상관관계도 포함하지 않는다. 따라서 일반적으로 상관관계 추가를 시작하는 것이 좋은 출발점이다."

#: ../../tutorials/01_electronic_structure.ipynb:73
msgid "The Hamiltonian can then be re-expressed in the basis of the solutions of the HF method, also called Molecular Orbitals (MOs):"
msgstr "이어서, Hamiltonian은 또한 분자 오비탈 (Molecular Orbitals, MOs)이라고도 불리는 HF 방법의 풀이에 기초하여 다시 표현될 수 있다."

#: ../../tutorials/01_electronic_structure.ipynb:75
msgid "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"
msgstr "\\hat{H}_{elec}=\\sum_{pq} h_{pq} \\hat{a}^{\\dagger}_p \\hat{a}_q +\n"
"\\frac{1}{2} \\sum_{pqrs} h_{pqrs}  \\hat{a}^{\\dagger}_p \\hat{a}^{\\dagger}_q \\hat{a}_r  \\hat{a}_s"

#: ../../tutorials/01_electronic_structure.ipynb:81
msgid "with the 1-body integrals"
msgstr "일체 적분은 다음과 같고,"

#: ../../tutorials/01_electronic_structure.ipynb:83
msgid "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)dr"
msgstr "h_{pq} = \\int \\phi^*_p(r) \\left( -\\frac{1}{2} \\nabla^2 - \\sum_{I} \\frac{Z_I}{R_I- r} \\right)   \\phi_q(r)dr"

#: ../../tutorials/01_electronic_structure.ipynb:88
msgid "and 2-body integrals"
msgstr "이체 적분은 다음과 같다"

#: ../../tutorials/01_electronic_structure.ipynb:90
msgid "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}dr_1dr_2."
msgstr "h_{pqrs} = \\int \\frac{\\phi^*_p(r_1)  \\phi^*_q(r_2) \\phi_r(r_2)  \\phi_s(r_1)}{|r_1-r_2|}dr_1dr_2."

#: ../../tutorials/01_electronic_structure.ipynb:95
msgid "The MOs (:math:`\\phi_u`) can be occupied or virtual (unoccupied). One MO can contain 2 electrons. However, in what follows we actually work with Spin Orbitals which are associated with a spin up (:math:`\\alpha`) of spin down (:math:`\\beta`) electron. Thus Spin Orbitals can contain one electron or be unoccupied."
msgstr "MOs (:math:`\\phi_u`)는 점유되거나 가상 (점유되지 않은, 비어있는)의 오비탈이 될 수 있다. 하나의 MO는 두 개의 전자를 포함할 수 있다. 그러나 스핀 다운 (:math:`\\beta`)전자의 스핀 업 (:math:`\\alpha`)과 연관된 스핀오비탈 (Spin Orbitals)과 실제로 작업하는 것은 다음과 같다. 따라서, 스핀오비탈은 하나의 전자를 포함하거나 비어있을 수 있다."

#: ../../tutorials/01_electronic_structure.ipynb:97
msgid "We now show how to concretely realise these steps with Qiskit."
msgstr "이제 Qiskit 으로 이러한 단계를 구체화하는 방법을 설명한다."

#: ../../tutorials/01_electronic_structure.ipynb:108
msgid "Qiskit is interfaced with different classical codes which are able to find the HF solutions. Interfacing between Qiskit and the following codes is already available: \\* Gaussian \\* Psi4 \\* PyQuante \\* PySCF"
msgstr "Qiskit은 HF 솔루션을 찾을 수 있는 다양한 고전 코드와 호환된다. Qiskit과 호환되는 사용가능한 코드는 다음과 같다: \\* Gaussian\\* Psi4\\* PyQuante\\* PySCF"

#: ../../tutorials/01_electronic_structure.ipynb:110
msgid "In the following we set up a PySCF driver, for the hydrogen molecule at equilibrium bond length (0.735 angstrom) in the singlet state and with no charge."
msgstr "다음은 수소 분자를 전하가 없는 단일항 상태(singlet state)의 평형 결합 길이 (0.735 옹스트롬)에 두기 위해 PySCF 드라이버를 설정한다."

#: ../../tutorials/01_electronic_structure.ipynb:178
msgid "For further information about the drivers see https://qiskit.org/documentation/nature/apidocs/qiskit_nature.drivers.second_quantization.html"
msgstr "드라이버에 대한 자세한 정보는 https://qiskit.org/documentation/nature/apidocs/qiskit_nature.drivers.second_quantization.html 를 참조하라"

#: ../../tutorials/01_electronic_structure.ipynb:190
msgid "The mapping from fermions to qubits"
msgstr "페르미온(fermions) 에서 큐비트로의 mapping"

#: ../../tutorials/01_electronic_structure.ipynb:192
msgid "|ce2ee8cf26ca41e0a783fe8fbaceecbe|"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:202
msgid "ce2ee8cf26ca41e0a783fe8fbaceecbe"
msgstr ""

#: ../../tutorials/01_electronic_structure.ipynb:194
msgid "The Hamiltonian given in the previous section is expressed in terms of fermionic operators. To encode the problem into the state of a quantum computer, these operators must be mapped to spin operators (indeed the qubits follow spin statistics)."
msgstr "이전 섹션에서 다룬 Hamiltonian은 페르미온 연산자의 관점에서 표현된다. 문제를 양자 컴퓨터의 상태로 인코딩하기 위해, 이 연산자들은 스핀 연산자에 mapping되어야 한다 (실제로 큐비트는 스핀 통계를 따른다)."

#: ../../tutorials/01_electronic_structure.ipynb:196
msgid "There exist different mapping types with different properties. Qiskit already supports the following mappings: \\* The Jordan-Wigner ‘jordan_wigner’ mapping (über das paulische äquivalenzverbot. In The Collected Works of Eugene Paul Wigner (pp. 109-129). Springer, Berlin, Heidelberg (1993)). \\* The Parity ‘parity’ (The Journal of chemical physics, 137(22), 224109 (2012)) \\* The Bravyi-Kitaev ‘bravyi_kitaev’ (Annals of Physics, 298(1), 210-226 (2002))"
msgstr "다른 특성을 가진 다른 mapping 유형이 있다. Qiskit은 이미 다음과 같은 mapping을 지원한다: \\* The Jordan-Wigner ‘jordan_wigner’ mapping (über das paulische äquivalenzverbot. In The Collected Works of Eugene Paul Wigner (pp. 109-129). Springer, Berlin, Heidelberg (1993)). \\* The Parity ‘parity’ (The Journal of chemical physics, 137(22), 224109 (2012)) \\* The Bravyi-Kitaev ‘bravyi_kitaev’ (Annals of Physics, 298(1), 210-226 (2002))"

#: ../../tutorials/01_electronic_structure.ipynb:198
msgid "The Jordan-Wigner mapping is particularly interesting as it maps each Spin Orbital to a qubit (as shown on the Figure above)."
msgstr "조단 위그너 사상은 (위 그림처럼) 각 스핀 오비탈을 큐비트로 대응시킨다는 점에서 특히 흥미롭다."

#: ../../tutorials/01_electronic_structure.ipynb:200
msgid "Here we set up the Electronic Structure Problem to generate the Second quantized operator and a qubit converter that will map it to a qubit operator."
msgstr "여기서는 Electronic Structure Problem (전자 구조 문제)를 설정하여 두 번째 양자화된 연산자와 이를 큐비트 연산자에 mapping할 큐비트 변환기를 생성한다."

#: ../../tutorials/01_electronic_structure.ipynb:282
msgid "If we now transform this Hamiltonian for the given driver defined above we get our qubit operator:"
msgstr "만약 위처럼 주어진 드라이버로 Hamiltonian을 변환한다면 큐비트 연산자를 얻을 수 있다."

#: ../../tutorials/01_electronic_structure.ipynb:352
msgid "In the minimal (STO-3G) basis set 4 qubits are required. We can reduce the number of qubits by using the Parity mapping, which allows for the removal of 2 qubits by exploiting known symmetries arising from the mapping."
msgstr "최소 (STO-3G) 기준으로 네 개의 큐비트가 필요하다. Mapping에서 발생하는 알려진 대칭을 이용하여 두 개의 큐비트를 제거할 수 있는 Parity mapping을 사용하여 큐비트의 수를 줄일 수 있습니다."

#: ../../tutorials/01_electronic_structure.ipynb:402
msgid "This time only 2 qubits are needed."
msgstr "이번에는 두 개의 큐비트가 필요하다."

#: ../../tutorials/01_electronic_structure.ipynb:413
msgid "Now that the Hamiltonian is ready, it can be used in a quantum algorithm to find information about the electronic structure of the corresponding molecule. Check out our tutorials on Ground State Calculation and Excited States Calculation to learn more about how to do that in Qiskit!"
msgstr "이제 Hamiltonian이 준비되었으므로, 이는 특정 분자에 대응하는 전자 구조에 대한 정보를 찾는 양자 알고리즘에 사용될 수 있다. Qiskit에서 이를 수행하는 방법에 대해 자세히 알아보려면 바닥 상태 계산(Ground State Calculation)과 여기 상태 계산(Excited States Calculation)에 대한 튜토리얼을 참조하자."

