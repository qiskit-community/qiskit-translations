msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-01 17:56+0000\n"
"PO-Revision-Date: 2023-09-01 18:15\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/nature/docs/locale/en/LC_MESSAGES/tutorials/04_excited_states_solvers.po\n"
"X-Crowdin-File-ID: 9672\n"

#: ../../tutorials/04_excited_states_solvers.ipynb:9
msgid "This page was generated from `docs/tutorials/04_excited_states_solvers.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/04_excited_states_solvers.ipynb`__ 에서 생성되었다."

#: ../../tutorials/04_excited_states_solvers.ipynb:9
msgid "Excited states solvers"
msgstr "여기 상태 솔버"

#: ../../tutorials/04_excited_states_solvers.ipynb:21
msgid "Introduction"
msgstr "소개"

#: ../../tutorials/04_excited_states_solvers.ipynb:23
msgid "|bb0ed28f618445719e2a810732c91b5e|"
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:29
msgid "bb0ed28f618445719e2a810732c91b5e"
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the excited states calculation interface of Qiskit Nature. The goal is to compute the excited states of a molecular Hamiltonian. This Hamiltonian can be electronic or vibrational. To know more about the preparation of the Hamiltonian, check out the `Electronic structure <01_electronic_structure.ipynb>`__ and `Vibrational structure tutorials <02_vibrational_structure.ipynb>`__."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "첫 번째 단계는 분자 시스템을 정의하는 것이다. 본 튜토리얼에서, 우리는 수소 분자 해밀토니안의 전자적 부분에 대해서만 계산한다."

#: ../../tutorials/04_excited_states_solvers.ipynb:61
msgid "We will also be sticking to the Jordan-Wigner mapping. To learn more about the various mappers available in Qiskit Nature, check out the `Qubit Mappers tutorial <06_qubit_mappers.ipynb>`__."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:85
msgid "The Solver"
msgstr "솔버 (Solver)"

#: ../../tutorials/04_excited_states_solvers.ipynb:87
msgid "After these steps we need to define a solver. The solver is the algorithm through which the excited states are computed."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:89
msgid "Let's first start with a purely classical example: the ``NumPyEigensolver``. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badly, it can be used on small systems to check the results of the quantum algorithms. Here, we are only interested to look at eigenstates with a given number of particles. To compute only those states a filter function can be passed to the ``NumPyEigensolver``. A default filter function is already implemented in Qiskit Nature which you can use for this purpose."
msgstr "먼저, 순수하게 고전적인 예인 ``NumPyEigensolver`` 로 시작해보자. 이 알고리즘은 해밀토니안을 정확하게 도식화한다. 비록 확장이 어렵지만, 양자 알고리즘의 결과를 확인하기 위해 작은 시스템에 이 알고리즘을 사용할 수 있다. 여기서, 우리는 단지 주어진 입자수를 가지고 있는 eigenstate들을 보는 것에만 관심이 있다. 이들 상태만을 계산하기 위해, 필터 함수가 ``NumPyEigensolver`` 에 전달될 수 있다. 이러한 용도로 사용 할 수 있는 기본 필터 기능은 이미 Qiskit Nature 에 구현되어 있습니다."

#: ../../tutorials/04_excited_states_solvers.ipynb:92
msgid "We also need to specify the number of eigenvalues to be computed by the ``NumPyEigensolver``. For this particular system, we are interested in the ground and first three excited states, so we will set ``k=4`` (which defaults to 1 so be sure to set this, otherwise you will only obtain the ground state!)."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:115
msgid "The excitation energies can also be accessed with the `qEOM algorithm <https://journals.aps.org/prresearch/abstract/10.1103/PhysRevResearch.2.043140>`__. The EOM method finds the excitation energies (differences in energy between the ground state and all :math:`n`\\ th excited states) by solving the following pseudo-eigenvalue problem."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:117
msgid "\\begin{pmatrix}\n"
"    \\text{M} & \\text{Q}\\\\\n"
"    \\text{Q*} & \\text{M*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}\n"
"= E_{0n}\n"
"\\begin{pmatrix}\n"
"    \\text{V} & \\text{W}\\\\\n"
"    -\\text{W*} & -\\text{V*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}"
msgstr "\\begin{pmatrix}\n"
"    \\text{M} & \\text{Q}\\\\\n"
"    \\text{Q*} & \\text{M*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}\n"
"= E_{0n}\n"
"\\begin{pmatrix}\n"
"    \\text{V} & \\text{W}\\\\\n"
"    -\\text{W*} & -\\text{V*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}"

#: ../../tutorials/04_excited_states_solvers.ipynb:138
msgid "with"
msgstr "에 대하여"

#: ../../tutorials/04_excited_states_solvers.ipynb:140
msgid "M_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger},\\hat{\\text{H}}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr "M_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger},\\hat{\\text{H}}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:145
msgid "Q_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{H}}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr "Q_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{H}}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:150
msgid "V_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr "V_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:155
msgid "W_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_\\alpha}^{(\\alpha)})^{\\dagger}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr "W_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_\\alpha}^{(\\alpha)})^{\\dagger}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:160
msgid "Although the previous equation can be solved classically, each matrix element must be measured on the quantum computer with the corresponding ground state. To use the qEOM as a solver in Qiskit, we have to define a ground state calculation first, which will provide the required ground state information to the algorithm. With this the qEOM solver can be initialized like so:"
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:207
msgid "The calculation and results"
msgstr "계산과 결과들"

#: ../../tutorials/04_excited_states_solvers.ipynb:209
msgid "We are now ready to compute the results. Below, we are comparing the results obtained by the exact ``NumPyEigensolver`` with the default filter criterion enabled with the results obtained by the qEOM algorithm."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:563
msgid "One can see from these results that one state is missing from the NumPy results. The reason for this is because the spin is also used as a filter and only singlet states are shown. In the following we use a custom filter function to check our results consistently and only filter out states with the incorrect number of particles (in this case the number of particle is 2) as well as the wrong magnetization (which we enforce to be 0)."
msgstr ""

