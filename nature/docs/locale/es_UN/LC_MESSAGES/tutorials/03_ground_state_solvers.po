msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-15 17:08+0000\n"
"PO-Revision-Date: 2022-07-15 17:59\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/03_ground_state_solvers.po\n"
"X-Crowdin-File-ID: 9670\n"
"Language: es_UN\n"

#: ../../tutorials/03_ground_state_solvers.ipynb:9
msgid "This page was generated from `docs/tutorials/03_ground_state_solvers.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/03_ground_state_solvers.ipynb`__."

#: ../../tutorials/03_ground_state_solvers.ipynb:9
msgid "Ground state solvers"
msgstr "Solucionadores de estado fundamental"

#: ../../tutorials/03_ground_state_solvers.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/03_ground_state_solvers.ipynb:23
msgid "|566be5af0f05468aa3c8b93caa7a3f3f|"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:29
msgid "566be5af0f05468aa3c8b93caa7a3f3f"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the ground state calculation interface of Qiskit Nature. The goal is to compute the ground state of a molecular Hamiltonian. This Hamiltonian can be electronic or vibrational. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibrational structure tutorials."
msgstr "En este tutorial vamos a discutir la interfaz de cálculo del estado fundamental de Qiskit Nature. El objetivo es calcular el estado fundamental de un Hamiltoniano molecular. Este Hamiltoniano puede ser electrónico o vibracional. Para saber más sobre la preparación del Hamiltoniano, consulta los tutoriales de estructura Electrónica y estructura Vibracional."

#: ../../tutorials/03_ground_state_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "El primer paso es definir el sistema molecular. A continuación, pedimos la parte electrónica de una molécula de hidrógeno."

#: ../../tutorials/03_ground_state_solvers.ipynb:69
msgid "The Solver"
msgstr "El Solucionador"

#: ../../tutorials/03_ground_state_solvers.ipynb:71
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr "Después necesitamos definir un solucionador. El solucionador es el algoritmo mediante el cual el estado fundamental es calculado."

#: ../../tutorials/03_ground_state_solvers.ipynb:73
msgid "Let’s first start with a purely classical example: the NumPy minimum eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badly, it can be used on small systems to check the results of the quantum algorithms."
msgstr "Comencemos primero con un ejemplo puramente clásico: el solucionador propio mínimo de NumPy. Este algoritmo diagonaliza exactamente al Hamiltoniano. Aunque escala mal, se puede usar en sistemas pequeños para verificar los resultados de los algoritmos cuánticos."

#: ../../tutorials/03_ground_state_solvers.ipynb:96
msgid "To find the ground state we coul also use the Variational Quantum Eigensolver (VQE) algorithm. The VQE algorithms works by exchanging information between a classical and a quantum computer as depicted in the following figure."
msgstr "Para encontrar el estado fundamental también podríamos usar el algoritmo de Solucionador Propio Cuántico Variacional (Variational Quantum Eigensolver, VQE). El algoritmo VQE funciona intercambiando información entre una computadora clásica y una computadora cuántica, cómo se muestra en la siguiente figura."

#: ../../tutorials/03_ground_state_solvers.ipynb:98
msgid "|a7b4adae31d24e58973eee1111c302be|"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:102
msgid "a7b4adae31d24e58973eee1111c302be"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:100
msgid "Let’s initialize a VQE solver."
msgstr "Inicialicemos un solucionador de VQE."

#: ../../tutorials/03_ground_state_solvers.ipynb:129
msgid "To define the VQE solver one needs two essential elements:"
msgstr "Para definir el solucionador de VQE necesitamos dos elementos esenciales:"

#: ../../tutorials/03_ground_state_solvers.ipynb:131
msgid "A variational form: here we use the Unitary Coupled Cluster (UCC) ansatz (see for instance [Physical Review A 98.2 (2018): 022322]). Since it is a chemistry standard, a factory is already available allowing a fast initialization of a VQE with UCC. The default is to use all single and double excitations. However, the excitation type (S, D, SD) as well as other parameters can be selected."
msgstr "Una forma variacional: aquí utilizamos el ansatz del Clúster Acoplado Unitario (Unitary Coupled Cluster, UCC) (ver por ejemplo [Physical Review A 98.2 (2018): 022322]). Ya que es un estándar en la química, una fábrica que permite una rápida inicialización de un VQE con UCC ya está disponible. Por defecto se usan todas las excitaciones simples y dobles. Sin embargo, se pueden seleccionar las excitaciones de tipo (S, D, SD) así como otros parámetros."

#: ../../tutorials/03_ground_state_solvers.ipynb:132
msgid "An initial state: the initial state of the qubits. In the factory used above, the qubits are initialized in the Hartree-Fock (see the electronic structure tutorial) initial state (the qubits corresponding to occupied MOs are :math:`|1\\rangle` and those corresponding to virtual MOs are :math:`|0\\rangle`."
msgstr "Un estado inicial: el estado inicial de los qubits. En la fabrica usada anteriormente, los qubits son inicializados al estado inicial de Hartree-Fock (ver el tutorial de estructura electrónica), (los qubits que corresponden a orbitales moleculares ocupados son :math:`|1\\rangle` y los que corresponden a orbitales moleculares virtuales son :math:`|0\\rangle`."

#: ../../tutorials/03_ground_state_solvers.ipynb:133
msgid "The backend: this is the quantum machine on which the right part of the figure above will be performed. Here we ask for the perfect quantum emulator (``aer_simulator_statevector``)."
msgstr "El backend: esta es la máquina cuántica en la que se realizará la parte derecha de la figura anterior. Aquí pedimos por el emulador cuántico perfecto (``aer_simulator_statevector``)."

#: ../../tutorials/03_ground_state_solvers.ipynb:135
msgid "One could also use any available ansatz / initial state or even define one’s own. For instance,"
msgstr "Uno podría usar cualquier ansatz / estado inicial disponible, o incluso definir uno propio. Por ejemplo,"

#: ../../tutorials/03_ground_state_solvers.ipynb:171
msgid "The calculation and results"
msgstr "El cálculo y los resultados"

#: ../../tutorials/03_ground_state_solvers.ipynb:173
msgid "We are now ready to run the calculation."
msgstr "Ahora estamos listos para ejecutar el cálculo."

#: ../../tutorials/03_ground_state_solvers.ipynb:283
msgid "We can compare the VQE results to the NumPy exact solver and see that they match."
msgstr "Podemos comparar los resultados de VQE con el solucionador exacto de NumPy y ver que sí coinciden."

#: ../../tutorials/03_ground_state_solvers.ipynb:391
msgid "Using a filter function"
msgstr "Usar una función de filtro"

#: ../../tutorials/03_ground_state_solvers.ipynb:402
msgid "Sometimes the true ground state of the Hamiltonian is not of interest because it lies in a different symmetry sector of the Hilbert space. In this case the NumPy eigensolver can take a filter function to return only the eigenstates with for example the correct number of particles. This is of particular importance in the case of vibrational structure calculations where the true ground state of the Hamiltonian is the vacuum state. A default filter function to check the number of particles is implemented in the different transformations and can be used as follows:"
msgstr "A veces el verdadero estado fundamental del Hamiltoniano no es de interés, ya que yace en un sector de simetría distinto del espacio de Hilbert. En este caso, el solucionador propio de NumPy puede tomar una función filtro para devolver solo los estados propios con, por ejemplo, el número correcto de partículas. Esto es de particular importancia en el caso de los cálculos de estructuras vibracionales donde el verdadero estado fundamental del Hamiltoniano es el estado de vacío cuántico. Una función filtro predeterminada para revisar el número de partículas es implementada en las diferentes transformaciones y puede ser usada como sigue:"

