msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-07 19:00+0000\n"
"PO-Revision-Date: 2022-12-07 19:28\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/10_lattice_models.po\n"
"X-Crowdin-File-ID: 9725\n"
"Language: es_UN\n"

#: ../../tutorials/10_lattice_models.ipynb:9
msgid "This page was generated from `docs/tutorials/10_lattice_models.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/10_lattice_models.ipynb`__."

#: ../../tutorials/10_lattice_models.ipynb:9
msgid "Lattice models"
msgstr "Modelos de retícula"

#: ../../tutorials/10_lattice_models.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/10_lattice_models.ipynb:23
msgid "In quantum physics (including condensed matter physics and high energy physics) we often study models on lattices. For example, when we think about behavior of electrons in a solid, we can study a model defined on a lattice by considering the positions of atoms as lattice points. This notebook demonstrates how we can utilize ``Lattice`` classes to generate various lattice systems such as ``LineLattice``, ``SquareLattice``, ``HyperCubicLattice``, ``TriangularLattice``, and a general lattice. It also includes an example of a lattice model, the Fermi-Hubbard model. We see how we can define the Hamiltonian of the Fermi-Hubbard model for a given lattice using ``FermiHubbardModel`` class."
msgstr "En física cuántica (incluida la física de materia condensada y la física de altas energías), a menudo estudiamos modelos en retículas. Por ejemplo, cuando pensamos en el comportamiento de los electrones en un sólido, podemos estudiar un modelo definido en una malla considerando las posiciones de los átomos como puntos de la retícula. Este cuaderno demuestra cómo podemos utilizar las clases ``Lattice`` para generar varios sistemas de retícula como ``LineLattice``, ``SquareLattice``, ``HyperCubicLattice``, ``TriangularLattice`` y una retícula general. También incluye un ejemplo de modelo de retícula, el modelo Fermi-Hubbard. Vemos cómo podemos definir el Hamiltoniano del modelo de Fermi-Hubbard para una retícula determinada usando la clase ``FermiHubbardModel``."

#: ../../tutorials/10_lattice_models.ipynb:59
msgid "LineLattice"
msgstr "LineLattice"

#: ../../tutorials/10_lattice_models.ipynb:61
msgid "``LineLattice`` provides a one-dimensional lattice. We can construct a one-dimensional lattice as follows."
msgstr "``LineLattice`` proporciona una retícula unidimensional. Podemos construir una malla unidimensional de la siguiente manera."

#: ../../tutorials/10_lattice_models.ipynb:84
msgid "Here, it is visualized."
msgstr "Aquí se visualiza."

#: ../../tutorials/10_lattice_models.ipynb:113
msgid "We can also construct a one-dimensional lattice with the periodic boundary conditions by specifying ``BoundaryCondition.PERIODIC`` as the argument of ``boundary_condition``."
msgstr "También podemos construir una retícula unidimensional con las condiciones de frontera periódicas especificando ``BoundaryCondition.PERIODIC`` como argumento de ``boundary_condition``."

#: ../../tutorials/10_lattice_models.ipynb:146
msgid "When we want to draw the lattice ignoring the boundary conditions, we use the method ``draw_without_boundary``."
msgstr "Cuando queremos dibujar la retícula ignorando las condiciones de frontera, usamos el método ``draw_without_boundary``."

#: ../../tutorials/10_lattice_models.ipynb:175
msgid "We can define real or complex weights for the edges of the lattice. This is done by giving a value to the argument ``edge_parameter``. We can also give a value for the self-loops of the lattice by passing the value for ``onsite_parameter``."
msgstr "Podemos definir pesos reales o complejos para los bordes de la retícula. Esto se hace dando un valor al argumento ``edge_parameter``. También podemos dar un valor para los auto-bucles de la malla pasando el valor de ``onsite_parameter``."

#: ../../tutorials/10_lattice_models.ipynb:294
msgid "The connectivity of the lattice can be seen as the adjacency matrix, which is done by ``to_adjacency_matrix``."
msgstr "La conectividad de la retícula se puede ver como la matriz de adyacencia, que se logra con ``to_adjacency_matrix``."

#: ../../tutorials/10_lattice_models.ipynb:370
msgid "By setting ``weighted=True``, we obtain a Hermitian matrix whose matrix elements are the weights."
msgstr "Al establecer ``weighted=True``, obtenemos una matriz Hermitiana cuyos elementos de matriz son los pesos."

#: ../../tutorials/10_lattice_models.ipynb:480
msgid "SquareLattice"
msgstr "SquareLattice"

#: ../../tutorials/10_lattice_models.ipynb:482
msgid "``SquareLattice`` provides a two-dimensional lattice. Here, we make a two-dimensional lattice with the open boundary conditions."
msgstr "``SquareLattice`` proporciona una retícula bidimensional. Aquí, hacemos una malla bidimensional con las condiciones de frontera abierta."

#: ../../tutorials/10_lattice_models.ipynb:516
msgid "We can specify the boundary conditions for each direction by setting ``boundary_condition`` as a tuple."
msgstr "Podemos especificar las condiciones de frontera para cada dirección estableciendo ``boundary_condition`` como una tupla."

#: ../../tutorials/10_lattice_models.ipynb:553
msgid "Again, we can give weights on the edges and the self-loops of the lattice. Here, it is possible to give weights for each direction as a tuple."
msgstr "Nuevamente, podemos dar pesos en los bordes y los auto-bucles de la retícula. Aquí, es posible dar pesos para cada dirección como una tupla."

#: ../../tutorials/10_lattice_models.ipynb:781
msgid "HyperCubicLattice"
msgstr "HyperCubicLattice"

#: ../../tutorials/10_lattice_models.ipynb:783
msgid "``HyperCubicLattice`` is a generalization of ``LineLattice`` and ``SquareLattice``. It provides an arbitrary d-dimensional lattice. Here, we make a three-dimensional lattice of size 3 by 4 by 5 as an example. The size is given as a tuple, and the boundary conditions can be specified for each direction too. In the example, the boundary conditions are open."
msgstr "``HyperCubicLattice`` es una generalización de ``LineLattice`` y ``SquareLattice``. Proporciona una retícula arbitraria d-dimensional. Aquí, hacemos una malla tridimensional de tamaño 3 por 4 por 5 como ejemplo. El tamaño se da como una tupla y las condiciones de frontera también se pueden especificar para cada dirección. En el ejemplo, las condiciones de frontera están abiertas."

#: ../../tutorials/10_lattice_models.ipynb:810
msgid "We draw the cubic lattice specifying the positions of the lattice points."
msgstr "Dibujamos la retícula cúbica especificando las posiciones de los puntos de la malla."

#: ../../tutorials/10_lattice_models.ipynb:855
msgid "TriangularLattice"
msgstr "TriangularLattice"

#: ../../tutorials/10_lattice_models.ipynb:857
msgid "``TriangularLattice`` provides a triangular lattice, which can be seen as a two-dimensional lattice with diagonal edges. The argument ``boundary_condition`` can take either “open” or “periodic”."
msgstr "``TriangularLattice`` proporciona una retícula triangular, que puede verse como una malla bidimensional con bordes diagonales. El argumento ``boundary_condition`` puede tomar “open” o “periodic”."

#: ../../tutorials/10_lattice_models.ipynb:917
msgid "General Lattice"
msgstr "Retícula General"

#: ../../tutorials/10_lattice_models.ipynb:919
msgid "Above, we have seen translational invariant lattices. Here, we consider a general lattice. We can construct a general lattice consisting of nodes and edges using an instance of PyGraph."
msgstr "Arriba, hemos visto retículas invariantes traslacionales. Aquí, consideramos una malla general. Podemos construir una retícula general que consta de nodos y bordes usando una instancia de PyGraph."

#: ../../tutorials/10_lattice_models.ipynb:994
msgid "Here is its visualization."
msgstr "Aquí está su visualización."

#: ../../tutorials/10_lattice_models.ipynb:1023
msgid "When we want to visualize the self-loops in the lattice, we set ``self_loop`` to True."
msgstr "Cuando queremos visualizar los auto-bucles en la retícula, configuramos ``self_loop`` con True."

#: ../../tutorials/10_lattice_models.ipynb:1052
msgid "The labels of the lattice sites are drawn when ``with_labels`` is True."
msgstr "Las etiquetas de los sitios de la retícula se dibujan cuando ``with_labels`` es True."

#: ../../tutorials/10_lattice_models.ipynb:1082
msgid "The Fermi-Hubbard model"
msgstr "El modelo Fermi-Hubbard"

#: ../../tutorials/10_lattice_models.ipynb:1084
msgid "The Fermi-Hubbard model is the simplest model describing electrons moving on a lattice and interaction with each other at the same site. The Hamiltonian is given as follows:"
msgstr "El modelo de Fermi-Hubbard es el modelo más simple que describe los electrones que se mueven en una retícula e interactúan entre sí en el mismo sitio. El Hamiltoniano se da de la siguiente manera:"

#: ../../tutorials/10_lattice_models.ipynb:1095
msgid "H = \\sum_{i, j}\\sum_{\\sigma = \\uparrow, \\downarrow} t_{i, j} c_{i, \\sigma}^\\dagger c_{j, \\sigma} + U \\sum_{i} n_{i, \\uparrow} n_{i, \\downarrow},"
msgstr "H = \\sum_{i, j}\\sum_{\\sigma = \\uparrow, \\downarrow} t_{i, j} c_{i, \\sigma}^\\dagger c_{j, \\sigma} + U \\sum_{i} n_{i, \\uparrow} n_{i, \\downarrow},"

#: ../../tutorials/10_lattice_models.ipynb:1109
msgid "where :math:`c_{i, \\sigma}^\\dagger` and :math:`c_{i, \\sigma}` are creation and annihilation operators of fermion at the site :math:`i` with spin :math:`\\sigma`. The operator :math:`n_{i, \\sigma}` is the number operator, which is defined by :math:`n_{i, \\sigma} = c_{i, \\sigma}^\\dagger c_{i, \\sigma}`. The matrix :math:`t_{i, j}` is a Hermitian matrix called interaction matrix. The parameter :math:`U` represents the strength of the interaction."
msgstr "donde :math:`c_{i, \\sigma}^\\dagger` y :math:`c_{i, \\sigma}` son operadores de creación y aniquilación de fermiones en el sitio :math:`i` con espín :math:`\\sigma`. El operador :math:`n_{i, \\sigma}` es el operador de número, que está definido por :math:`n_{i, \\sigma} = c_{i, \\sigma}^\\dagger c_{i, \\sigma}`. La matriz :math:`t_{i, j}` es una matriz Hermitiana llamada matriz de interacción. El parámetro :math:`U` representa la fuerza de la interacción."

#: ../../tutorials/10_lattice_models.ipynb:1120
msgid "We can generate the corresponding Hamiltonian of a given lattice using ``FermiHubbardModel`` class. Here, we construct the Hamiltonian with uniform interaction and interaction parameters on a two-dimensional lattice."
msgstr "Podemos generar el Hamiltoniano correspondiente de una retícula dada usando la clase ``FermiHubbardModel``. Aquí, construimos el Hamiltoniano con interacción uniforme y parámetros de interacción en una malla bidimensional."

#: ../../tutorials/10_lattice_models.ipynb:1153
msgid "To obtain the Hamiltonian in terms of the fermionic operators, we use ``second_q_ops`` method. The Hamiltonian is returned as an instance of ``FermionicOp``."
msgstr "Para obtener el Hamiltoniano en términos de los operadores fermiónicos, usamos el método ``second_q_ops``. El Hamiltoniano se devuelve como una instancia de ``FermionicOp``."

#: ../../tutorials/10_lattice_models.ipynb:1164
msgid "Note"
msgstr "Nota"

#: ../../tutorials/10_lattice_models.ipynb:1166
msgid "The number of fermionic operators required is twice the number of lattice sites because of the spin degrees of freedom."
msgstr "El número de operadores fermiónicos requeridos es el doble del número de sitios de retícula debido a los grados de libertad del espín."

#: ../../tutorials/10_lattice_models.ipynb:1167
msgid "In the implementation, even indexes correspond to up-spin and odd indexes to down-spin."
msgstr "En la implementación, los índices pares corresponden a un espín arriba y los índices impares a un espín abajo."

#: ../../tutorials/10_lattice_models.ipynb:1756
msgid "``Lattice`` has weights on its edges, so we can define a general interaction matrix using a Lattice instance. Here, we consider the Fermi-Hubbard model on a general lattice on which non-uniform interaction parameters are given. In this case, the weights of the lattice are regarded as the interaction matrix. After generating the Hamiltonian (``second_q_ops``) we can use a qubit converter to generate the qubit operators and/or use any of the available algorithms to solver the corresponding lattice problem."
msgstr "``Lattice`` tiene pesos en sus bordes, por lo que podemos definir una matriz de interacción general utilizando una instancia de Lattice. Aquí, consideramos el modelo de Fermi-Hubbard en una retícula general en la que se dan parámetros de interacción no uniformes. En este caso, los pesos de la retícula se consideran la matriz de interacción. Después de generar el Hamiltoniano (``second_q_ops``) podemos usar un convertidor de qubit para generar los operadores de qubit y/o usar cualquiera de los algoritmos disponibles para resolver el problema de retícula correspondiente."

#: ../../tutorials/10_lattice_models.ipynb:1908
msgid "LatticeModelProblem"
msgstr "LatticeModelProblem"

#: ../../tutorials/10_lattice_models.ipynb:1910
msgid "Qiskit Nature also has a ``LatticeModelProblem`` class which allows the usage of the ``GroundStateEigensolver`` to calculate the ground state energy of a given lattice. You can use this class as follows:"
msgstr "Qiskit Nature también tiene una clase ``LatticeModelProblem`` que permite el uso del ``GroundStateEigensolver`` para calcular la energía del estado fundamental de una retícula determinada. Puedes usar esta clase de la siguiente manera:"

