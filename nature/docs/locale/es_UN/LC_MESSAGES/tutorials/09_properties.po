msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-17 13:18+0000\n"
"PO-Revision-Date: 2023-05-17 14:08\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/09_properties.po\n"
"X-Crowdin-File-ID: 9873\n"

#: ../../tutorials/09_properties.ipynb:9
msgid "This page was generated from `docs/tutorials/09_properties.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/09_properties.ipynb`__."

#: ../../tutorials/09_properties.ipynb:9
msgid "Properties - or - Operator Factories"
msgstr "Propiedades - o - Fábricas de Operador"

#: ../../tutorials/09_properties.ipynb:11
msgid "Qiskit Nature has various built-in \"properties\". These objects are effectively operator factories, since they allow the programming of operator blueprints based on a minimal set of required information. Some commonly used examples are the ``ParticleNumber``, ``AngularMomentum`` and ``Magnetization`` properties, all of which take only the system size as their only input, and generate a ``SparseLabelOp`` of the required size."
msgstr "Qiskit Nature tiene varias \"propiedades\" integradas. Estos objetos son efectivamente fábricas de operadores, ya que permiten la programación de esquemas de operadores basados en un conjunto mínimo de información requerida. Algunos ejemplos comúnmente utilizados son las propiedades ``ParticleNumber``, ``AngularMomentum`` y ``Magnetization``, todas las cuales toman solo el tamaño del sistema como su única entrada y generan un ``SparseLabelOp`` del tamaño requerido."

#: ../../tutorials/09_properties.ipynb:13
msgid "These properties can be registered in a ``problem`` instance which will cause them to be evaluated once a ground state and/or excited states of that problem have been found. In the following, we will explain the general concept of how this works."
msgstr "Estas propiedades se pueden registrar en una instancia de ``problem`` que hará que se evalúen una vez que se haya encontrado un estado fundamental y/o estados excitados de ese problema. A continuación, explicaremos el concepto general de cómo funciona esto."

#: ../../tutorials/09_properties.ipynb:24
msgid "The ``BaseProblem`` base class dictates the existence of the ``.properties`` attribute on any ``problem`` instance. This attribute is of type ``PropertiesContainer`` which is an object that can hold at most one instance of any ``SparseLabelOpsFactory`` (or property class, as we commonly refer to them)."
msgstr "La clase base ``BaseProblem`` dicta la existencia del atributo ``.properties`` en cualquier instancia tipo ``problem``. Este atributo es del tipo ``PropertiesContainer``, que es un objeto que puede contener como máximo una instancia de cualquier ``SparseLabelOpsFactory`` (o clase de propiedad, como comúnmente las llamamos)."

#: ../../tutorials/09_properties.ipynb:74
msgid "You can now modify the contents of the ``PropertiesContainer`` to your desire:"
msgstr "Ahora puedes modificar el contenido de ``PropertiesContainer`` a tu gusto:"

#: ../../tutorials/09_properties.ipynb:143
msgid "The specific subclasses of ``BaseProblem`` for the various stacks such as `electronic structure <01_electronic_structure.ipynb>`__, `vibrational structure <02_vibrational_structure.ipynb>`__ or `lattice models <10_lattice_models.ipynb>`__ make things even simpler for you, because they provide direct attributes for the built-in properties of Qiskit Nature:"
msgstr "Las subclases específicas de ``BaseProblem`` para las diversas pilas como la `estructura electrónica <01_electronic_structure.ipynb>`__, la `estructura vibracional <02_vibrational_structure.ipynb>`__ o los `modelos de retícula <10_lattice_models.ipynb>`__ hacen que las cosas sean más simples para ti, porque proporcionan atributos directos para las propiedades integradas de Qiskit Nature:"

#: ../../tutorials/09_properties.ipynb:208
msgid "Note that the ``ElectronicDipoleMoment`` is populated by default. To exclude it, you can use the drivers ``to_problem()`` method and provide the ``include_dipole=False`` keyword argument. Refer to the drivers documentation for more details."
msgstr "Ten en cuenta que ``ElectronicDipoleMoment`` se completa de forma predeterminada. Para excluirlo, puedes usar el método ``to_problem()`` de los controladores y proporcionar el argumento de palabra clave ``include_dipole=False``. Consulta la documentación de los controladores para obtener más detalles."

#: ../../tutorials/09_properties.ipynb:219
msgid "You can see, that all properties come pre-populated except for the ``ElectronicDensity``. But this is easy to add:"
msgstr "Puedes ver que todas las propiedades vienen precargadas excepto ``ElectronicDensity``. Pero esto es fácil de agregar:"

#: ../../tutorials/09_properties.ipynb:247
msgid "The same concepts apply to the ``VibrationalStructureProblem`` and the ``LatticeModelProblem``."
msgstr "Los mismos conceptos se aplican al ``VibrationalStructureProblem`` y al ``LatticeModelProblem``."

