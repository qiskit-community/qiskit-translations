msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-16 20:19+0000\n"
"PO-Revision-Date: 2022-06-17 22:15\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/09_Protein_Folding.po\n"
"X-Crowdin-File-ID: 9713\n"
"Language: es_UN\n"

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "This page was generated from `docs/tutorials/09_Protein_Folding.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/09_Protein_Folding.ipynb`__."

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "Protein Folding"
msgstr "Plegamiento de Proteínas"

#: ../../tutorials/09_Protein_Folding.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/09_Protein_Folding.ipynb:32
msgid "The structure and function of many natural and human-engineered proteins is still only poorly understood. As a result, our understanding of processes connected with protein folding, such as those encountered in Alzheimer’s disease, vaccine development, and crop improvement research, has remained limited."
msgstr "La estructura y función de muchas proteínas naturales y creadas por humanos todavía es poco entendido. Como resultado, nuestra comprensión de los procesos relacionados con el plegamiento de proteínas, como los que se encuentran en la enfermedad de Alzheimer, el desarrollo de vacunas y la investigación de mejoramiento de cultivos, sigue siendo limitada."

#: ../../tutorials/09_Protein_Folding.ipynb:34
msgid "Unfolded polypeptides have a very large number of degrees of freedom and thus an enormous number of potential conformations. For example, a chain with :math:`100` aminoacids has on the order of :math:`10^{47}` conformations. In reality, however, many proteins fold to their native structure within seconds. This is known as Levinthal’s paradox [1]."
msgstr "Los polipéptidos desplegados tienen un gran número de grados de libertad y, por tanto, un enorme número de conformaciones potenciales. Por ejemplo, una cadena con :math:`100` aminoácidos tiene conformaciones del orden de :math:`10^{47}`. En realidad, sin embargo, muchas proteínas se pliegan a su estructura nativa en segundos. Esto se conoce como la paradoja de Levinthal [1]."

#: ../../tutorials/09_Protein_Folding.ipynb:36
msgid "The exponential growth of potential conformations with chain length makes the problem intractable for classical computers. In the quantum framework, our resource-efficient algorithm scales linearly with the number of aminoacids N."
msgstr "El crecimiento exponencial de las conformaciones potenciales con la longitud de la cadena hace que el problema sea insoluble para las computadoras clásicas. En el marco cuántico, nuestro algoritmo de uso eficiente de los recursos escala linealmente con el número de aminoácidos N."

#: ../../tutorials/09_Protein_Folding.ipynb:47
msgid "The goal of this work is to determine the minimum energy conformation of a protein. Starting from a random configuration, the protein’s structure is optimized to lower the energy. This can be achieved by encoding the protein folding problem into a qubit operator and ensuring that all physical constraints are satisfied."
msgstr "El objetivo de este trabajo es determinar la conformación energética mínima de una proteína. A partir de una configuración aleatoria, la estructura de la proteína se optimiza para reducir la energía. Esto se puede lograr codificando el problema de plegamiento de proteínas en un operador qubit y asegurando que se satisfagan todas las limitaciones físicas."

#: ../../tutorials/09_Protein_Folding.ipynb:58
msgid "For the problem encoding we use:"
msgstr "Para la codificación del problema usamos:"

#: ../../tutorials/09_Protein_Folding.ipynb:60
msgid "Configuration qubits: qubits that are used to describe the configurations and the relative position of the different beads"
msgstr "Qubits de configuración: qubits que se utilizan para describir las configuraciones y la posición relativa de los diferentes puntos"

#: ../../tutorials/09_Protein_Folding.ipynb:62
msgid "Interaction qubits: qubits that encode interactions between the different aminoacids"
msgstr "Qubits de interacción: qubits que codifican interacciones entre los diferentes aminoácidos"

#: ../../tutorials/09_Protein_Folding.ipynb:64
msgid "For our case we use a tetrahedral lattice (diamond shape lattice) where we encode the movement through the configuration qubits (see image below)."
msgstr "Para nuestro caso usamos un enrejado tetraédrico (enrejado en forma de diamante) donde codificamos el movimiento mediante los qubits de configuración (ver imagen a continuación)."

#: ../../tutorials/09_Protein_Folding.ipynb:66
msgid "|6df0917ad47a48e286ff23267c21f931|"
msgstr "|6df0917ad47a48e286ff23267c21f931|"

#: ../../tutorials/09_Protein_Folding.ipynb:68
msgid "6df0917ad47a48e286ff23267c21f931"
msgstr "6df0917ad47a48e286ff23267c21f931"

#: ../../tutorials/09_Protein_Folding.ipynb:79
msgid "The Hamiltonian of the system for a set of qubits :math:`\\mathbf{q}=\\{\\mathbf{q}_{cf}, \\mathbf{q}_{in}\\}` is"
msgstr "El Hamiltoniano del sistema para un conjunto de qubits :math:`\\mathbf{q}=\\{\\mathbf{q}_{cf}, \\mathbf{q}_{in}\\}` es"

#: ../../tutorials/09_Protein_Folding.ipynb:81
msgid "H(\\mathbf{q}) = H_{gc}(\\mathbf{q}_{cf}) + H_{ch}(\\mathbf{q}_{cf}) + H_{in}(\\mathbf{q}_{cf}, \\mathbf{q}_{in})\n\n"
msgstr "H(\\mathbf{q}) = H_{gc}(\\mathbf{q}_{cf}) + H_{ch}(\\mathbf{q}_{cf}) + H_{in}(\\mathbf{q}_{cf}, \\mathbf{q}_{in})\n\n"

#: ../../tutorials/09_Protein_Folding.ipynb:83
msgid "where"
msgstr "donde"

#: ../../tutorials/09_Protein_Folding.ipynb:85
msgid ":math:`H_{gc}` is the geometrical constraint term (governing the growth of the primary sequence of aminoacids without bifurcations)"
msgstr ":math:`H_{gc}` es el término de restricción geométrica (que rige el crecimiento de la secuencia primaria de aminoácidos sin bifurcaciones)"

#: ../../tutorials/09_Protein_Folding.ipynb:87
msgid ":math:`H_{ch}` is the chirality constraint (enforcing the right stereochemistry for the system)"
msgstr ":math:`H_{ch}` es la restricción de quiralidad (imponiendo la estereoquímica correcta para el sistema)"

#: ../../tutorials/09_Protein_Folding.ipynb:89
msgid ":math:`H_{in}` is the interaction energy terms of the system. In our case we consider only nearest neighbor interactions."
msgstr ":math:`H_{in}` son los términos energéticos de interacción del sistema. En nuestro caso, consideramos solo las interacciones de los vecinos más cercanos."

#: ../../tutorials/09_Protein_Folding.ipynb:100
msgid "Further details about the used model and the encoding of the problem can be found in [2]."
msgstr "En [2] se pueden encontrar más detalles sobre el modelo utilizado y la codificación del problema."

#: ../../tutorials/09_Protein_Folding.ipynb:137
msgid "Protein Main Chain"
msgstr "Cadena Principal de la Proteína"

#: ../../tutorials/09_Protein_Folding.ipynb:148
msgid "The Protein consists of a main chain that is a linear chain of aminoacids. For the naming of different residues we use the one-letter code as defined in Ref. [3]. Further details about the naming and the type of aminoacids can also be found in [4]."
msgstr "La proteína consta de una cadena principal que es una cadena lineal de aminoácidos. Para nombrar los diferentes residuos usamos el código de una letra como se define en la Ref. [3]. También se pueden encontrar más detalles sobre la denominación y el tipo de aminoácidos en [4]."

#: ../../tutorials/09_Protein_Folding.ipynb:150
msgid "For this particular case we demonstrate the generation of the qubit operator in a neuropeptide with the main chain consisting of 7 aminoacids with letter codes APRLRFY (see also [2])."
msgstr "Para este caso particular, demostramos la generación del operador qubit en un neuropéptido con la cadena principal que consta de 7 aminoácidos con códigos de letras APRLRFY (ver también [2])."

#: ../../tutorials/09_Protein_Folding.ipynb:172
msgid "Side Chains"
msgstr "Cadenas Laterales"

#: ../../tutorials/09_Protein_Folding.ipynb:183
msgid "Beyond the main chain of the protein there may be aminoacids attached to the residues of the main chain. Our model allows for side chains of the maximum length of one. Elongated side chains would require the introduction of additional penalty terms which are still under development. In this example we do not consider any side chains to keep the real structure of the neuropeptide."
msgstr "Más allá de la cadena principal de la proteína, puede haber aminoácidos unidos a los residuos de la cadena principal. Nuestro modelo permite cadenas laterales de una longitud máxima de uno. Las cadenas laterales alargadas requerirían la introducción de términos de penalización adicionales que aún están en desarrollo. En este ejemplo, no consideramos ninguna cadena lateral para mantener la estructura real del neuropéptido."

#: ../../tutorials/09_Protein_Folding.ipynb:205
msgid "Interaction between Aminoacids"
msgstr "Interacción entre Aminoácidos"

#: ../../tutorials/09_Protein_Folding.ipynb:216
msgid "For the description of inter-residue contacts for proteins we use knowledge-based (statistical) potentials derived using quasi-chemical approximation. The potentials used here are introduced by Miyazawa, S. and Jernigan, R. L. in [5]."
msgstr "Para la descripción de los contactos entre residuos de proteínas, utilizamos potenciales basados en el conocimiento (estadístico) derivados mediante aproximación cuasiquímica. Los potenciales utilizados aquí son introducidos por Miyazawa, S. y Jernigan, R. L. en [5]."

#: ../../tutorials/09_Protein_Folding.ipynb:218
msgid "Beyond this model we also allow for random contact maps (interactions) that provide a random interaction map. One can also introduce a custom interaction map that enhances certain configurations of the protein (e.g. alpha helix, beta sheet etc)."
msgstr "Más allá de este modelo, también permitimos mapas de contacto aleatorios (interacciones) que proporcionan un mapa de interacción aleatorio. También se puede introducir un mapa de interacción personalizado que mejora ciertas configuraciones de la proteína (por ejemplo, hélice alfa, hoja beta, etc.)."

#: ../../tutorials/09_Protein_Folding.ipynb:241
msgid "Physical Constraints"
msgstr "Restricciones Físicas"

#: ../../tutorials/09_Protein_Folding.ipynb:252
msgid "To ensure that all physical constraints are respected we introduce penalty functions. The different penalty terms used are:"
msgstr "Para garantizar que se respeten todas las restricciones físicas, introducimos funciones de penalización. Los diferentes términos de penalización utilizados son:"

#: ../../tutorials/09_Protein_Folding.ipynb:254
msgid "penalty_chiral: A penalty parameter used to impose the right chirality."
msgstr "penalty_chiral: Un parámetro de penalización utilizado para imponer la quiralidad correcta."

#: ../../tutorials/09_Protein_Folding.ipynb:256
msgid "penalty_back: A penalty parameter used to penalize turns along the same axis. This term is used to eliminate sequences where the same axis is chosen twice in a row. In this way we do not allow for a chain to fold back into itself."
msgstr "penalty_back: Un parámetro de penalización que se utiliza para penalizar los giros a lo largo del mismo eje. Este término se utiliza para eliminar secuencias en las que el mismo eje se elige dos veces seguidas. De esta manera, no permitimos que una cadena se doble sobre sí misma."

#: ../../tutorials/09_Protein_Folding.ipynb:258
msgid "penalty_1: A penalty parameter used to penalize local overlap between beads within a nearest neighbor contact."
msgstr "penalty_1: Un parámetro de penalización utilizado para penalizar la superposición local entre puntos dentro de un contacto vecino más cercano."

#: ../../tutorials/09_Protein_Folding.ipynb:284
msgid "Peptide Definition"
msgstr "Definición de Péptido"

#: ../../tutorials/09_Protein_Folding.ipynb:295
msgid "Based on the main chain and possible side chains we define the peptide object that includes all the structural information of the modeled system."
msgstr "Con base en la cadena principal y las posibles cadenas laterales definimos el objeto péptido que incluye toda la información estructural del sistema modelado."

#: ../../tutorials/09_Protein_Folding.ipynb:317
msgid "Protein Folding Problem"
msgstr "Problema de Plegamiento de Proteínas"

#: ../../tutorials/09_Protein_Folding.ipynb:328
msgid "Based on the defined peptide, the interaction (contact map) and the penalty terms we defined for our model we define the protein folding problem that returns qubit operators."
msgstr "Basándonos en el péptido definido, la interacción (mapa de contacto) y los términos de penalización que definimos para nuestro modelo, definimos el problema de plegamiento de proteínas que devuelve operadores qubit."

#: ../../tutorials/09_Protein_Folding.ipynb:613
msgid "Using VQE with CVaR expectation value for the solution of the problem"
msgstr "Uso de VQE con valor esperado de CVaR para la solución del problema"

#: ../../tutorials/09_Protein_Folding.ipynb:624
msgid "The problem that we are tackling has now implemented all the physical constraints and has a diagonal Hamiltonian. For the particular case we are targeting the single bitstring that gives us the minimum energy (corresponding to the folded structure of the protein). Thus, we can use the Variational Quantum Eigensolver with Conditional Value at Risk (CVaR) expectation values for the solution of the problem and for finding the minimum configuration energy [6] . We follow the same approach as in Ref. [2] but here we use COBYLA for the classical optimization part. One can also use the standard VQE or QAOA algorithm for the solution of the problem, though as discussed in Ref. [2] CVaR is more suitable."
msgstr "El problema que estamos abordando ahora ha implementado todas las limitaciones físicas y un Hamiltoniano diagonal. Para el caso particular, estamos apuntando a la cadena de bits única que nos da la energía mínima (correspondiente a la estructura plegada de la proteína). Por lo tanto, podemos utilizar el Solucionador Propio Cuántico Variacional (Variational Quantum Eigensolver) con valor condicional al riesgo (Conditional Value at Risk, CVaR) para la solución del problema y para encontrar la energía de configuración mínima [6]. Seguimos el mismo enfoque que en la Ref. [2] pero aquí usamos COBYLA para la parte clásica de optimización. También se puede utilizar el algoritmo estándar VQE o QAOA para la solución del problema, aunque como se explica en la Ref. [2] CVaR es más adecuado."

#: ../../tutorials/09_Protein_Folding.ipynb:1735
msgid "Visualizing the answer"
msgstr "Visualización de la respuesta"

#: ../../tutorials/09_Protein_Folding.ipynb:1746
msgid "In order to reduce computational costs, we have reduced the problem’s qubit operator to the minimum amount of qubits needed to represent the shape of the protein. In order to decode the answer we need to understand how this has been done. \\* The shape of the protein has been encoded by a sequence of turns , :math:`\\{0,1,2,3\\}`. Each turn represents a different direction in the lattice. \\* For a main bead of :math:`N_{aminoacids}` in a lattice, we need :math:`N_{aminoacids}-1` turns in order to represent its shape. However, the orientation of the protein is not relevant to its energy. Therefore the first two turns of the shape can be set to :math:`[1,0]` without loss of generality. \\* If the second bead does not have any side chain, we can also set the :math:`6^{th}` qubit to :math:`[1]` without breaking symmetry. \\* Since the length of the secondary chains is always limited to :math:`1` we only need one turn to describe the shape of the chain."
msgstr "Para reducir los costos computacionales, hemos reducido el operador qubit del problema a la cantidad mínima de qubits necesarios para representar la forma de la proteína. Para decodificar la respuesta necesitamos entender cómo se ha hecho esto. \\* La forma de la proteína ha sido codificada por una secuencia de vueltas , :math:`\\{0,1,2,3\\}`. Cada vuelta representa una dirección diferente en la retícula. \\* Para una cuenta principal de :math:`N_{aminoacids}` en una retícula, necesitamos :math:`N_{aminoacids}-1` vueltas para representar su forma. Sin embargo, la orientación de la proteína no es relevante para su energía. Por lo tanto, los dos primeros giros de la forma se pueden establecer en :math:`[1,0]` sin pérdida de generalidad. \\* Si la segunda cuenta no tiene ninguna cadena lateral, también podemos configurar el :math:`6^{o}` qubit en :math:`[1]` sin romper la simetría. \\* Dado que la longitud de las cadenas secundarias siempre está limitada a :math:`1`, solo necesitamos un giro para describir la forma de la cadena."

#: ../../tutorials/09_Protein_Folding.ipynb:1749
msgid "The total amount of qubits we need to represent the shape of the protein will be :math:`2(N_{aminoacids}-3)` if there is a secondary chain coming out of the second bead or :math:`2(N_{aminoacids}-3) - 1`, otherwise. All the other qubits will remain unused during the optimization process. See:"
msgstr "La cantidad total de qubits que necesitamos para representar la forma de la proteína será :math:`2(N_{aminoacids}-3)` si hay una cadena secundaria saliendo de la segunda cuenta o :math:`2(N_{aminoacids}-3) - 1`, en caso contrario. Todos los demás qubits permanecerán sin usar durante el proceso de optimización. Ver:"

#: ../../tutorials/09_Protein_Folding.ipynb:1802
msgid "Now that we know which qubits encode which information, we can decode the bitstring into the explicit turns that form the shape of the protein."
msgstr "Ahora que sabemos qué qubits codifican qué información, podemos decodificar la cadena de bits en los giros explícitos que modelan la forma de la proteína."

#: ../../tutorials/09_Protein_Folding.ipynb:1851
msgid "From this sequence of turns we can get the cartesian coordinates of each of the aminoacids of the protein."
msgstr "De esta secuencia de vueltas podemos obtener las coordenadas cartesianas de cada uno de los aminoácidos de la proteína."

#: ../../tutorials/09_Protein_Folding.ipynb:1914
msgid "And finally, we can also plot the structure of the protein in 3D. Note that when rendered with the proper backend this plot can be interactively rotated."
msgstr "Y finalmente, también podemos graficar la estructura de la proteína en 3D. Ten en cuenta que cuando se procesa con el backend adecuado, esta gráfica se puede rotar de forma interactiva."

#: ../../tutorials/09_Protein_Folding.ipynb:1944
msgid "And here is an example with side chains."
msgstr "Y aquí hay un ejemplo con cadenas laterales."

#: ../../tutorials/09_Protein_Folding.ipynb:1989
msgid "References"
msgstr "Referencias"

#: ../../tutorials/09_Protein_Folding.ipynb:2000
#, python-format
msgid "[1] https://en.wikipedia.org/wiki/Levinthal%27s_paradox"
msgstr "[1] https://en.wikipedia.org/wiki/Levinthal%27s_paradox"

#: ../../tutorials/09_Protein_Folding.ipynb:2002
msgid "[2] A.Robert, P.Barkoutsos, S.Woerner and I.Tavernelli, Resource-efficient quantum algorithm for protein folding, NPJ Quantum Information, 2021, https://doi.org/10.1038/s41534-021-00368-4"
msgstr "[2] A.Robert, P.Barkoutsos, S.Woerner and I.Tavernelli, Resource-efficient quantum algorithm for protein folding, NPJ Quantum Information, 2021, https://doi.org/10.1038/s41534-021-00368-4"

#: ../../tutorials/09_Protein_Folding.ipynb:2004
msgid "[3] IUPAC–IUB Commission on Biochemical Nomenclature (1972). “A one-letter notation for aminoacid sequences”. Pure and Applied Chemistry. 31 (4): 641–645. doi:10.1351/pac197231040639. PMID 5080161."
msgstr "[3] IUPAC–IUB Commission on Biochemical Nomenclature (1972). “A one-letter notation for aminoacid sequences”. Pure and Applied Chemistry. 31 (4): 641–645. doi:10.1351/pac197231040639. PMID 5080161."

#: ../../tutorials/09_Protein_Folding.ipynb:2006
msgid "[4] https://en.wikipedia.org/wiki/Amino_acid"
msgstr "[4] https://en.wikipedia.org/wiki/Amino_acid"

#: ../../tutorials/09_Protein_Folding.ipynb:2008
msgid "[5] S. Miyazawa and R. L.Jernigan, Residue – Residue Potentials with a Favorable Contact Pair Term and an Unfavorable High Packing Density Term for Simulation and Threading, J. Mol. Biol.256, 623–644, 1996, Table 3, https://doi.org/10.1006/jmbi.1996.0114"
msgstr "[5] S. Miyazawa and R. L.Jernigan, Residue – Residue Potentials with a Favorable Contact Pair Term and an Unfavorable High Packing Density Term for Simulation and Threading, J. Mol. Biol.256, 623–644, 1996, Table 3, https://doi.org/10.1006/jmbi.1996.0114"

#: ../../tutorials/09_Protein_Folding.ipynb:2010
msgid "[6] P.Barkoutsos, G. Nannichini, A.Robert, I.Tavernelli, S.Woerner, Improving Variational Quantum Optimization using CVaR, Quantum 4, 256, 2020, https://doi.org/10.22331/q-2020-04-20-256"
msgstr "[6] P.Barkoutsos, G. Nannichini, A.Robert, I.Tavernelli, S.Woerner, Improving Variational Quantum Optimization using CVaR, Quantum 4, 256, 2020, https://doi.org/10.22331/q-2020-04-20-256"

