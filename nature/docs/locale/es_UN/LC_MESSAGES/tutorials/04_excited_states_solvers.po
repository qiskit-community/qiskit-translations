msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-08-23 18:37+0000\n"
"PO-Revision-Date: 2021-08-23 18:48\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/04_excited_states_solvers.po\n"
"X-Crowdin-File-ID: 9672\n"
"Language: es_UN\n"

#: ../../tutorials/04_excited_states_solvers.ipynb:9
msgid "This page was generated from `docs/tutorials/04_excited_states_solvers.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/04_excited_states_solvers.ipynb`__."

#: ../../tutorials/04_excited_states_solvers.ipynb:9
msgid "Excited states solvers"
msgstr "Solucionadores para estados excitados"

#: ../../tutorials/04_excited_states_solvers.ipynb:21
msgid "Introduction"
msgstr "Introducción"

#: ../../tutorials/04_excited_states_solvers.ipynb:23
msgid "|84349d865c424ea19bb9a4812d1c8df1|"
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:29
msgid "84349d865c424ea19bb9a4812d1c8df1"
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the excited states calculation interface of Qiskit Nature. The goal is to compute the excited states of a molecular Hamiltonian. This Hamiltonian can be electronic or vibrational. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibrational structure tutorials."
msgstr ""

#: ../../tutorials/04_excited_states_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr "El primer paso es definir el sistema molecular. A continuación, pedimos la parte electrónica de una molécula de hidrógeno."

#: ../../tutorials/04_excited_states_solvers.ipynb:105
msgid "The Solver"
msgstr "El Solucionador"

#: ../../tutorials/04_excited_states_solvers.ipynb:107
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr "Después necesitamos definir un solucionador. El solucionador es el algoritmo mediante el cual el estado base es calculado."

#: ../../tutorials/04_excited_states_solvers.ipynb:109
msgid "Let’s first start with a purely classical example: the NumPy eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badly, it can be used on small systems to check the results of the quantum algorithms. Here, we are only interested to look at eigenstates with a given number of particle. To compute only those states a filter function can be passed to the NumPy eigensolver. A default filter function is already implemented in Qiskit and can be used in this way:"
msgstr "Comencemos primero con un ejemplo puramente clásico: el solucionador propio (eigensolver) NumPy. Este algoritmo diagonaliza exactamente al Hamiltoniano. Aunque escala mal, se puede usar en sistemas pequeños para verificar los resultados de los algoritmos cuánticos. Aquí, solo estamos interesados en mirar estados propios con un número dado de partículas. Para calcular solo esos estados, se puede pasar una función de filtro al eigensolver de NumPy. Una función de filtro predeterminada ya está implementada en Qiskit y se puede usar de esta manera:"

#: ../../tutorials/04_excited_states_solvers.ipynb:132
msgid "The excitation energies can also be accessed with the qEOM algorithm [arXiv preprint arXiv:1910.12890 (2019)]. The EOM method finds the excitation energies (differences in energy between the ground state and all :math:`n`\\ th excited states) by solving the following pseudo-eigenvalue problem."
msgstr "También se puede acceder a las energías de excitación con el algoritmo qEOM [arXiv preprint arXiv:1910.12890 (2019)]. El método EOM encuentra las energías de excitación (diferencias de energía entre el estado fundamental y todos los :math:`n`\\ -simos estados excitados) resolviendo el siguiente problema de pseudo-eigenvalor."

#: ../../tutorials/04_excited_states_solvers.ipynb:134
msgid "\\begin{pmatrix}\n"
"    \\text{M} & \\text{Q}\\\\\n"
"    \\text{Q*} & \\text{M*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}\n"
"= E_{0n}\n"
"\\begin{pmatrix}\n"
"    \\text{V} & \\text{W}\\\\\n"
"    -\\text{W*} & -\\text{V*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}"
msgstr "\\begin{pmatrix}\n"
"    \\text{M} & \\text{Q}\\\\\n"
"    \\text{Q*} & \\text{M*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}\n"
"= E_{0n}\n"
"\\begin{pmatrix}\n"
"    \\text{V} & \\text{W}\\\\\n"
"    -\\text{W*} & -\\text{V*}\n"
"\\end{pmatrix}\n"
"\\begin{pmatrix}\n"
"    \\text{X}_n\\\\\n"
"    \\text{Y}_n\n"
"\\end{pmatrix}"

#: ../../tutorials/04_excited_states_solvers.ipynb:155
msgid "with"
msgstr "con"

#: ../../tutorials/04_excited_states_solvers.ipynb:157
msgid "M_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger},\\hat{\\text{H}}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr "M_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger},\\hat{\\text{H}}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:162
msgid "Q_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{H}}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr "Q_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{H}}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:167
msgid "V_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"
msgstr "V_{\\mu_{\\alpha}\\nu_{\\beta}} = \\langle0| [(\\hat{\\text{E}}_{\\mu_{\\alpha}}^{(\\alpha)})^{\\dagger}, \\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:172
msgid "W_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_\\alpha}^{(\\alpha)})^{\\dagger}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"
msgstr "W_{\\mu_{\\alpha}\\nu_{\\beta}} = -\\langle0| [(\\hat{\\text{E}}_{\\mu_\\alpha}^{(\\alpha)})^{\\dagger}, (\\hat{\\text{E}}_{\\nu_{\\beta}}^{(\\beta)})^{\\dagger}]|0\\rangle"

#: ../../tutorials/04_excited_states_solvers.ipynb:177
msgid "Although the previous equation can be solved classically, each matrix element must be measured on the quantum computer with the corresponding ground state. To use the qEOM as a solver in Qiskit, we have to define a ground state calculation first, providing to the algorithm information on how to find the ground state. With this the qEOM solver can be initialized:"
msgstr "Aunque la ecuación anterior se puede resolver clásicamente, cada elemento de la matriz se debe medir en la computadora cuántica con el estado base correspondiente. Para usar qEOM como un solucionador en Qiskit, primero tenemos que definir un cálculo del estado base, proporcionando a los algoritmos información acerca de cómo encontrar el estado base. Con esto, se puede inicializar el solucionador qEOM:"

#: ../../tutorials/04_excited_states_solvers.ipynb:210
msgid "The calculation and results"
msgstr "El cálculo y los resultados"

#: ../../tutorials/04_excited_states_solvers.ipynb:212
msgid "The results are computed and printed"
msgstr "Los resultados son calculados y se imprimen"

#: ../../tutorials/04_excited_states_solvers.ipynb:419
msgid "One can see from these results that one state is missing from the NumPy results. The reason for this is because the spin is also used as a filter and only singlet states are shown. In the following we use a custom filter function to check consistently our results and only filter out states with incorrect number of particle (in this case the number of particle is 2)."
msgstr "Uno puede ver de estos resultados que falta un estado en los resultados de NumPy. Esto es porque el espín también se usa como filtro y solo se muestran los estados singletes. A continuación, utilizamos una función de filtro personalizada para comprobar consistentemente nuestros resultados y sólo filtrar los estados con un número incorrecto de partículas (en este caso el número de partículas es 2)."

