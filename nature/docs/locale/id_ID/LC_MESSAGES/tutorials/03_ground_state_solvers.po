msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-16 20:19+0000\n"
"PO-Revision-Date: 2022-06-16 20:56\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/03_ground_state_solvers.po\n"
"X-Crowdin-File-ID: 9670\n"
"Language: id_ID\n"

#: ../../tutorials/03_ground_state_solvers.ipynb:9
msgid "This page was generated from `docs/tutorials/03_ground_state_solvers.ipynb`__."
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:9
msgid "Ground state solvers"
msgstr "Pemecah keadaan dasar"

#: ../../tutorials/03_ground_state_solvers.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:23
msgid "|d3b141f70c1d4a4292dcb8c079169834|"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:29
msgid "d3b141f70c1d4a4292dcb8c079169834"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:25
msgid "In this tutorial we are going to discuss the ground state calculation interface of Qiskit Nature. The goal is to compute the ground state of a molecular Hamiltonian. This Hamiltonian can be electronic or vibrational. To know more about the preparation of the Hamiltonian, check out the Electronic structure and Vibrational structure tutorials."
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:27
msgid "The first step is to define the molecular system. In the following we ask for the electronic part of a hydrogen molecule."
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:69
msgid "The Solver"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:71
msgid "Then we need to define a solver. The solver is the algorithm through which the ground state is computed."
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:73
msgid "Let’s first start with a purely classical example: the NumPy minimum eigensolver. This algorithm exactly diagonalizes the Hamiltonian. Although it scales badly, it can be used on small systems to check the results of the quantum algorithms."
msgstr "Mari kita mulai dengan contoh yang murni klasik: pemecah eigen minimum NumPy. Algoritme ini mendiagonalisasi Hamiltonian secara eksak. Meskipun penskalaannya buruk, algoritme ini dapat digunakan untuk sistem kecil untuk mengecek hasil dari algoritme kuantum."

#: ../../tutorials/03_ground_state_solvers.ipynb:96
msgid "To find the ground state we coul also use the Variational Quantum Eigensolver (VQE) algorithm. The VQE algorithms works by exchanging information between a classical and a quantum computer as depicted in the following figure."
msgstr "Untuk menemukan keadaan dasar kita dapat menggunakan algoritme Pemecah Eigen Kuantum Variasional (Variational Quantum Eigensolver, VQE). Algoritme VQE bekerja dengan menukar informasi antara komputer klasik dan kuantum seperti digambarkan dalam gambar berikut."

#: ../../tutorials/03_ground_state_solvers.ipynb:98
msgid "|863dc41242c647da9fe34fc8d429db7b|"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:102
msgid "863dc41242c647da9fe34fc8d429db7b"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:100
msgid "Let’s initialize a VQE solver."
msgstr "Mari kita menginisialisasi pemecah VQE."

#: ../../tutorials/03_ground_state_solvers.ipynb:129
msgid "To define the VQE solver one needs two essential elements:"
msgstr "Untuk mendefinisikan pemecah VQE, diperlukan dua elemen esensial:"

#: ../../tutorials/03_ground_state_solvers.ipynb:131
msgid "A variational form: here we use the Unitary Coupled Cluster (UCC) ansatz (see for instance [Physical Review A 98.2 (2018): 022322]). Since it is a chemistry standard, a factory is already available allowing a fast initialization of a VQE with UCC. The default is to use all single and double excitations. However, the excitation type (S, D, SD) as well as other parameters can be selected."
msgstr "Bentuk variasional: di sini kita menggunakan ansatz Unitary Coupled Cluster (UCC) (lihat pada misalnya [Physical Review A 98.2 (2018): 022322]). Karena ini adalah standar kimia, sebuah factory sudah tersedia yang memungkinkan inisialisasi cepat dari VQE dengan UCC. Default-nya adalah menggunakan semua eksitasi tunggal dan ganda. Namun, jenis eksitasi (S, D, SD) serta parameter lainnya dapat dipilih."

#: ../../tutorials/03_ground_state_solvers.ipynb:132
msgid "An initial state: the initial state of the qubits. In the factory used above, the qubits are initialized in the Hartree-Fock (see the electronic structure tutorial) initial state (the qubits corresponding to occupied MOs are :math:`|1\\rangle` and those corresponding to virtual MOs are :math:`|0\\rangle`."
msgstr "Keadaan awal: keadaan awal dari qubit. Pada factory yang digunakan di atas, qubit diinisialisasi dalam keadaan awal (qubits yang sesuai dengan MOs yang diduduki adalah :math:` | 1\\rangle ` dan yang sesuai dengan MOs virtual adalah :math:` | 0\\rangle `) Hartree-Fock (lihat tutorial struktur elektronik)."

#: ../../tutorials/03_ground_state_solvers.ipynb:133
msgid "The backend: this is the quantum machine on which the right part of the figure above will be performed. Here we ask for the perfect quantum emulator (``aer_simulator_statevector``)."
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:135
msgid "One could also use any available ansatz / initial state or even define one’s own. For instance,"
msgstr "Dapat pula digunakan ansatz apa saja yang tersedia/keadaan awal atau bahkan mendefinisikannya sendiri. Sebagai contoh,"

#: ../../tutorials/03_ground_state_solvers.ipynb:171
msgid "The calculation and results"
msgstr ""

#: ../../tutorials/03_ground_state_solvers.ipynb:173
msgid "We are now ready to run the calculation."
msgstr "Kita sekarang siap untuk menjalankan kalkulasi."

#: ../../tutorials/03_ground_state_solvers.ipynb:283
msgid "We can compare the VQE results to the NumPy exact solver and see that they match."
msgstr "Kita dapat membandingkan hasil VQE dengan pemecah eksak NumPy dan melihat bahwa hasilnya cocok."

#: ../../tutorials/03_ground_state_solvers.ipynb:391
msgid "Using a filter function"
msgstr "Menggunakan fungsi filter"

#: ../../tutorials/03_ground_state_solvers.ipynb:402
msgid "Sometimes the true ground state of the Hamiltonian is not of interest because it lies in a different symmetry sector of the Hilbert space. In this case the NumPy eigensolver can take a filter function to return only the eigenstates with for example the correct number of particles. This is of particular importance in the case of vibrational structure calculations where the true ground state of the Hamiltonian is the vacuum state. A default filter function to check the number of particles is implemented in the different transformations and can be used as follows:"
msgstr ""

