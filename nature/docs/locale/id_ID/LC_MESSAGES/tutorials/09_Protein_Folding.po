msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-06 18:17+0000\n"
"PO-Revision-Date: 2021-10-06 18:57\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /master/nature/docs/locale/en/LC_MESSAGES/tutorials/09_Protein_Folding.po\n"
"X-Crowdin-File-ID: 9713\n"
"Language: id_ID\n"

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "This page was generated from `docs/tutorials/09_Protein_Folding.ipynb`__."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:9
msgid "Protein Folding"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:21
msgid "Introduction"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:32
msgid "The structure and function of many natural and human-engineered proteins is still only poorly understood. As a result, our understanding of processes connected with protein folding, such as those encountered in Alzheimer’s disease, vaccine development, and crop improvement research, has remained limited."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:34
msgid "Unfolded polypeptides have a very large number of degrees of freedom and thus an enormous number of potential conformations. For example, a chain with :math:`100` aminoacids has on the order of :math:`10^{47}` conformations. In reality, however, many proteins fold to their native structure within seconds. This is known as Levinthal’s paradox [1]."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:36
msgid "The exponential growth of potential conformations with chain length makes the problem intractable for classical computers. In the quantum framework, our resource-efficient algorithm scales linearly with the number of aminoacids N."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:47
msgid "The goal of this work is to determine the minimum energy conformation of a protein. Starting from a random configuration, the protein’s structure is optimized to lower the energy. This can be achieved by encoding the protein folding problem into a qubit operator and ensuring that all physical constraints are satisfied."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:58
msgid "For the problem encoding we use:"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:60
msgid "Configuration qubits: qubits that are used to describe the configurations and the relative position of the different beads"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:62
msgid "Interaction qubits: qubits that encode interactions between the different aminoacids"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:64
msgid "For our case we use a tetrahedral lattice (diamond shape lattice) where we encode the movement through the configuration qubits (see image below)."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:66
msgid "|abe1a994d8e847349a281700c31b72c5|"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:68
msgid "abe1a994d8e847349a281700c31b72c5"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:79
msgid "The Hamiltonian of the system for a set of qubits :math:`\\mathbf{q}=\\{\\mathbf{q}_{cf}, \\mathbf{q}_{in}\\}` is"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:81
msgid "H(\\mathbf{q}) = H_{gc}(\\mathbf{q}_{cf}) + H_{ch}(\\mathbf{q}_{cf}) + H_{in}(\\mathbf{q}_{cf}, \\mathbf{q}_{in})\n\n"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:83
msgid "where"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:85
msgid ":math:`H_{gc}` is the geometrical constraint term (governing the growth of the primary sequence of aminoacids without bifurcations)"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:87
msgid ":math:`H_{ch}` is the chirality constraint (enforcing the right stereochemistry for the system)"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:89
msgid ":math:`H_{in}` is the interaction energy terms of the system. In our case we consider only nearest neighbor interactions."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:100
msgid "Further details about the used model and the encoding of the problem can be found in [2]."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:131
msgid "Protein Main Chain"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:142
msgid "The Protein consists of a main chain that is a linear chain of aminoacids. For the naming of different residues we use the one-letter code as defined in Ref. [3]. Further details about the naming and the type of aminoacids can also be found in [4]."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:144
msgid "For this particular case we demonstrate the generation of the qubit operator in a neuropeptide with the main chain consisting of 7 aminoacids with letter codes APRLRFY (see also [2])."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:166
msgid "Side Chains"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:177
msgid "Beyond the main chain of the protein there may be aminoacids attached to the residues of the main chain. Our model allows for side chains of the maximum length of one. Elongated side chains would require the introduction of additional penalty terms which are still under development. In this example we do not consider any side chains to keep the real structure of the neuropeptide."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:199
msgid "Interaction between Aminoacids"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:210
msgid "For the description of inter-residue contacts for proteins we use knowledge-based (statistical) potentials derived using quasi-chemical approximation. The potentials used here are introduced by Miyazawa, S. and Jernigan, R. L. in [5]."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:212
msgid "Beyond this model we also allow for random contact maps (interactions) that provide a random interaction map. One can also introduce a custom interaction map that enhances certain configurations of the protein (e.g. alpha helix, beta sheet etc)."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:235
msgid "Physical Constraints"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:246
msgid "To ensure that all physical constraints are respected we introduce penalty functions. The different penalty terms used are:"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:248
msgid "penalty_chiral: A penalty parameter used to impose the right chirality."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:250
msgid "penalty_back: A penalty parameter used to penalize turns along the same axis. This term is used to eliminate sequences where the same axis is chosen twice in a row. In this way we do not allow for a chain to fold back into itself."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:252
msgid "penalty_1: A penalty parameter used to penalize local overlap between beads within a nearest neighbor contact."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:278
msgid "Peptide Definition"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:289
msgid "Based on the main chain and possible side chains we define the peptide object that includes all the structural information of the modeled system."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:311
msgid "Protein Folding Problem"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:322
msgid "Based on the defined peptide, the interaction (contact map) and the penalty terms we defined for our model we define the protein folding problem that returns qubit operators."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:526
msgid "Using VQE with CVaR expectation value for the solution of the problem"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:537
msgid "The problem that we are tackling has now implemented all the physical constraints and has a diagonal Hamiltonian. For the particular case we are targeting the single bitstring that gives us the minimum energy (corresponding to the folded structure of the protein). Thus, we can use the Variational Quantum Eigensolver with Conditional Value at Risk (CVaR) expectation values for the solution of the problem and for finding the minimum configuration energy [6] . We follow the same approach as in Ref. [2] but here we use COBYLA for the classical optimization part. One can also use the standard VQE or QAOA algorithm for the solution of the problem, though as discussed in Ref. [2] CVaR is more suitable."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1157
msgid "References"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1168
#, python-format
msgid "[1] https://en.wikipedia.org/wiki/Levinthal%27s_paradox"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1170
msgid "[2] A.Robert, P.Barkoutsos, S.Woerner and I.Tavernelli, Resource-efficient quantum algorithm for protein folding, NPJ Quantum Information, 2021, https://doi.org/10.1038/s41534-021-00368-4"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1172
msgid "[3] IUPAC–IUB Commission on Biochemical Nomenclature (1972). “A one-letter notation for aminoacid sequences”. Pure and Applied Chemistry. 31 (4): 641–645. doi:10.1351/pac197231040639. PMID 5080161."
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1174
msgid "[4] https://en.wikipedia.org/wiki/Amino_acid"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1176
msgid "[5] S. Miyazawa and R. L.Jernigan, Residue – Residue Potentials with a Favorable Contact Pair Term and an Unfavorable High Packing Density Term for Simulation and Threading, J. Mol. Biol.256, 623–644, 1996, Table 3, https://doi.org/10.1006/jmbi.1996.0114"
msgstr ""

#: ../../tutorials/09_Protein_Folding.ipynb:1178
msgid "[6] P.Barkoutsos, G. Nannichini, A.Robert, I.Tavernelli, S.Woerner, Improving Variational Quantum Optimization using CVaR, Quantum 4, 256, 2020, https://doi.org/10.22331/q-2020-04-20-256"
msgstr ""

