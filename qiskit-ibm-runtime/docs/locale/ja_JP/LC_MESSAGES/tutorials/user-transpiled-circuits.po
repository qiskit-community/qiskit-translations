msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 18:20+0000\n"
"PO-Revision-Date: 2023-03-02 19:59\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/user-transpiled-circuits.po\n"
"X-Crowdin-File-ID: 9830\n"

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "This page was generated from `docs/tutorials/user-transpiled-circuits.ipynb`__."
msgstr "このページは `docs/tutorials/user-transpiled-circuits.ipynb`__ から生成されました。"

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "Submitting user-transpiled circuits using primitives"
msgstr "Primitive を使用したユーザー・トランスパイル回路の送信"

#: ../../tutorials/user-transpiled-circuits.ipynb:11
msgid "To get the best performance from your circuits, the Qiskit Runtime service will pass all circuits through Qiskit’s transpiler before running them. While this is usually a good thing, we might sometimes want to disable this by passing the argument ``skip_transpilation=True`` to the primitive we’re using."
msgstr "回路から最高のパフォーマンスを得るために、 Qiskit Runtime サービスは、すべての回路を実行する前に Qiskitのトランスパイラーを通します。 これは通常は良いことですが、引数 ``skip_transpilation=True`` を使用している primitive に渡すことによって、これを無効にしたい場合があります。"

#: ../../tutorials/user-transpiled-circuits.ipynb:13
msgid "For example, we may know better than the transpiler in some cases, or want to target a specific subset of qubits on a specific device. In this tutorial, we’ll disable automatic transpilation to test the performance of different transpiler settings. This example will take you through the full process of creating, transpiling, and submitting circuits."
msgstr "たとえば、場合によってはトランスパイラーよりもよく知っている場合や、特定のデバイス上の量子ビットの特定のサブセットをターゲットにしたい場合があります。 このチュートリアルでは、自動トランスパイラーを無効にして、さまざまなトランスパイラー設定のパフォーマンスをテストします。 この例では、回路の作成、トランスパイル、および送信の全プロセスについて説明します。"

#: ../../tutorials/user-transpiled-circuits.ipynb:16
msgid "Transpiling circuits for IBM Quantum devices"
msgstr "IBM Quantum デバイスのためのトランスパイル回路"

#: ../../tutorials/user-transpiled-circuits.ipynb:18
msgid "In the code cell below, we create a small circuit that our transpiler will try to optimize. In this example, we create a circuit that carries out Grover’s algorithm, with an oracle that marks the state ``111``. We then simulate the ideal distribution (what we’d expect to measure if we ran this on a perfect quantum computer, an infinite number of times) for comparison later."
msgstr "以下のコードセルでは、トランスパイラーが最適化しようとする小さな回路を作成します。 この例では、状態 ``111`` をマークするオラクルを使用して、グローバーのアルゴリズムを実行する回路を作成します。 次に、後で比較するために、理想的な分布（これを完全な量子コンピューターで実行した場合に測定すると予想されるもの）をシミュレートします。"

#: ../../tutorials/user-transpiled-circuits.ipynb:61
msgid "Next, we need to choose a backend to transpile for. In the cell below, we create a service instance, which we’ll use to start a session, and get the backend object, which contains information for the transpiler. Since the transpilation process depends on the device, we’ll ask the runtime service for a specific device by name. In this example, we’ll use ``ibm_algiers``, which is only available through IBM Cloud."
msgstr "次に、トランスパイルするバックエンドを選択する必要があります。 下のセルでは、セッションを開始するために使用するサービス・インスタンスを作成し、トランスパイラーの情報を含むバックエンド・オブジェクトを取得します。 トランスパイル・プロセスはデバイスによって異なるため、ランタイム・サービスに特定のデバイスを名前で要求します。 この例では、IBM Cloudを通じてのみ利用可能な ``ibm_algiers`` を使用します。"

#: ../../tutorials/user-transpiled-circuits.ipynb:84
msgid "Next, we transpile the circuits for our backend. We’re going to compare the performance of the transpiler with ``optimization_level`` set to ``0`` (lowest) against ``3`` (highest). The lowest optimization level just does the bare minimum needed to get the circuit running on the device, i.e. map the circuit qubits to the device qubits, and add swaps gates to allow all 2-qubit operations. The highest optimization level is much smarter and uses lots of tricks to reduce the overall gate count. Since multi-qubit gates have high error rates, and qubits decohere over time, the shorter circuits should give better results."
msgstr "次に、私たちのバックエンドの回路をトランスパイルします。 ``optimization_level`` が ``0`` ( 最低 ) から ``3`` (最高) に設定される ``optimization_level`` というパフォーマンスを比較します。 最も低い最適化レベルは、デバイス上で動作する回路を取得するために必要な最小限のものであり、回路の量子ビットをデバイスの量子ビットにマップし、 すべての2量子ビット演算を可能にするスワップゲートを追加します。最も高い最適化レベルはよりスマートであり、多くのトリックを使用してゲート・カウント全体を削減します。 マルチ量子ビットゲートのエラー率は高く、時間の経過とともに量子ビットが減衰するため、回路を短くすればするほど良い結果が得られるはずです。"

#: ../../tutorials/user-transpiled-circuits.ipynb:87
msgid "In the cell below, we transpile ``qc`` for both values of ``optimization_level``, print the number of CNOT gates, and add the transpiled circuits to a list. Some of the transpiler’s algorithms are randomized, so we set a seed for reproducibility."
msgstr "以下のセルでは、 ``optimization_level`` の両方の値に対して ``qc`` をトランスパイルし、CNOTゲートの数を出力して、トランスパイルされた回路をリストに追加します。 トランスパイラーのアルゴリズムの一部はランダム化されているため、再現性のシードを設定します。"

#: ../../tutorials/user-transpiled-circuits.ipynb:147
msgid "Since CNOTs usually have a high error rate, the circuit transpiled with ``optimization_level=3`` should perform much better."
msgstr "CNOTは通常エラー率が高いため、 ``optimization_level=3`` でトランスパイルされた回路ははるかに優れたパフォーマンスを発揮するはずです。"

#: ../../tutorials/user-transpiled-circuits.ipynb:149
msgid "Another way we can improve performance is through `dynamic decoupling <https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.DynamicalDecoupling.html>`__, where we apply a sequence of gates to idling qubits. This cancels out some unwanted interactions with the environment. In the cell below, we add dynamic decoupling to the circuit transpiled with ``optimization_level=3``, and add it to our list."
msgstr "パフォーマンスを改善するもう 1 つの方法は、アイドリング状態の量子ビットに一連のゲートを適用する `dynamic decoupling <https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.DynamicalDecoupling.html>`__ です。 これにより、環境との不要な相互作用が取り消されます。 以下のセルでは、dynamic decouplingを ``optimization_level=3`` によってトランスパイルされた回路に追加し、それをリストに追加します。"

#: ../../tutorials/user-transpiled-circuits.ipynb:188
msgid "Run user-transpiled circuits using Qiskit Runtime"
msgstr "Qiskit Runtime を使用したユーザー・トランスパイルの回路の実行"

#: ../../tutorials/user-transpiled-circuits.ipynb:190
msgid "At this point, we have a list of circuits (named ``circuits``) transpiled for ``ibm_algiers``. In the cell below, we create an instance of the sampler primitive, and start a session using the context manager (``with ...:``), which automatically opens and closes the session for us. This is where we pass the ``skip_transpilation=True`` argument."
msgstr "この時点で、 ``ibm_algiers`` 用にトランスパイルされた回路（ ``circuits`` という名前）のリストを持っています。以下のセルでは、sampler primitive のインスタンスを作成し、コンテキストマネージャー (``with ...:``) を使用してセッションを開始します。これにより、セッションが自動的に開閉されます。 ここで、 ``skip_transpilation=True`` という引数を渡しています。"

#: ../../tutorials/user-transpiled-circuits.ipynb:192
msgid "Within the context manager, we sample the circuits and store the results to ``result``."
msgstr "コンテキスト・マネージャー内では、回路をサンプリングし、結果を ``result`` に保管します。"

#: ../../tutorials/user-transpiled-circuits.ipynb:221
msgid "Finally, we can plot the results from the device runs against the ideal distribution. You can see the results with ``optimization_level=3`` are closer to the ideal distribution due to the lower gate count, and ``optimization_level=3 + dd`` is even closer due to the dynamic decoupling we applied."
msgstr "最後に、デバイスの実行結果を理想的な分布に対してプロットすることができます。ゲート数が少ないため、 ``optimization_level=3`` の結果は理想的な分布に近く、適用したdynamic decouplingにより、 ``optimization_level=3 + dd`` の結果はさらに理想的な分布に近いことがわかります。"

#: ../../tutorials/user-transpiled-circuits.ipynb:258
msgid "We can confirm this by computing the `Hellinger fidelity <https://qiskit.org/documentation/stubs/qiskit.quantum_info.hellinger_fidelity.html>`__ between each set of results and the ideal distribution (higher is better, and 1 is perfect fidelity)."
msgstr "これは、結果の各セットと理想的な分布の間の `Hellinger fidelity <https://qiskit.org/documentation/stubs/qiskit.quantum_info.hellinger_fidelity.html>`__ を計算することで確認できます（高いほど良い、1は 完璧な忠実度）。"

