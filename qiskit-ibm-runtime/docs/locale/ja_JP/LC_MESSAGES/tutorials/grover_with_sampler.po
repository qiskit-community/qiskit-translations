msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 17:48+0000\n"
"PO-Revision-Date: 2022-11-30 05:02\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/grover_with_sampler.po\n"
"X-Crowdin-File-ID: 9816\n"
"Language: ja_JP\n"

#: ../../tutorials/grover_with_sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/grover_with_sampler.ipynb`__."
msgstr "このページは `docs/tutorials/grover_with_sampler.ipynb`__ から生成されました。"

#: ../../tutorials/grover_with_sampler.ipynb:9
msgid "Database search with Grover’s using Sampler"
msgstr "GroverのSamplerを使用したデータベース検索"

#: ../../tutorials/grover_with_sampler.ipynb:11
msgid "In this tutorial, you will solve a small database search problem using Grover’s algorithm with the Sampler primitive Qiskit Runtime program."
msgstr "このチュートリアルでは、 Sampler primitive Qiskit Runtime プログラムと、グローバーのアルゴリズムを使用して、小さなデータベース検索の問題を解決します。"

#: ../../tutorials/grover_with_sampler.ipynb:23
msgid "Before you begin"
msgstr "始める前に"

#: ../../tutorials/grover_with_sampler.ipynb:25
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, please follow the `Getting Started Guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "このチュートリアルでは、Qiskit Runtime サービス・インスタンスが必要です。まだ実行していない場合は、`入門ガイド <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ に従ってセットアップします。"

#: ../../tutorials/grover_with_sampler.ipynb:37
msgid "Background information"
msgstr "背景情報"

#: ../../tutorials/grover_with_sampler.ipynb:40
msgid "Unstructured search problem"
msgstr "非構造化探索の問題"

#: ../../tutorials/grover_with_sampler.ipynb:42
msgid "In the olden days, you looked up a person’s phone number in a phone book. That is an easy task if you know the person’s name because a phone book is ordered alphabetically by name. However, the opposite task, that is, you are given a phone number and want to find out who it belongs to, is much more difficult. That is because a phone book is not ordered by phone numbers. This is an example of an unstructured search problem. To solve this problem with a classical computer, your best trick is to randomly pick an entry. On average, you will need to look up half of the entires (:math:`N/2`, if :math:`N` is the total number of entries) to find the owner. If you have a quantum computer, however, you can use Grover’s algorithm to find the owner in :math:`\\sqrt N` tries. That means to identify the owner in a phone book that has 1 million numbers, you only need to do 1000 tries instead of 500,000!"
msgstr "昔、あなたは電話帳で人の電話番号を調べていました。 電話帳は名前のアルファベット順に並べられているので、その人の名前を知っていれば、これは簡単な作業です。 ただし、反対のタスク、つまり、電話番号が与えられ、それが誰に属しているかを知りたい場合は、はるかに困難です。 そのため、電話帳は電話番号順には並んでいません。 これは、非構造化探索の問題の例です。 従来のコンピューターでこの問題を解決するには、エントリーをランダムに選択するのが最善の方法です。 平均して、電話番号の持ち主を見つけるには、全体の半分（ :math:`N` がエントリーの総数の場合  :math:`N/2` ）を調べる必要があります。 ただし、量子コンピューターを使用している場合は、グローバーのアルゴリズムを使用して、 :math:`\\sqrt N` 回の試行で持ち主を見つけることができます。 つまり、100万件の番号がある電話帳で所有者を特定するには、500,000回ではなく1000回の試行を行うだけで済みます。"

#: ../../tutorials/grover_with_sampler.ipynb:46
msgid "Grover’s algorithm"
msgstr "グローバーのアルゴリズム"

#: ../../tutorials/grover_with_sampler.ipynb:48
msgid "In a nutshell, Grover’s algorithm uses a nice quantum trick called amplitude amplification to dramatically increase the chances of finding the correct answer - the owner of a phone number - in each try (iteration). That’s all you need to know now. You don’t have to understand the details about how Grover’s algorithm works to apply it, because Qiskit does it for you! However, if you are interested, you can read the chapter about Grover’s algorighm in `the Qiskit textbook <https://qiskit.org/textbook/ch-algorithms/grover.html>`__."
msgstr "一言で言えば、グローバーのアルゴリズムは、振幅増幅と呼ばれる優れた量子トリックを使用して、各試行（反復）で正しい答え（電話番号の所有者）を見つける可能性を劇的に高めます。 今知っておく必要があるのはそれだけです。 Qiskitがやってくれるので、グローバーのアルゴリズムの仕組みについて詳細を理解する必要はありません！ ただし、興味がある場合は、 `Qiskit textbook <https://qiskit.org/textbook/ch-algorithms/grover.html>`__ でグローバーのアルゴリズムに関する章を読むことができます。"

#: ../../tutorials/grover_with_sampler.ipynb:51
msgid "Next, let’s look at a concrete example."
msgstr "次に、具体的な例を見てみましょう。"

#: ../../tutorials/grover_with_sampler.ipynb:63
msgid "Overview"
msgstr "概要"

#: ../../tutorials/grover_with_sampler.ipynb:65
msgid "In this tutorial, you are going to look for the owner of a small phone book using Grove’s algorithm following these steps:"
msgstr "このチュートリアルでは、以下の手順に従って、Groveのアルゴリズムを使用して小さな電話帳の所有者を探します。"

#: ../../tutorials/grover_with_sampler.ipynb:67
msgid "Create Grover’s circuit for the phone book search problem."
msgstr "電話帳検索の問題のためにGroverの回路を作成します。"

#: ../../tutorials/grover_with_sampler.ipynb:68
msgid "Submit the circuits to a quantum computer on the cloud using Qiskit Runtime service and the Sampler primitive program."
msgstr "Qiskit Runtime サービスと Sampler プリミティブ・プログラムを使用して、クラウド上の量子コンピュータに回路を送信します。"

#: ../../tutorials/grover_with_sampler.ipynb:69
msgid "Analyze the results and identify the owner of the phone number."
msgstr "結果を分析し、電話番号の所有者を特定します。"

#: ../../tutorials/grover_with_sampler.ipynb:81
msgid "Step 1: Create Grover’s circuit"
msgstr "グローバーの回路の作成"

#: ../../tutorials/grover_with_sampler.ipynb:84
msgid "Define an unstructured search problem in Qiskit"
msgstr "Qiskit で非構造化探索の問題を定義します"

#: ../../tutorials/grover_with_sampler.ipynb:86
msgid "In this simple example, you are given a small phone book that has 8 entries, person 0 to person 7, and you want to find the owner of a certain phone number. However, you are not allowed to look at the phone book directly. You are only allowed to consult an ‘oracle’: a black-box circuit that immediately tells you if your guess is right or wrong (like the Oracle in “The Matrix”)."
msgstr "この簡単な例では、 人物0 から人物7 までの8 つの項目を持つ小さな電話帳が与えられ、特定の電話番号の所有者を見つけたいと考えています。 しかし、直接電話帳を見ることは許されていません。 私たちは 「オラクル」 に相談することしか許されていません。 オラクルは、私たちの推測が正しいか間違っているか ( 「行列」のオラクルのように) すぐにわかるブラック・ボックス回路です。"

#: ../../tutorials/grover_with_sampler.ipynb:112
msgid "Once you have the oracle, you can define the unstructured search problem using the ``AmplificationProblem`` class in Qiskit."
msgstr "一度オラクルを手にしてしまえば、 Qiskitの ``AmplificationProblem`` クラスを使用して非構造化探索の問題を定義できます。"

#: ../../tutorials/grover_with_sampler.ipynb:136
msgid "Construct Grover’s circuit for the problem"
msgstr "問題に対するグローバーの回路を構成する"

#: ../../tutorials/grover_with_sampler.ipynb:138
msgid "Now you are ready to construct the quantum circuits for Grover’s algorithm for this problem. Grover’s algorithm’s accuracy in finding the correct answer increases with the number of iterations. Let’s create two circuits with one and two iterations each to see this effect."
msgstr "これで、この問題に対するグローバーのアルゴリズムの量子回路を構築する準備が整いました。 正しい答えを見つける際のグローバーのアルゴリズムの精度は、反復回数とともに増加します。 この効果を確認するために、1回と2回の反復で回路を作成してみましょう。"

#: ../../tutorials/grover_with_sampler.ipynb:166
msgid "Let’s look at the circuits:"
msgstr "回路を見ていきましょう。"

#: ../../tutorials/grover_with_sampler.ipynb:218
msgid "Step 2: Submit the circuits to a quantum computer on the cloud"
msgstr "ステップ2: 回路をクラウド上の量子コンピューターに送信する"

#: ../../tutorials/grover_with_sampler.ipynb:220
msgid "Now that the Grover’s circuits are created, let’s submit them to a quantum computer on the cloud by using the Sampler program."
msgstr "これで、グローバーの回路が作成され、Sampler プログラムを使用してクラウド上の量子コンピュータに送信できるようになりました。"

#: ../../tutorials/grover_with_sampler.ipynb:232
msgid "Connect to the Qiskit Runtime service"
msgstr "Qiskit Runtime サービスに接続する"

#: ../../tutorials/grover_with_sampler.ipynb:234
msgid "First, connect to the Qiskit Runtime service instance that you created in `the first step <#Set-up-your-local-development-environment>`__."
msgstr "まず、 `最初のステップ <#Set-up-your-local-development-environment>`__ で作成した Qiskit Runtime サービス・インスタンスに接続します。"

#: ../../tutorials/grover_with_sampler.ipynb:258
msgid "Grover’s algorithm determines the correct answer based on the highest probability of measurement outcomes. The ``Sampler`` primitive program is perfect for getting probabilities, so you will use that. In the cell below, you create an instance of the ``Sampler`` program, and start a Runtime session using the context manager (``with ...:``), which automatically opens and closes the session for you."
msgstr "グローバーのアルゴリズムは、測定結果のうち最も高い確率に基づいて正しい答えを決定します。 ``Sampler`` primitive プログラムは、確率を求めるのに最適なので、これを使うことにします。以下のセルでは、 ``Sampler`` プログラムのインスタンスを作成し、コンテキスト・マネージャーを使用してRuntimeセッションを開始します ( ``with ...:`` )。これは、セッションを自動的に開いたり閉じたりします。"

#: ../../tutorials/grover_with_sampler.ipynb:260
msgid "The ``Sampler`` program allows a batch submission of circuits in a job. Here you are passing a list of two circuits (Grover with 1 iteration and 2 iterations) to the Sampler but only one call is needed to sample the probability of measurement outcomes of both circuits."
msgstr "``Sampler`` プログラムでは、ジョブ内の回路のバッチ送信が可能です。 ここでは、2つの回路(1回の反復と2回の反復を持つグローバー)のリストを Sampler に渡しますが、両方の回路の測定結果の確率をサンプリングするには、1回の呼び出ししか必要ありません。"

#: ../../tutorials/grover_with_sampler.ipynb:312
msgid "Step 3: Analyze the results"
msgstr "ステップ 3: 結果の分析"

#: ../../tutorials/grover_with_sampler.ipynb:314
msgid "Let’s look at the results:"
msgstr "結果を見てみよう。"

#: ../../tutorials/grover_with_sampler.ipynb:382
msgid "Let’s print out the quantum result, along with the secret string, to check the quantum computer found the correct answer."
msgstr "量子の結果を秘密の文字列とともに印字して、量子コンピューターが正しい答えを見つけたことを確認しましょう。"

#: ../../tutorials/grover_with_sampler.ipynb:436
msgid "Congratulations! You have successfully found the owner of the phone number."
msgstr "おめでとうございます！電話番号の所有者が見つかりました。"

#: ../../tutorials/grover_with_sampler.ipynb:438
msgid "You can re-run the tutorial a few times to generate other random secret strings to check that we are not cheating! The quantum computer will find the correct answer every time."
msgstr "チュートリアルを数回再実行すると、他のランダムな秘密の文字列を生成して、私たちが不正をしていないことを確認することができます。 量子コンピュータは毎回正しい答えを見つけるでしょう。"

#: ../../tutorials/grover_with_sampler.ipynb:450
msgid "Summary"
msgstr "概要"

#: ../../tutorials/grover_with_sampler.ipynb:452
msgid "In this tutorial, you have solved a small database search problem using a quantum computer. You have constructed Grover’s circuits by defining a phone book search problem using the ``AmplificationProblem`` class in Qiskit and then submitted the circuits to run using the Sampler primitive program via Qiskit Runtime service."
msgstr "このチュートリアルでは、量子コンピューターを使用して小さなデータベース検索の問題を解決しました。 Qiskit の ``AmplificationProblem`` クラスを使用して電話帳検索の問題を定義し、Qiskit Runtime サービスを介してSamper primitive プログラムを使用して実行する回路を提出しました。"

#: ../../tutorials/grover_with_sampler.ipynb:464
msgid "References"
msgstr "参考文献"

#: ../../tutorials/grover_with_sampler.ipynb:466
msgid "Harkins, F., Grover’s search algorithm. In A. Abbas, et al. Learn Quantum Computation Using Qiskit. URL: https://learn.qiskit.org/course/introduction/grovers-search-algorithm (accessed 09/01/2022) (2020)."
msgstr "Harkins, F., Grover’s search algorithm. In A. Abbas, et al. Learn Quantum Computation Using Qiskit. URL: https://learn.qiskit.org/course/introduction/grovers-search-algorithm (accessed 09/01/2022) (2020)."

#: ../../tutorials/grover_with_sampler.ipynb:478
msgid "Qiskit versions and copyright"
msgstr "Qiskit のバージョンと著作権"

