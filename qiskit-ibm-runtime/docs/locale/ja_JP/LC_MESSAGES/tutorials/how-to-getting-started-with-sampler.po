msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-24 21:41+0000\n"
"PO-Revision-Date: 2023-10-24 21:56\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-sampler.po\n"
"X-Crowdin-File-ID: 9820\n"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-sampler.ipynb`__."
msgstr "このページは `docs/tutorials/how-to-getting-started-with-sampler.ipynb`__ から生成されました。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:9
msgid "Get started with the Sampler primitive"
msgstr "Sampler primitive 入門"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:20
msgid "In this tutorial we will show you how to set up the Qiskit Runtime ``Sampler`` primitive, explore the different options you can use to configure it, and invoke the primitive efficiently inside a session."
msgstr "このチュートリアルでは、Qiskit Rumtime ``Sampler`` primitiveを設定する方法、設定に使用できるさまざまなoption、およびsession内でprimitiveを効率的に呼び出す方法を説明します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:32
msgid "Primitives"
msgstr "Primitives"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:43
msgid "`Primitives <https://qiskit.org/ecosystem/ibm-runtime/primitives.html>`__ are core functions that make it easier to build modular algorithms and applications."
msgstr "`Primitives <https://qiskit.org/ecosystem/ibm-runtime/primitives.html>`__ は、モジュール化されたアルゴリズムやアプリケーションの構築を容易にするコア関数です。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:45
msgid "The initial release of Qiskit Runtime includes two primitives:"
msgstr "Qiskit Runtimeの初期リリースには、次の2つのprimitiveが含まれています。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:47
msgid "**Sampler:** Generates quasi-probability distribution from input circuits."
msgstr "**Sampler:** 入力回路から準確率分布を生成する。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:49
msgid "**Estimator:** Calculates expectation values from input circuits and observables."
msgstr "**Estimator:** 入力回路と観測量から期待値を計算する。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:60
msgid "In this tutorial we will focus on the ``Sampler`` primitive. There is a separate tutorial on `Getting started with the Estimator primitive <how-to-getting-started-with-estimator.ipynb>`__."
msgstr "このチュートリアルでは、 ``Sampler`` primitiveに焦点を当てます。`Estimator primtive 入門 <how-to-getting-started-with-estimator.ipynb>`__ というチュートリアルは別にあります。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:72
msgid "Using the Sampler primitive"
msgstr "Sampler primitive を使う"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:83
msgid "Similar to the ``Backend`` base class, there is an ``Sampler`` base class defined in Qiskit Terra that standardizes the way users interact with all ``Sampler`` implementations. This allows users to easily change their choice of simulator or device for performing expectation value calculations, even if the underlying implementation is different."
msgstr "``Backend`` の基底クラスと同様に、Qiskit Terraには ``Sampler`` 基底クラスが定義されており、ユーザーがすべての ``Sampler`` 実装と対話する方法を標準化します。これにより、基礎となる実装が異なっていても、期待値計算を行うためのシミュレーターやデバイスの選択を簡単に変更することができます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:85
msgid "In this section we will be using the default implementation in Qiskit Terra, which uses a local state vector simulator."
msgstr "このセクションでは、Qiskit Terraのデフォルトの実装であるローカルの状態ベクトル・シミュレーターを使用します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:97
msgid "1. Create a circuit"
msgstr "1. 回路の作成"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:108
msgid "You will need at least one quantum circuit to prepare our system in a precise quantum state for study. Our examples all have circuits in them, but you can use Qiskit to create your own. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr "研究のための正確な量子状態でシステムを準備するために、少なくとも1つの量子回路が必要になります。すべての例に回路が含まれていますが、Qiskit を使用して独自の回路を作成することができます。 Qiskit を使用して回路を作成する方法については、`回路の基本チュートリアル <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__ を参照してください。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:141
msgid "2. Initialize a Sampler class"
msgstr "2. Samplerクラスの初期化"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:156
msgid "The next step is to create an instance of an ``Sampler`` class, which can be any of the subclasses that comply with the base specification. For simplicity, we will use Qiskit Terra's ``qiskit.primitives.Sampler`` class, based on the `Statevector construct <https://qiskit.org/documentation/stubs/qiskit.quantum_info.Statevector.html?highlight=statevector#qiskit.quantum_info.Statevector>`__ (that is, algebraic simulation)."
msgstr "次のステップは、 ``Sampler`` クラスのインスタンスを作ることです。これは、基本仕様に準拠した どのようなサブクラスでも構いません。分かりやすくするため、Qiskit Terraの ``qiskit.primitives.Sampler`` クラスを使用します。これは、 `Statevector construct <https://qiskit.org/documentation/stubs/qiskit.quantum_info.Statevector.html?highlight=statevector#qiskit.quantum_info.Statevector>`__ (すなわち代数シミュレーション) に基づいています。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:180
msgid "3. Invoke the Sampler and get results"
msgstr "3. Samplerの呼び出しおよび結果の取得"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:191
msgid "To estimate the quasi-probability distribution of the circuit output, invoke the ``run()`` method of the ``Sampler`` instance you just created and pass in the circuit as an input parameter. This method call is asynchronous, and you will get a ``Job`` object back. You can use this object to query for information like ``job_id()`` and ``status()``."
msgstr "回路出力の準確率分散を推定するには、先ほど作成した ``Sampler`` インスタンスの ``run()`` メソッドを呼び出し、入力パラメータとして回路を渡します。このメソッドの呼び出しは非同期で、``Job`` オブジェクトを戻します。 このオブジェクトを使って ``job_id()`` や ``status()`` のような情報を問い合わせることができます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:241
msgid "The ``result()`` method of the job will return the ``SamplerResult``, which includes both the quasi-probability distribution and job metadata."
msgstr "ジョブの ``result()`` メソッドは、準確率分散とジョブのメタデータ双方を含む ``SamplerResult`` を返します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:291
msgid "You can keep invoking the ``run()`` method again with the different inputs:"
msgstr "このように、入力を変えて再度 ``run()`` メソッドを呼び出し続けることができます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:351
msgid "You can also provide compound inputs to the ``run()`` method:"
msgstr "``run()`` メソッドに複数の入力を提供することもできます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:423
msgid "Or use parameterized circuits:"
msgstr "もしくはパラメーター化された回路を使用します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:492
msgid "Using Qiskit Runtime Sampler"
msgstr "Qiskit Runtime Samplerの使用"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:503
msgid "In this section we will go over how to use Qiskit Runtime's implementation of the ``Sampler`` primitive."
msgstr "このセクションでは、Qiskit Runtimeの ``Sampler`` primitiveの実装方法について説明します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:515
msgid "1. Initialize the account"
msgstr "1. アカウントの初期化"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:526
msgid "Since Qiskit Runtime ``Sampler`` is a managed service, you will first need to initialize your account. You can then select the simulator or real backend you want to use to calculate the expectation value."
msgstr "QisKit Runtimeの ``Sampler`` はマネージドサービスなので、まずアカウントを初期化する必要があります。 すると、期待値を計算するために使用するシミュレーターや実際のバックエンドを選択できるようになります。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:528
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ if you don't already have an account set up."
msgstr "まだアカウントを設定していない場合は、 `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ の手順に従ってください。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:553
msgid "2. Create a circuit"
msgstr "2. 回路の作成"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:564
msgid "Just like the section before, you will need at least one circuit as the input to the ``Sampler`` primitive."
msgstr "前のセクションと同様に、``Sampler`` primitive への入力として少なくとも1つの回路が必要です。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:597
msgid "3. Initialize the Qiskit Runtime Sampler"
msgstr "3. Qiskit Runtime Sampler の初期化"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:608
msgid "Here we are initializing an instance of ``qiskit_ibm_runtime.Sampler`` rather than ``qiskit.primitives.Sampler`` to use Qiskit Runtime's implementation of the ``Sampler``."
msgstr "ここでは、Qiskit Runtimeの ``Sampler`` の実装を使用するため、 ``qiskit.primitives.Sampler`` の代わりに ``qiskit_ibm_runtime.Sampler`` のインスタンスを初期化します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:610
msgid "When you initialize the ``Sampler``, you'll need to pass in the backend you previously selected as the target device (or simulator), using the ``backend`` parameter."
msgstr "``Sampler`` を初期化する場合、``backend`` パラメータを使用して、先に選択したバックエンドをターゲットデバイス (またはシミュレーター) として渡す必要があります。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:634
msgid "4. Invoke the Sampler and get results"
msgstr "4. Samplerの呼び出しおよび結果の取得"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:645
msgid "You can then invoke the ``run()`` method to generate a quasi-probability distribution for the input circuit(s) and quantum state(s)."
msgstr "次に ``run()`` メソッドを呼び出すと、入力回路と量子状態の準確率分布が生成されます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:739
msgid "Options"
msgstr "オプション"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:750
msgid "Primitives come with several options that are grouped into different categories. Commonly used options, such as ``resilience_level``, are at the first level."
msgstr "primitiveには、さまざまなカテゴリーにグループ化された数々のオプションが用意されています。``resilience_level`` などの一般的に使用されるオプションは、最初のレベルにあります。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:752
msgid "|options|"
msgstr "|options|"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:754
msgid "options"
msgstr "options"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:765
msgid "You can use the `Options <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ class to specify different options."
msgstr "`Options <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ クラスを使用して、さまざまなオプションを指定できます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:776
msgid "In the following example, we create an instance of the ``Options`` class. ``optimization_level`` is a first level option and can be passed as an input parameter. Options related to the execution environment are passed using the ``environment`` parameter."
msgstr "以下の例では、``Options`` クラスのインスタンスを作成します。 ``optimization_level`` は最初のレベルのオプションで、入力パラメーターとして渡すことができます。 実行環境に関連するオプションは ``environment`` パラメーターを使用して渡されます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:799
msgid "``Options`` supports auto-complete. Once you create an instance of the ``Options`` class, you can use auto-complete to see what options are available. If you choose one of the categories, you can use auto-complete again to see what options are available under that category."
msgstr "``Options`` は自動補完をサポートします。``Options`` クラスのインスタンスを作成したら、自動補完を使用して利用可能なオプションを確認できます。 カテゴリーを選択した場合は、再び自動補完を使用して、そのカテゴリーの下で利用可能なオプションを確認できます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:824
msgid "When creating an instance of the ``Sampler`` class, you can pass in the ``options`` you just created. Those options will then be applied when you use ``run()`` to perform the calculation."
msgstr "``Sampler`` クラスのインスタンスを作成する場合、作成したばかりの ``options`` を渡すことができます。 これらのオプションは ``run()`` を使って計算を行うときに適用されます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:871
msgid "You can also pass in options through the ``run()`` method. This will overwrite the options you specified when creating the ``Sampler`` instance for that particular execution."
msgstr "``run()`` メソッドでオプションを渡すこともできます。 これにより、 ``Sampler`` インスタンスを作成するときに指定したオプションを、特定の実行のために上書きします。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:873
msgid "Since most users will only overwrite a handful of options at the job level, it is not necessary to specify the category the options are in. The following code, for example, specifies ``shots=1024`` rather than ``execution={\"shots\": 1024}`` (which is also valid)."
msgstr "ほとんどのユーザーはジョブ・レベルでのオプションのみ上書きするので、 カテゴリーを指定する必要はありません。 例えば、``execution={\"shots\": 1024}`` (これも有効です) の代わりに ``shots=1024`` を指定します 。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:921
msgid "Error suppression and mitigation"
msgstr "エラーの抑止と軽減"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:932
msgid "``optimization_level`` and ``resilience_level`` are used to configure error suppress and mitigation."
msgstr "``optimization_level`` および ``resilience_level`` を使用して、エラーの抑止と軽減を構成します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:934
msgid "``Sampler`` supports ``optimization_level`` 0-3 and ``resilience_level`` 0-1."
msgstr "``Sampler`` は ``optimization_level`` 0-3 と ``resilience_level`` 0-1 をサポートしています。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1000
msgid "Session"
msgstr "セッション"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1011
msgid "A Qiskit Runtime *session* allows you to group a collection of iterative calls to the quantum computer. A session is started when the first job within the session is started. Provided the session is active, subsequent jobs within the session are prioritized by the scheduler to minimize artificial delay within an iterative algorithm. Data used within a session, such as transpiled circuits, is also cached to avoid unnecessary overhead."
msgstr "Qiskit Runtime *セッション* は、量子コンピューターの反復呼び出しの集合をグループ化することができます。セッションは、プログラムの最初のジョブがセッション内で開始したときに開始されます。セッションが有効であれば、セッション内の後続のジョブは反復アルゴリズム内の人為的な遅延を最小化するようスケジューラーによって優先順位が付けられます。トランスパイルされた回路のように、セッション内で使用されるデータも、不要なオーバーヘッドを避けるためにキャッシュされます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1023
msgid "Session timing"
msgstr "セッションの時間"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1034
msgid "When a session is started, it is assigned a maximum session timeout value. You can set this value by using the ``max_time`` parameter."
msgstr "セッションが開始されると、セッション・タイムアウトの最大値が割り当てられます。この値は ``max_time`` パラメーターを使用して設定できます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1036
msgid "If you don't specify a timeout value, it is set to the initial job's maximum execution time and is the smaller of these values:"
msgstr "タイムアウト値を指定しない場合、最初のジョブの最大実行時間に設定されます。これは次のうち小さい方の値です。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1038
msgid "The system limit (see `What is the maximum execution time for a Qiskit Runtime job? <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/faqs/max_execution_time.html>`__)."
msgstr "システム制限（`Qiskit Runtime ジョブの最大実行時間は何ですか？ <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/faqs/max_execution_time.html>`__ を参照してください）"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1039
msgid "The ``max_execution_time`` defined by the program."
msgstr "プログラムによって定義された ``max_execution_time`` 。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1041
msgid "After this time limit is reached, the session is permanently closed."
msgstr "この制限時間に達すると、セッションは永久にクローズされます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1052
msgid "A session also has an *interactive* timeout value. If there are no session jobs queued within that window, the session is temporarily deactivated and normal job selection resumes. This interactive timeout value is set by the system and cannot be overwritten."
msgstr "セッションには *対話的* タイムアウト値もあります。 そのウィンドウ内に待ち行列に入ったセッション・ジョブがない場合、セッションは一時的に無効化され、通常のジョブ選択が再開されます。 この対話的タイムアウト値はシステムによって設定され、上書きすることはできません。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1064
msgid "Invoking Sampler.run within a session"
msgstr "セッション内での Sampler.run の呼び出し"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1075
msgid "You can create a Qiskit Runtime session using the context manager (``with ...:``), which automatically opens and closes the session for you. You can invoke ``Sampler.run`` one or more times within a session:"
msgstr "自動的にセッションを開閉するコンテキスト・マネージャー (``with ...:``) を使って、Qiskit Runtimeセッションを作成できます。セッション内で ``Sampler.run`` を1回以上呼び出すことができます。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1133
msgid "Invoke multiple primitives in a session"
msgstr "セッション内での複数primitiveの呼び出し"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1144
msgid "You are not restricted to a single primitive function within a session. In this section we will show you an example of using multiple primitives."
msgstr "セッション内は単一のprimitive関数に限定されていません。このセクションでは、複数のprimitiveを使用する例を示します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1155
msgid "First we prepare a circuit and an observable for the ``Estimator`` primitive."
msgstr "最初に、``Estimator`` primitiveのための回路と観測量を用意します。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1216
msgid "The following example shows how you can create both an instance of the ``Sampler`` class and one of the ``Estimator`` class and invoke their ``run()`` methods within a session."
msgstr "以下の例では、``Sampler`` クラスと ``Estimator`` クラスのインスタンスを両方作成し、セッション内で ``run()`` メソッドを呼び出す方法を示しています。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1274
msgid "The calls can also be asynchronous. You don't need to wait for the result of a previous job before submitting another one."
msgstr "呼び出しは非同期にすることもできます。別のジョブを送信する前に、前のジョブの結果を待つ必要はありません。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1335
msgid "Summary"
msgstr "まとめ"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1346
msgid "The following code quickly recaps using Qiskit Runtime primitives, options, and sessions."
msgstr "以下は、Qiskit Runtime primitive、オプション、そしてセッションを簡単にまとめたものです。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1426
msgid "Reference"
msgstr "参考資料"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1437
msgid "You can find more details about the ``Sampler`` methods in the `Sampler API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html#qiskit_ibm_runtime.Sampler>`__."
msgstr "``Sampler`` メソッドの詳細は、 `Sampler API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html#qiskit_ibm_runtime.Sampler>`__ を参照してください。"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1439
msgid "And all the available options in the `Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__."
msgstr "そして利用可能なすべてのオプションは、`Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ に記載されています。"

