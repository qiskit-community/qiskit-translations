msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-12 19:16+0000\n"
"PO-Revision-Date: 2023-09-12 19:46\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/chsh_with_estimator.po\n"
"X-Crowdin-File-ID: 9842\n"

#: ../../tutorials/chsh_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/chsh_with_estimator.ipynb`__."
msgstr "このページは `docs/tutorials/chsh_with_estimator.ipynb`__ から生成されました。"

#: ../../tutorials/chsh_with_estimator.ipynb:13
msgid "Demonstrate the violation of the CHSH inequality with the Estimator primitive"
msgstr "Estimator primitiveを用いたCHSH不等式の破れの証明"

#: ../../tutorials/chsh_with_estimator.ipynb:24
msgid "In this tutorial, you will run an experiment on a quantum computer to demonstrate the violation of the CHSH inequality with the Estimator primitive."
msgstr "このチュートリアルでは、Estimator primitive を用いてCHSH不等式の破れを実証する実験を量子コンピューターで行います。"

#: ../../tutorials/chsh_with_estimator.ipynb:26
msgid "The violation of the CHSH inequality is used to show that quantum mechanics is incompatible with local hidden-variable theories. This is an important experiment for understanding the foundation of quantum mechanics. The 2022 Nobel Prize for Physics was awarded to Alain Aspect, John Clauser and Anton Zeilinger in part for their pioneering work in quantum information science, and in particular, their experiments with entangled photons demonstrating violation of Bell’s inequalities. An experimental method by which one can test Bell’s inequality was put forth by Clauser, Horne, Shimony, and Holt (CHSH) in 1969, and forms the basis for the experiment conducted here. It's truly incredible that you can use Qiskit and an IBM Quantum system to conduct this experiment from the comfort of your home!"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:39
msgid "Background information"
msgstr "背景情報"

#: ../../tutorials/chsh_with_estimator.ipynb:51
msgid "CHSH inequality"
msgstr "CHSH不等式"

#: ../../tutorials/chsh_with_estimator.ipynb:53
msgid "The CHSH inequality, named after the authors Clauser, Horne, Shimony, and Holt, is used to experimentally prove Bell's theorem. This theorem asserts that local hidden variable theories cannot account for some consequences of entanglement in quantum mechanics."
msgstr "CHSH不等式は、著者であるClauser、Horne、Shimony、Holt にちなんで名付けられ、ベルの定理を実験的に証明するために使用されています。この定理は、局所的な隠れた変数理論は量子力学におけるエンタングルメントのいくつかの結果を説明できないと主張するものです。"

#: ../../tutorials/chsh_with_estimator.ipynb:55
msgid "For this experiment, we will create an entangled pair on which we measure each qubit on two different bases. We will label the bases for the first qubit :math:`A` and :math:`a` and the bases for the second qubit :math:`B` and :math:`b`. This allows us to compute the CHSH quantity :math:`S_1`:"
msgstr "この実験では、量子もつれのペアを作り、それぞれの量子ビットを2つの異なる基底で測定します。第一量子ビットの基底を :math:`A` と :math:`a` 、第二量子ビットの基底を :math:`B` と :math:`b` とラベル付けします。これにより、CHSH量 :math:`S_1` を計算することができます。"

#: ../../tutorials/chsh_with_estimator.ipynb:57
msgid "S_1 = A(B-b) + a(B+b).\n\n"
msgstr "S_1 = A(B-b) + a(B+b).\n\n"

#: ../../tutorials/chsh_with_estimator.ipynb:59
msgid "Each observable is either :math:`+1` or :math:`-1`. Clearly, one of the terms :math:`B\\pm b` must be :math:`0`, and the other must be :math:`\\pm 2`. Therefore, :math:`S_1 = \\pm 2`. The average value of :math:`S_1` must satisfy the inequality:"
msgstr "各オブザーバブルは :math:`+1` または  :math:`-1` のいずれかです。 明らかに、項 :math:`B\\pm b` の 1 つは 0 でなければならず、もう 1 つは :math:`\\pm 2` でなければなりません。 したがって、 :math:`S_1 = \\pm 2` です。 :math:`S_1` の平均値は次の不等式を満たさなければなりません。"

#: ../../tutorials/chsh_with_estimator.ipynb:61
msgid "|\\langle S_1 \\rangle|\\leq 2.\n\n"
msgstr "|\\langle S_1 \\rangle|\\leq 2.\n\n"

#: ../../tutorials/chsh_with_estimator.ipynb:63
msgid "Expanding :math:`S_1` in terms of :math:`A`, :math:`a`, :math:`B`, and :math:`b` results in:"
msgstr ":math:`S_1` を :math:`A` 、 :math:`a` 、:math:`B` 、:math:`b` で展開すると、次のようになります。"

#: ../../tutorials/chsh_with_estimator.ipynb:65
msgid "|\\langle S_1 \\rangle| = |\\langle AB \\rangle - \\langle Ab \\rangle + \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"
msgstr "|\\langle S_1 \\rangle| = |\\langle AB \\rangle - \\langle Ab \\rangle + \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"

#: ../../tutorials/chsh_with_estimator.ipynb:67
msgid "You can define another CHSH quantity :math:`S_2`:"
msgstr "別の CHSH 量  :math:`S_2` を定義できます。"

#: ../../tutorials/chsh_with_estimator.ipynb:69
msgid "S_2 = A(B+b) - a(B-b),\n\n"
msgstr "S_2 = A(B+b) - a(B-b),\n\n"

#: ../../tutorials/chsh_with_estimator.ipynb:71
msgid "This leads to another inequality:"
msgstr "これは、別の不等式につながります。"

#: ../../tutorials/chsh_with_estimator.ipynb:73
msgid "|\\langle S_2 \\rangle| = |\\langle AB \\rangle + \\langle Ab \\rangle - \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"
msgstr "|\\langle S_2 \\rangle| = |\\langle AB \\rangle + \\langle Ab \\rangle - \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"

#: ../../tutorials/chsh_with_estimator.ipynb:75
msgid "If quantum mechanics can be described by local hidden variable theories, the previous inequalities must hold true. However, as you are going to demonstrate in this notebook, these inequalities can be violated in a quantum computer. Therefore, quantum mechanics is not compatible with local hidden variable theories."
msgstr "もし、量子力学が局所的な隠れた変数理論で記述できるのであれば、上記の不等式は成立するはずです。しかし、このノートで示すように、量子コンピューターではこの不等式が破られる可能性があります。従って、量子力学は局所的な隠れた変数理論とは相容れません。"

#: ../../tutorials/chsh_with_estimator.ipynb:77
msgid "If you want to learn more, you can read the chapter about the CHSH inequality in `the Qiskit textbook <https://qiskit.org/textbook/ch-demos/chsh.html>`__."
msgstr "もっと詳しく知りたい方は、 `Qiskitテキストブック <https://qiskit.org/textbook/ch-demos/chsh.html>`__ にあるCHSH不等式についての章を読んでみてください。"

#: ../../tutorials/chsh_with_estimator.ipynb:89
msgid "Overview"
msgstr "概要"

#: ../../tutorials/chsh_with_estimator.ipynb:91
msgid "You will create an entangled pair between two qubits in a quantum computer by creating the Bell state :math:`|\\Phi^+\\rangle = \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}}`. Using the Estimator primitive, you can directly obtain the expectation values needed (:math:`\\langle AB \\rangle, \\langle Ab \\rangle, \\langle aB \\rangle`, and :math:`\\langle ab \\rangle`) to calculate the expectation values of the two CHSH quantities :math:`\\langle S_1\\rangle` and :math:`\\langle S_2\\rangle`. Before the introduction of the Estimator primitive, you would have to construct the expectation values from the measurement outcomes."
msgstr "ベル状態 :math:`|\\Phi^+\\rangle = \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}}` を作成することで、量子コンピューターの 2量子ビット間にエンタングルのペアを作成します。 Estimator primitive を使用すると、必要な期待値  (:math:`\\langle AB \\rangle, \\langle Ab \\rangle, \\langle aB \\rangle`,  :math:`\\langle ab \\rangle`) を直接取得して、 :math:`\\langle S_1\\rangle` と :math:`\\langle S_2\\rangle` の 2 つの CHSH量の期待値を計算します。Estimator primitive を導入する前は、測定結果から期待値を構築する必要がありました。"

#: ../../tutorials/chsh_with_estimator.ipynb:94
msgid "You will measure the second qubit in the :math:`Z` and :math:`X` bases. The first qubit will be measured also in orthogonal bases, but with an angle with respect to the second qubit, which we are going to sweep between :math:`0` and :math:`2\\pi`. As you will see, the Estimator primitive makes running parameterized circuits very easy. Rather than creating a series of CHSH circuits, you only need to create *one* CHSH circuit with a parameter specifying the measurement angle and a series of phase values for the parameter."
msgstr ":math:`Z` および :math:`X` 基底で 2 番目の量子ビットを測定します。 最初の量子ビットも直交基底で測定されますが、2 番目の量子ビットに対して角度があり、:math:`0` から :math:`2\\pi` の間でスイープします。 ご覧のとおり、Estimator primitive により、パラメーター化された回路の実行が非常に簡単になります。 一連の CHSH 回路を作成する代わりに、測定角度を指定するパラメーターとパラメーターの一連の位相の値を使用して *1つ* の CHSH 回路を作成するだけで済みます。"

#: ../../tutorials/chsh_with_estimator.ipynb:97
msgid "Finally, you will analyze the results and plot them against the measurement angle. You will see that for certain range of measurement angles, the expectation values of CHSH quantities :math:`|\\langle S_1\\rangle| > 2` or :math:`|\\langle S_2\\rangle| > 2`, which demonstrates the violation of the CHSH inequality."
msgstr "最後に、結果を分析し、測定角度に対してプロットします。 測定角度の特定の範囲で、CHSH 量の期待値 が :math:`|\\langle S_1\\rangle| > 2` または :math:`|\\langle S_2\\rangle| > 2` であることがわかります。これは、CHSH 不等式の破れを示しています。"

#: ../../tutorials/chsh_with_estimator.ipynb:103
msgid "Note"
msgstr "注記"

#: ../../tutorials/chsh_with_estimator.ipynb:105
msgid "For expert users out there, we should mention there are several loopholes that must be closed when violating the inequality to claim that either locality or realism have been disproven. See the last paragraph (right before the \"Exercise\" section) in the CHSH chapter in `the Qiskit textbook <https://qiskit.org/textbook/ch-demos/chsh.html>`__ for discussions."
msgstr "この不等式の破れで、局所性や実在性が否定されたと主張するためには、いくつかの抜け穴を塞がなければならないことを、専門家のために言及しておく必要があります。議論については、`Qiskitテキストブック <https://qiskit.org/textbook/ch-demos/chsh.html>`__ の CHSH の章の最後の段落（ “Exercise” の項の直前）を参照してください。"

#: ../../tutorials/chsh_with_estimator.ipynb:121
msgid "Setup"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:156
msgid "Connect to the Qiskit Runtime service"
msgstr "Qiskit Runtime サービスに接続する"

#: ../../tutorials/chsh_with_estimator.ipynb:158
msgid "Before running circuits, you need to connect to the Qiskit Runtime service instance, and select a target backend:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:181
msgid "Step 1: Create CHSH circuits"
msgstr "ステップ1：CHSH回路の作成"

#: ../../tutorials/chsh_with_estimator.ipynb:193
msgid "Create a parameterized CHSH circuit"
msgstr "パラメーター化されたCHSH回路を作成する"

#: ../../tutorials/chsh_with_estimator.ipynb:195
msgid "First, we write the circuit with the parameter :math:`\\theta`, which we call ``theta``. The ``Estimator`` primitive can enormously simplify circuit building and output analysis by directly providing expectation values of observables. Many problems of interest, especially for near-term applications on noisy systems, can be formulated in terms of expectation values. For maximum generalization, the ``Estimator`` primitive requires circuits with no measurements."
msgstr "まず、パラメータ :math:`\\theta` を ``theta`` と呼ぶことにして、回路を書きます。Estimator primitiveは、観測値の期待値を直接提供することにより、回路の構築と出力の解析を非常に簡単に行うことができます。多くの興味深い問題、特にノイズのあるシステムを使う近未来のアプリケーションは、期待値で定式化できます。最大限の一般化を図るため、Estimator primitive は測定のない回路が必要です。"

#: ../../tutorials/chsh_with_estimator.ipynb:237
msgid "Create a list of phase values to be assigned later"
msgstr "後で割り当てる位相の値のリストを作成する"

#: ../../tutorials/chsh_with_estimator.ipynb:239
msgid "After creating the parameterized CHSH circuit, you will create a list of phase values to be assigned to the circuit in the next step. You can use the following code to create a list of 21 phase values range from :math:`0` to :math:`2 \\pi` with equal spacing, that is, :math:`0`, :math:`0.1 \\pi`, :math:`0.2 \\pi`, ..., :math:`1.9 \\pi`, :math:`2 \\pi`."
msgstr "パラメーター化された CHSH 回路を作成したら、次の手順で回路に割り当てる位相の値のリストを作成します。 以下のコードを使用して、等間隔、つまり \\ :math:`0`, :math:`0.1 \\pi`, :math:`0.2 \\pi`, …, :math:`1.9 \\pi`, :math:`2 \\pi` で :math:`0` から :math:`2 \\pi` までの範囲の 21 の位相の値のリストを作成します。"

#: ../../tutorials/chsh_with_estimator.ipynb:264
msgid "Observables"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:266
msgid "Now we need observables from which to compute the expectation values. In our case we are looking at orthogonal bases for each qubit, letting the parameterized :math:`Y-` rotation for the first qubit sweep the measurement basis nearly continuously with respect to the second qubit basis. We will therefore choose the observables :math:`ZZ`, :math:`ZX`, :math:`XZ`, and :math:`XX`."
msgstr "次に、期待値を計算するためのオブザーバブルが必要です。 私たちの場合、各量子ビットの直交基底を見て、最初の量子ビットのパラメーター化された :math:`Y-` 回転が、2 番目の量子ビットの基底に関してほぼ連続的に測定基底をスイープするようにします。 したがって、オブザーバブル :math:`ZZ`, :math:`ZX`, :math:`XZ`, :math:`XX` を選択することにします。"

#: ../../tutorials/chsh_with_estimator.ipynb:294
msgid "Step 2: Submit the circuits to a quantum computer on the cloud"
msgstr "ステップ2: 回路をクラウド上の量子コンピューターに送信する"

#: ../../tutorials/chsh_with_estimator.ipynb:305
msgid "In order to execute the entire experiment in one call to the ``Estimator`` we need to batch the circuit and operators together, repeating each for the requested ``number_of_phases`` points."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:327
msgid "We can now create an ``Estimator`` instance using our selected backend, and execute our batched circuits and observables:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:356
msgid "The individual expectation values can then be extracted from the batched results:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:380
msgid "Step 3: Analyze the results"
msgstr "ステップ 3: 結果の分析"

#: ../../tutorials/chsh_with_estimator.ipynb:382
msgid "After running the circuits, we need to build the CHSH witness functions. We first build the quantities :math:`\\langle AB \\rangle`, :math:`\\langle Ab \\rangle`, :math:`\\langle aB \\rangle`, and :math:`\\langle ab \\rangle`, by looking at the parity of the outcomes for the four families of circuits we built (two measurement bases for each of the two qubits). Then we use those quantities to build the witness functions as defined previously."
msgstr "回路を実行した後、CHSH 証人関数を構築する必要があります。 最初に、構築した 4 つの回路群（2つの量子ビットに2つの測定基底）の結果のパリティーを調べることによって、量 :math:`\\langle AB \\rangle`, :math:`\\langle Ab \\rangle`, :math:`\\langle aB \\rangle`, :math:`\\langle ab \\rangle` を構築します。 次に、これらの量を使用して、以前に定義した証人関数を構築します。"

#: ../../tutorials/chsh_with_estimator.ipynb:407
msgid "Note that now we do not have to build the observables ourselves because they are returned to us! The computed expectation values are given in ``result.values``. What comes back is a very small payload of data."
msgstr "観測値が返されるので、自分たちで観測値を作る必要がないことに注意してください。計算された期待値は ``result.values`` で与えられます。返ってくるのは非常に小さなデータです。"

#: ../../tutorials/chsh_with_estimator.ipynb:460
msgid "In the figure, the red dashed lines delimit the classical bounds (:math:`\\pm 2`) and the dash-dotted blue lines delimit the quantum bounds (:math:`\\pm 2\\sqrt{2}`). You can see that the experimental results resemble the general trend of the simulated results and there are regions where the CHSH witness quantities exceeds the classical bounds. Congratulations! You have successfully demonstrated the violation of CHSH inequality in a real quantum system!"
msgstr "図では、赤の破線が古典的境界 (:math:`\\pm 2`)、青の点線は量子的境界 (:math:`\\pm 2\\sqrt{2}`)を区切っています。実験結果はシミュレーション結果の一般的な傾向に似ており、CHSHの証人量が古典的な境界を越えている領域があることがわかります。おめでとうございます!　あなたは、実際の量子系でCHSH不等式の破れを実証することに成功しました!"

#: ../../tutorials/chsh_with_estimator.ipynb:472
msgid "Summary"
msgstr "概要"

#: ../../tutorials/chsh_with_estimator.ipynb:474
msgid "In this tutorial, you have created a parameterized CHSH circuit, run it using the Estimator primitive, analyzed the results and demonstrated the violation of CHSH inequality. You can see that the Estimator primitive not only makes running parameterized circuits very easy but also greatly simplifies the workflow for obtaining expectation values for observables."
msgstr "このチュートリアルでは、パラメーター化されたCHSH回路を作成し、Estimator primitive を使って実行し、結果を解析してCHSH不等式の破れを実証しています。Estimator primitive はパラメーター化された回路の実行を非常に簡単にするだけでなく、観測値の期待値を得るためのワークフローを大幅に簡素化することができることがおわかりいただけたと思います。"

#: ../../tutorials/chsh_with_estimator.ipynb:486
msgid "References"
msgstr "参考文献"

#: ../../tutorials/chsh_with_estimator.ipynb:488
msgid "Córcoles, A. (n.d.), Local Reality and the CHSH Inequality. In A. Abbas, et al. Learn Quantum Computation Using Qiskit. URL: https://qiskit.org/textbook/ch-demos/chsh.html (accessed 07/13/2022) (2020)."
msgstr "Córcoles, A. (n.d.), Local Reality and the CHSH Inequality. In A. Abbas, et al. Learn Quantum Computation Using Qiskit. URL: https://qiskit.org/textbook/ch-demos/chsh.html (accessed 07/13/2022) (2020)."

#: ../../tutorials/chsh_with_estimator.ipynb:500
msgid "Qiskit versions and copyright"
msgstr "Qiskit のバージョンと著作権"

