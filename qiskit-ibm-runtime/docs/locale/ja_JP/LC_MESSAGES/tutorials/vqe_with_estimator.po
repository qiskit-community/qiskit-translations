msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-27 13:35+0000\n"
"PO-Revision-Date: 2022-10-27 13:52\n"
"Last-Translator: \n"
"Language-Team: Japanese\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe_with_estimator.po\n"
"X-Crowdin-File-ID: 9834\n"
"Language: ja_JP\n"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe_with_estimator.ipynb`__."
msgstr "このページは `docs/tutorials/vqe_with_estimator.ipynb`__ から生成されました。"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "Variational Quantum Eigensolver with Estimator Primitive"
msgstr "Estimator primitive を使用した変分量子固有値ソルバー"

#: ../../tutorials/vqe_with_estimator.ipynb:21
msgid "Overview"
msgstr "概要"

#: ../../tutorials/vqe_with_estimator.ipynb:23
msgid "The Variational Quantum Eigensolver (VQE) is an optimization routine for finding the ground state energy (i.e. lowest eigenvalue) of a Hamiltonian and is a considered to be a viable candidate for NISQ hardware. In this tutorial, we will go over how to use Qiskit Runtime to submit variational jobs using the estimator. Specifically, we will be looking at calculating the ground state energy of the :math:`H_2` molecule using the estimator primitive."
msgstr "変分量子固有ソルバー（Variational Quantum Eigensolver、VQE) は、ハミルトニアンの基底状態エネルギー (すなわち最小固有値) を見つけるための最適化ルーチンであり、 NISQ のハードウェアにとって有用性のある候補であると考えられている。 このチュートリアルでは、 Qiskit Runtimeを使用して、estimatorを使用して変分ジョブを実行依頼する方法について説明します。 具体的には、estimator primitive を用いて :math:`H_2` 分子の基底状態エネルギーを計算することを見ていきます。"

#: ../../tutorials/vqe_with_estimator.ipynb:35
msgid "Set up your local development environment"
msgstr "ローカル開発環境のセットアップ"

#: ../../tutorials/vqe_with_estimator.ipynb:37
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "このチュートリアルでは、Qiskit Runtime Service インスタンスが必要です。まだ実行していない場合は、`これらの手順 <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ に従ってセットアップします。"

#: ../../tutorials/vqe_with_estimator.ipynb:49
msgid "Connect to the Qiskit Runtime service"
msgstr "Qiskit Runtime サービスに接続する"

#: ../../tutorials/vqe_with_estimator.ipynb:51
msgid "First we have to create our service instance and specify our backend. In this example we will be working with a simulator for the sake of speed, but by simply changing this one line (for choice of backend) this could run on hardware as well."
msgstr "まず、サービス・インスタンスを作成し、バックエンドを指定する必要があります。 この例では、高速化のためにシミュレーターを使いますが、この 1 行(バックエンドの選択) を変更するだけで、ハードウェア上でも動作することができます。"

#: ../../tutorials/vqe_with_estimator.ipynb:77
msgid "Generate Molecular Hamiltonians"
msgstr "分子ハミルトニアンの生成"

#: ../../tutorials/vqe_with_estimator.ipynb:79
msgid "We will be working with Qiskit Nature to generate and handle molecular hamiltonians. First though, we need to install these packages. This can be done through pip, using the commands shown below. For more information on setting up and working with Qiskit Nature, see this `guide <https://qiskit.org/documentation/nature/getting_started.html>`__."
msgstr "Qiskit Natureを使って、分子ハミルトニアンを生成および処理します。 ただし、最初にこれらのパッケージをインストールする必要があります。 以下に示すコマンドを使用して、pipを介してインストールできます。 Qiskit Natureのセットアップと操作の詳細については、この `ガイド <https://qiskit.org/documentation/nature/getting_started.html>`__ を参照してください。"

#: ../../tutorials/vqe_with_estimator.ipynb:95
msgid "Now we need to generate the Hamiltonians that we wish to find the ground state energy of. For this task we will be utilizing Qiskit Nature. First we have to specify how we are converting the fermionic operators of the electronic molecular hamiltonian to qubit operators. Here we will use the Parity Mapper, which maps annihilation to Pauli operators via :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}`"
msgstr "次に、基底状態のエネルギーを求めるハミルトニアンを生成する必要があります。 このタスクでは、Qiskit Nature を利用します。 まず、電子分子ハミルトニアンのフェルミオン演算子を量子ビット演算子に変換する方法を指定する必要があります。 ここでは、Parity Mapper を使用します。これは、 :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}` を介して対消滅をパウリ演算子にマップします。"

#: ../../tutorials/vqe_with_estimator.ipynb:119
msgid "At our specified bond length we will create an electronic structure problem and generate the second quantized (i.e. fermionic) operators. We then compute the true ground state energy to compare against."
msgstr "指定された結合長で、電子構造の問題を作成し、第二量子化 ( すなわち、フェルミオン) 演算子を生成します。 次に、比較対象となる真の基底状態エネルギーを計算します。"

#: ../../tutorials/vqe_with_estimator.ipynb:169
msgid "Now we can use this hamiltonian as the observable in our estimator factory. The VQE routine is formalized as :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle`, so we just need to minimize the expectation values of the hamiltonian."
msgstr "私たちはこのハミルトニアンを、estimatorのファクトリーで観測量として使えるようになりました。 VQE ルーチンは :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle` であり、ハミルトニアンの期待値を最小化すれば良いのです。"

#: ../../tutorials/vqe_with_estimator.ipynb:214
msgid "Now that we solved the electronic hamiltonian, we have to add the nuclear energies."
msgstr "電子ハミルトニアンを解いたので原子核エネルギーを追加しなければなりません"

#: ../../tutorials/vqe_with_estimator.ipynb:241
msgid "Create the convergence plot"
msgstr "収束プロットを作成します"

