msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-18 17:12+0000\n"
"PO-Revision-Date: 2023-08-14 19:43\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/primitives.po\n"
"X-Crowdin-File-ID: 9925\n"

#: ../../primitives.rst:2
msgid "Introduction to primitives"
msgstr "Primitive 入門"

#: ../../primitives.rst:4
msgid "With Qiskit Runtime, we are introducing a new set of interfaces, in the form of primitives, to expand on how users run jobs on quantum computers."
msgstr "Qiskit Runtimeでは、量子コンピューター上でのジョブ実行方法を拡張するために、primitiveの形で新しいインターフェースのセットを導入しています。"

#: ../../primitives.rst:6
msgid "The existing Qiskit interface to backends (`backend.run()`) was originally designed to accept a list of circuits and return counts for every job. Over time, it became clear that users have diverse purposes for quantum computing, and therefore the ways in which they define the requirements for their computing jobs are expanding. Therefore, their results also look different."
msgstr "既存のQiskitのバックエンドへのインターフェース（ `backend.run()` ）は、もともと回路リストを受け取り、各ジョブのcountを返すように設計されています。しかし、量子コンピューターを利用する目的は様々であり、利用者がどのように計算ジョブの要件を定義するかは様々であることが分かってきました。そのため、結果もさまざまな見方があります。"

#: ../../primitives.rst:8
msgid "For example, an algorithm researcher and developer cares about information beyond counts; they are more focused on efficiently calculating quasiprobabilities and expectation values of observables."
msgstr "例えば、アルゴリズム研究者・開発者は、count だけでなく、準確率や観測値の期待値を効率的に計算することに重点を置いています。"

#: ../../primitives.rst:10
msgid "Our primitives provide methods that make it easier to build modular algorithms and other higher-order programs. Rather than simply returning counts, they return more immediately meaningful information. Additionally, they provide a seamless way to access the latest optimizations in IBM Quantum hardware and software."
msgstr "我々のprimitiveは、モジュール化されたアルゴリズムやその他の高次のプログラ ムを容易に構築するためのメソッドを提供します。単にcount数を返すのではなく、より即座に意味のある情報を返します。さらに、IBM Quantumのハードウェアとソフトウェアの最新の最適化にアクセスするためのシームレスな方法を提供します。"

#: ../../primitives.rst:12
msgid "The basic operations that one can perform with a probability distribution is to sample from it or to estimate quantities on it. Therefore, these operations form the fundamental building blocks of quantum algorithm development. Our first two Qiskit Runtime primitives (Sampler and Estimator) use these sampling and estimating operations as core interfaces to our quantum systems."
msgstr "確率分布に対してできる基本的な操作は、確率分布からのサンプリングと確率分布上の数量の推定です。したがって、これらの操作は、量子アルゴリズム開発の基本的な構成要素を形成しています。Qiskitの最初の2つのRuntime primitives（SamplerとEstimator）は、量子システムへのコアインターフェースとして、サンプリングと推定演算を行います。"

#: ../../primitives.rst:15
msgid "Available primitives"
msgstr "利用可能なprimitives"

#: ../../primitives.rst:17
msgid "The following primitives are available:"
msgstr "以下のprimitivesが使用できます："

#: ../../primitives.rst:21
msgid "Primitive"
msgstr "Primitive"

#: ../../primitives.rst:21
msgid "Description"
msgstr "説明"

#: ../../primitives.rst:21
msgid "Example output"
msgstr "出力例"

#: ../../primitives.rst:23
msgid "Estimator"
msgstr "Estimator"

#: ../../primitives.rst:23
msgid "Allows a user to specify a list of circuits and observables and selectively group between the lists to efficiently evaluate expectation values and variances for a parameter input. It is designed to enable users to efficiently calculate and interpret expectation values of quantum operators that are required for many algorithms."
msgstr "回路と観測値のリストを指定し、そのリスト間を選択的にグループ化することで、パラメーター入力に対する期待値と分散を効率的に評価することができます。多くのアルゴリズムで必要とされる量子演算子の期待値を効率的に計算し、解釈できるように設計されているます。"

#: ../../primitives.rst:42
msgid "Sampler"
msgstr "Sampler"

#: ../../primitives.rst:42
msgid "Allows a user to input a circuit and then generate quasiprobabilities. This generation enables users to more efficiently evaluate the possibility of multiple relevant data points in the context of destructive interference."
msgstr "回路を入力し、準確率を生成することができます。この生成により、ユーザーは破壊的干渉の文脈で複数の関連するデータ点の可能性をより効率的に評価することができるようになります。"

#: ../../primitives.rst:59
msgid "How to use primitives"
msgstr "Primitiveの使用方法"

#: ../../primitives.rst:61
msgid "Primitive interfaces vary based on the type of task that you want to run on the quantum computer and the corresponding data that you want returned as a result. After identifying the appropriate primitive for your program, you can use Qiskit to prepare inputs, such as circuits, observables (for Estimator), and customizable options to optimize your job. For more information, see the appropriate topic:"
msgstr "Primitiveは、量子コンピューター上でどのような処理を行い、その結果をどのようなデータとして返すかによって使い分けられます。プログラムに適したprimitiveを特定した後、Qiskitを使用して、回路、観測値（Estimator用）、ジョブを最適化するためのカスタマイズ可能なオプションなどの入力を準備することができます。詳細については、該当するトピックを参照してください。"

#: ../../primitives.rst:63
msgid "`Getting started with Estimator <./tutorials/how-to-getting-started-with-estimator.ipynb>`__"
msgstr "`Estimator入門 <./tutorials/how-to-getting-started-with-estimator.ipynb>`__"

#: ../../primitives.rst:64
msgid "`Getting started with Sampler <./tutorials/how-to-getting-started-with-sampler.ipynb>`__"
msgstr "`Sampler入門 <./tutorials/how-to-getting-started-with-sampler.ipynb>`__"

#: ../../primitives.rst:65
msgid ":ref:`Migrate from qiskit-ibmq-provider to qiskit-ibm-runtime <migrate to primitives>`"
msgstr ":ref:`qiskit-ibmq-provider から qiskit-ibm-runtime への移行 <migrate to primitives>`"

