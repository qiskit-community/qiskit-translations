msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-28 21:26+0000\n"
"PO-Revision-Date: 2023-09-28 23:08\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/index.po\n"
"X-Crowdin-File-ID: 9800\n"

#: ../../index.rst:50
msgid " Overview"
msgstr "概要"

#: ../../index.rst:50 ../../index.rst:103
msgid " Getting started"
msgstr " はじめに"

#: ../../index.rst:50
msgid " backend.run vs. Qiskit Runtime"
msgstr " backend.run 対 Qiskit Runtime"

#: ../../index.rst:50
msgid " Introduction to primitives"
msgstr " Primitive 入門"

#: ../../index.rst:50
msgid " Introduction to sessions"
msgstr " Session 入門"

#: ../../index.rst:50
msgid "Get started"
msgstr "はじめましょう"

#: ../../index.rst:61
msgid " Get started with Estimator"
msgstr " Estimator入門"

#: ../../index.rst:61
msgid " Get started with Sampler"
msgstr " Sampler入門"

#: ../../index.rst:61
msgid " Get started with error suppression and error mitigation"
msgstr " エラー抑制とエラー緩和の入門"

#: ../../index.rst:61
msgid " CHSH with Estimator"
msgstr " EstimatorによるCHSH"

#: ../../index.rst:61
msgid " VQE with Estimator"
msgstr " EstimatorによるVQE"

#: ../../index.rst:61
msgid " Grover with Sampler"
msgstr " SamplerによるGrover"

#: ../../index.rst:61
msgid " QAOA with Primitives"
msgstr " PrimitiveでのQAOA"

#: ../../index.rst:61
msgid " Submit user-transpiled circuits using primitives"
msgstr " Primitive を使用したユーザー・トランスパイル回路の送信"

#: ../../index.rst:61
msgid " All tutorials"
msgstr " 全てのチュートリアル"

#: ../../index.rst:61
msgid "Tutorials"
msgstr "チュートリアル"

#: ../../index.rst:76
msgid " Run a primitive in a session"
msgstr " Session内でprimitiveを実行する"

#: ../../index.rst:76
msgid " Run on quantum backends"
msgstr " 量子バックエンドで実行"

#: ../../index.rst:76
msgid " Retrieve job results"
msgstr "ジョブ結果の取得"

#: ../../index.rst:76
msgid " Configure primitive options"
msgstr " Primitive optionの設定"

#: ../../index.rst:76
msgid " Configure error mitigation options"
msgstr " Error mitigation optionの設定"

#: ../../index.rst:76
msgid " Configure error suppression"
msgstr " Error抑制の設定"

#: ../../index.rst:76
msgid " Manage your account"
msgstr " アカウントの管理"

#: ../../index.rst:76
msgid " Run noisy simulations"
msgstr " ノイズシミュレーションを実行"

#: ../../index.rst:76
msgid "How to"
msgstr "使い方"

#: ../../index.rst:90
msgid " Migrate to using Qiskit Runtime primitives"
msgstr " Qiskit Runtime primitives を使用するためのマイグレーション"

#: ../../index.rst:90
msgid " Migrate your setup from qiskit-ibmq-provider"
msgstr "qiskit-ibmq-provider からの移行ガイド"

#: ../../index.rst:90
msgid " Use Estimator to design an algorithm"
msgstr " Estimator の使用によるアルゴリズムの設計"

#: ../../index.rst:90
msgid " Use Sampler to design an algorithm"
msgstr " Sampler の使用によるアルゴリズムの設計"

#: ../../index.rst:90
msgid " Update parameter values while running"
msgstr " 実行中のパラメーター値の更新"

#: ../../index.rst:90
msgid " Algorithm tuning options (shots, transpilation, error mitigation)"
msgstr "アルゴリズム・チューニング・オプション (ショット、トランスパイル、エラー緩和)"

#: ../../index.rst:90
msgid "Migrate"
msgstr "移行"

#: ../../index.rst:103
msgid " Pricing plans"
msgstr " 料金プラン"

#: ../../index.rst:103
msgid " Plan for an organization"
msgstr " 組織の計画"

#: ../../index.rst:103
msgid " Configure for an organization"
msgstr " 組織の設定"

#: ../../index.rst:103
msgid " Manage users in an organization"
msgstr " 組織内のユーザーを管理"

#: ../../index.rst:103
msgid " Manage the cost"
msgstr " コストの管理"

#: ../../index.rst:103
msgid " Set up Terraform"
msgstr " Terraformの設定"

#: ../../index.rst:103
msgid " Architecture and workload isolation"
msgstr " アーキテクチャとワークロードの分離機能"

#: ../../index.rst:103
msgid " Securing your data"
msgstr " データの保護"

#: ../../index.rst:103
msgid " Audit events"
msgstr " 監査イベント"

#: ../../index.rst:103
msgid "Work with Qiskit Runtime in IBM Cloud"
msgstr "IBM Cloud 上の Qiskit Runtime"

#: ../../index.rst:119
msgid " API Reference"
msgstr " API リファレンス"

#: ../../index.rst:119
msgid " Swagger API for building applications that use Qiskit Runtime"
msgstr " Qiskit Runtime を使用したアプリケーションのビルド用 Swagger API"

#: ../../index.rst:119
msgid " API error codes"
msgstr "API エラー・コード"

#: ../../index.rst:119
msgid " FAQs"
msgstr " FAQ"

#: ../../index.rst:119
msgid " Retired systems"
msgstr "引退したシステム"

#: ../../index.rst:119
msgid " Release Notes"
msgstr " リリースノート"

#: ../../index.rst:119
msgid " GitHub"
msgstr " GitHub"

#: ../../index.rst:119
msgid "Reference"
msgstr "参考資料"

#: ../../index.rst:3
msgid "Qiskit Runtime 0.12.2 documentation"
msgstr ""

#: ../../index.rst:6
msgid "Overview"
msgstr "概要"

#: ../../index.rst:8
msgid "Qiskit Runtime is a cloud-based quantum computing service developed by IBM. It offers computational *primitives* to perform foundational quantum computing tasks that use built-in error suppression and mitigation techniques. Primitives can be executed inside of *sessions*, allowing collections of circuits to be jointly run on a quantum computer without being interrupted by other users’ jobs. The combination of primitives, error suppression / mitigation, and sessions paves the way to efficiently build and execute scalable quantum applications."
msgstr ""

#: ../../index.rst:10
msgid "The following figure illustrates how one can use Qiskit Runtime sessions and primitives. The first session request (job) waits through the regular `fair-share queue <https://quantum-computing.ibm.com/admin/docs/admin/manage/systems/queue>`__. When it starts to run, the session is started. After the first session job is finished processing, the next job in the session is run. This process continues until the session is paused (due to a lack of queued session jobs) or closed."
msgstr ""

#: ../../index.rst:16
msgid "Key concepts"
msgstr "キー・コンセプト"

#: ../../index.rst:18
msgid "**Primitives**"
msgstr "**Primitive**"

#: ../../index.rst:20
msgid "Primitives are base level operations that serve as building blocks for many quantum algorithms and applications. Through these primitives, users can obtain high-fidelity results, without needing detailed hardware knowledge.  This abstraction allows you to write code, using Qiskit algorithms or otherwise, that can run on different quantum hardware or simulators without having to explicitly manage aspects such as compilation, optimization, and error suppression / mitigation. The primitives offered by :mod:`qiskit_ibm_runtime` add additional options specific to IBM services. See `Introduction to primitives <primitives.html>`__ for further details."
msgstr ""

#: ../../index.rst:22
msgid "There are currently two primitives defined in Qiskit: Estimator and Sampler."
msgstr "現在、Qiskitで定義されている2つの primitive があります: Estimator と Samperです。"

#: ../../index.rst:25
msgid "**Estimator**"
msgstr "**Estimator**"

#: ../../index.rst:27
msgid "The estimator primitive allows you to efficiently calculate and interpret expectation values of quantum operators; the values of interest for many near-term quantum algorithms. You specify circuits that prepare quantum states and then Pauli-basis observables to measure on those states. The estimator can use advanced error suppression and mitigation capabilities to improve the accuracy of the returned expectation values."
msgstr ""

#: ../../index.rst:29
msgid "**Sampler**"
msgstr "**Sampler**"

#: ../../index.rst:31
msgid "This primitive takes circuits as input and returns a quasi-probability distribution over the measurement outcomes. This generalizes histograms from quantum circuits, allowing for mitigation of readout errors."
msgstr ""

#: ../../index.rst:33
msgid "**Error suppression / mitigation**"
msgstr "**エラーの抑制 / 緩和**"

#: ../../index.rst:35
msgid "While building a fault-tolerant quantum computation is the ultimate goal, at present, calculations performed on near-term quantum computers are susceptible to noise.  Qiskit Runtime offers several methods for preventing errors before they occur (error suppression techniques) and dealing with those that do occur (error mitigation techniques)."
msgstr ""

#: ../../index.rst:37
msgid "**Session**"
msgstr "**Session**"

#: ../../index.rst:39
msgid "A session allows a collection of jobs to be grouped and jointly scheduled by the Qiskit Runtime service, facilitating iterative use of quantum computers without incurring queuing delays on each iteration. This eliminates artificial delays caused by other users’ jobs running on the same quantum device during the session. See `Introduction to sessions <sessions.html>`__ for further details."
msgstr "Session とは、複数のジョブをグループ化し、Qiskit Runtimeサービスによって共同でスケジューリングすることで、量子コンピューターの反復利用を促進し、反復毎にキューイング遅延を発生させることなく利用できるようにするものです。これにより、session 中に同じ量子コンピューター上で他のユーザーのジョブが実行されることによる人為的な遅延を排除することができます。詳しくは `Session 入門 <sessions.html>`__ を参照してください。"

#: ../../index.rst:44
msgid "Next steps"
msgstr "次のステップ"

#: ../../index.rst:46
msgid "`Getting started <getting_started.html>`_"
msgstr "`はじめに <getting_started.html>`_"

#: ../../index.rst:48
msgid "`Tutorials <tutorials.html>`_"
msgstr "`チュートリアル <tutorials.html>`_"

