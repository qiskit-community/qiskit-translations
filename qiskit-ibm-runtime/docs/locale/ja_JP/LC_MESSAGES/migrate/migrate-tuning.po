msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-24 21:41+0000\n"
"PO-Revision-Date: 2023-10-24 21:56\n"
"Last-Translator: \n"
"Language: ja\n"
"Language-Team: Japanese\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ja\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/migrate/migrate-tuning.po\n"
"X-Crowdin-File-ID: 9959\n"

#: ../../migrate/migrate-tuning.rst:2
msgid "Guide on algorithm tuning options"
msgstr "アルゴリズムのチューニングオプションのガイド"

#: ../../migrate/migrate-tuning.rst:4
msgid "One of the advantages of the primitives is that they abstract away the circuit execution setup so that algorithm developers can focus on the pure algorithmic components. However, sometimes, to get the most out of an algorithm, you might want to tune certain primitive options. This section describes some of the common settings you might need."
msgstr "Primitive の利点の一つは、アルゴリズム開発者が純粋なアルゴリズムコンポーネントに集中できるように、回路実行の設定を抽象化することです。しかし、アルゴリズムを最大限に活用するために、特定のprimitiveのオプションを調整したい場合があります。このセクションでは、一般的に必要とされる設定について説明します。"

#: ../../migrate/migrate-tuning.rst:16
msgid "This section focuses on Qiskit Runtime primitive :class:`.Options` (imported from ``qiskit_ibm_runtime``). While most of the `primitives` interface is common across implementations, most :class:`.Options` are not. Consult the corresponding API references for information about the |qiskit.primitives|_ and |qiskit_aer.primitives|_ options."
msgstr "このセクションでは、Qiskit Runtime の Primitive :class:`.Options` （ ``qiskit_ibm_runtime`` からインポートする）に焦点を当てます。 `primitives` インターフェイスのほとんどは実装間で共通ですが、 :class:`.Options` のほとんどはそうではありません。 |qiskit.primitives|_ および |qiskit_aer.primitives|_ オプションに関する情報については、対応するAPIリファレンスを参照してください。"

#: ../../migrate/migrate-tuning.rst:21
msgid "1. Shots"
msgstr "1. ショット"

#: ../../migrate/migrate-tuning.rst:23
msgid "For some algorithms, setting a specific number of shots is a core part of their routines. Previously, shots could be set during the call to `backend.run()`. For example, ``backend.run(shots=1024)``. Now, that setting is part of the execution options (\"second level option\"). This can be done during the primitive setup:"
msgstr "アルゴリズムによっては、特定のショット数を設定することがルーチンの中核をなすものがあります。以前は、 `backend.run()` を呼び出す際に shots を設定することができました。例えば、 ``backend.run(shots=1024)`` といった具合です。現在では、その設定は実行オプション（ \"second level option\" ）の一部となっています。これは、Primitive のセットアップ中に行うことができます："

#: ../../migrate/migrate-tuning.rst:36
msgid "If you need to modify the number of shots set between iterations (primitive calls), you can set the shots directly in the ``run()`` method. This overwrites the initial ``shots`` setting."
msgstr "反復処理（プリミティブコール）の間に設定したショット数を変更する必要がある場合は、 ``run()`` メソッドで直接ショット数を設定することができます。これにより、最初の ``shots`` 設定が上書きされます。"

#: ../../migrate/migrate-tuning.rst:51
msgid "For more information about the primitive options, refer to the `Options class API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`_."
msgstr "Primitive オプションの詳細については、 `OptionsクラスのAPIリファレンス <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`_ を参照してください。"

#: ../../migrate/migrate-tuning.rst:56
msgid "2. Transpilation"
msgstr "2. Transpilation"

#: ../../migrate/migrate-tuning.rst:58
msgid "By default, the Qiskit Runtime primitives perform circuit transpilation. There are several optimization levels you can choose from. These levels affect the transpilation strategy and might include additional error suppression mechanisms. Level 0 only involves basic transpilation. To learn about each optimization level, view the Optimization level table in the `Error suppression topic <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-suppression.html#setting-the-optimization-level>`__."
msgstr "デフォルトでは、 Qiskit Runtime primitive は回路のトランスパイルを実行します。最適化レベルはいくつかあり、選択することができます。これらのレベルはトランスパイルの戦略に影響し、追加のエラー抑制メカニズムを含むかもしれません。レベル0は、基本的なトランスパイルのみを行います。各最適化レベルについては、 `エラー抑制のトピック <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-suppression.html#setting-the-optimization-level>`__ にある最適化レベルのテーブルを参照してください。"

#: ../../migrate/migrate-tuning.rst:64
msgid "The optimization level option is a \"first level option\", and can be set as follows:"
msgstr "最適化レベルオプションは「第1レベルのオプション」であり、次のように設定することができます："

#: ../../migrate/migrate-tuning.rst:79
msgid "You might want to configure your transpilation strategy further, and for this, there are advanced transpilation options you can set up. These are \"second level options\", and can be set as follows:"
msgstr "トランスパイル戦略をさらに設定したい場合があります。そのために、高度なトランスパイルオプションを設定することができます。これは「セカンドレベルオプション」と呼ばれるもので、以下のように設定することができます："

#: ../../migrate/migrate-tuning.rst:92
msgid "For more information, and a complete list of advanced transpilation options, see the Advanced transpilation options table in the `Error suppression topic <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-suppression.html#advanced-transpilation-options>`__."
msgstr "詳細と高度なトランスパイルオプションの完全なリストについては、`エラー抑制トピック <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-suppression.html#advanced-transpilation-options>`__ の高度なトランスパイルオプションのテーブルを参照してください。"

#: ../../migrate/migrate-tuning.rst:95
msgid "Finally, you might want to specify settings that are not available through the primitives interface, or use custom transpiler passes. In these cases, you can set ``skip_transpilation=True`` to submit user-transpiled circuits. To learn how this is done, refer to the `Submitting user-transpiled circuits using primitives tutorial <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/tutorials/user-transpiled-circuits.html>`_."
msgstr "最後に、Primitive インターフェイスで利用できない設定を指定したり、カスタム・トランスパイラー・パスを使用したい場合があります。このような場合、 ``skip_transpilation=True`` を設定して、ユーザーがトランスパイルした回路を送信することができます。この方法については、 `Primitive を使用したユーザー・トランスパイル回路の送信のチュートリアル <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/tutorials/user-transpiled-circuits.html>`_ を参照してください。"

#: ../../migrate/migrate-tuning.rst:100
msgid "The ``skip_transpilation`` option is an advanced transpilation option, set as follows:"
msgstr "``skip_transpilation`` オプションは、高度なトランスパイルオプションであり、以下のように設定します："

#: ../../migrate/migrate-tuning.rst:113
msgid "3. Error mitigation"
msgstr "3. エラー緩和"

#: ../../migrate/migrate-tuning.rst:115
msgid "You might want to use different error mitigation methods and see how these affect the performance of your algorithm. These can also be set through the ``resilience_level`` option. The method selected for each level is different for ``Sampler`` and ``Estimator``. You can find more information in the `Configure error mitigation topic <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-mitigation.html>`_."
msgstr "さまざまなエラー緩和方法を活用し、アルゴリズムの性能にどのような影響を与えるかを確認したい場合があります。これらは ``resilience_level`` オプションで設定することも可能です。各レベルで選択される方法は、 ``Sampler`` と``Estimator`` で異なります。詳細は、 `Error mitigation optionの設定のトピック <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/error-mitigation.html>`_ に記載されています。"

#: ../../migrate/migrate-tuning.rst:120
msgid "The configuration is similar to the other options:"
msgstr "設定方法は、他のオプションと同様です："

