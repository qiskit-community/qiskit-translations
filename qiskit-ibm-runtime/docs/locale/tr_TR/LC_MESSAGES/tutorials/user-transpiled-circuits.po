msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 17:48+0000\n"
"PO-Revision-Date: 2022-11-10 18:28\n"
"Last-Translator: \n"
"Language-Team: Turkish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: tr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/user-transpiled-circuits.po\n"
"X-Crowdin-File-ID: 9830\n"
"Language: tr_TR\n"

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "This page was generated from `docs/tutorials/user-transpiled-circuits.ipynb`__."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "Submitting user-transpiled circuits using primitives"
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:11
msgid "To get the best performance from your circuits, the Qiskit Runtime service will pass all circuits through Qiskit’s transpiler before running them. While this is usually a good thing, we might sometimes want to disable this by passing the argument ``skip_transpilation=True`` to the primitive we’re using."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:13
msgid "For example, we may know better than the transpiler in some cases, or want to target a specific subset of qubits on a specific device. In this tutorial, we’ll disable automatic transpilation to test the performance of different transpiler settings. This example will take you through the full process of creating, transpiling, and submitting circuits."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:16
msgid "Transpiling circuits for IBM Quantum devices"
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:18
msgid "In the code cell below, we create a small circuit that our transpiler will try to optimize. In this example, we create a circuit that carries out Grover’s algorithm, with an oracle that marks the state ``111``. We then simulate the ideal distribution (what we’d expect to measure if we ran this on a perfect quantum computer, an infinite number of times) for comparison later."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:61
msgid "Next, we need to choose a backend to transpile for. In the cell below, we create a service instance, which we’ll use to start a session, and get the backend object, which contains information for the transpiler. Since the transpilation process depends on the device, we’ll ask the runtime service for a specific device by name. In this example, we’ll use ``ibm_algiers``, which is only available through IBM Cloud."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:84
msgid "Next, we transpile the circuits for our backend. We’re going to compare the performance of the transpiler with ``optimization_level`` set to ``0`` (lowest) against ``3`` (highest). The lowest optimization level just does the bare minimum needed to get the circuit running on the device, i.e. map the circuit qubits to the device qubits, and add swaps gates to allow all 2-qubit operations. The highest optimization level is much smarter and uses lots of tricks to reduce the overall gate count. Since multi-qubit gates have high error rates, and qubits decohere over time, the shorter circuits should give better results."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:87
msgid "In the cell below, we transpile ``qc`` for both values of ``optimization_level``, print the number of CNOT gates, and add the transpiled circuits to a list. Some of the transpiler’s algorithms are randomized, so we set a seed for reproducibility."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:147
msgid "Since CNOTs usually have a high error rate, the circuit transpiled with ``optimization_level=3`` should perform much better."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:149
msgid "Another way we can improve performance is through `dynamic decoupling <https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.DynamicalDecoupling.html>`__, where we apply a sequence of gates to idling qubits. This cancels out some unwanted interactions with the environment. In the cell below, we add dynamic decoupling to the circuit transpiled with ``optimization_level=3``, and add it to our list."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:188
msgid "Run user-transpiled circuits using Qiskit Runtime"
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:190
msgid "At this point, we have a list of circuits (named ``circuits``) transpiled for ``ibm_algiers``. In the cell below, we create an instance of the sampler primitive, and start a session using the context manager (``with ...:``), which automatically opens and closes the session for us. This is where we pass the ``skip_transpilation=True`` argument."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:192
msgid "Within the context manager, we sample the circuits and store the results to ``result``."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:221
msgid "Finally, we can plot the results from the device runs against the ideal distribution. For each measured string, the leftmost bar is the ideal distribution, the central bar is the circuit transpiled with ``optimization_level=3``, and the rightmost bar is the circuit transpiled with ``optimization_level=0``)."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:223
msgid "You can see the results with ``optimization_level=3`` is closer to the ideal distribution due to the lower gate count, and ``optimization_level=3 + dd`` is even closer due to the dynamic decoupling we applied."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:260
msgid "We can confirm this by computing the `Hellinger fidelity <https://qiskit.org/documentation/stubs/qiskit.quantum_info.hellinger_fidelity.html>`__ between each set of results and the ideal distribution (higher is better, and 1 is perfect fidelity)."
msgstr ""

