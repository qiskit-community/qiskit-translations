msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 16:30+0000\n"
"PO-Revision-Date: 2022-11-10 17:00\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/sea_with_sampler.po\n"
"X-Crowdin-File-ID: 9828\n"
"Language: ta_IN\n"

#: ../../tutorials/sea_with_sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/sea_with_sampler.ipynb`__."
msgstr "இந்தப் பக்கம் `docs/tutorials/sea_with_sampler.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/sea_with_sampler.ipynb:9
msgid "Spectroscopic Eigensolver Algorithm with Sampler"
msgstr "மாதிரியுடன் கூடிய ஸ்பெக்ட்ரோஸ்கோபிக் ஈஜென்சல்வர் அல்காரிதம்"

#: ../../tutorials/sea_with_sampler.ipynb:11
msgid "This tutorial demonstrates the ability to send flexible circuits to the ``Sampler`` primitive by performing a simple example of the spectroscopic eigensolver algorithm (`arXiv:2202.12910 <http://arxiv.org/abs/2202.12910>`__). The SEA is used for quantum simulation of model Hamiltonians, and works by interacting a “probe” auxiliary qubit with a simulation register. The energy of the probe qubit is sweeped and eigenvalues of the simulation Hamiltonian are observed as peaks or dips in the response, akin to the experimental tool of spectroscopy. Because each point (i.e., energy) is a different quantum circuit, this technique is expensive with respect to the number of circuits required. The ``Sampler`` provides the flexibility to send just a single circuit with the needed ``Parameter``\\ s passed."
msgstr "ஸ்பெக்ட்ரோஸ்கோபிக் ஈஜென்சோல்வர் அல்காரிதம் (`arXiv:2202.12910 <http://arxiv.org/abs/2202.12910>`__) என்ற எளிய உதாரணத்தைச் செயல்படுத்துவதன் மூலம், ``Sampler`` ஆதிநிலைக்கு நெகிழ்வான சுற்றுகளை அனுப்பும் திறனை இந்தப் பயிற்சி விளக்குகிறது. SEA ஆனது மாடல் ஹாமில்டோனியன்களின் குவாண்டம் உருவகப்படுத்துதலுக்குப் பயன்படுத்தப்படுகிறது, மேலும் ஒரு உருவகப்படுத்துதல் பதிவேட்டுடன் \"ஆய்வு\" துணை குவிட்டை தொடர்புகொள்வதன் மூலம் செயல்படுகிறது. ஆய்வுக் குவிட்டின் ஆற்றல் துடைக்கப்படுகிறது மற்றும் ஸ்பெக்ட்ரோஸ்கோபியின் சோதனைக் கருவியைப் போலவே, ஹாமில்டோனியன் உருவகப்படுத்துதலின் ஈஜென் மதிப்புகள் உச்சமாக அல்லது பதிலில் டிப்களாகக் காணப்படுகின்றன. ஒவ்வொரு புள்ளியும் (அதாவது, ஆற்றல்) வெவ்வேறு குவாண்டம் சுற்று என்பதால், தேவைப்படும் சுற்றுகளின் எண்ணிக்கையைப் பொறுத்து இந்த நுட்பம் விலை உயர்ந்தது. ``மாதிரி`` ஆனது தேவையான ``Parameter``\\ கள் கடந்து ஒரு ஒற்றை சுற்று அனுப்பும் நெகிழ்வுத்தன்மையை வழங்குகிறது."

#: ../../tutorials/sea_with_sampler.ipynb:24
msgid "Set up your local development environment"
msgstr "உங்கள் அந்த இடத்திற்குறிய மேம்பாட்டு சூழலை அமைக்கவும்"

#: ../../tutorials/sea_with_sampler.ipynb:26
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "இந்த டுடோரியலுக்கு கிஸ்கிட் இயக்க நேர சேவை நிகழ்வுத் தேவை. நீங்கள் ஏற்கனவே அவ்வாறு செய்யவில்லை என்றால், ஒன்றை அமைக்க `இந்தப் படிகளைப் பின்பற்றவும் <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__."

#: ../../tutorials/sea_with_sampler.ipynb:50
msgid "Simple Hamiltonian Model"
msgstr "எளிய ஹாமில்டோனியன் மாதிரி"

#: ../../tutorials/sea_with_sampler.ipynb:52
msgid "Let’s consider a Pauli-X matrix acting on a qubit,"
msgstr "ஒரு குவிட்டில் செயல்படும் பாலி-எக்ஸ் மேட்ரிக்ஸைக் கருத்தில் கொள்வோம்,"

#: ../../tutorials/sea_with_sampler.ipynb:54
msgid "H_{\\rm Pauli}/\\hbar = \\mu X"
msgstr "H_{\\rm Pauli}/\\hbar = \\mu X"

#: ../../tutorials/sea_with_sampler.ipynb:59
msgid "where we can set :math:`\\mu` later, or even sweep its values as well. The SEA works by taking the model Pauli (i.e., qubit) Hamiltonian and building a larger “resonance” Hamiltonian that includes both the simulation register and probe qubit ``q0`` via"
msgstr "அங்கு நாம் :math:`\\mu` ஐ பின்னர் அமைக்கலாம் அல்லது அதன் மதிப்புகளையும் துடைக்கலாம். பாலி (அதாவது, குவிட்) ஹாமில்டோனியன் மாதிரியை எடுத்து, சிமுலேஷன் ரிஜிஸ்டர் மற்றும் ப்ரோப் க்யூபிட் ``q0`` ஆகிய இரண்டையும் உள்ளடக்கிய ஒரு பெரிய “resonance” ஹாமில்டோனியனை உருவாக்குவதன் மூலம் SEA செயல்படுகிறது"

#: ../../tutorials/sea_with_sampler.ipynb:61
msgid "H_{\\rm res} / \\hbar = -\\frac{1}{2} \\omega IZ + c XX + H_{\\rm Pauli}/\\hbar \\otimes I"
msgstr "H_{\\rm res} / \\hbar = -\\frac{1}{2} \\omega IZ + c XX + H_{\\rm Pauli}/\\hbar \\otimes I"

#: ../../tutorials/sea_with_sampler.ipynb:66
msgid "where the angular frequency :math:`\\omega` corresponds to the energy of the probe qubit, and :math:`c` is the coupling between the probe qubit and a qubit in the simulation register (``q1`` in this case). The letters :math:`I`, :math:`X`, and :math:`Z` correspond to the Pauli spin matrices and their order reflect which qubit they operate on (note that this notation is little-endian). We will set :math:`\\hbar \\equiv 1` in the following code."
msgstr "கோண அதிர்வெண் :math:`\\omega` என்பது ஆய்வு குவிட்டின் ஆற்றலுடன் ஒத்துப்போகிறது, மேலும் :math:`c` என்பது உருவகப்படுத்துதல் பதிவேட்டில் உள்ள ஆய்வு குவிட் மற்றும் ஒரு குவிட் இடையே இணைப்பாகும் (இந்த வழக்கில் ``q1`` ) :math:`I`, :math:`X`, மற்றும் :math:`Z` ஆகியவை பாலி ஸ்பின் மெட்ரிக்ஸுடன் ஒத்துப்போகின்றன மற்றும் அவற்றின் வரிசை அவை எந்த குவிட்டில் செயல்படுகின்றன என்பதை பிரதிபலிக்கிறது (இந்த குறியீடு சிறிய எண்டியன் என்பதை நினைவில் கொள்க). பின்வரும் குறியீட்டில் :math:`\\hbar \\equiv 1` ஐ அமைப்போம்."

#: ../../tutorials/sea_with_sampler.ipynb:68
msgid "We can construct the SEA circuits with tools from Qiskit Opflow."
msgstr "Qiskit Opflow இன் கருவிகளைக் கொண்டு நாம் SEA சுற்றுகளை உருவாக்கலாம்."

#: ../../tutorials/sea_with_sampler.ipynb:106
msgid "Time evolve the resonance Hamiltonian."
msgstr "நேரம் அதிர்வு ஹாமில்டோனியனை உருவாக்குகிறது."

#: ../../tutorials/sea_with_sampler.ipynb:128
msgid "From the time-evolution operator :math:`U_{\\rm ham}`, we use the Suzuki-Trotter expansion to convert this operator into quantum circuits that implement discrete time steps of the simulation. The smaller the time steps (more Trotter steps), the more accurate the quantum circuit, but also longer depth, which could introduce errors when executing on noisy quantum hardware. We then transpiler the circuits to IBM backend basis gates and measure only the probe qubit ``q0``."
msgstr ""

#: ../../tutorials/sea_with_sampler.ipynb:206
msgid "Now let’s fix our parameters and sweep over frequency with a number of points ``num_pts``. The eigenvalues of our model Hamiltonian :math:`H_{\\rm Pauli}` are :math:`\\pm \\mu`, so we need to choose a range that includes those numbers."
msgstr "இப்போது நமது அளவுருக்களைச் சரிசெய்து, பல புள்ளிகள் ``num_pts`` மூலம் அதிர்வெண்ணை ஸ்வீப் செய்வோம். எங்களின் மாதிரியான Hamiltonian :math:`H_{\\rm Pauli}` இன் ஐஜென் மதிப்புகள் :math:`\\pm \\mu`, எனவே அந்த எண்களை உள்ளடக்கிய வரம்பை நாம் தேர்வு செய்ய வேண்டும்."

#: ../../tutorials/sea_with_sampler.ipynb:208
msgid "Note that the ``Parameter``\\ s’ keys and values must be separared and converted into a ``List`` of ``List``\\ s. The keys give us the ``Parameter``\\ s inside each circuit. In this case, we only have a single circuit, so the ``List`` of keys contains a single ``List``. For the ``Parameter`` values, there is a ``List`` for each value of ``ww``."
msgstr "``அளவுரு``\\ கள்' விசைகள் மற்றும் மதிப்புகள் பிரிக்கப்பட்டு, ``லிஸ்ட்``\\ களின் ``பட்டியல்`` ஆக மாற்றப்பட வேண்டும் என்பதை நினைவில் கொள்ளவும். விசைகள் ஒவ்வொரு சுற்றுக்குள்ளும் ``அளவுரு``\\களை நமக்குத் தருகின்றன. இந்த வழக்கில், எங்களிடம் ஒரு ஒற்றை சுற்று மட்டுமே உள்ளது, எனவே ``பட்டியல்`` விசைகளில் ஒற்றை ``பட்டியல்`` உள்ளது. ``அளவுரு`` மதிப்புகளுக்கு, ``ww``ன் ஒவ்வொரு மதிப்புக்கும் ``பட்டியல்`` உள்ளது."

#: ../../tutorials/sea_with_sampler.ipynb:241
msgid "In the ``Sampler`` class, we pass the list of circuits and parameter keys in the constructor. When calling the ``sampler``, we specify a list of ``circuits`` pointing to the circuits desired to be run (which was passed to the constructor), in this case, the index ``0`` ``num_pts`` times."
msgstr ""

#: ../../tutorials/sea_with_sampler.ipynb:272
msgid "Build the :math:`Z` expectations by converting quasi-probabilities to :math:`\\langle Z \\rangle`."
msgstr "அரை நிகழ்தகவுகளை :math:`\\langle Z \\rangle` ஆக மாற்றுவதன் மூலம் :math:`Z` எதிர்பார்ப்புகளை உருவாக்கவும்."

#: ../../tutorials/sea_with_sampler.ipynb:298
msgid "As a sanity check, we’ll calculate the exact expectation values with Qiskit Opflow."
msgstr "நல்லறிவு சரிபார்ப்பாக, Qiskit Opflow மூலம் சரியான எதிர்பார்ப்பு மதிப்புகளைக் கணக்கிடுவோம்."

#: ../../tutorials/sea_with_sampler.ipynb:329
msgid "And plotting everything together shows that the energy at which our peaks occurs to be :math:`\\pm \\mu`."
msgstr "மேலும் எல்லாவற்றையும் ஒன்றாகச் சதி செய்வது, நமது சிகரங்கள் நிகழும் ஆற்றல் :math:`\\pm \\mu` என்பதைக் காட்டுகிறது."

