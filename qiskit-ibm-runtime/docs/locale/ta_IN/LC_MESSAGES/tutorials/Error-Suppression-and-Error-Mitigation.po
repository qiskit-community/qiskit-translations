msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 17:48+0000\n"
"PO-Revision-Date: 2022-11-10 18:50\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/Error-Suppression-and-Error-Mitigation.po\n"
"X-Crowdin-File-ID: 9927\n"
"Language: ta_IN\n"

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "This page was generated from `docs/tutorials/Error-Suppression-and-Error-Mitigation.ipynb`__."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "Get started with error suppression and error mitigation with Qiskit Runtime"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:43
msgid "Theory and background"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:46
msgid "IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:48
msgid "We want to build a tool which, beginning in 2024, is capable of estimating *noise-free observables* of *100-qubit* circuits, with *depth 100*, within *one day*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:50
msgid "Although this is not a promise for quantum advantage *per-se*, the goal is to get to the point where we can solve interesting or relevant problems faster, more accurately, or more cheaply in a practical time frame as compared to efficient classical computations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:52
msgid "The threshhold for simulability seems to be at around 100 qubits, but this is not enough, as we also need a sufficiently complex quantum circuit to ensure that it cannot be reproduced classically (e.g. deep, non-clifford)."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:58
msgid "|ac701eddbf6147d1afcfbca389bf234e|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:75
msgid "ac701eddbf6147d1afcfbca389bf234e"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:64
msgid "With errors per gate of order ``1E-3`` we estimate a final fidelity of such a computation of about ``1E-6``: which implies a totally meaningless results."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:67
msgid "Fault tolerant quantum computing"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:69
msgid "Errors are a natural thing to occur in any computer. In quantum computers these are usually more complex, and come in the form of quantum states not being prepared in the exact way they should (e.g. overshooting their target values, drifting away). Furthermore, the disturbances that generate these issues are typically unavoidable."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:71
msgid "There are several ways to handle these errors, and the terminology can get confusing as there is disagreement even within the field. We will break it apart in three core pieces: 1. Supression 2. Mitigation 3. Correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:73
msgid "Let’s start with the latter, since it was the first one to be discovered in the field…"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:85
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:922
msgid "Error correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:87
msgid "Error correction in classical computers is a standard technique which encodes information in redundant ways to make it resilient to unwanted noise, and allow us to detect and correct errors as they occur. It has long being known that the coupling of quantum systems to their environment sets a limit for any quantum computation, both in time and size. Nonetheless, theoretical discoveries in the form of *Quantum error correction* solved this issue early on."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:93
msgid "THRESHOLD THEOREM If errors in quantum computers can be reduced below certain (finite) level, a fault-tolerant quantum computation could be carried out arbitrarily long even in noisy hardware."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:99
msgid "This is how we hope to achieve the ultimate goal of fault-tolerant quantum computation, however, even if we build hardware that can achieve the prescribed threshold, the overhead for performing full error correction (e.g. qubit count) makes it infeasinble in the short term; as we will try to encode single qubit logical values across multiple physical qubits:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:105
msgid "|a00f55064d0245a192595cdde98dca42|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:113
msgid "a00f55064d0245a192595cdde98dca42"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:111
msgid "This is well beyond our 2025 roadmap plans, although we are working a lot in this area as well to make it feasable as soon as possible."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:125
msgid "Error suppression"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:127
msgid "Error suppression is the most basic level of error handling. Often times, it refers to a set of techniques performed close to hardware, which consist on things like altering control signals (i.e. Qiskit Pulse level). To make it simpler, we define these techniques as introducing *classical overhead*, usually within the transpilation/compilation process."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:129
msgid "These techniques are very old, and were first developed at the same time as some of the first controllable quantum systems (e.g. Magnetic Resonance Imaging devices)."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:132
msgid "Dynamical decoupling (DD)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:134
msgid "Quantum computers have adopted some of these techniques like spin echos (i.e. a sequence of pulses that can help refocus the state of a qubit). As a matter of fact, spin echos play a big role in a class of techniques known as *Dynamical Decoupling* (DD), which sends pulses to idle qubits in order to reset their value to their original states, undoing the potentially harmful effects of nearby qubits that are being used for the calculation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:146
msgid "Create Trotter circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:668
msgid "Simulator"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:729
msgid "Unmitigated"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:790
msgid "### Dynamical decoupling"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:879
msgid "Error mitigation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:881
msgid "Error mitigation on the other hand introduces *quantum overhead* to our calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:883
msgid "Typically, it uses the outputs of multiple ensembles of noisy calculations to reduce or eliminate the noise in estimating quantitites like expectation values, usually via classical post-processing. In this regard, error mitigation is different from error correction in that, instead of fixing errors in every circuit run, it lets them occur and then infers better results from several of these noisy calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:885
msgid "Since there is no threshold that one must surpass before QEM becomes practical, we see error mitigation as the key to realizing useful quantum computers in the near term."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:887
msgid "We are developing a portfolio of different error mitigation techniques, looking for three main things: - Small overhead (speed) - Improved accuracy (quality) - Few assumptions (scale)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:889
msgid "Each method come with their own associated overhead: a trade-off between number of quantum computations needed (i.e. time) and accuracy of our results. The level of accuracy that can be achieved is also specific to each method, and usually inversly proportional to the previouslt metioned overhead."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:895
msgid "|0db2cefad2244922b8fec200c6a16c11|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:988
msgid "0db2cefad2244922b8fec200c6a16c11"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:901
msgid "By having a portfolio of methods, users can choose which technique makes the most sense for the problem of interest that they are trying to solve, based on accuracy demands and how much overhead they are willing to accept. We are excited about this because, in the best scenarios, we are able to achieve unbiased results (i.e. noise-free); and we want to make this capabilities accessible all across the stack: from kernel, to algorithm and model developers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:904
msgid "Why is error mitigation important?"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:906
msgid "We need improvements in scale, quality, and speed."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:908
msgid "The promise of error mitigation is to translate the continuous progress in quanutm hardware into continuous improvements in quantum computations and quantum information processing. We expect that, while insuficient to fully overcome imperfections, every advance should incrementally push the frontier of what can be achived practically; as opposed to a scenario where little to no progress is made until we suddenly overcome the fault-tolerant threshold."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:914
msgid "|2f43162e9e90497ca80173d91f55523e|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:991
msgid "2f43162e9e90497ca80173d91f55523e"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:920
msgid "Beyond the 100x100 circuit, we envision a future where error correction and error mitigation can work in a hybrid way. In that regard, this approach has proven to be both practically effective and intellectually challenging."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:923
msgid "Smooth, progressive transition to quantum advantage"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:926
msgid "Concepts"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:932
msgid "TERMINOLOGY As with every nascent field, terminology is sometimes incosistent: people use the same terms to refer to (slightly) different things."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:938
msgid "Estimators: strategies for approximating certain physical value fundamentally unknown"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:939
msgid "Sampling: the process taking several measurements of one or several things"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:940
msgid "Overhead: extra costs introduced by a new techniques relative to a base implementation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:941
msgid "Bias: a systematic drift in the measured quantitites usually caused by errors"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:942
msgid "Shot/sample noise: uncertainty in the obtained results due to a lack of infinite precission (e.g. finite number of samples)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:944
msgid "We define the errors in our estimators through the *mean square error*:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:946
msgid "\\text{MSE}[\\hat{O}] = \\text{E}[(\\hat{O} - \\text{Tr}[O\\rho_0])^2]"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:951
msgid "Which decomposes into *bias* and *variance* contributions:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:953
msgid "\\text{MSE}[\\hat{O}] = \\text{Bias}[\\hat{O}]^2 + \\text{Var}[\\hat{O}] \\\\\n"
"\\text{Bias}[\\hat{O}] = \\text{E}[\\hat{O}] - \\text{Tr}[O\\rho_0] \\\\\n"
"\\text{Var}[\\hat{O}] = \\text{E}[\\hat{O}^2] - \\text{E}[\\hat{O}]^2"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:960
msgid "Therefore, we can generally express the errors as:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:962
msgid "\\text{MSE}[\\bar{O}_\\rho] = (\\text{Tr}[O\\rho] - \\text{Tr}[O\\rho_0])^2 + \\frac{\\text{Tr}[O^2\\rho] - \\text{Tr}[O\\rho]^2}{N_\\text{shots}}"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:968
msgid "Implications"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:970
msgid "We expect our error mitigated estimator to be such that:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:972
msgid "| \\text{Bias}[\\bar{O}_\\text{em}] | \\leq | \\text{Bias}[\\bar{O}_\\rho] | \\\\\n"
"| \\text{Var}[\\bar{O}_\\text{em}] | \\geq | \\text{Var}[\\bar{O}_\\rho] |"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:982
msgid "|17f92e52367f41a8841fdd83a92a894b|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:994
msgid "17f92e52367f41a8841fdd83a92a894b"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1006
msgid "Twirled redaout error extinction (T-REx)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1008
msgid "Twirled readout error extinction (TREX) uses a technique known as Pauli Twirling to reducing the noise introduced during the process of quanutm measurement. This technique assumes no specific form of noise, which makes it very general and effective."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1011
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1123
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1227
msgid "Overall workflow"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1013
msgid "Acquiere data for the zero state with randomized bitflips (i.e. Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1014
msgid "Acquiere data for the desired (noisy) state with randomized bitflips (i.e. Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1015
msgid "Compute special function for each data set, and divide."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1021
msgid "|7be38c31f70e40f29eb18614114a1d30|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1029
msgid "7be38c31f70e40f29eb18614114a1d30"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1027
msgid "Reference: E. van den Berg, Z. Minev, and K. Temme, *Model-free readout-error mitigation for quantum expectation values* `arXiv:2012.09738 <https://arxiv.org/abs/2012.09738>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1118
msgid "Zero noise extrapolation(ZNE)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1120
msgid "Zero noise extrapolation (ZNE) works by first amplifying the noise in the circuit preparing the desired quantum state, obtaining measurements for several different levels of noise, and using those measurements to infer the noiseless result."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1125
msgid "Amplify circuit noise for several noise factors"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1126
msgid "Run every noise amplified circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1127
msgid "Extrapolate back to the zero noise limit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1129
msgid "|images/zne_stages.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1131
msgid "images/zne_stages.png"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1220
msgid "Probabilistic error cancelation (PEC)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1222
msgid "Probabilistic error cancelation (PEC) samples for a collection of circuits that, on average mimics a noise inverting channel to cancel out the noise in the desired computation. This process is a bit like how noise-cancelling headphones work, and produces great results, however it is not as general as other methods and the sampling overhead is exponential."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1224
msgid "Reference: E. van den Berg, Z. Minev, A. Kandala, and K. Temme, *Probabilistic error cancellation with sparse Pauli-Lindblad models on noisy quantum processors* `arXiv:2201.09866 <https://arxiv.org/abs/2201.09866>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1229
msgid "|images/pec_layers.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1231
msgid "images/pec_layers.png"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1243
msgid "Step 1: Pauli twirling"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1245
msgid "|856b82e184c543a7b13b0426e7d6e008|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1247
msgid "856b82e184c543a7b13b0426e7d6e008"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1256
msgid "#### Step 2: Repeat layer and learn the noise |9c93840d14024b8dae5b953bc6978205|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1258
msgid "9c93840d14024b8dae5b953bc6978205"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1270
msgid "Step 3: Derive a fidelity (error for each noise channel)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1272
msgid "|308fca5bf43549df9bab345b579218a8|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1274
msgid "308fca5bf43549df9bab345b579218a8"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1415
msgid "### PEC callback messages explained"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1417
msgid "**Layers detected:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1419
msgid "``2022-11-07 20:23:43.013816 *** Callback *** {'unique_layers_detected': 2, 'total_layers': 60}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1421
msgid "In the list of circuits passed to the Estimator, a total of **60** layers were detected and **2** of them were unique. Qiskit Runtime will learn the noise model for the 2 unique layers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1423
msgid "**Sampling overhead for layers:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1425
msgid "``2022-11-07 20:30:41.251325 *** Callback *** {'msg': 'Sampling overhead for layer 1/2: 1.0263820029324646'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1427
msgid "``2022-11-07 20:37:38.920151 *** Callback *** {'msg': 'Sampling overhead for layer 2/2: 1.0692954781746'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1429
msgid "These messages show the sampling overhead for each of the unique layers. Notice that it took roughly 7 minutes to learn the noise model of each layer."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1431
msgid "**Circuit total sampling overhead**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1433
msgid "Circuit 1 total sampling overhead: ``1.2045186180127132``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1435
msgid "``2022-11-07 20:37:39.336883 *** Callback *** {'sampling_overhead_by_layer': [1.0692954781746, 1.0263820029324646], 'unique_layers': 2, 'total_sampling_overhead': 1.2045186180127132}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1437
msgid "Circuit 2 total sampling overhead: ``1.4508651011392564``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1439
msgid "``2022-11-07 20:37:39.334815 *** Callback *** {'sampling_overhead_by_layer': [1.0692954781746, 1.0263820029324646], 'unique_layers': 2, 'total_sampling_overhead': 1.4508651011392564}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1441
msgid "Circuit 3 total sampling overhead: ``1.7475940265471324``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1443
msgid "``2022-11-07 20:37:39.336983 *** Callback *** {'sampling_overhead_by_layer': [1.0692954781746, 1.0263820029324646], 'unique_layers': 2, 'total_sampling_overhead': 1.7475940265471324}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1445
msgid "Circuit 4 total sampling overhead: ``2.105009541703825``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1447
msgid "``2022-11-07 20:37:39.337099 *** Callback *** {'sampling_overhead_by_layer': [1.0692954781746, 1.0263820029324646], 'unique_layers': 2, 'total_sampling_overhead': 2.105009541703825}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1449
msgid "Circuit 5 total sampling overhead: ``2.5355231840766654``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1451
msgid "``2022-11-07 20:37:39.338120 *** Callback *** {'sampling_overhead_by_layer': [1.0692954781746, 1.0263820029324646], 'unique_layers': 2, 'total_sampling_overhead': 2.5355231840766654}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1453
msgid "The sampling overhead increases when there are more layers to mitigate."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1499
msgid "PEC metadata"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1501
msgid "Circuit 1:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1518
msgid "Circuit 2:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1535
msgid "Circuit 3:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1552
msgid "Circuit 4:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1569
msgid "Circuit 5"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1656
msgid "Combined plot"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1698
msgid "Advanced ZNE options"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1701
msgid "Noise amplification"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1704
msgid "Digital vs analog"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1706
msgid "|images/analog_vs_digital.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1726
msgid "images/analog_vs_digital.png"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1709
msgid "Local vs global"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1711
msgid "|images/global_vs_local.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1727
msgid "images/global_vs_local.png"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1714
msgid "Extrapolation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1717
msgid "Useful noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1719
msgid "|images/useful_extrapolation.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1728
msgid "images/useful_extrapolation.png"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1722
msgid "Unuseful noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1724
msgid "|images/unuseful_extrapolation.png|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1729
msgid "images/unuseful_extrapolation.png"
msgstr ""

