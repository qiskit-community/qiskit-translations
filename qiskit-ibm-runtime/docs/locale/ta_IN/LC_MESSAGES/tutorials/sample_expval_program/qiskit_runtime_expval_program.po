msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 16:30+0000\n"
"PO-Revision-Date: 2022-11-10 17:00\n"
"Last-Translator: \n"
"Language-Team: Tamil\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/sample_expval_program/qiskit_runtime_expval_program.po\n"
"X-Crowdin-File-ID: 9824\n"
"Language: ta_IN\n"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:9
msgid "This page was generated from `docs/tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb`__."
msgstr "இந்தப் பக்கம் இதிலிருந்து உருவாக்கப்பட்டது `docs/tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb`__."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:9
msgid "Custom Expectation Value Program for the Qiskit Runtime"
msgstr "Qiskit இயக்க நேரத்திற்கான விருப்ப எதிர்பார்ப்பு மதிப்பு திட்டம்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:15
msgid "Paul Nation"
msgstr "பால் நேஷன்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:25
msgid "IBM Quantum Partners Technical Enablement Team"
msgstr "IBM குவாண்டம் கூட்டாளர்களின் தொழில்நுட்ப செயலாக்கக் குழு"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:31
msgid "Here we will show how to make a program that takes a circuit, or list of circuits, and computes the expectation values of one or more diagonal operators."
msgstr "ஒரு சர்க்யூட் அல்லது சர்க்யூட்களின் பட்டியலை எடுத்து, ஒன்று அல்லது அதற்கு மேற்பட்ட மூலைவிட்ட ஆபரேட்டர்களின் எதிர்பார்ப்பு மதிப்புகளைக் கணக்கிடும் நிரலை எவ்வாறு உருவாக்குவது என்பதை இங்கே காண்போம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:43
msgid "Prerequisites"
msgstr "முன்நிபந்தனைகள்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:45
msgid "You must have the latest Qiskit installed."
msgstr "நீங்கள் சமீபத்திய Qiskit நிறுவியிருக்க வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:46
msgid "You must have either an IBM Cloud or an IBM Quantum account that can access Qiskit Runtime."
msgstr "Qiskit இயக்க நேரத்தை அணுகக்கூடிய IBM கிளவுட் அல்லது IBM குவாண்டம் கணக்கு உங்களிடம் இருக்க வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:58
msgid "Background"
msgstr "பின்னணி"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:60
msgid "The primary method by which information is obtained from quantum computers is via expectation values. Indeed, the samples that come from executing a quantum circuit multiple times, once converted to probabilities, can be viewed as just a finite sample approximation to the expectation value for the projection operators corresponding to each bitstring. More practically, many quantum algorithms require computing expectation values over Pauli operators, e.g. Variational Quantum Eigensolvers, and thus having a runtime program that computes these quantities is of fundamental importance. Here we look at one such example, where a user passes one or more circuits and expectation operators and gets back the computed expectation values, and possibly error bounds."
msgstr "குவாண்டம் கணினிகளில் இருந்து தகவல் பெறுவதற்கான முதன்மை முறை எதிர்பார்ப்பு மதிப்புகள் வழியாகும். உண்மையில், ஒரு குவாண்டம் சர்க்யூட்டை பலமுறை இயக்குவதன் மூலம் வரும் மாதிரிகள், ஒருமுறை நிகழ்தகவுகளாக மாற்றப்பட்டால், ஒவ்வொரு பிட்ஸ்ட்ரிங்கிற்கும் தொடர்புடைய ப்ரொஜெக்ஷன் ஆபரேட்டர்களுக்கான எதிர்பார்ப்பு மதிப்பின் வரையறுக்கப்பட்ட மாதிரி தோராயமாக மட்டுமே பார்க்க முடியும். மிகவும் நடைமுறையில், பல குவாண்டம் அல்காரிதம்களுக்கு பாலி ஆபரேட்டர்கள் மீது எதிர்பார்ப்பு மதிப்புகள் தேவை, எ.கா. மாறுபாடு குவாண்டம் ஈஜென்சோல்வர்ஸ், இதனால் இந்த அளவுகளைக் கணக்கிடும் இயக்க நேர நிரலைக் கொண்டிருப்பது அடிப்படை முக்கியத்துவம் வாய்ந்தது. ஒரு பயனர் ஒன்று அல்லது அதற்கு மேற்பட்ட சுற்றுகள் மற்றும் எதிர்பார்ப்பு ஆபரேட்டர்களைக் கடந்து, கணக்கிடப்பட்ட எதிர்பார்ப்பு மதிப்புகள் மற்றும் பிழை வரம்புகளை திரும்பப் பெறும்போது, அத்தகைய உதாரணத்தை இங்கே பார்க்கலாம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:64
msgid "Expectation value of a diagonal operator"
msgstr "மூலைவிட்ட ஆபரேட்டரின் எதிர்பார்ப்பு மதிப்பு"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:66
msgid "Consider a generic observable given by the tensor product of diagonal operators over :math:`N` qubits :math:`O = O_{N-1}\\dots O_{0}` where the subscript indicates the qubit on which the operator acts. Then for a set of observed :math:`M` bitstrings :math:`\\{b_{0}, \\dots b_{M-1}\\}`, where $M :nbsphinx-math:`\\leq `2^N $, with corresponding approximate probabilities :math:`p_{m}` the expectation value is given by"
msgstr "மூலைவிட்ட ஆபரேட்டர்களின் டென்சர் ப்ராடக்டால் கொடுக்கப்பட்ட பொதுவான அவதானிப்பைக் கவனியுங்கள் :math:`N` க்யூபிட்கள் :math:`O = O_{N-1}\\dots O_{0}` இதில் சப்ஸ்கிரிப்ட் ஆபரேட்டர் செயல்படும் க்யூபிட்டைக் குறிக்கிறது.பின்னர் கவனிக்கப்பட்ட :math:`M` பிட்ஸ்ட்ரிங்க்களுக்கு :math:`\\{b_{0}, \\dots b_{M-1}\\}`, இங்கு $M :nbsphinx-math:`\\leq `2^ N $, தொடர்புடைய தோராயமான நிகழ்தகவுகள் :math:`p_{m}` எதிர்பார்ப்பு மதிப்பு வழங்கப்பட்டுள்ளது"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:68
msgid "\\langle O\\rangle \\simeq \\sum_{m=0}^{M-1} p_{m}\\prod_{n=0}^{N-1}O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]],"
msgstr "\\langle O\\rangle \\simeq \\sum_{m=0}^{M-1} p_{m}\\prod_{n=0}^{N-1}O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]],"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:73
msgid "where :math:`O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]]` is the diagonal element of :math:`O_{n}` specified by the :math:`N-n-1`\\ th bit in bitstring :math:`b_{m}`. The reason for the complicated indexing in ``b_{m}`` is because Qiskit uses least-significant bit indexing where the zeroth element of the bit-strings is given by the right-most bit."
msgstr "இங்கு :math:`O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]]` என்பதால் குறிப்பிடப்பட்ட :math:`O_{n}` என்பதன் மூலைவிட்ட உறுப்பு ஆகும். :math:`N-n-1`\\ பிட்ஸ்ட்ரிங்கில் வது பிட் :math:`b_{m}`. ``b_{m}`` இல் சிக்கலான அட்டவணைப்படுத்தலுக்கான காரணம், Qiskit பிட்-ஸ்ட்ரிங்ஸின் பூஜ்ஜிய உறுப்பு வலது-அதிக பிட்டால் கொடுக்கப்பட்ட குறைந்த-குறிப்பிடத்தக்க பிட் அட்டவணையைப் பயன்படுத்துவதால் ஆகும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:75
msgid "Here we will use built-in routines to compute these expectation values. However, it is not hard to do yourself, with plenty of examples to be found."
msgstr "இந்த எதிர்பார்ப்பு மதிப்புகளைக் கணக்கிட, உள்ளமைக்கப்பட்ட நடைமுறைகளைப் பயன்படுத்துவோம். இருப்பினும், அதை நீங்களே செய்வது கடினம் அல்ல, நிறைய எடுத்துக்காட்டுகள் உள்ளன."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:87
msgid "Main program"
msgstr "முக்கிய நிரல்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:89
msgid "Here we define our main function for the expectation value runtime program. As always, our program must start with the ``backend``, and ``user_messenger`` arguements, followed by the actual inputs we pass to the program. Here our options are quite simple:"
msgstr "எதிர்பார்ப்பு மதிப்பு இயக்க நேர நிரலுக்கான எங்கள் முக்கிய செயல்பாட்டை இங்கே வரையறுக்கிறோம். எப்பொழுதும் போல, எங்கள் நிரல் ``பேக்கெண்ட்`` மற்றும் ``பயனர்_மெசஞ்சர்`` வாதங்களுடன் தொடங்க வேண்டும், அதைத் தொடர்ந்து நிரலுக்கு நாம் அனுப்பும் உண்மையான உள்ளீடுகள். இங்கே எங்கள் விருப்பங்கள் மிகவும் எளிமையானவை:"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:91
msgid "``circuits``: A single QuantumCircuit or list of QuantumCircuits to be executed on the target backend."
msgstr "``சுற்றுகள்``: இலக்கு பின்தளத்தில் செயல்படுத்தப்பட வேண்டிய ஒற்றை குவாண்டம் சர்க்யூட் அல்லது குவாண்டம் சர்க்யூட்களின் பட்டியல்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:93
msgid "``expectation_operators``: The operators we want to evaluate. These can be strings of diagonal Pauli’s, eg, ``ZIZZ``, or custom operators defined by dictionaries. For example, the projection operator on the all ones state of 4 qubits is ``{'1111': 1}``."
msgstr "``எதிர்பார்ப்பு_ஆப்பரேட்டர்கள்``: நாங்கள் மதிப்பிட விரும்பும் ஆபரேட்டர்கள். இவை மூலைவிட்ட பாலியின் சரங்களாக இருக்கலாம், எ. கா. ``ZIZZ`` அல்லது அகராதிகளால் வரையறுக்கப்பட்ட தனிப்பயன் ஆபரேட்டர்கள். எடுத்துக்காட்டாக, 4 க்யூபிட்களின் அனைத்து நிலைகளிலும் ப்ரொஜெக்ஷன் ஆபரேட்டர் ``{'1111': 1}`` ஆகும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:95
msgid "``shots``: How many times to sample each circuit."
msgstr "``ஷாட்ஸ்``: ஒவ்வொரு சுற்றுக்கும் எத்தனை முறை மாதிரி செய்ய வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:97
msgid "``transpiler_config``: A dictionary that passes additional arguments on to the transpile function, eg. ``optimization_level``."
msgstr "``டிரான்ஸ்பைலர்_கட்டமைப்பு``: டிரான்ஸ்பைல் செயல்பாட்டிற்கு கூடுதல் வாதங்களை அனுப்பும் அகராதி, எ. கா. ``உகப்பாக்க_நிலை``."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:99
msgid "``run_config``: A dictionary that passes additional arguments on to ``backend.run()``."
msgstr "``ரன்_கட்டமைப்பு``: ``பின்தளம்.ரன்()`` இல் கூடுதல் வாதங்களை அனுப்பும் அகராதி."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:101
msgid "``skip_transpilation``: A flag to skip transpilation altogether and just run the circuits. This is useful for situations where you need to transpile parameterized circuits once, but must bind parameters multiple times and evaluate."
msgstr "``டிரான்ஸ்பிலேஷன்_தவிர்``: டிரான்ஸ்பிலேஷனை முழுவதுமாகத் தவிர்த்துவிட்டு சுற்றுகளை இயக்குவதற்கான கொடி. நீங்கள் ஒரு முறை அளவுருக் கொண்ட சுற்றுகளை டிரான்ஸ்பைல் செய்ய வேண்டிய சூழ்நிலைகளுக்கு இது பயனுள்ளதாக இருக்கும், ஆனால் அளவுருக்களை பல முறை பிணைத்து மதிப்பீடு செய்ய வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:103
msgid "``return_stddev``: Flag to return bound on standard deviation. If using measurement mitigation this adds some overhead to the computation."
msgstr "``return_stddev``: நிலையான விலகலில் திரும்புவதற்குக் கொடி. அளவீட்டுத் தணிப்பைப் பயன்படுத்தினால், இது கணக்கீட்டில் சில மேல்நிலைகளைச் சேர்க்கிறது."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:105
msgid "``use_measurement_mitigation``: Use M3 measurement mitigation and compute expectation value and standard deviation bound from quasi-probabilities."
msgstr "``use_measurement_mitigation``: M3 அளவீட்டுத் தணிப்பைப் பயன்படுத்தவும் மற்றும் எதிர்பார்ப்பு மதிப்பு மற்றும் அரை-நிகழ்தகவுகளிலிருந்து பிணைக்கப்பட்ட நிலையான விலகலைக் கணக்கிடவும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:107
#, python-format
msgid "At the top of the cell below you will see a commented out ``%%writefile sample_expval.py``. We will use this to convert the cell to a Python module named ``sample_expval.py`` to upload."
msgstr "கீழே உள்ள கலத்தின் மேற்பகுதியில் நீங்கள் கருத்து வெளியிடப்பட்ட ``%%writefile sample_expval.py`` ஐக் காண்பீர்கள். பதிவேற்ற, ``sample_expval.py`` என்ற பைதான் தொகுதிக்குக் கலத்தை மாற்ற இதைப் பயன்படுத்துவோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:228
msgid "Local testing"
msgstr "உள்ளூர் சோதனை"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:230
msgid "Here we test with a local “Fake” backend that mimics the noise properties of a real system and a 4-qubit GHZ state."
msgstr "உண்மையான முறை மற்றும் 4-க்யூபிட் GHZ நிலையின் இரைச்சல் பண்புகளைப் பிரதிபலிக்கும் உள்ளூர் \"போலி\" பின்தளத்தில் இங்கே சோதனை செய்கிறோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:320
msgid "If we have done our job correctly, the above should print out two expectation values close to one and a final expectation value close to zero."
msgstr "நாம் நமது வேலையைச் சரியாகச் செய்திருந்தால், மேலே உள்ளவை இரண்டு எதிர்பார்ப்பு மதிப்புகளை ஒன்றுக்கு அருகில் அச்சிட வேண்டும் மற்றும் இறுதி எதிர்பார்ப்பு மதிப்பு பூஜ்ஜியத்திற்கு அருகில் இருக்கும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:332
msgid "Program metadata"
msgstr "நிரல் மெட்டாடேட்டா"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:334
msgid "Next we add the needed program data to a dictionary for uploading with our program."
msgstr "அடுத்து நமது நிரலுடன் பதிவேற்றுவதற்கு தேவையான நிரல் தரவை அகராதியில் சேர்க்கிறோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:402
msgid "Upload the program"
msgstr "நிரலைப் பதிவேற்றவும்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:404
#, python-format
msgid "We are now in a position to upload the program. To do so we first uncomment and execute the line ``%%writefile sample_expval.py`` giving use the ``sample_expval.py`` file we need to upload."
msgstr "நாங்கள் இப்போது நிரலைப் பதிவேற்றும் நிலையில் இருக்கிறோம். அவ்வாறு செய்ய, முதலில் நாம் பதிவேற்ற வேண்டிய ``sample_expval.py`` கோப்பைப் பயன்படுத்தி ``%%writefile sample_expval.py`` என்ற வரியை நீக்கி, செயல்படுத்துவோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:464
msgid "Delete program if needed"
msgstr "தேவைப்பட்டால் நிரலை நீக்கவும்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:486
msgid "Wrapping the runtime program"
msgstr "இயக்க நேர நிரலை மூடுதல்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:488
msgid "As always, it is best to wrap the call to the runtime program with a function (or possibly a class) that makes input easier and does some validation."
msgstr "எப்பொழுதும் போல், உள்ளீட்டை எளிதாக்கும் மற்றும் சில சரிபார்ப்புகளைச் செய்யும் ஒரு செயல்பாடு (அல்லது ஒரு வகுப்பு) மூலம் இயக்க நேர நிரலுக்கான அழைப்பை மூடுவது சிறந்தது."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:565
msgid "Trying it out"
msgstr "முயற்சி செய்கிறேன்"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:567
msgid "Let’s try running the program here with our previously made GHZ state and running on the simulator."
msgstr "எங்கள் முன்பு உருவாக்கப்பட்ட GHZ நிலை மற்றும் சிமுலேட்டரில் இயங்கும் நிரலை இங்கே இயக்க முயற்சிப்போம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:627
msgid "The first two projectors should be nearly :math:`0.50` as they tell us the probability of being in the all zeros and ones states, respectively, which should be 50/50 for our GHZ state. The final expectation value of ``ZZZZ`` should be one since this is a GHZ over an even number of qubits. It should go close to zero for an odd number."
msgstr "முதல் இரண்டு ப்ரொஜெக்டர்களும் கிட்டத்தட்ட :math:`0.50` ஆக இருக்க வேண்டும், ஏனெனில் அவை முறையே அனைத்து பூஜ்ஜியங்களிலும் ஒரு நிலையிலும் இருப்பதற்கான நிகழ்தகவைக் கூறுகின்றன, இது நமது GHZ நிலைக்கு 50/50 ஆக இருக்க வேண்டும். ``ZZZZ`` இன் இறுதி எதிர்பார்ப்பு மதிப்பு ஒன்றாக இருக்க வேண்டும், ஏனெனில் இது இரட்டை எண்ணிக்கையிலான குவிட்களுக்கு மேல் GHZ ஆகும். ஒற்றைப்படை எண்ணுக்கு இது பூஜ்ஜியத்திற்கு அருகில் செல்ல வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:700
msgid "Quantum Volume as an expectation value"
msgstr "ஒரு எதிர்பார்ப்பு மதிப்பாகக் குவாண்டம் தொகுதி"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:702
msgid "Here we formulate QV as an expectation value of a projector onto the heavy-output elements on a distribution. We can then use our expectation value routine to compute whether a given circuit has passed the QV metric."
msgstr "இங்கே நாம் QV ஐ ஒரு ப்ரொஜெக்டரின் எதிர்பார்ப்பு மதிப்பாக ஒரு விநியோகத்தில் உள்ள ஹெவி-அவுட்புட் கூறுகளை உருவாக்குகிறோம். கொடுக்கப்பட்ட சர்க்யூட் QV மெட்ரிக்கைக் கடந்துவிட்டதா என்பதைக் கணக்கிடுவதற்கு நமது எதிர்பார்ப்பு மதிப்பு வழக்கத்தைப் பயன்படுத்தலாம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:704
msgid "QV is defined in terms of heavy-outputs of a distribution. Heavy-outputs are those bit-strings that are those that have probabilities above the median value of the distribution. Below we define the projection operator onto the set of bit-strings that are heavy-outputs for a given distribution."
msgstr "QV என்பது ஒரு விநியோகத்தின் கனமான வெளியீடுகளின் அடிப்படையில் வரையறுக்கப்படுகிறது. ஹெவி-அவுட்புட்கள் என்பது பிட்-ஸ்ட்ரிங்ஸ் ஆகும், அவை விநியோகத்தின் சராசரி மதிப்பிற்கு மேல் நிகழ்தகவுகளைக் கொண்டவை. கொடுக்கப்பட்ட விநியோகத்திற்கான கனமான வெளியீடுகளான பிட்-சரங்களின் தொகுப்பில் ப்ரொஜெக்ஷன் ஆபரேட்டரை கீழே வரையறுக்கிறோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:739
msgid "Now we generate 10 QV circuits as our dataset."
msgstr "இப்போது நாம் 10 QV சர்க்யூட்களை எங்கள் தரவுத்தொகுப்பாக உருவாக்குகிறோம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:766
msgid "Next, we have to determine the heavy-set of each circuit from the ideal answer, and then pass this along to our heavy-set projector function that we defined above."
msgstr "அடுத்து, ஒவ்வொரு சர்க்யூட்டின் ஹெவி-செட்டையும் சிறந்த பதிலிலிருந்து தீர்மானிக்க வேண்டும், பின்னர் இதை நாம் மேலே வரையறுத்த ஹெவி-செட் புரொஜெக்டர் செயல்பாட்டிற்கு அனுப்ப வேண்டும்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:790
msgid "QV circuits have no measurements on them so need to add them:"
msgstr "QV சுற்றுகளில் அளவீடுகள் இல்லை, எனவே அவற்றைச் சேர்க்க வேண்டும்:"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:811
msgid "With a list of circuits and projection operators we now need only to pass both sets to our above expectation value runner targeting the desired backend. We will also set the best transpiler arguments to give us a sporting chance of getting some passing scores."
msgstr "சர்க்யூட்கள் மற்றும் ப்ரொஜெக்ஷன் ஆபரேட்டர்களின் பட்டியலுடன், இரண்டு செட்களையும் நாம் விரும்பிய பின்தளத்தை இலக்காகக் கொண்டு மேலே உள்ள எதிர்பார்ப்பு மதிப்பு ரன்னருக்கு அனுப்ப வேண்டும். சில தேர்ச்சி மதிப்பெண்களைப் பெறுவதற்கான விளையாட்டு வாய்ப்பை வழங்க சிறந்த டிரான்ஸ்பைலர் வாதங்களையும் அமைப்போம்."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:890
msgid "A passing QV score is one where the value of the heavy-set projector is above :math:`2/3`. So let us see who passed:"
msgstr "தேர்ச்சி QV ஸ்கோர் என்பது ஹெவி-செட் ப்ரொஜெக்டரின் மதிப்பு மேலே இருந்தால் :math:`2/3`. எனவே யார் தேர்ச்சி பெற்றனர் என்று பார்ப்போம்:"

