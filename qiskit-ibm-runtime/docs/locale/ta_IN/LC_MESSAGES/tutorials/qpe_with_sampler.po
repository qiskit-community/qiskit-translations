msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-30 17:25+0000\n"
"PO-Revision-Date: 2023-08-14 19:32\n"
"Last-Translator: \n"
"Language: ta\n"
"Language-Team: Tamil\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ta\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/qpe_with_sampler.po\n"
"X-Crowdin-File-ID: 9844\n"

#: ../../tutorials/qpe_with_sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/qpe_with_sampler.ipynb`__."
msgstr "இந்தப் பக்கம் `docs/tutorials/qpe_with_sampler.ipynb`__ இலிருந்து உருவாக்கப்பட்டது."

#: ../../tutorials/qpe_with_sampler.ipynb:9
msgid "Quantum phase estimation using the Sampler primitive"
msgstr "ப்ரிமிட்டிவ் மாதிரியைப் பயன்படுத்தி குவாண்டம் கட்ட மதிப்பீடு"

#: ../../tutorials/qpe_with_sampler.ipynb:11
msgid "The quantum phase estimation (QPE) algorithm is an important subroutine in quantum computation. It serves as a central building block of many quantum algorithms including the Shor's factoring algorithm and the quantum algorithm for linear systems of equations (HHL algorithm). In this tutorial, you will build a parameterized version of QPE circuit and run it using the Sampler primitive, which makes running parameterized circuits very easy."
msgstr "குவாண்டம் கட்ட மதிப்பீடு (QPE) அல்காரிதம் என்பது குவாண்டம் கணக்கீட்டில் ஒரு முக்கியமான சப்ரூட்டின் ஆகும். இது ஷோரின் ஃபாக்டரிங் அல்காரிதம் மற்றும் சமன்பாடுகளின் நேரியல் அமைப்புகளுக்கான குவாண்டம் அல்காரிதம் (HHL அல்காரிதம்) உட்பட பல குவாண்டம் அல்காரிதம்களின் மைய கட்டுமானத் தொகுதியாக செயல்படுகிறது. இந்த டுடோரியலில், நீங்கள் QPE சர்க்யூட்டின் அளவுருப்படுத்தப்பட்ட பதிப்பை உருவாக்கி, சாம்ப்லர் ப்ரிமிட்டிவ் பயன்படுத்தி இயக்குவீர்கள், இது அளவுருப்படுத்தப்பட்ட சுற்றுகளை இயக்குவதை மிகவும் எளிதாக்குகிறது."

#: ../../tutorials/qpe_with_sampler.ipynb:23
msgid "Before you begin"
msgstr "நீங்கள் தொடங்கும் முன்"

#: ../../tutorials/qpe_with_sampler.ipynb:25
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven't done so already, follow the instructions in the Qiskit `Getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "இந்த டுடோரியலுக்கு கிஸ்கிட் இயக்க நேர சேவை நிகழ்வு தேவைப்படுகிறது. நீங்கள் ஏற்கனவே அவ்வாறு செய்யவில்லை என்றால், Qiskit `தொடங்குதல் வழிகாட்டி <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ இல் உள்ள வழிமுறைகளைப் பின்பற்றி ஒன்றை அமைக்கவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:37
msgid "Background information"
msgstr "பின்னணி தகவல்"

#: ../../tutorials/qpe_with_sampler.ipynb:49
msgid "Quantum phase estimation algorithm"
msgstr "குவாண்டம் கட்ட மதிப்பீடு அல்காரிதம்"

#: ../../tutorials/qpe_with_sampler.ipynb:51
msgid "The QPE algorithm [1][2] estimates the value of theta, where a unitary operator :math:`U` has an eigenvector :math:`|\\psi \\rangle` with eigenvalue :math:`e^{2\\pi i \\theta}`. To find the estimation, we assume we have black boxes (sometimes called *oracles*), that can prepare the state :math:`|\\psi \\rangle` and run a controlled-:math:`U^{2^j}` operation."
msgstr "QPE அல்காரிதம் [1][2] தீட்டாவின் மதிப்பை மதிப்பிடுகிறது, அங்கு ஒரு யூனிட்டரி ஆபரேட்டர் :math:`U` eigenvector :math:`|\\psi \\rangle` உடன் eigenvalue :math:`e^{2\\pi i \\theta}`. மதிப்பீட்டைக் கண்டறிய, எங்களிடம் கருப்புப் பெட்டிகள் (சில சமயங்களில் *ஆரக்கிள்ஸ்* என்று அழைக்கப்படுகிறது) இருப்பதாகக் கருதுகிறோம், அவை மாநிலம் :math:`|\\psi \\rangle` ஐத் தயார் செய்து கட்டுப்படுத்தப்பட்ட-:math:`U^{2^j} ஐ இயக்கலாம். `ஆபரேஷன்."

#: ../../tutorials/qpe_with_sampler.ipynb:53
msgid "Because it relies on black boxes, the QPE algorithm is not actually a complete algorithm, but can be thought of as a subroutine. It can work with other subroutines to perform other computations, such as Shor's factoring algorithm and the HHL algorithm."
msgstr "இது கருப்புப் பெட்டிகளை நம்பியிருப்பதால், QPE அல்காரிதம் உண்மையில் ஒரு முழுமையான அல்காரிதம் அல்ல, ஆனால் ஒரு சப்ரூட்டினாகக் கருதப்படலாம். ஷோரின் ஃபேக்டரிங் அல்காரிதம் மற்றும் எச்ஹெச்எல் அல்காரிதம் போன்ற பிற கணக்கீடுகளைச் செய்ய இது மற்ற சப்ரூட்டின்களுடன் வேலை செய்ய முடியும்."

#: ../../tutorials/qpe_with_sampler.ipynb:55
msgid "We are not going to explain the details of the QPE algorithm here. If you want to learn more, you can read the chapter about the QPE algorithm in `the Qiskit textbook <https://learn.qiskit.org/course/ch-algorithms/quantum-phase-estimation>`__ [3]."
msgstr "QPE அல்காரிதம் பற்றிய விவரங்களை நாம் இங்கு விளக்கப் போவதில்லை. நீங்கள் மேலும் அறிய விரும்பினால், QPE அல்காரிதம் பற்றிய அத்தியாயத்தை `Qiskit பாடப்புத்தகத்தில் <https://learn.qiskit.org/course/ch-algorithms/quantum-phase-estimation>`__ [3] படிக்கலாம்."

#: ../../tutorials/qpe_with_sampler.ipynb:67
msgid "Overview"
msgstr "கண்ணோட்டம்"

#: ../../tutorials/qpe_with_sampler.ipynb:69
msgid "As explained earlier, there are black boxes in the QPE algorithm to prepare the state :math:`|\\psi \\rangle` and perform the controlled-:math:`U^{2^j}` operation. In this tutorial, you will prepare a series of QPE circuits containing different black boxes corresponding to different phases. You will then run these circuits using the `Sampler primitive <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html>`__ and analyze the results. As you will see, the Sampler primitive makes running parameterized circuits very easy. Rather than create a series of QPE circuits, you only need to create *one* QPE circuit with a parameter specifying the phase the black boxes generate and a series of phase values for the parameter."
msgstr "முன்பு விளக்கியது போல், QPE அல்காரிதத்தில் நிலை :math:`|\\psi \\rangle` ஐ தயார் செய்து கட்டுப்படுத்தப்பட்ட-:math:`U^{2^j}` செயல்பாட்டைச் செய்ய கருப்புப் பெட்டிகள் உள்ளன. இந்த டுடோரியலில், வெவ்வேறு கட்டங்களுக்கு ஒத்த பல்வேறு கருப்புப் பெட்டிகளைக் கொண்ட QPE சுற்றுகளின் வரிசையை நீங்கள் தயாரிப்பீர்கள். நீங்கள் இந்தச் சுற்றுகளை `Sampler primitive <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html>`__ ஐப் பயன்படுத்தி இயக்கி முடிவுகளை பகுப்பாய்வு செய்வீர்கள். நீங்கள் பார்ப்பது போல், சாம்ப்லர் ப்ரிமிட்டிவ் அளவுருப்படுத்தப்பட்ட சுற்றுகளை இயக்குவதை மிகவும் எளிதாக்குகிறது. QPE சர்க்யூட்களின் வரிசையை உருவாக்குவதற்குப் பதிலாக, கருப்புப் பெட்டிகள் உருவாக்கும் கட்டம் மற்றும் அளவுருக்கான கட்ட மதிப்புகளின் வரிசையைக் குறிப்பிடும் அளவுருவுடன் *ஒரு* QPE சர்க்யூட்டை மட்டும் உருவாக்க வேண்டும்."

#: ../../tutorials/qpe_with_sampler.ipynb:76
msgid "Note"
msgstr "குறிப்பு"

#: ../../tutorials/qpe_with_sampler.ipynb:78
msgid "In a typical usage of the QPE algorithm, such as the Shor's factoring algorithm, the black boxes are not configured by the user but instead are specified by other subroutines. However, the purpose of this tutorial is to use the QPE algorithm to illustrate the ease of running parameterized circuits by using the Sampler primitive."
msgstr "ஷோர்ஸ் ஃபேக்டரிங் அல்காரிதம் போன்ற QPE அல்காரிதத்தின் வழக்கமான பயன்பாட்டில், கருப்புப் பெட்டிகள் பயனரால் கட்டமைக்கப்படவில்லை, மாறாக பிற துணை நிரல்களால் குறிப்பிடப்படுகின்றன. இருப்பினும், இந்த டுடோரியலின் நோக்கம், QPE அல்காரிதத்தைப் பயன்படுத்தி, சாம்ப்லர் ப்ரிமிட்டிவ் பயன்படுத்தி, அளவுருக் கொண்ட சுற்றுகளை எளிதாக இயக்குவதை விளக்குவதாகும்."

#: ../../tutorials/qpe_with_sampler.ipynb:94
msgid "Step 1: Create QPE circuits"
msgstr "படி 1: QPE சுற்றுகளை உருவாக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:106
msgid "Create a parameterized QPE circuit"
msgstr "ஒரு அளவுரு QPE சுற்று உருவாக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:108
msgid "The procedure of the QPE algorithm is as follows:"
msgstr "QPE அல்காரிதத்தின் செயல்முறை பின்வருமாறு:"

#: ../../tutorials/qpe_with_sampler.ipynb:110
msgid "Create a circuit with two quantum registers (the first for estimating the phase and the second for storing the eigenvector :math:`|\\psi\\rangle`) and one classical register for readout."
msgstr "இரண்டு குவாண்டம் பதிவேடுகளுடன் ஒரு சுற்று உருவாக்கவும் (முதலாவது கட்டத்தை மதிப்பிடுவதற்கும், இரண்டாவது ஈஜென்வெக்டரை சேமிப்பதற்கும் :math:`|\\psi\\rangle`) மற்றும் ஒரு கிளாசிக்கல் பதிவேடு வாசிப்பதற்கு."

#: ../../tutorials/qpe_with_sampler.ipynb:111
msgid "Initialize the qubits in the first register as :math:`|0\\rangle` and the second register as :math:`|\\psi\\rangle`."
msgstr "முதல் பதிவேட்டில் உள்ள குவிட்களை :math:`|0\\rangle` எனவும், இரண்டாவது பதிவை :math:`|\\psi\\rangle` எனவும் துவக்கவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:112
msgid "Create a superposition in the first register."
msgstr "முதல் பதிவேட்டில் ஒரு சூப்பர்போசிஷனை உருவாக்கவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:113
msgid "Apply the controlled-:math:`U^{2^j}` black box."
msgstr "கட்டுப்படுத்தப்பட்ட-:கணிதம்:`U^{2^j}` கருப்புப் பெட்டியைப் பயன்படுத்தவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:114
msgid "Apply an inverse quantum Fourier transform (QFT) to the first register."
msgstr "முதல் பதிவேட்டில் தலைகீழ் குவாண்டம் ஃபோரியர் மாற்றத்தை (QFT) பயன்படுத்தவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:115
msgid "Measure the first register."
msgstr "முதல் பதிவேட்டை அளவிடவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:117
msgid "The following code creates a function ``create_qpe_circuit`` for creating a QPE circuit given the keyword arguments ``theta`` and ``num_qubits``. Note that ``theta`` doesn't contain the :math:`2\\pi` factor. The ``num_qubits`` argument specifies the number of qubits in the first register. More qubits will provide more precision for the phase estimation."
msgstr "பின்வரும் குறியீடு ``theta`` மற்றும் ``num_qubits`` என்ற முக்கிய வாதங்களைக் கொண்டு QPE சர்க்யூட்டை உருவாக்குவதற்கு ``create_qpe_circuit`` செயல்பாட்டை உருவாக்குகிறது. ``theta`` இல் :math:`2\\pi` காரணி இல்லை என்பதை நினைவில் கொள்ளவும். ``num_qubits`` வாதமானது முதல் பதிவேட்டில் உள்ள குவிட்களின் எண்ணிக்கையைக் குறிப்பிடுகிறது. கட்ட மதிப்பீட்டிற்கு அதிகமான குவிட்கள் அதிக துல்லியத்தை வழங்கும்."

#: ../../tutorials/qpe_with_sampler.ipynb:184
msgid "If you pass a real number to the ``theta`` argument in the ``create_qpe_circuit`` function, it will return a circuit with a fixed phase encoded."
msgstr "``create_qpe_circuit`` செயல்பாட்டில் உள்ள ``theta`` வாதத்திற்கு உண்மையான எண்ணை அனுப்பினால், அது ஒரு நிலையான கட்ட குறியீடுடன் ஒரு சர்க்யூட்டை வழங்கும்."

#: ../../tutorials/qpe_with_sampler.ipynb:218
msgid "However, if you pass a ```Parameter`` <https://qiskit.org/documentation/stubs/qiskit.circuit.Parameter.html>`__ object instead, it will return a parameterized circuit whose parameter values can be assigned after the circuit has been created. You will use the parameterized version of the QPE circuit for the rest of the tutorial."
msgstr "இருப்பினும், அதற்குப் பதிலாக ```அளவுரு`` <https://qiskit.org/documentation/stubs/qiskit.circuit.Parameter.html>`__ பொருளைக் கடந்து சென்றால், அது அளவுரு மதிப்புகளை ஒதுக்கக்கூடிய அளவுருவாக்கப்பட்ட சர்க்யூட்டை வழங்கும். சுற்று உருவாக்கப்பட்ட பிறகு. மீதமுள்ள டுடோரியலுக்கு QPE சர்க்யூட்டின் அளவுருப் பதிப்பைப் பயன்படுத்துவீர்கள்."

#: ../../tutorials/qpe_with_sampler.ipynb:255
msgid "Create a list of phase values to be assigned later"
msgstr "பின்னர் ஒதுக்கப்பட வேண்டிய கட்ட மதிப்புகளின் பட்டியலை உருவாக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:257
msgid "After creating the parameterized QPE circuit, you will create a list of phase values to be assigned to the circuit in the next step. You can use the following code to create a list of 21 phase values that range from ``0`` to ``2`` with equal spacing, that is, ``0``, ``0.1``, ``0.2``, ..., ``1.9``, ``2.0``."
msgstr "அளவுருவாக்கப்பட்ட QPE சர்க்யூட்டை உருவாக்கிய பிறகு, அடுத்த கட்டத்தில் சுற்றுக்கு ஒதுக்க வேண்டிய கட்ட மதிப்புகளின் பட்டியலை உருவாக்குவீர்கள். ``0`` முதல் ``2`` வரையிலான சம இடைவெளியுடன், அதாவது ``0``, ``0.1``, ``0.2 வரையிலான 21 கட்ட மதிப்புகளின் பட்டியலை உருவாக்க, பின்வரும் குறியீட்டைப் பயன்படுத்தலாம். ``, ..., ``1.9``, ``2.0``."

#: ../../tutorials/qpe_with_sampler.ipynb:283
msgid "Step 2: Submit the circuits to a quantum computer on the cloud"
msgstr "படி 2: மேகக்கணியில் உள்ள குவாண்டம் கணினியில் சுற்றுகளைச் சமர்ப்பிக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:295
msgid "Connect to the Qiskit Runtime service"
msgstr "கிஸ்கிட் இயக்க நேர சேவையுடன் இணைக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:297
msgid "First, you will connect to the Qiskit Runtime service instance that you created in `the first step <#Before-you-begin>`__. We will use ``ibmq_qasm_simulator`` to run this tutorial."
msgstr "முதலில், `முதல் படி <#முன்-நீங்கள்-தொடங்கு>`__ இல் நீங்கள் உருவாக்கிய Qiskit இயக்க நேர சேவை நிகழ்வுடன் இணைக்கப்படுவீர்கள். இந்த டுடோரியலை இயக்க `ibmq_qasm_simulator`` ஐப் பயன்படுத்துவோம்."

#: ../../tutorials/qpe_with_sampler.ipynb:322
msgid "Run the parameterized circuits by using the Sampler primitive"
msgstr "சாம்ப்லர் ப்ரிமிட்டிவ் பயன்படுத்தி அளவுருவாக்கப்பட்ட சுற்றுகளை இயக்கவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:324
msgid "With the Qiskit Runtime service connected, a parameterized QPE circuit, and a list of parameter values, you are now ready to use the Sampler primitive to run the QPE circuits. The ``with ...`` syntax opens a Qiskit Runtime session. Within the session, you will run the parameterized QPE circuit with 21 parameter values with just one line of code. The Sampler primitive will take the parameter values, assign them to the circuit and run it as 21 circuits with fixed parameter values and return a single job result containing the (quasi-)probabilities of bit strings. This saves you from writing dozens of lines of code."
msgstr "கிஸ்கிட் இயக்க நேரச் சேவை இணைக்கப்பட்டு, அளவுருவாக்கப்பட்ட QPE சர்க்யூட் மற்றும் அளவுரு மதிப்புகளின் பட்டியலைக் கொண்டு, QPE சர்க்யூட்களை இயக்க நீங்கள் இப்போது Sampler primitive ஐப் பயன்படுத்தத் தயாராக உள்ளீர்கள். ``உடன் ...`` தொடரியல் Qiskit இயக்க நேர அமர்வைத் திறக்கிறது. அமர்வில், ஒரே ஒரு வரி குறியீட்டுடன் 21 அளவுரு மதிப்புகளுடன் அளவுருவாக்கப்பட்ட QPE சர்க்யூட்டை இயக்குவீர்கள். சாம்ப்லர் ப்ரிமிட்டிவ் அளவுரு மதிப்புகளை எடுத்து, அவற்றை சர்க்யூட்டுக்கு ஒதுக்கி, நிலையான அளவுரு மதிப்புகளுடன் 21 சர்க்யூட்களாக இயக்கி, பிட் சரங்களின் (குவாசி-) நிகழ்தகவுகளைக் கொண்ட ஒரு வேலை முடிவை வழங்கும். இது டஜன் கணக்கான குறியீடுகளை எழுதுவதிலிருந்து உங்களைக் காப்பாற்றுகிறது."

#: ../../tutorials/qpe_with_sampler.ipynb:327
msgid "The ``Estimator`` primitive has a similar API interface for parameterized circuits. See `the API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ for more details."
msgstr "``மதிப்பீட்டாளர்`` ப்ரிமிட்டிவ் அளவுருப்படுத்தப்பட்ட சுற்றுகளுக்கு ஒத்த API இடைமுகத்தைக் கொண்டுள்ளது. மேலும் விவரங்களுக்கு `API குறிப்பை <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ பார்க்கவும்."

#: ../../tutorials/qpe_with_sampler.ipynb:359
msgid "Step 3: Analyze the results"
msgstr "படி 3: முடிவுகளைப் பகுப்பாய்வு செய்யவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:371
msgid "Analyze the results of one circuit"
msgstr "ஒரு சுற்று முடிவுகளைப் பகுப்பாய்வு செய்யவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:373
msgid "After the job has been completed, you can start analyzing the results by looking at the histogram of one of the circuits. The (quasi-)probability distribution of the measurement outcome is stored in ``results.quasi_dists`` and you can access results from an individual circuit by passing the index of the circuit (:math:`idx=6` in the following example) you are interested in."
msgstr "வேலை முடிந்ததும், சுற்றுகளில் ஒன்றின் வரைபடத்தைப் பார்த்து முடிவுகளை பகுப்பாய்வு செய்யத் தொடங்கலாம். அளவீட்டு விளைவின் (அரை-)நிகழ்தகவுப் பரவலானது ``results.quasi_dists`` இல் சேமிக்கப்படுகிறது, மேலும் பின்வரும் எடுத்துக்காட்டில் சுற்று குறியீட்டைக் கடந்து (:math:`idx=6` ஒரு தனிப்பட்ட சுற்றுக்கான முடிவுகளை நீங்கள் அணுகலாம்.) நீங்கள் ஆர்வமாக உள்ளீர்கள்."

#: ../../tutorials/qpe_with_sampler.ipynb:409
msgid "To estimate :math:`\\theta`, you need to divide the most likely outcome :math:`N_1` (``1010`` in binary or ``10`` in decimal) by :math:`2^n`, where :math:`n` is the number of qubits in the first register (:math:`n=4` in our example):"
msgstr ":math:`\\theta` என்பதை மதிப்பிட, நீங்கள் மிகவும் சாத்தியமான விளைவை :math:`N_1` (``1010`` பைனரி அல்லது ``10`` தசமத்தில்) :math:`2^n` மூலம் வகுக்க வேண்டும். , இங்கு :math:`n` என்பது முதல் பதிவேட்டில் உள்ள குவிட்களின் எண்ணிக்கை (:math:`n=4` எங்கள் எடுத்துக்காட்டில்):"

#: ../../tutorials/qpe_with_sampler.ipynb:411
msgid "\\theta = \\frac{N_1}{2^n} =  \\frac{10}{2^4} = 0.625.\n\n"
msgstr "\\theta = \\frac{N_1}{2 ^ n} = \\frac{10}{2 ^ 4} =0.625.\n\n"

#: ../../tutorials/qpe_with_sampler.ipynb:413
msgid "This is close to the expected value of :math:`0.6`, but you can get a better estimate by taking the weighted average of the most likely outcome (``1010`` in binary or ``10`` in decimal) and the second most likely outcome (``1001`` in binary or ``9`` in decimal):"
msgstr "This is close to the expected value of :math:`0.6`, but you can get a better estimate by taking the weighted average of the most likely outcome (``1010`` in binary or ``10`` in decimal) and the second most likely outcome (``1001`` in binary or ``9`` in decimal):"

#: ../../tutorials/qpe_with_sampler.ipynb:415
msgid "\\theta = \\frac{P_1 \\times \\frac{N_1}{2^n} + P_2 \\times \\frac{N_2}{2^n}}{P_1 + P_2} = \\frac{0.554 \\times \\frac{10}{2^4} + 0.269 \\times \\frac{9}{2^4}}{0.554 + 0.269} = 0.605,\n\n"
msgstr "\\theta = \\frac {P_ 1 \\times \\frac{N_1}{2 ^ n} + P_2 \\times \\frac{N_2}{2 ^ n}} {P_ 1 + P_ 2} =\\frac {0.554 \\times \\frac{10}{2 ^ 4} + 0.269 \\times \\frac{9}{2 ^ 4}} {0.554 + 0.269} =0.605,\n\n"

#: ../../tutorials/qpe_with_sampler.ipynb:417
msgid "where :math:`N_1` and :math:`P_1` are the most likely outcome and its probability and :math:`N_2` and :math:`P_2` are the second most likely outcome and its probability. The result, :math:`0.605`, is much closer to the expected value of :math:`0.6`. We will use this method to analyze the results from all circuits."
msgstr "இதில் :math:`N_1` மற்றும் :math:`P_1` ஆகியவை மிகவும் சாத்தியமான விளைவு மற்றும் அதன் நிகழ்தகவு மற்றும் :math:`N_2` மற்றும் :math:`P_2` ஆகியவை இரண்டாவது வாய்ப்பு மற்றும் அதன் நிகழ்தகவு ஆகும். முடிவு, :math:`0.605`, எதிர்பார்க்கப்படும் மதிப்பு :math:`0.6`க்கு மிக அருகில் உள்ளது. அனைத்து சுற்றுகளிலிருந்தும் முடிவுகளை பகுப்பாய்வு செய்ய இந்த முறையைப் பயன்படுத்துவோம்."

#: ../../tutorials/qpe_with_sampler.ipynb:429
msgid "Analyze the results of all circuits"
msgstr "அனைத்து சுற்றுகளின் முடிவுகளைப் பகுப்பாய்வு செய்யவும்"

#: ../../tutorials/qpe_with_sampler.ipynb:431
msgid "You can use the following helper functions to find the values for :math:`N_1`, :math:`P_1`, :math:`N_2`, and :math:`P_2` for a phase and calculate the estimated :math:`\\theta`. Ideally :math:`N_2` should be a \"neighbor\" of :math:`N_1` (for example, the neighbors of ``1010`` are ``1001`` and ``1011``). However, due to the presence of noise, the second most likely outcome may not be a neighbor of :math:`N_1` if the results were obtained from a real quantum system. The helper functions take the :math:`N_2` value only from :math:`N_1`'s neighbors."
msgstr "ஒரு கட்டத்திற்கு :math:`N_1`, :math:`P_1`, :math:`N_2`, மற்றும் :math:`P_2` ஆகியவற்றுக்கான மதிப்புகளைக் கண்டறிய பின்வரும் உதவி செயல்பாடுகளைப் பயன்படுத்தலாம் மற்றும் மதிப்பிடப்பட்ட :math: `\\theta`. வெறுமனே :math:`N_2` என்பது :math:`N_1` இன் \"அருகில்\" இருக்க வேண்டும் (உதாரணமாக, ``1010`` இன் அண்டை நாடுகள் ``1001`` மற்றும் ```1011``). இருப்பினும், சத்தம் இருப்பதால், உண்மையான குவாண்டம் அமைப்பிலிருந்து முடிவுகள் பெறப்பட்டால், இரண்டாவது பெரும்பாலும் விளைவு :math:`N_1` இன் அண்டை நாடாக இருக்காது. உதவி செயல்பாடுகள் :math:`N_2` மதிப்பை :math:`N_1` இன் அண்டை நாடுகளிடமிருந்து மட்டுமே எடுக்கிறது."

#: ../../tutorials/qpe_with_sampler.ipynb:523
msgid "You can use the ``estimate_phase`` helper function to estimate phases from the results of all circuits."
msgstr "அனைத்து சுற்றுகளின் முடிவுகளிலிருந்தும் கட்டங்களைக் கணக்கிட, ``மதிப்பீடு_கட்டம்`` உதவி செயல்பாட்டைப் பயன்படுத்தலாம்."

#: ../../tutorials/qpe_with_sampler.ipynb:546
msgid "The ideal solutions for the phases :math:`\\theta` are periodic with a period of ``1`` because the eigenvalue :math:`e^{2 \\pi i \\theta}` is :math:`2 \\pi` periodic. You can run the following cell to generate the ideal solutions for comparison with the solutions obtained from the QPE algorithm."
msgstr "கட்டங்களுக்கான சிறந்த தீர்வுகள் :math:`\\theta` என்பது ``1`` காலத்துடன் குறிப்பிட்ட கால இடைவெளியில் இருக்கும், ஏனெனில் eigenvalue :math:`e^{2 \\pi i \\theta}` :math:`2 \\pi ` அவ்வப்போது. QPE அல்காரிதத்திலிருந்து பெறப்பட்ட தீர்வுகளுடன் ஒப்பிடுவதற்கான சிறந்த தீர்வுகளை உருவாக்க பின்வரும் கலத்தை நீங்கள் இயக்கலாம்."

#: ../../tutorials/qpe_with_sampler.ipynb:573
msgid "You can run the following code to visualize the solutions."
msgstr "நீங்கள் தீர்வுகளைக் காண பின்வரும் குறியீட்டை இயக்கலாம்."

#: ../../tutorials/qpe_with_sampler.ipynb:637
msgid "As you can see, the solutions obtained from the QPE algorithm follow closely to the ideal solutions. Congratulations! You have successfully run the QPE algorithm and obtained good solutions!"
msgstr "நீங்கள் பார்க்க முடியும் என, QPE அல்காரிதத்திலிருந்து பெறப்பட்ட தீர்வுகள் சிறந்த தீர்வுகளை நெருக்கமாகப் பின்பற்றுகின்றன. வாழ்த்துகள்! நீங்கள் QPE அல்காரிதத்தை வெற்றிகரமாக இயக்கி நல்ல தீர்வுகளைப் பெற்றுள்ளீர்கள்!"

#: ../../tutorials/qpe_with_sampler.ipynb:649
msgid "Summary"
msgstr "சுருக்கம்"

#: ../../tutorials/qpe_with_sampler.ipynb:651
msgid "In this tutorial, you have created a parameterized QPE circuit, run it using the Sampler primitive, analyzed the results, and obtained solutions that are closed to the ideal solutions. You can see that the Sampler primitive makes running parameterized circuits very easy."
msgstr "இந்த டுடோரியலில், நீங்கள் ஒரு அளவுரு QPE சர்க்யூட்டை உருவாக்கியுள்ளீர்கள், சாம்ப்லர் ப்ரிமிட்டிவ் பயன்படுத்தி அதை இயக்கி, முடிவுகளை பகுப்பாய்வு செய்து, சிறந்த தீர்வுகளுக்கு மூடப்பட்ட தீர்வுகளைப் பெற்றுள்ளீர்கள். சாம்ப்லர் ப்ரிமிட்டிவ், அளவுருப்படுத்தப்பட்ட சுற்றுகளை இயக்குவதை மிகவும் எளிதாக்குகிறது என்பதை நீங்கள் பார்க்கலாம்."

#: ../../tutorials/qpe_with_sampler.ipynb:663
msgid "References"
msgstr "குறிப்புகள்"

#: ../../tutorials/qpe_with_sampler.ipynb:665
msgid "Kitaev, A. Y. (1995). Quantum measurements and the Abelian stabilizer problem. arXiv preprint quant-ph/9511026."
msgstr "கிடேவ், ஏ. ஒய். (1995). குவாண்டம் அளவீடுகள் மற்றும் அபெலியன் நிலைப்படுத்தி பிரச்சனை. arXiv preprint quant-ph/9511026."

#: ../../tutorials/qpe_with_sampler.ipynb:666
msgid "Nielsen, M., & Chuang, I. (2010). Quantum computation and quantum information (2nd ed., pp. 221-226). Cambridge University Press."
msgstr "நீல்சன், எம்., & சுவாங், ஐ. (2010). குவாண்டம் கணக்கீடு மற்றும் குவாண்டம் தகவல் (2வது பதிப்பு, பக். 221-226). கேம்பிரிட்ஜ் பல்கலைக்கழக அச்சகம்."

#: ../../tutorials/qpe_with_sampler.ipynb:667
msgid "Abbas, A., Andersson, S., Asfaw, A., Córcoles, A., Bello, L., Ben-Haim, Y., ... & Wootton, J. (2020). Learn quantum computation using qiskit. URL: https://qiskit.org/textbook/preface.html (accessed 07/14/2022)."
msgstr "அப்பாஸ், ஏ., ஆண்டர்சன், எஸ்., அஸ்ஃபா, ஏ., கார்கோல்ஸ், ஏ., பெல்லோ, எல்., பென்-ஹைம், ஒய்., ... & வூட்டன், ஜே. (2020). கிஸ்கிட்டைப் பயன்படுத்தி குவாண்டம் கணக்கீட்டைக் கற்றுக்கொள்ளுங்கள். URL: https://qiskit.org/textbook/preface.html (07/14/2022 அணுகப்பட்டது)."

#: ../../tutorials/qpe_with_sampler.ipynb:679
msgid "Qiskit versions and copyright"
msgstr "Qiskit பதிப்புகள் மற்றும் காப்புரிமை"

