msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-09 04:52+0000\n"
"PO-Revision-Date: 2022-11-09 05:38\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/chsh_with_estimator.po\n"
"X-Crowdin-File-ID: 9842\n"
"Language: pt_UN\n"

#: ../../tutorials/chsh_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/chsh_with_estimator.ipynb`__."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:9
msgid "Demonstrate the violation of the CHSH inequality with the Estimator primitive"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:20
msgid "In this tutorial, you will run an experiment on a quantum computer to demonstrate the violation of the CHSH inequality with the Estimator primitive."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:22
msgid "The violation of the CHSH inequality is used to show that quantum mechanics is incompatible with local hidden-variable theories. This is an important experiment for understanding the foundation of quantum mechanics. Demonstrating this on a quantum computer was a major scientific breakthrough worthy of a high impact journal publication just a few years ago. [1] It’s truly incredible that you can conduct this experiment at the comfort of your home using Qiskit and an IBM Quantum system."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:34
msgid "Before you begin"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:36
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow the instructions in the Qiskit `Getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:48
msgid "Background Information"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:60
msgid "CHSH Inequality"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:62
msgid "The CHSH inequality, named after the authors Clauser, Horne, Shimony, and Holt, is used to experimentally prove Bell’s theorem. This theorem asserts that local hidden variable theories cannot account for some consequences of entanglement in quantum mechanics."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:64
msgid "For this experiment, we will create an entangled pair on which we measure each qubit on two different bases. We will label the bases for the first qubit :math:`A` and :math:`a` and the bases for the second qubit :math:`B` and :math:`b`. This allows us to compute the CHSH quantity :math:`S_1`:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:66
msgid "S_1 = A(B-b) + a(B+b).\n\n"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:68
msgid "Each observable is either :math:`+1` or :math:`-1`. Clearly, one of the terms :math:`B\\pm b` must be :math:`0`, and the other must be :math:`\\pm 2`. Therefore, :math:`S_1 = \\pm 2`. The average value of :math:`S_1` must satisfy the inequality:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:70
msgid "|\\langle S_1 \\rangle|\\leq 2.\n\n"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:72
msgid "Expanding :math:`S_1` in terms of :math:`A`, :math:`a`, :math:`B`, and :math:`b` results in:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:74
msgid "|\\langle S_1 \\rangle| = |\\langle AB \\rangle - \\langle Ab \\rangle + \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:76
msgid "You can define another CHSH quantity :math:`S_2`:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:78
msgid "S_2 = A(B+b) - a(B-b),\n\n"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:80
msgid "This leads to another inequality:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:82
msgid "|\\langle S_2 \\rangle| = |\\langle AB \\rangle + \\langle Ab \\rangle - \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2\n\n"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:84
msgid "If quantum mechanics can be described by local hidden variable theories, the above inequalities must hold true. However, as you are going to demonstrate in this notebook, these inequalities can be violated in a quantum computer. Therefore, quantum mechanics is not compatible with local hidden variable theories."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:86
msgid "If you want to learn more, you can read the chapter about the CHSH inequality in `the Qiskit textbook <https://qiskit.org/textbook/ch-demos/chsh.html>`__."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:98
msgid "Overview"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:100
msgid "You will create an entangled pair between two qubits in a quantum computer by creating the Bell state :math:`|\\Phi^+\\rangle = \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}}`. Using the Estimator primitive, you can directly obtain the expectation values needed (:math:`\\langle AB \\rangle, \\langle Ab \\rangle, \\langle aB \\rangle`, and :math:`\\langle ab \\rangle`) to calculate the expectation values of the two CHSH quantities :math:`\\langle S_1\\rangle` and :math:`\\langle S_2\\rangle`. Before the introduction of the Estimator primitive, you would have to construct the expectation values from the measurement outcomes."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:103
msgid "You will measure the second qubit in the :math:`Z` and :math:`X` bases. The first qubit will be measured also in orthogonal bases, but with an angle with respect to the second qubit, which we are going to sweep between :math:`0` and :math:`2\\pi`. As you will see, the Estimator primitive makes running parameterized circuits very easy. Instead of creating a series of CHSH circuits, you only need to create *one* CHSH circuit with a parameter specifying the measurement angle and a series of phase values for the parameter."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:106
msgid "Finally, you will analyze the results and plot them against the measurement angle. You will see that for certain range of measurement angles, the expectation values of CHSH quantities :math:`|\\langle S_1\\rangle| > 2` or :math:`|\\langle S_2\\rangle| > 2`, which demonstrates the violation of the CHSH inequality."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:112
msgid "Note"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:114
msgid "For experts users out there, we need to confess that there are a number of loopholes that have to be closed when violating the inequality in order to claim that either locality or realism have been disproven. Please read the last paragraph (right above “Exercise” section) in the CHSH chapter in `the Qiskit textbook <https://qiskit.org/textbook/ch-demos/chsh.html>`__ for discussions."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:130
msgid "Step 1: Create CHSH circuits"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:142
msgid "Create a parameterized CHSH circuit"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:144
msgid "First, we write the circuit with the parameter :math:`\\theta`, which we call ``theta``. The ``Estimator`` primitive can enormously simplify circuit building and output analysis by directly providing expectation values of observables. Many problems of interest, especially for near-term applications on noisy systems, can be formulated in terms of expectation values. For maximum generalization, the ``Estimator`` primitive requires circuits with no measurements."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:184
msgid "Create a list of phase values to be assigned later"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:186
msgid "After creating the parameterized CHSH circuit, you will create a list of phase values to be assigned to the circuit in the next step. You can use the code below to create a list of 21 phase values range from :math:`0` to :math:`2 \\pi` with equal spacing, i.e. \\ :math:`0`, :math:`0.1 \\pi`, :math:`0.2 \\pi`, …, :math:`1.9 \\pi`, :math:`2 \\pi`."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:213
msgid "Step 2: Submit the circuits to a quantum computer on the cloud"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:225
msgid "Connect to the Qiskit Runtime service"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:227
msgid "Before running circuits, you need to connect to the Qiskit Runtime service instance that you created in `the first step <#before-you-begin>`__. We will run this tutorial on a simulator."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:252
msgid "Run the parameterized circuits using the Estimator primitive"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:254
msgid "Now we need observables from which to compute the expectation values. In our case we are looking at orthogonal bases for each qubit, letting the parameterized :math:`Y-` rotation for the first qubit sweep the measurement basis nearly continuously with respect to the second qubit basis. We will therefore choose the observables :math:`ZZ`, :math:`ZX`, :math:`XZ`, and :math:`XX`."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:296
msgid "Step 3: Analyze the results"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:298
msgid "After running the circuits, we need to build the CHSH witness functions. We first build the quantities :math:`\\langle AB \\rangle`, :math:`\\langle Ab \\rangle`, :math:`\\langle aB \\rangle`, and :math:`\\langle ab \\rangle`, by looking at the parity of the outcomes for the four families of circuits we built (two measurement bases for each of the two qubits). Then we use those quantities to build the witness functions as defined above."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:323
msgid "Note that now we do not have to build the observables ourselves because they are returned to us! The computed expectation values are given in ``result.values``. What comes back is a very small payload of data."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:398
msgid "In the figure above, the red dashed lines delimit the classical bounds (:math:`\\pm 2`) and the dash-dotted blue lines delimit the quantum bounds (:math:`\\pm 2\\sqrt{2}`). You can see that the experimental results resemble the general trend of the simulated results and there are regions where the CHSH witness quantities exceeds the classical bounds. Congratulations! You have successfully demonstrated the violation of CHSH inequality in a real quantum system!"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:410
msgid "Summary"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:412
msgid "In this tutorial, you have created a parameterized CHSH circuit, run it using the Estimator primitive, analyzed the results and demonstrated the violation of CHSH inequality. You can see that the Estimator primitive not only makes running parameterized circuits very easy but also greatly simplifies the workflow for obtaining expectation values for observables."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:424
msgid "References"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:426
msgid "Córcoles, A. (n.d.), Local Reality and the CHSH Inequality. In A. Abbas, et al. Learn Quantum Computation Using Qiskit. URL: https://qiskit.org/textbook/ch-demos/chsh.html (accessed 07/13/2022) (2020)."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:438
msgid "Qiskit versions and copyright"
msgstr ""

