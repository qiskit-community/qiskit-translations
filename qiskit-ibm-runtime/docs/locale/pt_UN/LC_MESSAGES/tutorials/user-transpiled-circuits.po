msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-27 13:35+0000\n"
"PO-Revision-Date: 2022-10-27 14:23\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/user-transpiled-circuits.po\n"
"X-Crowdin-File-ID: 9830\n"
"Language: pt_UN\n"

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "This page was generated from `docs/tutorials/user-transpiled-circuits.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/user-transpiled-circuits.ipynb`__."

#: ../../tutorials/user-transpiled-circuits.ipynb:9
msgid "Submitting user-transpiled circuits using primitives"
msgstr "Enviando circuitos transpilados pelo usuário usando primitivos"

#: ../../tutorials/user-transpiled-circuits.ipynb:11
msgid "To get the best performance from your circuits, the Qiskit Runtime service will pass all circuits through Qiskit’s transpiler before running them. While this is usually a good thing, we might sometimes want to disable this by passing the argument ``skip_transpilation=True`` to the primitive we’re using."
msgstr "Para obter o melhor desempenho de seus circuitos, o serviço Qiskit Runtime passará todos os circuitos pelo transpilador do Qiskit antes de executá-los. Embora isso geralmente seja uma coisa boa, às vezes podemos desabilitar isso passando o argumento ``skip_transpilation=True`` para o primitivo que estamos usando."

#: ../../tutorials/user-transpiled-circuits.ipynb:13
msgid "For example, we may know better than the transpiler in some cases, or want to target a specific subset of qubits on a specific device. In this tutorial, we’ll disable automatic transpilation to test the performance of different transpiler settings. This example will take you through the full process of creating, transpiling, and submitting circuits."
msgstr "Por exemplo, podemos saber melhor do que o transpilador em alguns casos, ou querer direcionar um subconjunto específico de qubits em um dispositivo específico. Neste tutorial, desabilitaremos a transpilação automática para testar o desempenho de diferentes configurações do transpilador. Este exemplo o guiará pelo processo completo de criação, transpilação e envio de circuitos."

#: ../../tutorials/user-transpiled-circuits.ipynb:16
msgid "Transpiling circuits for IBM Quantum devices"
msgstr "Transpilando circuitos para dispositivos IBM Quantum"

#: ../../tutorials/user-transpiled-circuits.ipynb:18
msgid "In the code cell below, we create a small circuit that our transpiler will try to optimize. In this example, we create a circuit that carries out Grover’s algorithm, with an oracle that marks the state ``111``. We then simulate the ideal distribution (what we’d expect to measure if we ran this on a perfect quantum computer, an infinite number of times) for comparison later."
msgstr "Na célula de código abaixo, criamos um pequeno circuito que nosso transpilador tentará otimizar. Neste exemplo, criamos um circuito que executa o algoritmo de Grover, com um oráculo que marca o estado ``111``. Em seguida, simulamos a distribuição ideal (o que esperamos medir se executássemos isso em um computador quântico perfeito, um número infinito de vezes) para comparação posterior."

#: ../../tutorials/user-transpiled-circuits.ipynb:61
msgid "Next, we need to choose a backend to transpile for. In the cell below, we create a service instance, which we’ll use to start a session, and get the backend object, which contains information for the transpiler. Since the transpilation process depends on the device, we’ll ask the runtime service for a specific device by name. In this example, we’ll use ``ibm_algiers``, which is only available through IBM Cloud."
msgstr "Em seguida, precisamos escolher um backend para transpilar. Na célula abaixo, criamos uma instância de serviço, que usaremos para iniciar uma sessão, e obteremos o objeto backend, que contém informações para o transpilador. Como o processo de transpilação depende do dispositivo, solicitaremos ao serviço de runtime um dispositivo específico pelo nome. Neste exemplo, usaremos ``ibm_algiers``, que está disponível apenas por meio do IBM Cloud."

#: ../../tutorials/user-transpiled-circuits.ipynb:84
msgid "Next, we transpile the circuits for our backend. We’re going to compare the performance of the transpiler with ``optimization_level`` set to ``0`` (lowest) against ``3`` (highest). The lowest optimization level just does the bare minimum needed to get the circuit running on the device, i.e. map the circuit qubits to the device qubits, and add swaps gates to allow all 2-qubit operations. The highest optimization level is much smarter and uses lots of tricks to reduce the overall gate count. Since multi-qubit gates have high error rates, and qubits decohere over time, the shorter circuits should give better results."
msgstr "Em seguida, transpilamos os circuitos para nosso backend. Vamos comparar o desempenho do transpilador com ``optimization_level`` definido como ``0`` (mais baixo) contra ``3`` (mais alto). O nível de otimização mais baixo apenas faz o mínimo necessário para fazer o circuito funcionar no dispositivo, ou seja, mapear os qubits do circuito para os qubits do dispositivo e adicionar Swap gates para permitir todas as operações de 2 qubits. O nível de otimização mais alto é muito mais inteligente e usa muitos truques para reduzir a contagem geral de portas. Como as portas multi-qubit têm altas taxas de erro e os qubits se descoerem ao longo do tempo, os circuitos mais curtos devem fornecer melhores resultados."

#: ../../tutorials/user-transpiled-circuits.ipynb:87
msgid "In the cell below, we transpile ``qc`` for both values of ``optimization_level``, print the number of CNOT gates, and add the transpiled circuits to a list. Some of the transpiler’s algorithms are randomized, so we set a seed for reproducibility."
msgstr "Na célula abaixo, transpilamos ``qc`` para ambos os valores de ``optimization_level``, imprimimos o número de CNOT gates e adicionamos os circuitos transpilados a uma lista. Alguns dos algoritmos do transpilador são aleatórios, então definimos uma semente para reprodutibilidade."

#: ../../tutorials/user-transpiled-circuits.ipynb:147
msgid "Since CNOTs usually have a high error rate, the circuit transpiled with ``optimization_level=3`` should perform much better."
msgstr "Como os CNOTs geralmente têm uma alta taxa de erro, o circuito transpilado com ``optimization_level=3`` deve ter um desempenho muito melhor."

#: ../../tutorials/user-transpiled-circuits.ipynb:149
msgid "Another way we can improve performance is through `dynamic decoupling <https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.DynamicalDecoupling.html>`__, where we apply a sequence of gates to idling qubits. This cancels out some unwanted interactions with the environment. In the cell below, we add dynamic decoupling to the circuit transpiled with ``optimization_level=3``, and add it to our list."
msgstr "Outra maneira de melhorar o desempenho é através do `desacoplamento dinâmico <https://qiskit.org/documentation/stubs/qiskit.transpiler.passes.DynamicalDecoupling.html>`__, onde aplicamos uma sequência de portas a qubits inativos. Isso cancela algumas interações indesejadas com o ambiente. Na célula abaixo, adicionamos desacoplamento dinâmico ao circuito transpilado com ``optimization_level=3`` e o adicionamos à nossa lista."

#: ../../tutorials/user-transpiled-circuits.ipynb:188
msgid "Run user-transpiled circuits using Qiskit Runtime"
msgstr "Execute circuitos transpilados pelo usuário usando o Qiskit Runtime"

#: ../../tutorials/user-transpiled-circuits.ipynb:190
msgid "At this point, we have a list of circuits (named ``circuits``) transpiled for ``ibm_algiers``. In the cell below, we create an instance of the sampler primitive, and start a session using the context manager (``with ...:``), which automatically opens and closes the session for us. This is where we pass the ``skip_transpilation=True`` argument."
msgstr ""

#: ../../tutorials/user-transpiled-circuits.ipynb:192
msgid "Within the context manager, we sample the circuits and store the results to ``result``."
msgstr "Dentro do gerenciador de contexto, amostramos os circuitos e armazenamos os resultados em ``result``."

#: ../../tutorials/user-transpiled-circuits.ipynb:221
msgid "Finally, we can plot the results from the device runs against the ideal distribution. For each measured string, the leftmost bar is the ideal distribution, the central bar is the circuit transpiled with ``optimization_level=3``, and the rightmost bar is the circuit transpiled with ``optimization_level=0``)."
msgstr "Finalmente, podemos plotar os resultados do dispositivo executado em relação à distribuição ideal. Para cada string medida, a barra mais à esquerda é a distribuição ideal, a barra central é o circuito transpilado com ``optimization_level=3``, e a barra mais à direita é o circuito transpilado com ``optimization_level=0``)."

#: ../../tutorials/user-transpiled-circuits.ipynb:223
msgid "You can see the results with ``optimization_level=3`` is closer to the ideal distribution due to the lower gate count, and ``optimization_level=3 + dd`` is even closer due to the dynamic decoupling we applied."
msgstr "Podemos ver que os resultados com ``optimization_level=3`` estão mais próximo da distribuição ideal devido à menor contagem de gates, e ``optimization_level=3 + dd`` está ainda mais próximo devido ao desacoplamento dinâmico que aplicamos."

#: ../../tutorials/user-transpiled-circuits.ipynb:260
msgid "We can confirm this by computing the `Hellinger fidelity <https://qiskit.org/documentation/stubs/qiskit.quantum_info.hellinger_fidelity.html>`__ between each set of results and the ideal distribution (higher is better, and 1 is perfect fidelity)."
msgstr "Podemos confirmar isso calculando a `fidelidade de Hellinger <https://qiskit.org/documentation/stubs/qiskit.quantum_info.hellinger_fidelity.html>`__ entre cada conjunto de resultados e a distribuição ideal (maior é melhor, e 1 é fidelidade perfeita)."

