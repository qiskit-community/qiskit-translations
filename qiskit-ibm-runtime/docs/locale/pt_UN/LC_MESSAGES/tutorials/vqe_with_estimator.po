msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-19 13:43+0000\n"
"PO-Revision-Date: 2022-08-19 13:52\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe_with_estimator.po\n"
"X-Crowdin-File-ID: 9834\n"
"Language: pt_UN\n"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe_with_estimator.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/vqe_with_estimator.ipynb`__."

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "Variational Quantum Eigensolver with Estimator Primitive"
msgstr "Variational Quantum Egienesolver com o primitivo Estimator"

#: ../../tutorials/vqe_with_estimator.ipynb:21
msgid "Overview"
msgstr "Visão geral"

#: ../../tutorials/vqe_with_estimator.ipynb:23
msgid "The Variational Quantum Eigensolver (VQE) is an optimization routine for finding the ground state energy (i.e. lowest eigenvalue) of a Hamiltonian and is a considered to be a viable candidate for NISQ hardware. In this tutorial, we will go over how to use Qiskit Runtime to submit variational jobs using the estimator. Specifically, we will be looking at calculating the ground state energy of the :math:`H_2` molecule using the estimator primitive."
msgstr "O Variational Quantum Eigensolver (VQE) é uma rotina de otimização para encontrar a energia do estado fundamental (ou seja, o menor eigenvalue) de um hamiltoniano e é considerado um candidato viável para o hardware NISQ. Neste tutorial, veremos como usar o Qiskit Runtime para enviar jobs variacionais usando o Estimator. Especificamente, vamos calcular a energia do estado fundamental da molécula :math:`H_2` usando o primitivo Estimator."

#: ../../tutorials/vqe_with_estimator.ipynb:35
msgid "Set up your local development environment"
msgstr "Configure o ambiente de desenvolvimento local"

#: ../../tutorials/vqe_with_estimator.ipynb:37
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "Este tutorial requer uma instância de serviço Qiskit Runtime. Se ainda não fez isso, siga `estas etapas <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ para configurar um."

#: ../../tutorials/vqe_with_estimator.ipynb:49
msgid "Connect to the Qiskit Runtime service"
msgstr "Conecte com o serviço Qiskit Runtime"

#: ../../tutorials/vqe_with_estimator.ipynb:51
msgid "First we have to create our service instance and specify our backend. In this example we will be working with a simulator for the sake of speed, but by simply changing this one line (for choice of backend) this could run on hardware as well."
msgstr "Primeiro temos que criar nossa instância de serviço e especificar nosso backend. Neste exemplo, estaremos trabalhando com um simulador por questão de velocidade, mas simplesmente alterando esta linha (para escolha do backend), isso também pode ser executado em hardware."

#: ../../tutorials/vqe_with_estimator.ipynb:77
msgid "Generate Molecular Hamiltonians"
msgstr "Gere Os Hamiltonianos Moleculares"

#: ../../tutorials/vqe_with_estimator.ipynb:79
msgid "We will be working with Qiskit Nature to generate and handle molecular hamiltonians. First though, we need to install these packages. This can be done through pip, using the commands shown below. For more information on setting up and working with Qiskit Nature, see this `guide <https://qiskit.org/documentation/nature/getting_started.html>`__."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:95
msgid "Now we need to generate the Hamiltonians that we wish to find the ground state energy of. For this task we will be utilizing Qiskit Nature. First we have to specify how we are converting the fermionic operators of the electronic molecular hamiltonian to qubit operators. Here we will use the Parity Mapper, which maps annihilation to Pauli operators via :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}`"
msgstr "Agora precisamos gerar os hamiltonianos para os quais desejamos encontrar a energia do estado fundamental. Para esta tarefa, utilizaremos o Qiskit Nature. Primeiro temos que especificar como estamos convertendo os operadores fermiônicos do hamiltoniano molecular eletrônico para operadores qubit. Aqui usaremos o Parity Mapper, que mapeia as aniquilações para os operadores Pauli via :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}`"

#: ../../tutorials/vqe_with_estimator.ipynb:119
msgid "At our specified bond length we will create an electronic structure problem and generate the second quantized (i.e. fermionic) operators. We then compute the true ground state energy to compare against."
msgstr "No nosso comprimento de ligação especificado, criaremos um problema de estrutura eletrônica e geraremos os operadores de segunda quantização (ou seja, fermiônicos). Em seguida, calculamos a verdadeira energia do estado fundamental para comparar."

#: ../../tutorials/vqe_with_estimator.ipynb:169
msgid "Now we can use this hamiltonian as the observable in our estimator factory. The VQE routine is formalized as :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle`, so we just need to minimize the expectation values of the hamiltonian."
msgstr "Agora podemos usar esse hamiltoniano como o observável em nossa estimator factory. A rotina VQE é formalizada como :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle`, então só precisamos minimizar os valores esperados do hamiltoniano."

#: ../../tutorials/vqe_with_estimator.ipynb:216
msgid "Now that we solved the electronic hamiltonian, we have to add the nuclear energies."
msgstr "Agora que resolvemos o hamiltoniano eletrônico, temos que somar as energias nucleares."

#: ../../tutorials/vqe_with_estimator.ipynb:243
msgid "Create the convergence plot"
msgstr "Crie o plot de convergência"

