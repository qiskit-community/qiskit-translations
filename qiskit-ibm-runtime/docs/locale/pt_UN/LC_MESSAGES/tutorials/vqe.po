msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-21 16:00+0000\n"
"PO-Revision-Date: 2022-08-10 15:41\n"
"Last-Translator: \n"
"Language-Team: Portuguese (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe.po\n"
"X-Crowdin-File-ID: 9832\n"
"Language: pt_UN\n"

#: ../../tutorials/vqe.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe.ipynb`__."
msgstr "Esta página foi gerada a partir de `docs/tutorials/vqe.ipynb`__."

#: ../../tutorials/vqe.ipynb:9
msgid "VQE"
msgstr "VQE"

#: ../../tutorials/vqe.ipynb:11
msgid "The Variational Quantum Eigensolver (VQE) is a central algorithm in many applications from e.g. quantum chemistry or optimization. This tutorial shows you how to run the VQE as a Qiskit Runtime program. We’ll start off by defining the algorithm settings, such as the Hamiltonian and ansatz, and then run a VQE both locally, on your machine, and remotely, using the Qiskit Runtime."
msgstr "O Variational Quantum Eigensolver (VQE) é um algoritmo central em muitas aplicações de, por exemplo, química quântica ou otimização. Este tutorial mostra como executar o VQE como um programa Qiskit Runtime. Começaremos definindo as configurações do algoritmo, como o Hamiltoniano e o ansatz, e, em seguida, executaremos um VQE localmente, em sua máquina e remotamente, usando o Qiskit Runtime."

#: ../../tutorials/vqe.ipynb:13
msgid "**Note:** You can find tutorials on solving more comprehensive problems, such as finding the ground state of the lithium hydride molecule, using the VQE (and Qiskit Runtime) within `the tutorials of Qiskit Nature <https://github.com/Qiskit/qiskit-nature/tree/main/docs/tutorials>`__."
msgstr "**Nota:** Você pode encontrar tutoriais sobre como resolver problemas mais abrangentes, como encontrar o estado fundamental da molécula de hidreto de lítio, usando o VQE (e o Qiskit Runtime) dentro dos `tutoriais do Qiskit Nature <https://github. com/Qiskit/qiskit-nature/tree/main/docs/tutorials>`__."

#: ../../tutorials/vqe.ipynb:25
msgid "System Hamiltonian"
msgstr "Hamiltoniano Do Sistema"

#: ../../tutorials/vqe.ipynb:36
msgid "Let’s start by defining the operator of which we want to determine the ground state. Here we’ll chose a simple diagonal Hamiltonian :math:`\\hat H` acting with Pauli-Z operators on the first two qubits"
msgstr "Vamos começar definindo o operador do qual queremos determinar o estado fundamental. Aqui vamos escolher um hamiltoniano diagonal simples :math:`\\hat H` atuando com operadores Pauli-Z nos dois primeiros qubits"

#: ../../tutorials/vqe.ipynb:38
msgid "\\hat H = \\hat Z_0 \\otimes \\hat Z_1."
msgstr "\\hat H = \\hat Z_0 \\otimes \\hat Z_1."

#: ../../tutorials/vqe.ipynb:43
msgid "We can construct this Hamiltonian with Qiskit’s ``opflow`` module:"
msgstr "Podemos construir este Hamiltoniano com o módulo ``opflow`` do Qiskit:"

#: ../../tutorials/vqe.ipynb:67
msgid "This Hamiltonian has a ground state energy of -1."
msgstr "Este hamiltoniano tem uma energia do estado fundamental de -1."

#: ../../tutorials/vqe.ipynb:89
msgid "Parameterized Ansatz Circuit"
msgstr "Circuito Ansatz Parametrizado"

#: ../../tutorials/vqe.ipynb:100
msgid "Next, we choose a parameterized quantum circuit :math:`\\hat U(\\theta)` to prepare the ansatz wavefunction"
msgstr "Em seguida, escolhemos um circuito quântico parametrizado :math:`\\hat U(\\theta)` para preparar a função de onda ansatz"

#: ../../tutorials/vqe.ipynb:102
msgid "|\\psi(\\theta)\\rangle = \\hat U(\\theta)|0\\rangle."
msgstr "|\\psi(\\theta)\\rangle = \\hat U(\\theta)|0\\rangle."

#: ../../tutorials/vqe.ipynb:107
msgid "We’ll use the ``EfficientSU2`` circuit from Qiskit’s circuit library, which is a hardware efficient, heuristic ansatz with alternating rotation and entanglement layers."
msgstr "Usaremos o circuito ``EfficientSU2`` da biblioteca de circuitos do Qiskit, que é um ansatz heurístico eficiente de hardware com camadas alternadas de rotação e de emaranhamento."

#: ../../tutorials/vqe.ipynb:142
msgid "Solve with the VQE"
msgstr "Resolva com o VQE"

#: ../../tutorials/vqe.ipynb:153
msgid "Now that we have the problem and ansatz specified we can use the Variational Quantum Eigensolver (VQE) to solve for the minimal eigenvalue of our Hamiltonian."
msgstr "Agora que temos o problema e ansatz especificados, podemos usar o Variational Quantum Eigensolver (VQE) para resolver o eigenvalue mínimo do nosso Hamiltoniano."

#: ../../tutorials/vqe.ipynb:155
msgid "The VQE requires a classical optimization routine, along with an initial point, to calculate the parameter updates."
msgstr "O VQE requer uma rotina de otimização clássica, juntamente com um ponto inicial, para calcular as atualizações dos parâmetros."

#: ../../tutorials/vqe.ipynb:182
msgid "To access intermediate information we can pass a callback into the VQE. The callback is given the current number of function evaluations, the current parameters, function values and standard deviation in the expectation evaluation."
msgstr "Para acessar informações intermediárias, podemos passar um callback para o VQE. O callback recebe o número atual de avaliações de função, os parâmetros atuais, valores de função e desvio padrão na avaliação de expectativa."

#: ../../tutorials/vqe.ipynb:211
msgid "Local VQE"
msgstr "VQE Local"

#: ../../tutorials/vqe.ipynb:213
msgid "Before running the Qiskit Runtime VQE program, let’s first simulate this system locally using Qiskit’s ``VQE`` class."
msgstr "Antes de executar o programa Qiskit Runtime VQE, vamos primeiro simular este sistema localmente usando a classe ``VQE`` do Qiskit."

#: ../../tutorials/vqe.ipynb:291
msgid "With the information from the callback, we can for instance compute the average of the estimation errors in the expectation evaluations. For an exact (statevector) simulation this would be 0, but for a shot-based readout as we have on real hardware, this will be a small finite error."
msgstr "Com as informações do callback, podemos, por exemplo, calcular a média dos erros de estimativa nas avaliações de expectativa. Para uma simulação exata (statevector) isso seria 0, mas para uma leitura baseada em tiros como temos em hardware real, este será um pequeno erro finito."

#: ../../tutorials/vqe.ipynb:337
msgid "Qiskit Runtime VQE"
msgstr "Qiskit Runtime VQE"

#: ../../tutorials/vqe.ipynb:348
msgid "To call the VQE code on the Qiskit Runtime on the cloud, we interact with the ``run`` method of ``QiskitRuntimeService``:"
msgstr "Para chamar o código VQE no Qiskit Runtime na nuvem, interagimos com o método ``run`` de ``QiskitRuntimeService``:"

#: ../../tutorials/vqe.ipynb:354
msgid "where"
msgstr "onde"

#: ../../tutorials/vqe.ipynb:356
msgid "``program_id`` determines the Qiskit Runtime program run, i.e. \\ ``'vqe'`` for the VQE"
msgstr "``program_id`` determina a execução do programa Qiskit Runtime, ou seja, \\ ``'vqe'`` para o VQE"

#: ../../tutorials/vqe.ipynb:357
msgid "``inputs`` contains the input for the VQE algorithm"
msgstr "``inputs`` contém a entrada para o algoritmo VQE"

#: ../../tutorials/vqe.ipynb:358
msgid "``options`` specifies the backend"
msgstr "``options`` especifica o backend"

#: ../../tutorials/vqe.ipynb:359
msgid "``callback`` is the callback used inside the VQE"
msgstr "``callback`` é o callback utilizado dentro do VQE"

#: ../../tutorials/vqe.ipynb:370
msgid "We start by initializing an account with access to the Qiskit Runtime service and the backend to execute the circuits on"
msgstr "Começamos inicializando uma conta com acesso ao serviço Qiskit Runtime e o backend para executar os circuitos"

#: ../../tutorials/vqe.ipynb:393
msgid "We’re using the ``ibmq_montreal`` device, but you can replace this with another device you have access to."
msgstr "Estamos usando o dispositivo ``ibmq_montreal``, mas podemos substituí-lo por outro dispositivo ao qual também tenhamos acesso."

#: ../../tutorials/vqe.ipynb:414
msgid "Let’s gather all the inputs to the VQE in a dictionary."
msgstr "Vamos reunir todas as entradas para o VQE em um dicionário."

#: ../../tutorials/vqe.ipynb:442
msgid "The backend options only need to contain the name of the backend."
msgstr "As opções de backend só precisam conter o nome do backend."

#: ../../tutorials/vqe.ipynb:463
msgid "The callback acts a little different than before. Instead of only being passed the VQE callback arguments, it is passed a tuple with the job ID as first argument, followed by the VQE arguments."
msgstr "O callback age um pouco diferente do que antes. Em vez de serem passados apenas os argumentos de callback do VQE, é passado uma tupla com o ID da tarefa como primeiro argumento, seguido pelos argumentos do VQE."

#: ../../tutorials/vqe.ipynb:494
msgid "Now we can call the Qiskit Runtime VQE program. Note, that the result will not be of the same type as ``VQE``, but a plain dictionary."
msgstr "Agora podemos chamar o programa Qiskit Runtime VQE. Observe que o resultado não será do mesmo tipo que ``VQE``, mas sim um dicionário simples."

