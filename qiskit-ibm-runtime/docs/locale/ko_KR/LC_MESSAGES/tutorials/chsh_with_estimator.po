msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-17 16:43+0000\n"
"PO-Revision-Date: 2023-11-17 16:50\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.13.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/chsh_with_estimator.po\n"
"X-Crowdin-File-ID: 9842\n"

#: ../../tutorials/chsh_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/chsh_with_estimator.ipynb`__."
msgstr "이 페이지는 \"docs/tutorials/chsh_with_estimator.ipynb\" 로부터 생성되었다."

#: ../../tutorials/chsh_with_estimator.ipynb:9
msgid "CHSH inequality"
msgstr "CHSH 부등식"

#: ../../tutorials/chsh_with_estimator.ipynb:21
msgid "Background"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:32
msgid "In this tutorial, you will run an experiment on a quantum computer to demonstrate the violation of the CHSH inequality with the Estimator primitive."
msgstr "이 튜토리얼에서는 양자 컴퓨터 위에서 Estimator primitive를 통해 CHSH 부등식의 위반을 입증하는 실험을 진행할 것이다."

#: ../../tutorials/chsh_with_estimator.ipynb:34
msgid "The CHSH inequality, named after the authors Clauser, Horne, Shimony, and Holt, is used to experimentally prove Bell's theorem (1969). This theorem asserts that local hidden variable theories cannot account for some consequences of entanglement in quantum mechanics. The violation of the CHSH inequality is used to show that quantum mechanics is incompatible with local hidden-variable theories. This is an important experiment for understanding the foundation of quantum mechanics."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:36
msgid "The 2022 Nobel Prize for Physics was awarded to Alain Aspect, John Clauser and Anton Zeilinger in part for their pioneering work in quantum information science, and in particular, for their experiments with entangled photons demonstrating violation of Bell’s inequalities."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:47
msgid "For this experiment, we will create an entangled pair on which we measure each qubit on two different bases. We will label the bases for the first qubit :math:`A` and :math:`a` and the bases for the second qubit :math:`B` and :math:`b`. This allows us to compute the CHSH quantity :math:`S_1`:"
msgstr "이 실험을 위해 우리는 얽힌 쌍을 하나 만들고 그 쌍을 두 개의 다른 기저를 가진 각 큐비트를 측정한다. 첫 번째 큐비트의 기저는 :math:`A` 와 :math:`a` 로, 두 번째 큐비트의 기저는 :math:`B` 와 :math:`b` 로 이름 붙일 것이다. 이를 통해 CHSH 부등식 :math:`S_1` 을 계산할 수 있다:"

#: ../../tutorials/chsh_with_estimator.ipynb:49
msgid "S_1 = A(B-b) + a(B+b)."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:54
msgid "Each observable is either :math:`+1` or :math:`-1`. Clearly, one of the terms :math:`B\\pm b` must be :math:`0`, and the other must be :math:`\\pm 2`. Therefore, :math:`S_1 = \\pm 2`. The average value of :math:`S_1` must satisfy the inequality:"
msgstr "각 관측가능량은 :math:`+1` 이거나 :math:`-1` 이다. 확실히 용어 :math:`B\\pm b` 중 하나는 :math:`0` 이어야 하고, 다른 하나는 무조건 :math:`\\pm 2` 이어야 한다. 따라서 :math:`S_1 = \\pm 2` 이다. :math:`S_1` 의 평균값은 무조건 이 부등식을 만족한다:"

#: ../../tutorials/chsh_with_estimator.ipynb:56
msgid "|\\langle S_1 \\rangle|\\leq 2."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:61
msgid "Expanding :math:`S_1` in terms of :math:`A`, :math:`a`, :math:`B`, and :math:`b` results in:"
msgstr ":math:`A` 와 :math:`a`, :math:`B`, :math:`b` 의 면에서 :math:`S_1` 를 확장하면 결과는 다음과 같다:"

#: ../../tutorials/chsh_with_estimator.ipynb:63
msgid "|\\langle S_1 \\rangle| = |\\langle AB \\rangle - \\langle Ab \\rangle + \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:68
msgid "You can define another CHSH quantity :math:`S_2`:"
msgstr "다른 CHSH 부등식 :math:`S_2` 을 다음과 같이 정의할 수 있다:"

#: ../../tutorials/chsh_with_estimator.ipynb:70
msgid "S_2 = A(B+b) - a(B-b),"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:75
msgid "This leads to another inequality:"
msgstr "이것은 다른 부등식으로 이어진다:"

#: ../../tutorials/chsh_with_estimator.ipynb:77
msgid "|\\langle S_2 \\rangle| = |\\langle AB \\rangle + \\langle Ab \\rangle - \\langle aB \\rangle + \\langle ab \\rangle| \\leq 2"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:82
msgid "If quantum mechanics can be described by local hidden variable theories, the previous inequalities must hold true. However, as is demonstrated in this notebook, these inequalities can be violated in a quantum computer. Therefore, quantum mechanics is not compatible with local hidden variable theories."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:93
msgid "If you want to learn more theory, explore `Entanglement in Action <https://learning.quantum-computing.ibm.com/course/basics-of-quantum-information/entanglement-in-action#the-chsh-game>`__ with John Watrous."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:112
msgid "You will create an entangled pair between two qubits in a quantum computer by creating the Bell state :math:`|\\Phi^+\\rangle = \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}}`. Using the Estimator primitive, you can directly obtain the expectation values needed (:math:`\\langle AB \\rangle, \\langle Ab \\rangle, \\langle aB \\rangle`, and :math:`\\langle ab \\rangle`) to calculate the expectation values of the two CHSH quantities :math:`\\langle S_1\\rangle` and :math:`\\langle S_2\\rangle`. Before the introduction of the Estimator primitive, you would have to construct the expectation values from the measurement outcomes."
msgstr "Bell 상태 :math:`|\\Phi^+\\rangle = \\frac{|00\\rangle + |11\\rangle}{\\sqrt{2}}` 를 만듦으로 양자 컴퓨터에서 두 개의 큐비트를 이용해 얽힘 쌍을 만들 것이다. Estimator primitive를 이용해 두 CHSH 양 :math:`\\langle S_1\\rangle` and :math:`\\langle S_2\\rangle` 의 기댓값을 계산하기 위해 필요한 기댓값(:math:`\\langle AB \\rangle, \\langle Ab \\rangle, \\langle aB \\rangle`, and :math:`\\langle ab \\rangle`)을 바로 얻을 수 있다. Estimator primitive 소개에 들어가기 전에, 측정 결과로부터 기댓값을 구성해야한다."

#: ../../tutorials/chsh_with_estimator.ipynb:115
msgid "You will measure the second qubit in the :math:`Z` and :math:`X` bases. The first qubit will be measured also in orthogonal bases, but with an angle with respect to the second qubit, which we are going to sweep between :math:`0` and :math:`2\\pi`. As you will see, the Estimator primitive makes running parameterized circuits very easy. Rather than creating a series of CHSH circuits, you only need to create *one* CHSH circuit with a parameter specifying the measurement angle and a series of phase values for the parameter."
msgstr ":math:`Z` 와 :math:`X` 의 기저에 있는 두 번째 큐비트를 측정할 것이다. 또한 첫 번째 큐비트는 직교 기저에서 측정될 것이지만, 두 번째 큐비트의 각도는 :math:`0` 과 :math:`2\\pi` 사이에서 천천히 변화시킬 것이다. 보이는 것처럼 Estimator primitive는 매개변수화된 회로를 아주 쉽게 실행할 수 있다. 일련의 CHSH 회로를 만드는 대신, 매개변수를 위한 일련의 위상 값과 측정 각도를 명시하는 매개변수가 있는 CHSH 회로 *하나*만 만들면 된다."

#: ../../tutorials/chsh_with_estimator.ipynb:118
msgid "Finally, you will analyze the results and plot them against the measurement angle. You will see that for certain range of measurement angles, the expectation values of CHSH quantities :math:`|\\langle S_1\\rangle| > 2` or :math:`|\\langle S_2\\rangle| > 2`, which demonstrates the violation of the CHSH inequality."
msgstr "마지막으로, 결과를 분석하고 해당 결과를 측정 각도에 대해 그래프에 나타낼 것이다. 특정 범위의 측정 각도에 대해서 CHSH 양의 기댓값 :math:`|\\langle S_1\\rangle| > 2` 과 :math:`|\\langle S_2\\rangle| > 2` 이 CHSH 부등식의 위반을 나타내는 것을 알 수 있다."

#: ../../tutorials/chsh_with_estimator.ipynb:130
msgid "Setup"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:203
msgid "Map the problem to a quantum-native format"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:215
msgid "Create a parameterized CHSH circuit"
msgstr "매개변수화된 CHSH 회로 만들기"

#: ../../tutorials/chsh_with_estimator.ipynb:217
msgid "First, we write the circuit with the parameter :math:`\\theta`, which we call ``theta``. The ```Estimator`` primitive <https://docs.quantum-computing.ibm.com/api/qiskit-ibm-runtime/qiskit_ibm_runtime.Estimator#estimator>`__ can enormously simplify circuit building and output analysis by directly providing expectation values of observables. Many problems of interest, especially for near-term applications on noisy systems, can be formulated in terms of expectation values. For maximum generalization, the ```Estimator`` primitive <https://docs.quantum-computing.ibm.com/api/qiskit-ibm-runtime/qiskit_ibm_runtime.Estimator#estimator>`__ requires circuits with no measurements."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:255
msgid "Create a list of phase values to be assigned later"
msgstr "나중에 지정할 위상 값 리스트 만들기"

#: ../../tutorials/chsh_with_estimator.ipynb:257
msgid "After creating the parameterized CHSH circuit, you will create a list of phase values to be assigned to the circuit in the next step. You can use the following code to create a list of 21 phase values range from :math:`0` to :math:`2 \\pi` with equal spacing, that is, :math:`0`, :math:`0.1 \\pi`, :math:`0.2 \\pi`, ..., :math:`1.9 \\pi`, :math:`2 \\pi`."
msgstr "매개변수화된 CHSH 회로를 만든 다음, 다음 단계에서 회로에 지정할 위상 값 리스트를 만든다. 아래 코드를 사용하여 :math:`0` 에서 :math:`2 \\pi` 까지의 범위에서 동일한 간격으로 21개의 위상 값이 있는 리스트 \\ :math:`0`, :math:`0.1 \\pi`, :math:`0.2 \\pi`, …, :math:`1.9 \\pi`, :math:`2 \\pi` 를 만들 수 있다."

#: ../../tutorials/chsh_with_estimator.ipynb:282
msgid "Observables"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:284
msgid "Now we need observables from which to compute the expectation values. In our case we are looking at orthogonal bases for each qubit, letting the parameterized :math:`Y-` rotation for the first qubit sweep the measurement basis nearly continuously with respect to the second qubit basis. We will therefore choose the observables :math:`ZZ`, :math:`ZX`, :math:`XZ`, and :math:`XX`."
msgstr "이제 기댓값을 계산할 수 있는 관측가능량이 필요하다. 이번 경우에는 각 큐비트를 직교 기저에서 살펴보고, 첫 번째 큐비트에 매개변수화된  :math:`Y-` 회전을 적용하여 측정 기저를 두 번째 큐비트 기저와 관련하여 연속적으로 따라갈 것이다. 따라서 관측가능량 :math:`ZZ` 와 :math:`ZX`, :math:`XZ`, :math:`XX` 를 선택할 것이다."

#: ../../tutorials/chsh_with_estimator.ipynb:312
msgid "Optimize the circuits and operators"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:314
msgid "For this example, the circuit and the operators are simple, so no optimizations are needed."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:326
msgid "Execute using a quantum primitive function"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:328
msgid "In order to execute the entire experiment in one call to the ```Estimator`` <https://docs.quantum-computing.ibm.com/api/qiskit-ibm-runtime/qiskit_ibm_runtime.Estimator#estimator>`__ we need to batch the circuit and operators together, repeating each for the requested ``number_of_phases`` points."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:350
msgid "We can create a `Qiskit Runtime ``Estimator`` <https://docs.quantum-computing.ibm.com/api/qiskit-ibm-runtime/qiskit_ibm_runtime.Estimator#estimator>`__ primitive to compute our expectation values, and the ```Batch`` <https://docs.quantum-computing.ibm.com/run/run-primitives-batch>`__ context manager to run our non-iterative workload."
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:384
msgid "The individual expectation values can then be extracted from the batched results:"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:408
msgid "Analyze the results"
msgstr ""

#: ../../tutorials/chsh_with_estimator.ipynb:410
msgid "After running the circuits, we need to build the CHSH witness functions. We first build the quantities :math:`\\langle AB \\rangle`, :math:`\\langle Ab \\rangle`, :math:`\\langle aB \\rangle`, and :math:`\\langle ab \\rangle`, by looking at the parity of the outcomes for the four families of circuits we built (two measurement bases for each of the two qubits). Then we use those quantities to build the witness functions as defined previously."
msgstr "회로를 실행한 후 CHSH 관찰 함수를 만들어야 한다. 가장 먼저 만든 회로(큐비트 두 개의 각각의 측정 기저 두 개)의 4개의 군으로부터 얻은 결과의 패리티를 살펴보며 :math:`\\langle AB \\rangle` 와 :math:`\\langle Ab \\rangle`, :math:`\\langle aB \\rangle`, :math:`\\langle ab \\rangle` 의 값을 만들어야 한다. 그런 다음 위에서 정의한 관찰 함수를 만들기 위해 이러한 값들을 사용한다."

#: ../../tutorials/chsh_with_estimator.ipynb:435
msgid "Note that now we do not have to build the observables ourselves because they are returned to us! The computed expectation values are given in ``result.values``. What comes back is a very small payload of data."
msgstr "이제 관측가능량이 반환되기 때문에 굳이 만들 필요가 없다는 것이 주목할만한 점이다! 계산된 기댓값은 ``result.values`` 로 주어진다. 다시 돌아오는 것은 데이터의 아주 작은 페이로드이다."

#: ../../tutorials/chsh_with_estimator.ipynb:488
msgid "In the figure, the red dashed lines delimit the classical bounds (:math:`\\pm 2`) and the dash-dotted blue lines delimit the quantum bounds (:math:`\\pm 2\\sqrt{2}`). You can see that the experimental results resemble the general trend of the simulated results and there are regions where the CHSH witness quantities exceeds the classical bounds. Congratulations! You have successfully demonstrated the violation of CHSH inequality in a real quantum system!"
msgstr "그림에서 빨간 점선은 고전적 경계 (:math:`\\pm 2`) 를 표시하고 파란 점선은 양자 경계 (:math:`\\pm 2\\sqrt{2}`) 를 표시한다. 보시다시피 실험 결과가 시뮬레이션 결과의 일반적 경향과 닮아있고 CHSH 관찰 값이 고전적 경계를 넘는 부분이 있다. 경축! 실제 양자 계에서 CHSH 부등식 위반을 성공적으로 입증하였다!"

