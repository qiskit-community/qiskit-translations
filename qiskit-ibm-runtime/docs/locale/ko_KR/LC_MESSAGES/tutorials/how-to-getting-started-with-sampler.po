msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-15 18:31+0000\n"
"PO-Revision-Date: 2023-06-15 19:07\n"
"Last-Translator: \n"
"Language: ko\n"
"Language-Team: Korean\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-sampler.po\n"
"X-Crowdin-File-ID: 9820\n"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-sampler.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/how-to-getting-started-with-sampler.ipynb`__ 에서 생성되었다."

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:9
msgid "Get started with the Sampler primitive"
msgstr "Sampler primitive 시작하기"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:20
msgid "In this tutorial we will show you how to set up the Qiskit Runtime ``Sampler`` primitive, explore the different options you can use to configure it, and invoke the primitive efficiently inside a session."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:32
msgid "Primitives"
msgstr "프리미티브들(Primitives)"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:43
msgid "Primitives are core functions that make it easier to build modular algorithms and applications."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:45
msgid "Rather than simply returning counts, they return more immediately meaningful information."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:47
msgid "Additionally, they provide a seamless way to access the latest advancements in IBM Quantum hardware and software."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:58
msgid "The initial release of Qiskit Runtime includes two primitives:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:60
msgid "**Sampler:** Generates quasi-probabilities from input circuits."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:62
msgid "**Estimator:** Calculates expectation values from input circuits and observables."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:73
msgid "In this tutorial we will focus on the ``Sampler`` primitive. There is a separate tutorial on `Getting started with the Estimator primitive <how-to-getting-started-with-estimator.ipynb>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:85
msgid "Using the Sampler primitive"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:96
msgid "Similar to the ``Backend`` base class, there is an ``Sampler`` base class defined in Qiskit Terra that standardizes the way users interact with all ``Sampler`` implementations. This allows users to easily change their choice of simulator or device for performing expectation value calculations, even if the underlying implementation is different."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:98
msgid "In this section we will be using the default implementation in Qiskit Terra, which uses a local state vector simulator."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:110
msgid "1. Create a circuit"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:121
msgid "You will need at least one quantum circuit to prepare our system in a precise quantum state for study. Our examples all have circuits in them, but you can use Qiskit to create your own. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:154
msgid "2. Initialize a Sampler class"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:169
msgid "The next step is to create an instance of an ``Sampler`` class. This can be any ``Sampler`` class that complies with the ``Sampler`` primitive specification. For simplicity, we will use Qiskit Terra's ``qiskit.primitives.Sampler`` class, based on the `Statevector construct <https://qiskit.org/documentation/stubs/qiskit.quantum_info.Statevector.html?highlight=statevector#qiskit.quantum_info.Statevector>`__ (that is, algebraic simulation)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:193
msgid "3. Invoke the Sampler and get results"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:204
msgid "To estimate the quasi-probability distribution of the circuit output, invoke the ``run()`` method of the ``Sampler`` instance you just created and pass in the circuit as an input parameter. This method call is asynchronous, and you will get a ``Job`` object back. You can use this object to query for information like ``job_id()`` and ``status()``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:254
msgid "The ``result()`` method of the job will return the ``SamplerResult``, which includes both the quasi-distribution and job metadata."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:304
msgid "You can keep invoking the ``run()`` method again with the different inputs:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:364
msgid "You can also provide compound inputs to the ``run()`` method:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:436
msgid "Or use parameterized circuits:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:505
msgid "Using Qiskit Runtime Sampler"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:516
msgid "In this section we will go over how to use Qiskit Runtime's implementation of the ``Sampler`` primitive."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:528
msgid "1. Initialize the account"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:539
msgid "Since Qiskit Runtime ``Sampler`` is a managed service, you will first need to initialize your account. You can then select the simulator or real backend you want to use to calculate the expectation value."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:541
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ if you don't already have an account set up."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:566
msgid "2. Create a circuit"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:577
msgid "Just like the section before, you will need at least one circuit as the input to the ``Sampler`` primitive."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:610
msgid "3. Initialize the Qiskit Runtime Sampler"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:621
msgid "Here we are initializing an instance of ``qiskit_ibm_runtime.Sampler`` rather than ``qiskit.primitives.Sampler`` to use Qiskit Runtime's implementation of the ``Sampler``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:623
msgid "When you initialize the ``Sampler``, you'll need to pass in the backend you previously selected as the target device (or simulator), using the ``backend`` parameter."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:647
msgid "4. Invoke the Sampler and get results"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:658
msgid "You can then invoke the ``run()`` method to calculate expectation values for the input circuit(s) and observable(s)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:752
msgid "Options"
msgstr "옵션"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:763
msgid "Primitives come with several options that are grouped into different categories. Commonly used options, such as ``resilience_level``, are at the first level."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:765
msgid "|options|"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:767
msgid "options"
msgstr "옵션"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:778
msgid "You can use the `Options <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ class to specify different options."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:789
msgid "In the following example, we create an instance of the ``Options`` class. ``optimization_level`` is a first level option and can be passed as an input parameter. Options related to the execution environment are passed using the ``environment`` parameter."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:812
msgid "``Options`` supports auto-complete. Once you create an instance of the ``Options`` class, you can use auto-complete to see what options are available. If you choose one of the categories, you can use auto-complete again to see what options are available under that category."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:837
msgid "When creating an instance of the ``Sampler`` class, you can pass in the ``options`` you just created. Those options will then be applied when you use ``run()`` to perform the calculation."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:884
msgid "You can also pass in options through the ``run()`` method. This will overwrite the options you specified when creating the ``Sampler`` instance for that particular execution."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:886
msgid "Since most users will only overwrite a handful of options at the job level, it is not necessary to specify the category the options are in. The following code, for example, specifies ``shots=1024`` rather than ``execution={\"shots\": 1024}`` (which is also valid)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:934
msgid "Error suppression and mitigation"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:945
msgid "``optimization_level`` and ``resilience_level`` are used to configure error suppress and mitigation."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:947
msgid "``Sampler`` supports ``optimization_level`` 0-3 and ``resilience_level`` 0-1."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1013
msgid "Session"
msgstr "세션"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1024
msgid "A Qiskit Runtime *session* allows you to group a collection of iterative calls to the quantum computer. A session is started when the first job within the session is started. Provided the session is active, subsequent jobs within the session are prioritized by the scheduler to minimize artificial delay within an iterative algorithm. Data used within a session, such as transpiled circuits, is also cached to avoid unnecessary overhead."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1036
msgid "Session timing"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1047
msgid "When a session is started, it is assigned a maximum session timeout value. You can set this value by using the ``max_time`` parameter."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1049
msgid "If you don't specify a timeout value, it is set to the initial job's maximum execution time and is the smaller of these values:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1051
msgid "The system limit (see `What is the maximum execution time for a Qiskit Runtime job? <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/faqs/max_execution_time.html>`__)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1052
msgid "The ``max_execution_time`` defined by the program."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1054
msgid "After this time limit is reached, the session is permanently closed."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1065
msgid "A session also has an *interactive* timeout value. If there are no session jobs queued within that window, the session is temporarily deactivated and normal job selection resumes. This interactive timeout value is set by the system and cannot be overwritten."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1077
msgid "Invoking Sampler.run within a session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1088
msgid "You can create a Qiskit Runtime session using the context manager (``with ...:``), which automatically opens and closes the session for you. You can invoke ``Sampler.run`` one or more times within a session:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1146
msgid "Invoke multiple primitives in a session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1157
msgid "You are not restricted to a single primitive function within a session. In this section we will show you an example of using multiple primitives."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1168
msgid "First we prepare a circuit and an observable for the ``Estimator`` primitive."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1229
msgid "The following example shows how you can create both an instance of the ``Sampler`` class and one of the ``Estimator`` class and invoke their ``run()`` methods within a session."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1287
msgid "The calls can also be asynchronous. You don't need to wait for the result of a previous job before submitting another one."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1350
msgid "Summary"
msgstr "요약"

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1361
msgid "The following code quickly recaps using Qiskit Runtime primitives, options, and sessions."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1443
msgid "Reference"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1454
msgid "You can find more details about the ``Sampler`` methods in the `Sampler API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html#qiskit_ibm_runtime.Sampler>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-sampler.ipynb:1456
msgid "And all the available options in the `Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__."
msgstr ""

