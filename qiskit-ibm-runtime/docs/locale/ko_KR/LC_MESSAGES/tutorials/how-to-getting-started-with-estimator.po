msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-10-27 13:35+0000\n"
"PO-Revision-Date: 2022-11-04 07:04\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-estimator.po\n"
"X-Crowdin-File-ID: 9818\n"
"Language: ko_KR\n"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__ 에서 생성되었다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "Get started with the Estimator primitive"
msgstr "Estimator primitive 시작하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:11
msgid "Learn how to set up and use the Estimator primitive program."
msgstr "Estimator primitive를 설정하고 사용하는 방법을 익힌다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:14
msgid "Overview"
msgstr "개요"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:16
msgid "The ``Estimator`` primitive lets you efficiently calculate and interpret expectation values of quantum operators required for many algorithms. You can specify a list of circuits and observables, then evaluate expectation values and variances for a given parameter input."
msgstr "``Estimator`` primitive를 사용하면 다양한 알고리즘에 필요한 양자 연산자의 기댓값을 효율적으로 계산하고 해석할 수 있다. 회로 및 관측가능량에 대한 리스트를 지정한 후, 입력 매개변수에 따른 기댓값과 분산을 계산할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:19
msgid "Prepare the environment"
msgstr "환경 준비하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:21
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to get your quantum service instance ready to use."
msgstr "`getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ 의 단계를 따라 양자 서비스 인스턴스를 사용할 수 있도록 준비한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:23
msgid "You’ll need at least one circuit to submit to the program. Our examples all have circuits in them, but if you want to submit your own circuit, you can use Qiskit to create one. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr "적어도 하나의 회로가 있어야만 프로그램을 제출할 수 있다. 예제에 제시된 회로 이외에, Qiskit을 사용해 회로를 직접 만들어 업로드할 수도 있다. Qiskit으로 회로를 만드는 법을 학습하려면 `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__ 를 참조하면 된다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:25
msgid "Create a list of observables. Observables let you define the properties of the circuit that are relevant to your problem and enable you to efficiently measure their expectation value. For simplicity, you can use the `PauliSumOp class <https://qiskit.org/documentation/stubs/qiskit.opflow.primitive_ops.html#module-qiskit.opflow.primitive_ops>`__ in Qiskit to define them, as illustrated in the example below."
msgstr "리스트의 관측가능량을 만든다. 관측가능량으로 프로그램과 관련 있는 회로의 속성을 정의할 수 있고, 해당 기댓값을 효율적으로 측정할 수 있다. 단순하게 아래 예제에 설명된 대로 Qiskit에 있는 `PauliSumOp class <https://qiskit.org/documentation/stubs/qiskit.opflow.primitive_ops.html#module-qiskit.opflow.primitive_ops>`__ 를 사용해서 관측가능량을 정의할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:28
msgid "Start a session"
msgstr "세션 시작하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:30
msgid "A Qiskit Runtime **session** allows you to group a collection of iterative calls to the quantum computer. A session is started when the first job within the session is started. Subsequent jobs within the session are prioritized by the scheduler to minimize artificial delay within an iterative algorithm. Data used within a session, such as transpiled circuits, is also cached to avoid unnecessary overhead. You can create a Runtime session using the context manager (``with ...:``), which automatically opens and closes the session for you."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:34
msgid "Create an Estimator instance"
msgstr "Estimator 인스턴스 만들기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:36
msgid "You can make one or more calls to the ``Estimator`` primitive within a session, by first creating an ``Estimator`` instace. The ``Estimator`` class takes in an ``options`` variable to control the execution environment."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:38
msgid "``options`` can be either a dictionary or a ``qiskit_ibm_runtime.Options`` class instance. Initializing it as an ``Options`` class allows you to do auto-complete."
msgstr "``options`` 은 딕셔너리나 ``qiskit_ibm_runtime.Options`` 클래스 인스턴스일 수 있다. 이를 ``Options`` 클래스로 초기화할 경우 자동 완성을 이용할 수 있게 한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:40
msgid "Some of the settings you can specify using ``options``:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:42
msgid "**optimization_level**: How much optimization to perform on the circuits. The default is 1."
msgstr "**optimization_level**: 회로에서 수행할 최적화 정도. 기본값은 1이다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:43
msgid "**resilience_level**: How much resilience to build against errors. Higher levels generate more accurate results, at the expense of longer processing times. The default is 0."
msgstr "**resilience_level**: 오류에 대비하여 얼마나 많은 복원력을 구축하는 정도. 레벨이 높을수록 처리 긴 처리 시간을 사용해 더 정확한 결과를 얻을 수 있다. 기본값은 0이다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:45
msgid "You can find more details in `the Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__."
msgstr "`옵션 API 레퍼런스 <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ 에서 좀 더 자세한 내용을 확인할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:47
msgid "With these arguments, you can create a ``Estimator`` instance with the desired options. Example:"
msgstr "이러한 인수를 사용하여 원하는 옵션으로 ``Estimator`` 인스턴스를 만들 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:75
msgid "Invoke the Estimator primitive"
msgstr "Estimator primitive 호출"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:77
msgid "You can invoke the ``Estimator`` primitive program using the ``run()`` method of the ``Estimator`` instance you just created. The method returns a ``IBMRuntimeJob`` instance which you can use to query for things like job ID and status. The ``result()`` method of the job will return the result."
msgstr "방금 만든 ``Estimator`` 인스턴스의 ``run()`` 메서드를 사용하여 ``Estimator`` primitive 프로그램을 호출할 수 있다. 메서드는 작업 ID 및 상황과 같은 항목을 쿼리하는 데 사용할 수 있는 ``IBMRuntimeJob`` 인스턴스를 반환한다. 작업의 ``result()`` 메서드는 결과를 반환한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:79
msgid "You can invoke the ``run()`` method multiple times with the different inputs within a session."
msgstr "세션 내에서 다른 입력으로 ``run()`` 매서드를 여러 번 호출할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:82
msgid "Specify program inputs"
msgstr "프로그램 입력 지정하기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:84
msgid "The ``Estimator.run()`` method takes in the following arguments:"
msgstr "``Estimator.run()`` 매서드는 다음과 같은 입력인수를 갖는다:"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:86
msgid "**circuits**: A list of (parameterized) circuits that you want to investigate."
msgstr "**circuits**: 살펴보려는 (매개변수화된) 회로의 목록"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:87
msgid "**observables**: A list of observables to measure the expectation values."
msgstr "**observables**: 기댓값을 측정하는 관측가능량의 목록"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:88
msgid "**parameter_values**: An optional list of concrete parameters to be bound."
msgstr "**parameter_values**: 묶을 구체적인 매개변수의 선택적 목록."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:89
msgid "**kwargs**: Additional options to overwrite the default values."
msgstr "**kwargs**: 기본값을 덮어쓰는 추가 옵션."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:91
msgid "You can find more details in `the Estimator API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__."
msgstr "`추정기 API 레퍼런스 <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ 에서 좀 더 자세한 내용을 확인할 수 있다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:94
msgid "Run the job & print results"
msgstr "작업 실행 및 결과 보기"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:96
msgid "Run the job, specifying your previously defined inputs and options. Use ``circuits``, ``observables``, and ``parameter_values`` to use a specific parameter and observable with the specified circuit."
msgstr "이전에 정의한 입력 및 옵션을 지정하여 작업을 실행하시오. ``circuits``, ``observables``, ``parameter_values`` 와 같은 변수를 활용해서 지정한 회로에 대해 특정 매개변수와 관측량을 추정기의 입력인수로 전달하시오."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:98
msgid "For example, this line ``psi1_H23_result = estimator.run(circuits=[psi1, psi1], observables=[H2, H3], parameter_values=[theta1]*2).result()`` specifies the following:"
msgstr "예를 들어, ``psi1_H23_result = estimator.run(circuits=[psi1, psi1], observables=[H2, H3], parameter_values=[theta1]*2).result()`` 은 다음을 지정한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:100
msgid "Return the value for using observable ``H2`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr "회로 ``psi1`` 에 대해 관측량 ``H2`` 와 매개변수 ``theta1`` 을 사용해서 기댓값을 구한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:101
msgid "Return the value for using observable ``H3`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr "회로 ``psi1`` 에 대해 관측량 ``H3`` 와 매개변수 ``theta1`` 을 사용해서 기댓값을 구한다."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:205
msgid "The results align with the parameter - circuit - observable tuples specified previously. For example, the first result: ``EstimatorResult(values=array([1.5285]), metadata=[{'variance': 9.33715875, 'shots': 4000}])`` is the output of the parameter labeled ``theta1`` and observable ``H1`` being sent to the first circuit."
msgstr "이전에 지정한 매개변수-회로-관측량 튜플 자료형과 일치한다. 에를 들어, 첫 번째 결과인 ``EstimatorResult(values=array([1.5285]), metadata=[{'variance': 9.33715875, 'shots': 4000}])`` 는 ``theta1`` 으로 표시된 매개변수의 출력이고 첫 번째 회로로 전송되는 관측량 ``H1`` 이다."

