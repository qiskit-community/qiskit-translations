msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-09 04:52+0000\n"
"PO-Revision-Date: 2022-11-09 05:12\n"
"Last-Translator: \n"
"Language-Team: Korean\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: ko\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe_with_estimator.po\n"
"X-Crowdin-File-ID: 9834\n"
"Language: ko_KR\n"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe_with_estimator.ipynb`__."
msgstr "이 페이지는 `docs/tutorials/vqe_with_estimator.ipynb`__ 에서 생성되었다."

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "Variational Quantum Eigensolver with Estimator Primitive"
msgstr "근원 추정기를 이용한 변분화된 양자 고윳값 해석기"

#: ../../tutorials/vqe_with_estimator.ipynb:21
msgid "Overview"
msgstr "개요"

#: ../../tutorials/vqe_with_estimator.ipynb:23
msgid "The Variational Quantum Eigensolver (VQE) is an optimization routine for finding the ground state energy (i.e. lowest eigenvalue) of a Hamiltonian and is a considered to be a viable candidate for NISQ hardware. In this tutorial, we will go over how to use Qiskit Runtime to submit variational jobs using the estimator. Specifically, we will be looking at calculating the ground state energy of the :math:`H_2` molecule using the estimator primitive."
msgstr "변분화된 양자 고윳값 해석기(VQE)는 해밀토니안의 기저 상태 에너지 (최저의 고유값) 를 찾기 위한 최적화 루틴이며 NISQ 하드웨어로 실현 가능한 후보로 고려되고 있다. 이 튜토리얼에서는 Qiskit Runtime을 사용하여 추정기를 이용하여 변분 작업을 제출하는 방법에 대해서 알아볼것이다. 구체적으로 우리는 근원 추정기를 이용하여 :math:`H_2` 분자의 기저 상태 에너지를 계산 하는 법을 알아볼것이다."

#: ../../tutorials/vqe_with_estimator.ipynb:35
msgid "Set up your local development environment"
msgstr "로컬 개발 환경 설정하기"

#: ../../tutorials/vqe_with_estimator.ipynb:37
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "이 지침서는 Qiskit Runtime 서비스 인스턴스가 필요하다. 이것이 없다면 `이 단계 <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ 를 따라 설정을 한다."

#: ../../tutorials/vqe_with_estimator.ipynb:49
msgid "Connect to the Qiskit Runtime service"
msgstr "Qiskit Runtime 서비스에 연결하기"

#: ../../tutorials/vqe_with_estimator.ipynb:51
msgid "First we have to create our service instance and specify our backend. In this example we will be working with a simulator for the sake of speed, but by simply changing this one line (for choice of backend) this could run on hardware as well."
msgstr "먼저 서비스 인스턴스를 작성하고 백엔드를 지정해야 한다. 이 예제에서는 속도를 위해 시뮬레이터를 사용할 예정이지만, 백엔드 선택 시 이 한줄만 변경하면 하드웨어에서도 실행할 수 있습니다."

#: ../../tutorials/vqe_with_estimator.ipynb:77
msgid "Generate Molecular Hamiltonians"
msgstr "분자 해밀토니안 생성"

#: ../../tutorials/vqe_with_estimator.ipynb:79
msgid "We will be working with Qiskit Nature to generate and handle molecular hamiltonians. First though, we need to install these packages. This can be done through pip, using the commands shown below. For more information on setting up and working with Qiskit Nature, see this `guide <https://qiskit.org/documentation/nature/getting_started.html>`__."
msgstr "우리는 분자 해밀토니안을 생성하고 처리하기 위해 Qiskit Nature를 사용한다. 그러기 위해선, 이러한 패키지를 설치해야 한다. 이는 아래 표시된 명령을 사용하여 파이프를 통해 수행할 수 있다. Qiskit Nature 설정 및 작업에 대한 자세한 정보는 `안내서 <https://qiskit.org/documentation/nature/getting_started.html>`__ 를 참조하라."

#: ../../tutorials/vqe_with_estimator.ipynb:95
msgid "Now we need to generate the Hamiltonians that we wish to find the ground state energy of. For this task we will be utilizing Qiskit Nature. First we have to specify how we are converting the fermionic operators of the electronic molecular hamiltonian to qubit operators. Here we will use the Parity Mapper, which maps annihilation to Pauli operators via :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}`"
msgstr "이제 우리는 우리가 목표로 하는 기저 상태 에너지를 나타내는 해밀토니안을 생성해야 한다. 이러한 과제를 위하여 우리는 Qiskit Nature를 이용할 것이다. 첫째, 우리는 페르미온 연산자의 전자 분자 해밀토니안을 큐비트 연산자로 전환하는 방법을 명시해야 한다. 여기서 우리는 소멸 연산자를 파울리 연산자로 맵핑해주는 Parity Mapper를 사용할 것이다. 즉 :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}` 이다."

#: ../../tutorials/vqe_with_estimator.ipynb:119
msgid "At our specified bond length we will create an electronic structure problem and generate the second quantized (i.e. fermionic) operators. We then compute the true ground state energy to compare against."
msgstr "지정된 결합 길이에서 전자 구조 문제점을 작성하고 두 번째 양자화된 (즉, fermionic) 연산자를 생성한다. 그런 다음 비교할 실제 기저 상태 에너지를 계산한다."

#: ../../tutorials/vqe_with_estimator.ipynb:169
msgid "Now we can use this hamiltonian as the observable in our estimator factory. The VQE routine is formalized as :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle`, so we just need to minimize the expectation values of the hamiltonian."
msgstr "우리는 이 해밀턴을 우리의 추정기 공장에서 관찰할 수 있는 것으로 사용할 수 있다. VQE 루틴은 :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle` 로 공식화되므로, 우리는 해밀토니안의 예상 값을 최소화하기만 하면 된다."

#: ../../tutorials/vqe_with_estimator.ipynb:214
msgid "Now that we solved the electronic hamiltonian, we have to add the nuclear energies."
msgstr "이제 전자 해밀토니안을 풀었으니, 핵에너지를 추가해야 한다."

#: ../../tutorials/vqe_with_estimator.ipynb:241
msgid "Create the convergence plot"
msgstr "수렴 그래프 만들기"

