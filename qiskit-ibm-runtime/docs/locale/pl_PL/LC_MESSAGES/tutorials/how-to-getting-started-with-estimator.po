msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-19 13:43+0000\n"
"PO-Revision-Date: 2022-08-19 13:50\n"
"Last-Translator: \n"
"Language-Team: Polish\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=4; plural=(n==1 ? 0 : (n%10>=2 && n%10<=4) && (n%100<12 || n%100>14) ? 1 : n!=1 && (n%10>=0 && n%10<=1) || (n%10>=5 && n%10<=9) || (n%100>=12 && n%100<=14) ? 2 : 3);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: pl\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-estimator.po\n"
"X-Crowdin-File-ID: 9818\n"
"Language: pl_PL\n"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "Get started with the Estimator primitive"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:11
msgid "Learn how to set up and use the Estimator primitive program."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:14
msgid "Overview"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:16
msgid "The Estimator primitive lets you efficiently calculate and interpret expectation values of quantum operators required for many algorithms. You can specify a list of circuits and observables, then evaluate expectation values and variances for a given parameter input."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:19
msgid "Prepare the environment"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:21
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to get your quantum service instance ready to use."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:23
msgid "You’ll need at least one circuit to submit to the program. Our examples all have circuits in them, but if you want to submit your own circuit, you can use Qiskit to create one. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:25
msgid "Create a list of observables. Observables let you define the properties of the circuit that are relevant to your problem and enable you to efficiently measure their expectation value. For simplicity, you can use the `PauliSumOp class <https://qiskit.org/documentation/stubs/qiskit.opflow.primitive_ops.html#module-qiskit.opflow.primitive_ops>`__ in Qiskit to define them, as illustrated in the example below."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:28
msgid "Start a session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:30
msgid "With Qiskit Runtime primitives, we introduce the concept of a session or a factory that allows you to define a job as a collection of iterative calls to the quantum computer. When you start a session, it caches the data you send so it doesn’t have to be transmitted to the Quantum Datacenter on each iteration."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:33
msgid "Create an Estimator instance"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:35
msgid "The ``Estimator`` class takes in a ``session`` object that represents the session to use, and an ``options`` variable to control the execution environment."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:37
msgid "``options`` can be either a dictionary or a ``qiskit_ibm_runtime.Options`` class instance. Initializing it as an ``Options`` class allows you to do auto-complete."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:39
msgid "Some of the settings you can specify using ``options``:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:41
msgid "**backend**: Optional string name of backend. If not specified a backend will be selected automatically (IBM Cloud only)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:42
msgid "**log_level**: logging level to set in the execution environment. The valid log levels are: ``DEBUG``, ``INFO``, ``WARNING``, ``ERROR``, and ``CRITICAL``. The default level is ``WARNING``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:43
msgid "**optimization_level**: How much optimization to perform on the circuits. The default is 1."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:44
msgid "**resilience_level**: How much resilience to build against errors. Higher levels generate more accurate results, at the expense of longer processing times."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:46
msgid "You can find more details in `the Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Options.html>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:48
msgid "With these arguments, you can create a ``Estimator`` instance with the desired options. Example:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:78
msgid "Invoke the Estimator primitive"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:80
msgid "You can invoke the ``Estimator`` primitive program using the ``run()`` method of the ``Estimator`` instance you just created. The method returns a ``IBMRuntimeJob`` instance which you can use to query for things like job ID and status. The ``result()`` method of the job will return the result."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:82
msgid "You can invoke the ``run()`` method multiple times with the different inputs within a session."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:85
msgid "Specify program inputs"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:87
msgid "The ``Estimator.run()`` method takes in the following arguments:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:89
msgid "**circuits**: A list of (parameterized) circuits that you want to investigate."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:90
msgid "**observables**: A list of observables to measure the expectation values."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:91
msgid "**parameters**: A list of parameters for the parameterized circuits. It should be omitted if the circuits provided are not parameterized."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:92
msgid "**parameter_values**: an optional list of concrete parameters to be bound."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:93
msgid "**kwargs**: Additional options to overwrite the default values."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:95
msgid "You can find more details in `the Estimator API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:98
msgid "Run the job & print results"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:100
msgid "Run the job, specifying your previously defined inputs and options. Use ``circuits``, ``observables``, and ``parameter_values`` to use a specific parameter and observable with the specified circuit."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:102
msgid "For example, this line ``psi1_H23_result = estimator.run(circuits=[psi1, psi1], observables=[H2, H3], parameter_values=[theta1]*2).result()`` specifies the following:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:104
msgid "Return the value for using observable ``H2`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:105
msgid "Return the value for using observable ``H3`` and parameter ``theta1`` with the circuit ``psi1``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:182
msgid "The results align with the parameter - circuit - observable tuples specified previously. For example, the first result: ``EstimatorResult(values=array([1.53710938]), metadata=[{'variance': 9.249675750732422, 'shots': 1024}])`` is the output of the parameter labeled ``theta1`` and observable ``H1`` being sent to the first circuit."
msgstr ""

