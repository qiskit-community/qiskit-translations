msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 16:30+0000\n"
"PO-Revision-Date: 2022-11-10 16:53\n"
"Last-Translator: \n"
"Language-Team: Chinese Simplified\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-CN\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe_with_estimator.po\n"
"X-Crowdin-File-ID: 9834\n"
"Language: zh_CN\n"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe_with_estimator.ipynb`__."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "Variational Quantum Eigensolver with Estimator Primitive"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:21
msgid "Overview"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:23
msgid "The Variational Quantum Eigensolver (VQE) is an optimization routine for finding the ground state energy (i.e. lowest eigenvalue) of a Hamiltonian and is a considered to be a viable candidate for NISQ hardware. In this tutorial, we will go over how to use Qiskit Runtime to submit variational jobs using the estimator. Specifically, we will be looking at calculating the ground state energy of the :math:`H_2` molecule using the estimator primitive."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:35
msgid "Set up your local development environment"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:37
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:49
msgid "Connect to the Qiskit Runtime service"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:51
msgid "First we have to create our service instance and specify our backend. In this example we will be working with a simulator for the sake of speed, but by simply changing this one line (for choice of backend) this could run on hardware as well."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:77
msgid "Generate Molecular Hamiltonians"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:79
msgid "We will be working with Qiskit Nature to generate and handle molecular hamiltonians. First though, we need to install these packages. This can be done through pip, using the commands shown below. For more information on setting up and working with Qiskit Nature, see this `guide <https://qiskit.org/documentation/nature/getting_started.html>`__."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:95
msgid "Now we need to generate the Hamiltonians that we wish to find the ground state energy of. For this task we will be utilizing Qiskit Nature. First we have to specify how we are converting the fermionic operators of the electronic molecular hamiltonian to qubit operators. Here we will use the Parity Mapper, which maps annihilation to Pauli operators via :math:`\\hat{a} \\rightarrow \\frac{1}{2} \\left ( X_p Z_{p-1} + i Y_p \\right ) X_{p+1} ... X_{N}`"
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:119
msgid "At our specified bond length we will create an electronic structure problem and generate the second quantized (i.e. fermionic) operators. We then compute the true ground state energy to compare against."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:169
msgid "Now we can use this hamiltonian as the observable in our estimator factory. The VQE routine is formalized as :math:`\\min_\\theta \\langle \\Psi | \\hat{H} | \\Psi \\rangle`, so we just need to minimize the expectation values of the hamiltonian."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:217
msgid "Now that we solved the electronic hamiltonian, we have to add the nuclear energies."
msgstr ""

#: ../../tutorials/vqe_with_estimator.ipynb:244
msgid "Create the convergence plot"
msgstr ""

