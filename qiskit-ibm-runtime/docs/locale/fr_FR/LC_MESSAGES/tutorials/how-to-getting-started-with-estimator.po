msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-15 18:31+0000\n"
"PO-Revision-Date: 2023-08-14 19:29\n"
"Last-Translator: \n"
"Language: fr\n"
"Language-Team: French\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /main/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/how-to-getting-started-with-estimator.po\n"
"X-Crowdin-File-ID: 9818\n"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/how-to-getting-started-with-estimator.ipynb`__."
msgstr "Cette page a été générée à partir de ` docs/tutorials/how-to-getting-started-with-estimator.ipynb ` __."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:9
msgid "Get started with the Estimator primitive"
msgstr "Lanceur avec la primitive Estimateur"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:20
msgid "In this tutorial we will show you how to set up the Qiskit Runtime ``Estimator`` primitive, explore the different options you can use to configure it, and invoke the primitive efficiently inside a session."
msgstr "Dans ce tutoriel, nous allons vous montrer comment configurer la primitive Qiskit Runtime ``Estimator``, explorer les différentes options que vous pouvez utiliser pour le configurer et appeler la primitive efficacement au sein d'une session."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:32
msgid "Primitives"
msgstr "Primitives"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:43
msgid "Primitives are core functions that make it easier to build modular algorithms and applications."
msgstr "Les primitives sont des fonctions de base qui facilitent la construction d'algorithmes et d'applications modulaires."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:45
msgid "Rather than simply returning counts, they return more immediately meaningful information."
msgstr "Au lieu de simplement retourner les comptes, ils renvoient plus immédiatement des informations significatives."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:47
msgid "Additionally, they provide a seamless way to access the latest advancements in IBM Quantum hardware and software."
msgstr "De plus, ils offrent un moyen transparent d'accéder aux dernières avancées du matériel et des logiciels IBM Quantum."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:58
msgid "The initial release of Qiskit Runtime includes two primitives:"
msgstr "La version initiale de Qiskit Runtime comprend deux primitives:"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:60
msgid "**Sampler:** Generates quasi-probabilities from input circuits."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:62
msgid "**Estimator:** Calculates expectation values from input circuits and observables."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:73
msgid "In this tutorial we will focus on the ``Estimator`` primitive. There is a separate tutorial on `Getting started with the Sampler primitive <how-to-getting-started-with-sampler.ipynb>`__."
msgstr "Dans ce tutoriel, nous nous concentrerons sur la primitive \"Estimateur\". Il y a un tutoriel séparé sur \" Getting started with the Sampler primitive <how-to-getting-started-with-sampler.ipynb>` __."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:85
msgid "Using the Estimator primitive"
msgstr "Utilisation de la primitive Estimateur"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:96
msgid "Similar to the ``Backend`` base class, there is an ``Estimator`` base class defined in Qiskit Terra that standardizes the way users interact with all ``Estimator`` implementations. This allows users to easily change their choice of simulator or device for performing expectation value calculations, even if the underlying implementation is different."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:98
msgid "In this section we will be using the default implementation in Qiskit Terra, which uses a local state vector simulator."
msgstr "Dans cette section, nous utiliserons l'implémentation par défaut dans Qiskit Terra, qui utilise un simulateur de vecteur d'état local."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:110
msgid "1. Create a circuit"
msgstr "1. Création d'un circuit"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:121
msgid "For a basic expectation value calculation you will need at least one quantum circuit to prepare our system in a precise quantum state for study. Our examples all have circuits in them, but you can use Qiskit to create your own. To learn how to create circuits by using Qiskit, see the `Circuit basics tutorial <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>`__."
msgstr "Pour un calcul de la valeur d'attente de base, vous aurez besoin d'au moins un circuit quantique pour préparer notre système dans un état quantique précis pour l'étude. Nos exemples ont tous des circuits en eux, mais vous pouvez utiliser Qiskit pour créer votre propre. Pour savoir comment créer des circuits à l'aide de Qiskit, voir le tutoriel \"Circuit de base\" <https://qiskit.org/documentation/tutorials/circuits/01_circuit_basics.html>` __."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:154
msgid "2. Create an observable to measure"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:165
msgid "You will also need at least one observable to measure. Observables represent physical properties of a quantum system (such as energy or spin), and allow said properties to be measured (such as their expectation values) for a given state of our system. For simplicity, you can use the `SparsePauliOp class <https://qiskit.org/documentation/stubs/qiskit.quantum_info.SparsePauliOp.html#qiskit.quantum_info.SparsePauliOp>`__ in Qiskit to define them, as illustrated in the following example."
msgstr "Vous aurez également besoin d'au moins une mesure observable. Les observables représentent les propriétés physiques d'un système quantique (comme l'énergie ou le spin) et permettent de mesurer les propriétés (telles que leurs valeurs d'attente) pour un état donné de notre système. Par souci de simplicité, vous pouvez utiliser la classe \"SparsePauliOp\" <https://qiskit.org/documentation/stubs/qiskit.quantum_info.SparsePauliOp.html#qiskit.quantum_info.SparsePauliOp>` __ dans Qiskit pour les définir, comme illustré dans l'exemple suivant."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:214
msgid "3. Initialize an Estimator class"
msgstr "3. Initialiser une classe Estimator"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:229
msgid "The next step is to create an instance of an ``Estimator`` class. This can be any ``Estimator`` class that complies with the ``Estimator`` primitive specification. For simplicity, we will use Qiskit Terra's ``qiskit.primitives.Estimator`` class, based on the `Statevector construct <https://qiskit.org/documentation/stubs/qiskit.quantum_info.Statevector.html?highlight=statevector#qiskit.quantum_info.Statevector>`__ (algebraic simulation)."
msgstr "L'étape suivante consiste à créer une instance d'une classe ` ` Estimateur''. Il peut s'agir de n'importe quelle classe ` ` Estimateur''conforme à la spécification ` ` Estimateur ` ` primitif. Par souci de simplicité, nous utiliserons la classe \"`qiskit.primitives.Estimator\" de Qiskit Terra, basée sur la construction \"Statevecteur\" <https://qiskit.org/documentation/stubs/qiskit.quantum_info.Statevector.html?highlight=statevector#qiskit.quantum_info.Statevector>` __ (simulation algébrique)."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:253
#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:753
msgid "4. Invoke the Estimator and get results"
msgstr "4. Appeler l'Estimateur et obtenir des résultats"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:264
msgid "To calculate the expectation values, invoke the ``run()`` method of the ``Estimator`` instance you just created and pass in the circuit and observable as input parameters. This method call is asynchronous, and you will get a ``Job`` object back. You can use this object to query for information like ``job_id()`` and ``status()``."
msgstr "Pour calculer les valeurs d'attente, appelez la méthode ` ` run () ` ` de l'instance Estimator ` ` que vous venez de créer et de passer dans le circuit et observables en tant que paramètres d'entrée. Cet appel de méthode est asynchrone et vous obtiendrez un objet ` ` Job ` ` back. Vous pouvez utiliser cet objet pour rechercher des informations telles que ` ` job_id () ` ` et ` ` status () ` `."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:314
msgid "The ``result()`` method of the job will return the ``EstimatorResult``, which includes both the expectation values and job metadata."
msgstr "La méthode ` ` result (') du travail retournera le ` ` EstimatorResult ` `, qui inclut à la fois les valeurs de l'attente et les métadonnées de travail."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:364
msgid "You can keep invoking the ``run()`` method again with the different inputs:"
msgstr "Vous pouvez continuer à appeler la méthode ` ` run () ` ` à nouveau avec les différentes entrées:"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:429
msgid "You can also provide compound inputs to the ``run()`` method:"
msgstr "Vous pouvez également fournir des entrées composées à la méthode ` ` run () ` `:"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:509
msgid "Or use parameterized circuits:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:582
msgid "Using Qiskit Runtime Estimator"
msgstr "Utilisation de Qiskit Runtime Estimator"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:593
msgid "In this section we will go over how to use Qiskit Runtime's implementation of the ``Estimator`` primitive."
msgstr "Dans cette section, nous allons savoir comment utiliser la mise en oeuvre de Qiskit Runtime de la primitive \"Estimateur\"."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:605
msgid "1. Initialize the account"
msgstr "1. Initialiser le compte"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:616
msgid "Since Qiskit Runtime ``Estimator`` is a managed service, you will first need to initialize your account. You can then select the simulator or real backend you want to use to calculate the expectation value."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:618
msgid "Follow the steps in the `getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ if you don't already have an account set up."
msgstr "Suivez les étapes du guide \"démarrer\" <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>` __ si vous ne disposez pas déjà d'un compte."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:643
msgid "2. Create a circuit and an observable"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:654
msgid "Just like the section before, you will need at least one circuit and one observable as inputs to the ``Estimator`` primitive."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:716
msgid "3. Initialize the Qiskit Runtime Estimator"
msgstr "3. Initialisation de Qiskit Runtime Estimator"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:727
msgid "Here we are initializing an instance of ``qiskit_ibm_runtime.Estimator`` rather than ``qiskit.primitives.Estimator`` to use Qiskit Runtime's implementation of the ``Estimator``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:729
msgid "When you initialize the ``Estimator``, you'll need to pass in the backend you previously selected as the target device (or simulator), using the ``backend`` parameter."
msgstr "Lorsque vous configurez l'``Estimator``, vous devez passer le backend (ou simulateur) que vous avez précédemment sélectionné, en utilisant le paramètre ``backend``."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:764
msgid "You can then invoke the ``run()`` method to calculate expectation values for the input circuit(s) and observable(s)."
msgstr "Vous pouvez ensuite appeler la méthode ``run()`` pour calculer les valeurs d'attente pour le (s) circuit (s) d'entrée (s) et observable (s)."

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:858
msgid "Options"
msgstr "Options"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:869
msgid "Primitives come with several options that are grouped into different categories. Commonly used options, such as ``resilience_level``, are at the first level."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:871
msgid "|options|"
msgstr "|options|"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:873
msgid "options"
msgstr "Options"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:884
msgid "You can use the `Options <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__ class to specify different options."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:895
msgid "In the following example, we create an instance of the ``Options`` class. ``optimization_level`` is a first level option and can be passed as an input parameter. Options related to the execution environment are passed using the ``environment`` parameter."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:918
msgid "``Options`` supports auto-complete. Once you create an instance of the ``Options`` class, you can use auto-complete to see what options are available. If you choose one of the categories, you can use auto-complete again to see what options are available under that category."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:943
msgid "When creating an instance of the ``Estimator`` class, you can pass in the ``options`` you just created. Those options will then be applied when you use ``run()`` to perform the calculation."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:990
msgid "You can also pass options to the ``run()`` method. This will overwrite the options you specified when creating the ``Estimator`` instance for that particular execution."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:992
msgid "Since most users will only overwrite a handful of options at the job level, it is not necessary to specify the category the options are in. The following code, for example, specifies ``shots=1024`` rather than ``execution={\"shots\": 1024}`` (which is also valid)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1040
msgid "Error suppression and mitigation"
msgstr "Suppression et atténuation des erreurs"

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1051
msgid "``optimization_level`` and ``resilience_level`` are used to configure error suppress and mitigation."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1053
msgid "``Estimator`` supports ``optimization_level`` 0-3 and ``resilience_level`` 0-3."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1055
msgid "Advanced mitigation options can be specified under ``resilience``."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1121
msgid "Session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1132
msgid "A Qiskit Runtime *session* allows you to group a collection of iterative calls to the quantum computer. A session is started when the first job within the session is started. If the session is active, subsequent jobs within the session are prioritized by the scheduler to minimize artificial delay within an iterative algorithm. Data used within a session, such as transpiled circuits, is also cached to avoid unnecessary overhead."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1144
msgid "Session timing"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1155
msgid "When a session is started, it is assigned a maximum session timeout value. You can set this value by using the ``max_time`` parameter."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1157
msgid "If you don't specify a timeout value, it is set to the initial job's maximum execution time and is the smaller of these values:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1159
msgid "The system limit (see `What is the maximum execution time for a Qiskit Runtime job? <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/faqs/max_execution_time.html>`__)."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1160
msgid "The ``max_execution_time`` defined by the program."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1162
msgid "After this time limit is reached, the session is permanently closed."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1173
msgid "A session also has an *interactive* timeout value. If there are no session jobs queued within that window, the session is temporarily deactivated and normal job selection resumes. This interactive timeout value is set by the system and cannot be overwritten."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1185
msgid "Invoking Estimator.run within a session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1196
msgid "You can create a Qiskit Runtime session using the context manager (``with ...:``), which automatically opens and closes the session for you. You can invoke ``Estimator.run`` one or more times within a session:"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1254
msgid "Invoke multiple primitives in a session"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1265
msgid "You are not restricted to a single primitive function within a session. In this section we will show you an example of using multiple primitives."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1276
msgid "First we prepare a circuit for the sampler primitive."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1309
msgid "The following example shows how you can create both an instance of the ``Sampler`` class and one of the ``Estimator`` class and invoke their ``run()`` methods within a session."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1367
msgid "The calls can also be asynchronous. You don't need to wait for the result of a previous job before submitting another one."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1430
msgid "Summary"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1441
msgid "The following code recaps using Qiskit Runtime primitives, options, and session."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1523
msgid "Reference"
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1534
msgid "You can find more details about the ``Estimator`` methods in the `Estimator API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html#qiskit_ibm_runtime.Estimator>`__."
msgstr ""

#: ../../tutorials/how-to-getting-started-with-estimator.ipynb:1536
msgid "And all the available options in the `Options API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.options.Options.html#qiskit_ibm_runtime.options.Options>`__."
msgstr ""

