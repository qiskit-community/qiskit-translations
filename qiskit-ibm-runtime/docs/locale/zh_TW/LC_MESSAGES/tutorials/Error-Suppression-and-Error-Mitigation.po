msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 18:20+0000\n"
"PO-Revision-Date: 2023-03-02 20:12\n"
"Last-Translator: \n"
"Language: zh\n"
"Language-Team: Chinese Traditional\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: zh-TW\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/Error-Suppression-and-Error-Mitigation.po\n"
"X-Crowdin-File-ID: 9927\n"

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "This page was generated from `docs/tutorials/Error-Suppression-and-Error-Mitigation.ipynb`__."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "Error supression and error mitigation with Qiskit Runtime"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:11
msgid "**Pedro Rivero**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:12
msgid "Quantum Developer @ IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:13
msgid "`pedro.rivero@ibm.com <pedro.rivero@ibm.com>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:15
msgid "**Mariana Bernagozzi**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:16
msgid "Software Engineer @ IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:17
msgid "`mariana.bernagozzi@ibm.com <mariana.bernagozzi@ibm.com>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:51
msgid "Introduction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:53
msgid "To illustrate the need for error suppression and mitigation, we will start by taking a look at some results without error suppression or error mitigation. First, we are going to use a noiseless simulator to get an idea of what ideal results look like. Next, we are going to run the same experiment in a real backend without using error suppression or error mitigation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:55
msgid "For the experiments, we are going to use a list of Trotter circuits defined below."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:58
msgid "Create a Trotter circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:580
msgid "Simulator run"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:642
msgid "Unmitigated, real backend"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:704
msgid "Theory and background"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:707
msgid "IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:709
msgid "We want to build a tool which, beginning in 2024, is capable of estimating *noise-free observables* of *100-qubit* circuits, with *depth 100*, within *one day*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:711
msgid "Although this is not a promise for quantum advantage *per-se*, the goal is to get to the point where we can solve interesting or relevant problems faster, more accurately, or more cheaply in a practical time frame as compared to efficient classical computations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:722
msgid "The threshold for simulability seems to be at around 100 qubits. However, this is not enough qubits, as we also need a sufficiently complex quantum circuit to ensure that it cannot be reproduced classically. For example, deep, non-clifford."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:728
msgid "|57b1179eb34d41029f6025e35fb40e42|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:736
msgid "57b1179eb34d41029f6025e35fb40e42"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:734
msgid "With errors per gate of order ``1E-3``, we estimate a final fidelity of such a computation of about ``1E-6``, which implies totally meaningless results."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:746
msgid "Fault tolerant quantum computing"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:748
msgid "Errors are a natural occurrence in any computer. In quantum computers, these errors are usually more complex and happen when the quantum states are not prepared exactly how they should. For example, overshooting their target values or drifting away. Furthermore, the disturbances that generate these issues are typically unavoidable."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:750
msgid "There are several ways to handle these errors. The terminology can get confusing, as there is disagreement even within the field. We will break it into three core pieces:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:752
msgid "Supression"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:753
msgid "Mitigation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:754
msgid "Correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:756
msgid "Let’s start with the error correction, since it was the first one to be formally discovered within the field."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:768
msgid "Error correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:770
msgid "Error correction in classical computers is the standard procedure of encoding information in redundant ways to make it resilient to unwanted noise —allowing us to detect and correct errors as they occur."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:772
msgid "It has being known for a long time that the coupling of quantum systems to their environment sets a limit for any quantum computation, both in time and size. Nonetheless, theoretical discoveries in the form of *Quantum error correction* solved this issue early on."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:778
msgid "THRESHOLD THEOREM"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:780
msgid "If errors in quantum computers can be reduced below certain (finite) level, a fault-tolerant quantum computation could be carried out arbitrarily long even in noisy hardware."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:786
msgid "**Reference**: M.A. Nielsen, and I.L. Chuang, *Quantum Computation and Quantum Information*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:797
msgid "This is how we hope to achieve the ultimate goal of *fault-tolerant* quantum computation. However, even if we build hardware that can achieve the prescribed threshold, the overhead for performing full error correction, such as the necessary qubit count, makes it infeasible in the short term; as we will try to encode single qubit logical values across multiple physical qubits:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:800
msgid "n/d = 100/100 \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:800
msgid "p = \\text{1E-3} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:800
msgid "p = \\text{1E-4} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:800
msgid "p = \\text{1E-5} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:802
msgid "Runtime [:math:`s`]"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:802
msgid "2.3"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:802
msgid "1.2"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:802
msgid "0.8"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:804
msgid "Physical qubits"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:804
msgid "140k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:804
msgid "40k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:804
msgid "16k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:806
msgid "Distance"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:806
msgid "21"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:806
msgid "11"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:806
msgid "7"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:809
msgid "These *surface code resources*\\ \\* are well beyond our 2025 roadmap plans, although we are working hard in this area to make it feasible as soon as possible."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:820
msgid "\\* The data in the above table is based on simulations for surface codes with certain conditions. The code distance was chosen so that none of the T-gates, or 100 logical qubits at the end of runtime, had error greater than :math:`1\\text{E}-2`. The number of T-gates is :math:`n \\times d` and each parity check cycle takes :math:`1 \\mu s`."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:822
msgid "**Reference**: Daniel Litinski, *A Game of Surface Codes: Large-Scale Quantum Computing with Lattice Surgery*, `arXiv:1808.02892 <https://arxiv.org/abs/1808.02892>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:834
msgid "Error suppression"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:836
msgid "Error suppression is the most basic level of error handling. It often refers to a set of techniques performed close to hardware, such as altering control signals (i.e. Qiskit Pulse level). To make it simpler, we define these techniques as introducing *classical overhead*, usually within the transpilation/compilation process."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:838
msgid "These techniques are very old and were first developed outside of the field at the same time as some of the first controllable quantum systems such as magnetic resonance imaging devices."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:841
msgid "Dynamical decoupling (DD)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:843
msgid "Quantum computers have adopted some of these techniques like spin echos (a sequence of pulses that can help refocus the state of a qubit). As a matter of fact, spin echos play a big role in a class of techniques known as *Dynamical Decoupling* (DD), which sends pulses to idle qubits in order to reset their value to their original states, undoing the potentially harmful effects of nearby qubits that are being used for the calculation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:845
msgid "**Reference**: Lorenza Viola, and Seth Lloyd , *Dynamical suppression of decoherence in two-state quantum systems*, `arXiv:quant-ph/9803057 <https://arxiv.org/abs/quant-ph/9803057>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:934
msgid "Error mitigation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:936
msgid "Error mitigation introduces *quantum overhead* to our calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:938
msgid "Typically, error correction uses the outputs of multiple ensembles of noisy calculations to reduce or eliminate the noise in estimating quantities like expectation values — commonly by using classical post-processing. In this regard, error mitigation is different from error correction. Instead of fixing errors in every circuit run, errors are allowed to occur, then better results are inferred from several of these noisy calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:949
msgid "Since there is no threshold that one must surpass before QEM becomes practical, we see error mitigation as the key to realizing useful quantum computers in the near term."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:951
msgid "We are developing a portfolio of different error mitigation techniques, looking for three main things:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:953
msgid "Small overhead (*speed*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:954
msgid "Improved accuracy (*quality*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:955
msgid "Few assumptions (*scale*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:966
msgid "Each method come with their own associated overhead: a trade-off between the number of quantum computations needed (time) and the accuracy of our results. The level of accuracy that can be achieved is also specific to each method, and is usually inversely proportional to the previously mentioned overhead. Defining :math:`\\lambda` as the base noise in our computation:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:969
msgid "Methods"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:969
msgid "T-REx"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:969
msgid "ZNE"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:969
msgid "PEC"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:971
msgid "Assumptions"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:971
msgid "None"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:971
msgid "Ability to scale the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:971
msgid "Full knowledge of the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:973
msgid "Qubit overhead"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:973
msgid ":math:`1`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:975
msgid "Sampling overhead"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:975
msgid ":math:`2`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:975
msgid ":math:`N_\\text{noise-factors}`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:975
msgid ":math:`\\mathcal{O}(e^{\\lambda N_\\text{layers}})`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:977
msgid "Bias"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:977
msgid ":math:`0`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:977
msgid ":math:`\\mathcal{O}(\\lambda^{N_\\text{noise-factors}})`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:980
msgid "More detailed information is available at:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:982
msgid "T-REx: `arXiv:2012.09738 <https://arxiv.org/abs/2012.09738>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:983
msgid "ZNE: `arXiv:1612.02058 <https://arxiv.org/abs/1612.02058>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:984
msgid "PEC: `arXiv:1612.02058 <https://arxiv.org/abs/1612.02058>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:995
msgid "By having a portfolio of methods, users can choose which technique makes the most sense for their problem of interest, based on accuracy demands and how much overhead they are willing to accept. We are excited about this because, in the best scenarios, we can achieve unbiased results (that is, noise-free); and we want to make this capability accessible all across the stack: from kernel to algorithm and model developers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1007
msgid "Why is error mitigation important?"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1009
msgid "We need improvements in *scale*, *quality*, and *speed*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1011
msgid "The promise of error mitigation is to translate the continuous progress in quantum hardware into continuous improvements in quantum computations and quantum information processing. We expect that, while insufficient to fully overcome imperfections, every advancement should incrementally push the frontier of what can be achieved practically; as opposed to a scenario where little to no progress is made until we suddenly overcome the fault-tolerant threshold."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1017
msgid "|0f0d6ea11c0649c09a1c14817fe09f45|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1025
msgid "0f0d6ea11c0649c09a1c14817fe09f45"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1023
msgid "Beyond the 100x100 circuit, we envision a future where error correction and error mitigation can work in a hybrid way. In that regard, this approach has proven to be both practically effective and intellectually challenging."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1037
msgid "Concepts"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1039
msgid "The following terms are used in this section."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1045
msgid "TERMINOLOGY"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1047
msgid "As with every nascent field, terminology is sometimes incosistent: people use the same terms to refer to (slightly) different things."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1061
msgid "Estimators: Strategies for approximating certain physical values that are fundamentally unknown."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1067
msgid "Sampling: The process of taking several measurements of one or several things."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1073
msgid "Overhead: Extra costs introduced by new techniques, relative to a base implementation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1079
msgid "Bias: A systematic drift in the measured quantities, usually caused by errors."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1085
msgid "Shot/sample noise: Uncertainty in the obtained results due to a lack of infinite precision (that is, a finite number of samples)."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1101
msgid "Implications"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1103
msgid "When implementing any error mitigation technique, we expect the *bias* in our results to be reduced with respect to the previous, unmitigated, bias; in some cases even disappearing. However, this comes at a cost. As we reduce the bias in our estimated quantities, the statistical variability will increase (that is, *variance*), which we can account for by further increasing the number of shots per circuit in our sampling process. This will introduce overhead beyond that needed to reduce the bias, therefore it is not done by default. The user can easily opt in to this behavior by adjusting the amount of ``shots`` per circuit in ``run_options``."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1106
msgid "In mathematical terms, we expect our error mitigated estimator to be such that:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1108
msgid "0 \\leq\n"
"| \\text{Bias}[{\\langle}O{\\rangle}_\\text{em}] | \\leq\n"
"| \\text{Bias}[{\\langle}O{\\rangle}_\\text{noisy}] | \\\\\n"
"| \\text{Var}[{\\langle}O{\\rangle}_\\text{em}] | \\geq\n"
"| \\text{Var}[{\\langle}O{\\rangle}_\\text{noisy}] | > 0"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1121
msgid "|da9d0a8c51d74333a98244583cb70aec|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1127
msgid "da9d0a8c51d74333a98244583cb70aec"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1139
msgid "Twirled readout error extinction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1141
msgid "Twirled readout error extinction (T-REx) uses a technique known as Pauli twirling to reduce the noise introduced during the process of quantum measurement. This technique assumes no specific form of noise, which makes it very general and effective."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1144
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1256
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1366
msgid "Overall workflow"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1146
msgid "Acquire data for the zero state with randomized bit flips (i.e. Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1147
msgid "Acquire data for the desired (noisy) state with randomized bit flips (i.e. Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1148
msgid "Compute the special function for each data set, and divide."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1154
msgid "|04a520dd893d4b0380a6c15c10e33c7e|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1162
msgid "04a520dd893d4b0380a6c15c10e33c7e"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1160
msgid "**Reference**: E. van den Berg, Z. Minev, and K. Temme, *Model-free readout-error mitigation for quantum expectation values* `arXiv:2012.09738 <https://arxiv.org/abs/2012.09738>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1251
msgid "Zero noise extrapolation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1253
msgid "Zero noise extrapolation (ZNE) works by first amplifying the noise in the circuit that is preparing the desired quantum state, obtaining measurements for several different levels of noise, and using those measurements to infer the noiseless result."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1258
msgid "Amplify circuit noise for several noise factors"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1259
msgid "Run every noise amplified circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1260
msgid "Extrapolate back to the zero noise limit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1266
msgid "|d1f168aa1dce432493df9533eff9488f|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1272
msgid "d1f168aa1dce432493df9533eff9488f"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1359
msgid "Probabilistic error cancellation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1361
msgid "Probabilistic error cancellation (PEC) samples for a collection of circuits that, on average mimics a noise inverting channel to cancel out the noise in the desired computation. This process is a bit like how noise-cancelling headphones work, and produces great results, however it is not as general as other methods, and the sampling overhead is exponential."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1363
msgid "**Reference**: E. van den Berg, Z. Minev, A. Kandala, and K. Temme, *Probabilistic error cancellation with sparse Pauli-Lindblad models on noisy quantum processors* `arXiv:2201.09866 <https://arxiv.org/abs/2201.09866>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1372
msgid "|c4bb16672a4849ca828227fce0574f8c|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1378
msgid "c4bb16672a4849ca828227fce0574f8c"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1388
msgid "Step 1: Pauli twirling"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1390
msgid "|07211daad4c54aa5a2f601c07408b3b6|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1392
msgid "07211daad4c54aa5a2f601c07408b3b6"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1402
msgid "Step 2: Repeat layer and learn the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1404
msgid "|fd9051a68bda4b48bc4cde5c3f54370c|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1406
msgid "fd9051a68bda4b48bc4cde5c3f54370c"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1418
msgid "Step 3: Derive a fidelity (error for each noise channel)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1420
msgid "|3d3c098103a44f7a9d7858a2dbb21af8|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1422
msgid "3d3c098103a44f7a9d7858a2dbb21af8"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1562
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1588
msgid "PEC callback messages explained"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1564
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1590
msgid "**Layers detected:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1566
msgid "``2022-11-07 20:23:43.013816 *** Callback *** {'unique_layers_detected': 2, 'total_layers': 60}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1568
msgid "In the list of circuits passed to the Estimator, a total of **60** layers were detected and **two** of them were unique. Qiskit Runtime will learn the noise model for the two unique layers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1570
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1596
msgid "**Sampling overhead for layers:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1572
msgid "``2022-11-07 20:30:41.251325 *** Callback *** {'msg': 'Sampling overhead for layer 1/2: 1.0263820029324646'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1574
msgid "``2022-11-07 20:37:38.920151 *** Callback *** {'msg': 'Sampling overhead for layer 2/2: 1.0692954781746'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1576
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1600
msgid "These messages show the sampling overhead for each of the unique layers. Notice that it took roughly 7 minutes to learn the noise model of each layer."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1592
msgid "``2022-11-07 20:23:43.013816 *** Callback *** {'unique_layers_detected': '2, total_layers: 60'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1594
msgid "In the list of circuits passed to Estimator, a total of **60** layers were detected and **two** of them were unique. Qiskit Runtime will learn the noise model for the two unique layers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1598
msgid "``2022-11-07 20:30:41.251325 *** Callback *** {'msg': 'Sampling overhead for layer 1/2: 1.0263820029324646'}`` ``2022-11-07 20:37:38.920151 *** Callback *** {'msg': 'Sampling overhead for layer 2/2: 1.0692954781746'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1611
msgid "**Circuit total sampling overhead**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1613
msgid "Circuit 1 total sampling overhead: ``1.2045186180127132``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1615
msgid "``2022-11-07 20:37:39.336883 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.2045186180127132}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1617
msgid "Circuit 2 total sampling overhead: ``1.4508651011392564``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1619
msgid "``2022-11-07 20:37:39.334815 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.4508651011392564}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1621
msgid "Circuit 3 total sampling overhead: ``1.7475940265471324``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1623
msgid "``2022-11-07 20:37:39.336983 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.7475940265471324}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1625
msgid "Circuit 4 total sampling overhead: ``2.105009541703825``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1627
msgid "``2022-11-07 20:37:39.337099 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 2.105009541703825}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1629
msgid "Circuit 5 total sampling overhead: ``2.5355231840766654``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1631
msgid "``2022-11-07 20:37:39.338120 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 2.5355231840766654}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1633
msgid "The sampling overhead increases when there are more layers to mitigate."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1678
msgid "PEC metadata"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1680
msgid "Circuit 1:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1697
msgid "Circuit 2:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1714
msgid "Circuit 3:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1731
msgid "Circuit 4:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1748
msgid "Circuit 5"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1834
msgid "Combined plot"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1875
msgid "Advanced ZNE options"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1878
msgid "Noise amplification"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1880
msgid "As a first approach, we provide a noise amplification technique known as *unitary folding*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1882
msgid "**Reference**: Tudor Giurgica-Tiron, Yousef Hindy, Ryan LaRose, Andrea Mari, and William J. Zeng, *Digital zero noise extrapolation for quantum error mitigation* `arXiv:2005.10921 <https://arxiv.org/abs/2005.10921>`__."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1885
msgid "Digital vs analog"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1891
msgid "|10e1d2a1cfd24c729e59232bd38034e4|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1897
msgid "10e1d2a1cfd24c729e59232bd38034e4"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1907
msgid "Local vs global"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1913
msgid "|ce81a7747a6f4472b4ac1a9c27f67112|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1919
msgid "ce81a7747a6f4472b4ac1a9c27f67112"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1929
msgid "Extrapolation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1932
msgid "Useful noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1938
msgid "|b97a82fe853f460293b3c49ee03e8311|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1944
msgid "b97a82fe853f460293b3c49ee03e8311"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1954
msgid "Useless noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1960
msgid "|43e95d552b3f423e9ab2554370349bd2|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1966
msgid "43e95d552b3f423e9ab2554370349bd2"
msgstr ""

