msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-13 17:24+0000\n"
"PO-Revision-Date: 2023-04-13 17:45\n"
"Last-Translator: \n"
"Language: mr\n"
"Language-Team: Marathi\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: mr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/migrate/migrate-qiskit-alg.po\n"
"X-Crowdin-File-ID: 9955\n"

#: ../../migrate/migrate-qiskit-alg.rst:2
msgid "Work with updated Qiskit algorithms"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:15
msgid "The |qiskit.algorithms|_ module has been updated to leverage the primitives in all of its classes. In practice, this means that:"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:18
msgid "All algorithms now take in a primitive instead of a ``Backend`` or |QuantumInstance|_"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:19
msgid "Some algorithms now have a new import path"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:20
msgid "New primitive-specific algorithms have been introduced"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:21
msgid "As a side effect of the primitives refactoring, |qiskit.algorithms|_ no longer use |qiskit.opflow|_"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:28
msgid "Using **Runtime Sessions** can be particularly advantageous when working with variational algorithms, as they present iterative workloads that can submit multiple jobs per iteration. On top of this, the runtime primitives allow to try out different error mitigation techniques with no changes to the algorithm, just a simple option configuration."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:35
msgid "The following end-to-end example illustrates how to use one of the refactored algorithms from |qiskit.algorithms|_ with the **Qiskit Runtime primitives**. For a detailed explanation of other algorithm migration scenarios, see the `Qiskit algorithms migration guide <https://qisk.it/algo_migration>`_."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:40
msgid "Example: VQE"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:42
msgid "The legacy ``VQE`` algorithm has been split into two new implementations:"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:44
msgid "``VQE`` : Based on the Estimator"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:45
msgid "``SamplingVQE`` : For diagonal operators, based on the Sampler"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:47
msgid "The choice of implementation depends on the use case â€” whether you are interested in accessing the probability distribution corresponding to a quantum state (``SamplingVQE``) or an estimation of the ground state energy which might require, for example, measurements in multiple bases (``VQE``)."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:51
msgid "Let's see the workflow changes for the Estimator-based VQE implementation:"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:54
msgid "Step 1: Problem definition"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:56
msgid "The problem definition step is common to the old and new workflow: defining the Hamiltonian, ansatz, optimizer and initial point."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:59
msgid "The only difference is that the operator definition now relies on |qiskit.quantum_info|_ instead of |qiskit.opflow|_ . In practice, this means that all ``PauliSumOp`` dependencies should be replaced by ``SparsePauliOp``."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:69
msgid "All of the refactored classes in |qiskit.algorithms|_ now take in operators as instances of ``SparsePauliOp`` instead of ``PauliSumOp``."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:73
msgid "The ansatz, optimizer and initial point are defined identically:"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:102
msgid "The operator definition changes"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:150
msgid "Step 2: Backend setup"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:153
msgid "Let's say that you want to run VQE on the ``ibmq_qasm_simulator`` in the cloud. Before you would load you IBMQ account, get the corresponding backend from the provider, and use it to set up a |QuantumInstance|_. Now, you need to initialize a ``QiskitRuntimeService``, open a `session`_ and use it to instantiate your :class:`.Estimator`."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:195
msgid "Step 3: Run VQE"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:197
msgid "Now that both the problem and the execution path have been set up, you can instantiate and run VQE. Close the session only if all jobs are finished and you don't need to run more jobs in the session."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:201
msgid "``VQE`` is one of the algorithms with a changed import path. If you do not specify the full path during the import, you might run into conflicts with the legacy code."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:241
msgid "Using context managers"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:243
msgid "We recommend that you initialize your primitive and run your algorithm using a context manager. The code for steps 2 and 3 would then look like:"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:261
msgid "Related links"
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:262
msgid "See the `Session documentation <./how_to/run_session.html>` for further information about the Qiskit Runtime sessions."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:263
msgid "See the `How to run a primitive in a session <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/how_to/run_session.html>`__ topic for detailed code examples."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:264
msgid "See the `Qiskit algorithm documentation <https://qiskit.org/documentation/apidoc/algorithms.html>`__ for details about each algorithm."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:265
msgid "See the `Qiskit algorithm tutorials <https://qiskit.org/documentation/tutorials/algorithms/index.html>`__ for examples of how to use algorithms."
msgstr ""

#: ../../migrate/migrate-qiskit-alg.rst:266
msgid "Read the blog `Introducing Qiskit Algorithms With Qiskit Primitives! <https://medium.com/qiskit/introducing-qiskit-algorithms-with-qiskit-runtime-primitives-d89703ecfca3>`__ for an introduction to using the updated algorithms."
msgstr ""

