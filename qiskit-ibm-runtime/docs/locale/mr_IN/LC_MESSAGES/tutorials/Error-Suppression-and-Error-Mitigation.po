msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-30 17:25+0000\n"
"PO-Revision-Date: 2023-03-30 18:16\n"
"Last-Translator: \n"
"Language: mr\n"
"Language-Team: Marathi\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: mr\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/Error-Suppression-and-Error-Mitigation.po\n"
"X-Crowdin-File-ID: 9927\n"

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "This page was generated from `docs/tutorials/Error-Suppression-and-Error-Mitigation.ipynb`__."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:9
msgid "Error suppression and error mitigation with Qiskit Runtime"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:11
msgid "**Pedro Rivero**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:12
msgid "Quantum Developer @ IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:13
msgid "`pedro.rivero@ibm.com <pedro.rivero@ibm.com>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:15
msgid "**Mariana Bernagozzi**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:16
msgid "Software Engineer @ IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:17
msgid "`mariana.bernagozzi@ibm.com <mariana.bernagozzi@ibm.com>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:56
msgid "Introduction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:58
msgid "To illustrate the need for error suppression and mitigation, we will start by taking a look at some results without error suppression or error mitigation. First, we are going to use a noiseless simulator to get an idea of what ideal results look like. Next, we are going to run the same experiment in a real backend without using error suppression or error mitigation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:60
msgid "The following code cell defines a list of Trotter circuits for use in the experiments."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:63
msgid "Create a Trotter circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:585
msgid "Simulator run"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:649
msgid "Unmitigated, real backend"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:713
msgid "Theory and background"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:716
msgid "IBM Quantum"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:718
msgid "We want to build a tool which, beginning in 2024, is capable of estimating *noise-free observables* of *100-qubit* circuits, with *depth 100*, within *one day*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:720
msgid "Although this is not a promise for quantum advantage *per-se*, the goal is to get to the point where we can solve interesting or relevant problems faster, more accurately, or more cheaply in a practical time frame as compared to efficient classical computations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:731
msgid "The threshold for simulability seems to be at around 100 qubits. However, this is not enough qubits, as we also need a sufficiently complex quantum circuit to ensure that it cannot be reproduced classically. For example, deep, non-clifford."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:737
msgid "|566392e13b5548d2a0858812cae15827|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:745
msgid "566392e13b5548d2a0858812cae15827"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:743
msgid "With errors per gate of order ``1E-3``, we estimate a final fidelity of such a computation of about ``1E-6``, which implies totally meaningless results."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:755
msgid "Fault tolerant quantum computing"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:757
msgid "Errors are a natural occurrence in any computer. In quantum computers, these errors are usually more complex and happen when the quantum states are not prepared exactly how they should. For example, overshooting their target values or drifting away. Furthermore, the disturbances that generate these issues are typically unavoidable."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:759
msgid "There are several ways to handle these errors. The terminology can get confusing, as there is disagreement even within the field. We will break it into three core pieces:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:761
msgid "Suppression"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:762
msgid "Mitigation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:763
msgid "Correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:765
msgid "Let's start with the error correction, since it was the first one to be formally discovered within the field."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:777
msgid "Error correction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:779
msgid "Error correction in classical computers is the standard procedure of encoding information in redundant ways to make it resilient to unwanted noise â€”allowing us to detect and correct errors as they occur."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:781
msgid "It has being known for a long time that the coupling of quantum systems to their environment sets a limit for any quantum computation, both in time and size. Nonetheless, theoretical discoveries in the form of *Quantum error correction* solved this issue early on."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:787
msgid "THRESHOLD THEOREM"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:789
msgid "If errors in quantum computers can be reduced below certain (finite) level, a fault-tolerant quantum computation could be carried out arbitrarily long even in noisy hardware."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:795
msgid "**Reference**: M.A. Nielsen, and I.L. Chuang, *Quantum Computation and Quantum Information*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:806
msgid "This is how we hope to achieve the ultimate goal of *fault-tolerant* quantum computation. However, even if we build hardware that can achieve the prescribed threshold, the overhead for performing full error correction, such as the necessary qubit count, makes it infeasible in the short term; as we will try to encode single qubit logical values across multiple physical qubits:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:809
msgid "n/d = 100/100 \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:809
msgid "p = \\text{1E-3} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:809
msgid "p = \\text{1E-4} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:809
msgid "p = \\text{1E-5} \\quad\n\n"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:811
msgid "Runtime [:math:`s`]"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:811
msgid "2.3"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:811
msgid "1.2"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:811
msgid "0.8"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:813
msgid "Physical qubits"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:813
msgid "140k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:813
msgid "40k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:813
msgid "16k"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:815
msgid "Distance"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:815
msgid "21"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:815
msgid "11"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:815
msgid "7"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:818
msgid "These *surface code resources*\\ \\* are well beyond our 2025 roadmap plans, although we are working hard in this area to make it feasible as soon as possible."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:829
msgid "\\* The data in the previous table is based on simulations for surface codes with certain conditions. The code distance was chosen so that none of the T-gates, or 100 logical qubits at the end of runtime, had error greater than :math:`1\\text{E}-2`. The number of T-gates is :math:`n \\times d` and each parity check cycle takes :math:`1 \\mu s`."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:831
msgid "**Reference**: Daniel Litinski, *A Game of Surface Codes: Large-Scale Quantum Computing with Lattice Surgery*, `arXiv:1808.02892 <https://arxiv.org/abs/1808.02892>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:843
msgid "Error suppression"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:845
msgid "Error suppression is the most basic level of error handling. It often refers to a set of techniques performed close to hardware, such as altering control signals (that is, at Qiskit Pulse level). To make it simpler, we define these techniques as introducing *classical overhead*, usually within the transpilation/compilation process."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:847
msgid "These techniques are very old and were first developed outside of the field at the same time as some of the first controllable quantum systems such as magnetic resonance imaging devices."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:850
msgid "Dynamical decoupling (DD)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:852
msgid "Quantum computers have adopted some of these techniques like spin echos (a sequence of pulses that can help refocus the state of a qubit). As a matter of fact, spin echos play a big role in a class of techniques known as *Dynamical Decoupling* (DD), which sends pulses to idle qubits to reset their value to their original states, undoing the potentially harmful effects of nearby qubits that are being used for the calculation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:854
msgid "**Reference**: Lorenza Viola, and Seth Lloyd , *Dynamical suppression of decoherence in two-state quantum systems*, `arXiv:quant-ph/9803057 <https://arxiv.org/abs/quant-ph/9803057>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:972
msgid "Error mitigation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:974
msgid "Error mitigation introduces *quantum overhead* to our calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:976
msgid "Typically, error correction uses the outputs of multiple ensembles of noisy calculations to reduce or eliminate the noise in estimating quantities like expectation values â€” commonly by using classical post-processing. In this regard, error mitigation is different from error correction. Rather than fixing errors in every circuit run, errors are allowed to occur, then better results are inferred from several of these noisy calculations."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:987
msgid "Since there is no threshold that one must surpass before quantum error mitigation becomes practical, we see error mitigation as the key to realizing useful quantum computers in the near term."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:989
msgid "We are developing a portfolio of different error mitigation techniques, looking for three main things:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:991
msgid "Small overhead (*speed*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:992
msgid "Improved accuracy (*quality*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:993
msgid "Few assumptions (*scale*)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1004
msgid "Each method come with their own associated overhead: a trade-off between the number of quantum computations needed (time) and the accuracy of our results. The level of accuracy that can be achieved is also specific to each method, and is usually inversely proportional to the previously mentioned overhead. Defining :math:`\\lambda` as the base noise in our computation:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1007
msgid "Methods"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1007
msgid "T-REx"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1007
msgid "ZNE"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1007
msgid "PEC"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1009
msgid "Assumptions"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1009
msgid "None"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1009
msgid "Ability to scale the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1009
msgid "Full knowledge of the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1011
msgid "Qubit overhead"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1011
msgid ":math:`1`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1013
msgid "Sampling overhead"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1013
msgid ":math:`2`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1013
msgid ":math:`N_\\text{noise-factors}`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1013
msgid ":math:`\\mathcal{O}(e^{\\lambda N_\\text{layers}})`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1015
msgid "Bias"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1015
msgid ":math:`0`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1015
msgid ":math:`\\mathcal{O}(\\lambda^{N_\\text{noise-factors}})`"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1018
msgid "More detailed information is available at:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1020
msgid "T-REx: `arXiv:2012.09738 <https://arxiv.org/abs/2012.09738>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1021
msgid "ZNE: `arXiv:1612.02058 <https://arxiv.org/abs/1612.02058>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1022
msgid "PEC: `arXiv:1612.02058 <https://arxiv.org/abs/1612.02058>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1033
msgid "By having a portfolio of methods, users can choose which technique makes the most sense for their problem of interest, based on accuracy demands and how much overhead they are willing to accept. We are excited about this because, in the best scenarios, we can achieve unbiased results (that is, noise-free); and we want to make this capability accessible all across the stack: from kernel to algorithm and model developers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1045
msgid "Why is error mitigation important?"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1047
msgid "We need improvements in *scale*, *quality*, and *speed*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1049
msgid "The promise of error mitigation is to translate the continuous progress in quantum hardware into continuous improvements in quantum computations and quantum information processing. We expect that, while insufficient to fully overcome imperfections, every advancement should incrementally push the frontier of what can be achieved practically; as opposed to a scenario where little to no progress is made until we suddenly overcome the fault-tolerant threshold."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1055
msgid "|e8d81adb60ea4738b566cb0d40216086|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1063
msgid "e8d81adb60ea4738b566cb0d40216086"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1061
msgid "Beyond the 100x100 circuit, we envision a future where error correction and error mitigation can work in a hybrid way. In that regard, this approach has proven to be both practically effective and intellectually challenging."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1075
msgid "Concepts"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1077
msgid "The following terms are used in this section."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1083
msgid "TERMINOLOGY"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1085
msgid "As with every nascent field, terminology is sometimes incosistent: people use the same terms to refer to (slightly) different things."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1099
msgid "Estimators: Strategies for approximating certain physical values that are fundamentally unknown."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1105
msgid "Sampling: The process of taking several measurements of one or several things."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1111
msgid "Overhead: Extra costs introduced by new techniques, relative to a base implementation."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1117
msgid "Bias: A systematic drift in the measured quantities, usually caused by errors."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1123
msgid "Shot/sample noise: Uncertainty in the obtained results due to a lack of infinite precision (that is, a finite number of samples)."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1139
msgid "Implications"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1141
msgid "When implementing any error mitigation technique, we expect the *bias* in our results to be reduced with respect to the previous, unmitigated, bias; in some cases even disappearing. However, this comes at a cost. As we reduce the bias in our estimated quantities, the statistical variability will increase (that is, *variance*), which we can account for by further increasing the number of shots per circuit in our sampling process. This will introduce overhead beyond that needed to reduce the bias, therefore it is not done by default. The user can easily opt in to this behavior by adjusting the amount of ``shots`` per circuit in ``run_options``."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1144
msgid "In mathematical terms, we expect our error mitigated estimator to be such that:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1146
msgid "0 \\leq\n"
"| \\text{Bias}[{\\langle}O{\\rangle}_\\text{em}] | \\leq\n"
"| \\text{Bias}[{\\langle}O{\\rangle}_\\text{noisy}] | \\\\\n"
"| \\text{Var}[{\\langle}O{\\rangle}_\\text{em}] | \\geq\n"
"| \\text{Var}[{\\langle}O{\\rangle}_\\text{noisy}] | > 0"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1159
msgid "|797eeb3159d948cdb0005c58ee28bf98|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1165
msgid "797eeb3159d948cdb0005c58ee28bf98"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1177
msgid "Twirled readout error extinction"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1179
msgid "Twirled readout error extinction (T-REx) uses a technique known as Pauli twirling to reduce the noise introduced during the process of quantum measurement. This technique assumes no specific form of noise, which makes it very general and effective."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1182
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1323
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1459
msgid "Overall workflow"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1184
msgid "Acquire data for the zero state with randomized bit flips (Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1185
msgid "Acquire data for the desired (noisy) state with randomized bit flips (Pauli X before measurement)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1186
msgid "Compute the special function for each data set, and divide."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1192
msgid "|01b3d3797fd74d0d940c7acc1d989ce7|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1200
msgid "01b3d3797fd74d0d940c7acc1d989ce7"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1198
msgid "**Reference**: E. van den Berg, Z. Minev, and K. Temme, *Model-free readout-error mitigation for quantum expectation values* `arXiv:2012.09738 <https://arxiv.org/abs/2012.09738>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1318
msgid "Zero noise extrapolation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1320
msgid "Zero noise extrapolation (ZNE) works by first amplifying the noise in the circuit that is preparing the desired quantum state, obtaining measurements for several different levels of noise, and using those measurements to infer the noiseless result."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1325
msgid "Amplify circuit noise for several noise factors"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1326
msgid "Run every noise amplified circuit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1327
msgid "Extrapolate back to the zero noise limit"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1333
msgid "|81eb6dd496004d9ebd6f9e8ab1e17862|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1339
msgid "81eb6dd496004d9ebd6f9e8ab1e17862"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1452
msgid "Probabilistic error cancellation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1454
msgid "Probabilistic error cancellation (PEC) samples for a collection of circuits that, on average mimics a noise inverting channel to cancel out the noise in the desired computation. This process is a bit like how noise-cancelling headphones work, and produces great results; however, it is not as general as other methods, and the sampling overhead is exponential."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1456
msgid "**Reference**: E. van den Berg, Z. Minev, A. Kandala, and K. Temme, *Probabilistic error cancellation with sparse Pauli-Lindblad models on noisy quantum processors* `arXiv:2201.09866 <https://arxiv.org/abs/2201.09866>`__"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1465
msgid "|99b36eee8d9a42c598d24e397093368c|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1471
msgid "99b36eee8d9a42c598d24e397093368c"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1481
msgid "Step 1: Pauli twirling"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1483
msgid "|360213b2ad3a44408b6b54b7978165c1|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1485
msgid "360213b2ad3a44408b6b54b7978165c1"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1495
msgid "Step 2:Â Repeat layer and learn the noise"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1497
msgid "|20ec529e8c384a46b8ec900ed955b198|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1499
msgid "20ec529e8c384a46b8ec900ed955b198"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1511
msgid "Step 3: Derive a fidelity (error for each noise channel)"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1513
msgid "|eaabaf97811d40d3a7b9cc476acdc9e3|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1515
msgid "eaabaf97811d40d3a7b9cc476acdc9e3"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1682
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1708
msgid "PEC callback messages explained"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1684
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1710
msgid "**Layers detected:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1686
msgid "``2022-11-07 20:23:43.013816 *** Callback *** {'unique_layers_detected': 2, 'total_layers': 60}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1688
msgid "In the list of circuits passed to the Estimator, a total of **60** layers were detected and **two** of them were unique. Qiskit Runtime will learn the noise model for the two unique layers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1690
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1716
msgid "**Sampling overhead for layers:**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1692
msgid "``2022-11-07 20:30:41.251325 *** Callback *** {'msg': 'Sampling overhead for layer 1/2: 1.0263820029324646'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1694
msgid "``2022-11-07 20:37:38.920151 *** Callback *** {'msg': 'Sampling overhead for layer 2/2: 1.0692954781746'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1696
#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1720
msgid "These messages show the sampling overhead for each of the unique layers. Notice that it took roughly 7 minutes to learn the noise model of each layer."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1712
msgid "``2022-11-07 20:23:43.013816 *** Callback *** {'unique_layers_detected': '2, total_layers: 60'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1714
msgid "In the list of circuits passed to Estimator, a total of **60** layers were detected and **two** of them were unique. Qiskit Runtime will learn the noise model for the two unique layers."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1718
msgid "``2022-11-07 20:30:41.251325 *** Callback *** {'msg': 'Sampling overhead for layer 1/2: 1.0263820029324646'}`` ``2022-11-07 20:37:38.920151 *** Callback *** {'msg': 'Sampling overhead for layer 2/2: 1.0692954781746'}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1731
msgid "**Circuit total sampling overhead**"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1733
msgid "Circuit 1 total sampling overhead: ``1.2045186180127132``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1735
msgid "``2022-11-07 20:37:39.336883 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.2045186180127132}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1737
msgid "Circuit 2 total sampling overhead: ``1.4508651011392564``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1739
msgid "``2022-11-07 20:37:39.334815 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.4508651011392564}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1741
msgid "Circuit 3 total sampling overhead: ``1.7475940265471324``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1743
msgid "``2022-11-07 20:37:39.336983 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 1.7475940265471324}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1745
msgid "Circuit 4 total sampling overhead: ``2.105009541703825``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1747
msgid "``2022-11-07 20:37:39.337099 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 2.105009541703825}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1749
msgid "Circuit 5 total sampling overhead: ``2.5355231840766654``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1751
msgid "``2022-11-07 20:37:39.338120 *** Callback *** {sampling_overhead_by_layer: [1.0692954781746, 1.0263820029324646], unique_layers: 2, total_sampling_overhead: 2.5355231840766654}``"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1753
msgid "The sampling overhead increases when there are more layers to mitigate."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1798
msgid "PEC metadata"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1800
msgid "Circuit 1:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1817
msgid "Circuit 2:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1834
msgid "Circuit 3:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1851
msgid "Circuit 4:"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1868
msgid "Circuit 5"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:1968
msgid "Combined plot"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2055
msgid "Advanced ZNE options"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2058
msgid "Noise amplification"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2060
msgid "As a first approach, we provide a noise amplification technique known as *unitary folding*."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2062
msgid "**Reference**: Tudor Giurgica-Tiron, Yousef Hindy, Ryan LaRose, Andrea Mari, and William J. Zeng, *Digital zero noise extrapolation for quantum error mitigation* `arXiv:2005.10921 <https://arxiv.org/abs/2005.10921>`__."
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2065
msgid "Digital vs analog"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2071
msgid "|cc96ad87b12d43a8b80bb30bffeeead6|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2077
msgid "cc96ad87b12d43a8b80bb30bffeeead6"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2087
msgid "Local vs global"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2093
msgid "|254412e521584a588ca47b2505bc5441|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2099
msgid "254412e521584a588ca47b2505bc5441"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2109
msgid "Extrapolation"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2112
msgid "Useful noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2118
msgid "|81fff4c8bf5b45418ea36788b936e734|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2124
msgid "81fff4c8bf5b45418ea36788b936e734"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2134
msgid "Useless noise profiles"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2140
msgid "|a4748864b0f14c7c83b9e0d2bbc9e16a|"
msgstr ""

#: ../../tutorials/Error-Suppression-and-Error-Mitigation.ipynb:2146
msgid "a4748864b0f14c7c83b9e0d2bbc9e16a"
msgstr ""

