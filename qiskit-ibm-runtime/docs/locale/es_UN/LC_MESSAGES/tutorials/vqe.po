msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-21 16:00+0000\n"
"PO-Revision-Date: 2022-07-11 00:46\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe.po\n"
"X-Crowdin-File-ID: 9832\n"
"Language: es_UN\n"

#: ../../tutorials/vqe.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/vqe.ipynb`__."

#: ../../tutorials/vqe.ipynb:9
msgid "VQE"
msgstr "VQE"

#: ../../tutorials/vqe.ipynb:11
msgid "The Variational Quantum Eigensolver (VQE) is a central algorithm in many applications from e.g. quantum chemistry or optimization. This tutorial shows you how to run the VQE as a Qiskit Runtime program. We’ll start off by defining the algorithm settings, such as the Hamiltonian and ansatz, and then run a VQE both locally, on your machine, and remotely, using the Qiskit Runtime."
msgstr "El Solucionador Propio Variacional Cuántico (Variational Quantum Eigensolver, VQE) es un algoritmo central en muchas aplicaciones, por ejemplo, en la química cuántica o en la optimización. Este tutorial te muestra cómo ejecutar el VQE como un programa Qiskit Runtime. Comenzaremos definiendo la configuración del algoritmo, como el Hamiltoniano y ansatz, y luego ejecutaremos un VQE localmente, en tu máquina, y de forma remota, utilizando Qiskit Runtime."

#: ../../tutorials/vqe.ipynb:13
msgid "**Note:** You can find tutorials on solving more comprehensive problems, such as finding the ground state of the lithium hydride molecule, using the VQE (and Qiskit Runtime) within `the tutorials of Qiskit Nature <https://github.com/Qiskit/qiskit-nature/tree/main/docs/tutorials>`__."
msgstr "**Nota:** Puedes encontrar tutoriales sobre cómo resolver problemas más completos, como encontrar el estado fundamental de la molécula de hidruro de litio, usando VQE (y Qiskit Runtime) dentro de `los tutoriales de Qiskit Nature <https://github.com/Qiskit/qiskit-nature/tree/main/docs/tutorials>`__."

#: ../../tutorials/vqe.ipynb:25
msgid "System Hamiltonian"
msgstr "Hamiltoniano del Sistema"

#: ../../tutorials/vqe.ipynb:36
msgid "Let’s start by defining the operator of which we want to determine the ground state. Here we’ll chose a simple diagonal Hamiltonian :math:`\\hat H` acting with Pauli-Z operators on the first two qubits"
msgstr "Empecemos definiendo el operador del que queremos determinar el estado fundamental. Aquí elegiremos un Hamiltoniano diagonal simple :math:`\\hat H` que actúa con operadores de Pauli Z en los dos primeros qubits"

#: ../../tutorials/vqe.ipynb:38
msgid "\\hat H = \\hat Z_0 \\otimes \\hat Z_1."
msgstr "\\hat H = \\hat Z_0 \\otimes \\hat Z_1."

#: ../../tutorials/vqe.ipynb:43
msgid "We can construct this Hamiltonian with Qiskit’s ``opflow`` module:"
msgstr "Podemos construir este Hamiltoniano con el módulo ``opflow`` de Qiskit:"

#: ../../tutorials/vqe.ipynb:67
msgid "This Hamiltonian has a ground state energy of -1."
msgstr "Este Hamiltoniano tiene una energía de estado fundamental de -1."

#: ../../tutorials/vqe.ipynb:89
msgid "Parameterized Ansatz Circuit"
msgstr "Circuito Ansatz Parametrizado"

#: ../../tutorials/vqe.ipynb:100
msgid "Next, we choose a parameterized quantum circuit :math:`\\hat U(\\theta)` to prepare the ansatz wavefunction"
msgstr "A continuación, elegimos un circuito cuántico parametrizado :math:`\\hat U(\\theta)` para preparar la función de onda ansatz"

#: ../../tutorials/vqe.ipynb:102
msgid "|\\psi(\\theta)\\rangle = \\hat U(\\theta)|0\\rangle."
msgstr "|\\psi(\\theta)\\rangle = \\hat U(\\theta)|0\\rangle."

#: ../../tutorials/vqe.ipynb:107
msgid "We’ll use the ``EfficientSU2`` circuit from Qiskit’s circuit library, which is a hardware efficient, heuristic ansatz with alternating rotation and entanglement layers."
msgstr "Usaremos el circuito ``EfficientSU2`` de la biblioteca de circuitos de Qiskit, que es un ansatz heurístico eficiente en hardware con rotación alterna y capas entrelazadas."

#: ../../tutorials/vqe.ipynb:142
msgid "Solve with the VQE"
msgstr "Resolver con el VQE"

#: ../../tutorials/vqe.ipynb:153
msgid "Now that we have the problem and ansatz specified we can use the Variational Quantum Eigensolver (VQE) to solve for the minimal eigenvalue of our Hamiltonian."
msgstr "Ahora que tenemos el problema y el ansatz especificados, podemos usar el Solucionador Propio Variacional Cuántico (Variational Quantum Eigensolver, VQE) para resolver el valor propio mínimo de nuestro Hamiltoniano."

#: ../../tutorials/vqe.ipynb:155
msgid "The VQE requires a classical optimization routine, along with an initial point, to calculate the parameter updates."
msgstr "El VQE requiere una rutina de optimización clásica, junto con un punto inicial, para calcular las actualizaciones de los parámetros."

#: ../../tutorials/vqe.ipynb:182
msgid "To access intermediate information we can pass a callback into the VQE. The callback is given the current number of function evaluations, the current parameters, function values and standard deviation in the expectation evaluation."
msgstr "Para acceder a la información intermedia, podemos pasar una devolución de llamada (callback) al VQE. La devolución de llamada recibe el número actual de evaluaciones de la función, los parámetros actuales, los valores de la función y la desviación estándar en la evaluación de valores esperados."

#: ../../tutorials/vqe.ipynb:211
msgid "Local VQE"
msgstr "VQE local"

#: ../../tutorials/vqe.ipynb:213
msgid "Before running the Qiskit Runtime VQE program, let’s first simulate this system locally using Qiskit’s ``VQE`` class."
msgstr "Antes de ejecutar el programa Qiskit Runtime VQE, primero simulemos este sistema localmente usando la clase ``VQE`` de Qiskit."

#: ../../tutorials/vqe.ipynb:291
msgid "With the information from the callback, we can for instance compute the average of the estimation errors in the expectation evaluations. For an exact (statevector) simulation this would be 0, but for a shot-based readout as we have on real hardware, this will be a small finite error."
msgstr "Con la información de la devolución de llamada, podemos, por ejemplo, calcular el promedio de los errores de estimación en las evaluaciones de valores esperados. Para una simulación exacta (vector de estado), esto sería 0, pero para una lectura basada en iteraciones como la que tenemos en el hardware real, será un pequeño error finito."

#: ../../tutorials/vqe.ipynb:337
msgid "Qiskit Runtime VQE"
msgstr "VQE en Qiskit Runtime"

#: ../../tutorials/vqe.ipynb:348
msgid "To call the VQE code on the Qiskit Runtime on the cloud, we interact with the ``run`` method of ``QiskitRuntimeService``:"
msgstr "Para llamar al código VQE en Qiskit Runtime en la nube, interactuamos con el método ``run`` de ``QiskitRuntimeService``:"

#: ../../tutorials/vqe.ipynb:354
msgid "where"
msgstr "donde"

#: ../../tutorials/vqe.ipynb:356
msgid "``program_id`` determines the Qiskit Runtime program run, i.e. \\ ``'vqe'`` for the VQE"
msgstr "``program_id`` determina la ejecución del programa Qiskit Runtime, es decir, ``'vqe''`` para el VQE"

#: ../../tutorials/vqe.ipynb:357
msgid "``inputs`` contains the input for the VQE algorithm"
msgstr "``inputs`` contiene la entrada para el algoritmo VQE"

#: ../../tutorials/vqe.ipynb:358
msgid "``options`` specifies the backend"
msgstr "``options`` especifica el backend"

#: ../../tutorials/vqe.ipynb:359
msgid "``callback`` is the callback used inside the VQE"
msgstr "``callback`` es la devolución de llamada utilizada dentro del VQE"

#: ../../tutorials/vqe.ipynb:370
msgid "We start by initializing an account with access to the Qiskit Runtime service and the backend to execute the circuits on"
msgstr "Comenzamos inicializando una cuenta con acceso al servicio Qiskit Runtime y el backend para ejecutar los circuitos"

#: ../../tutorials/vqe.ipynb:393
msgid "We’re using the ``ibmq_montreal`` device, but you can replace this with another device you have access to."
msgstr "Estamos usando el dispositivo ``ibmq_montreal``, pero puedes reemplazarlo con otro dispositivo al que tengas acceso."

#: ../../tutorials/vqe.ipynb:414
msgid "Let’s gather all the inputs to the VQE in a dictionary."
msgstr "Reunamos todas las entradas al VQE en un diccionario."

#: ../../tutorials/vqe.ipynb:442
msgid "The backend options only need to contain the name of the backend."
msgstr "Las opciones del backend solo necesitan contener el nombre del backend."

#: ../../tutorials/vqe.ipynb:463
msgid "The callback acts a little different than before. Instead of only being passed the VQE callback arguments, it is passed a tuple with the job ID as first argument, followed by the VQE arguments."
msgstr "La devolución de llamada actúa un poco diferente que antes. En lugar de pasar solo los argumentos del callback de VQE, se pasa una tupla con el ID del trabajo (job) como primer argumento, seguido de los argumentos de VQE."

#: ../../tutorials/vqe.ipynb:494
msgid "Now we can call the Qiskit Runtime VQE program. Note, that the result will not be of the same type as ``VQE``, but a plain dictionary."
msgstr "Ahora podemos llamar al programa VQE en Qiskit Runtime. Ten en cuenta que el resultado no será del mismo tipo que ``VQE``, sino un diccionario simple."

