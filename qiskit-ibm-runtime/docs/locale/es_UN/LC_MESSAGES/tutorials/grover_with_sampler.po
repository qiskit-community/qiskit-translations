msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-10 16:30+0000\n"
"PO-Revision-Date: 2022-11-10 17:12\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/grover_with_sampler.po\n"
"X-Crowdin-File-ID: 9816\n"
"Language: es_UN\n"

#: ../../tutorials/grover_with_sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/grover_with_sampler.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/grover_with_sampler.ipynb`__."

#: ../../tutorials/grover_with_sampler.ipynb:9
msgid "Database search with Grover’s algorithm using the Sampler primitive"
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:11
msgid "In this tutorial, we will solve an unstructured search problem using Grover’s algorithm with the Sampler primitive Qiskit Runtime program."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:23
msgid "Set up your local development environment"
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:25
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:37
msgid "Background information"
msgstr "Información de antecedentes"

#: ../../tutorials/grover_with_sampler.ipynb:40
msgid "Unstructured search problem"
msgstr "Problema de búsqueda no estructurada"

#: ../../tutorials/grover_with_sampler.ipynb:42
msgid "In the olden days, you looked up a person’s phone number in a phone book. That is an easy task if you know the person’s name because a phone book is ordered alphabetically by name. However, the opposite task, that is, you are given a phone number and want to find out who it belongs to, is much more difficult. That is because a phone book is not ordered by phone numbers. This is an example of an unstructured search problem. To solve this problem with a classical computer, your best trick is to randomly pick an entry. On average, you will need to look up half of the entires (:math:`N/2`, if :math:`N` is the total number of entries) to find the owner. If you have a quantum computer, however, you can use Grover’s algorithm to find the owner in :math:`\\sqrt N` tries. That means to identify the owner in a phone book that has 1 million numbers, you only need to do 1000 tries instead of 500,000!"
msgstr "En los viejos tiempos, buscabas el número de teléfono de una persona en una guía telefónica. Esa es una tarea fácil si sabes el nombre de la persona porque una guía telefónica está ordenada alfabéticamente por nombre. Sin embargo, la tarea contraria, es decir, te dan un número de teléfono y quieres saber a quién pertenece, es mucho más difícil. Esto se debe a que una guía telefónica no está ordenada por números de teléfono. Este es un ejemplo de un problema de búsqueda no estructurada. Para resolver este problema con una computadora clásica, tu mejor truco es elegir una entrada al azar. En promedio, necesitará buscar la mitad de las entradas (:math:`N/2`, si :math:`N` es el número total de entradas) para encontrar al propietario. Sin embargo, si tienes una computadora cuántica, puedes usar el algoritmo de Grover para encontrar al propietario en :math:`\\sqrt N` intentos. Eso significa que para identificar al propietario en una guía telefónica que tiene 1 millón de números, ¡solo necesita hacer 1000 intentos en lugar de 500,000!"

#: ../../tutorials/grover_with_sampler.ipynb:46
msgid "Grover’s algorithm"
msgstr "Algoritmo de Grover"

#: ../../tutorials/grover_with_sampler.ipynb:48
msgid "In a nutshell, Grover’s algorithm uses a nice quantum trick called amplitude amplification to dramatically increase the chances of finding the correct answer - the owner of a phone number - in each try (iteration). That’s all we need to know now. We don’t have to understand the details about how Grover’s algorithm works to apply it, because Qiskit does it for us! However, if you are interested, you can read the chapter about Grover’s algorighm in `the Qiskit textbook <https://qiskit.org/textbook/ch-algorithms/grover.html>`__."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:51
msgid "Next, let’s look at a concrete example."
msgstr "A continuación, veamos un ejemplo concreto."

#: ../../tutorials/grover_with_sampler.ipynb:63
msgid "Create Grover’s circuit"
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:66
msgid "Define an unstructured search problem in Qiskit"
msgstr "Definir un problema de búsqueda no estructurada en Qiskit"

#: ../../tutorials/grover_with_sampler.ipynb:68
msgid "In this simple example, you are given a small phone book that has 8 entries, person 0 to person 7, and we want to find the owner of a certain phone number. However, we are not allowed to look at the phone book directly. We are only allowed to consult an ‘oracle’: a black-box circuit that immediately tells us if our guess is right or wrong (like the Oracle in “The Matrix”)."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:94
msgid "Once we have the oracle, we can define the unstructured search problem using the ``AmplificationProblem`` class in Qiskit."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:118
msgid "Construct Grover’s circuit for the problem"
msgstr "Construir el circuito de Grover para el problema"

#: ../../tutorials/grover_with_sampler.ipynb:120
msgid "Now we are ready to construct the quantum circuits for Grover’s algorithm for this problem. Grover’s algorithm’s accuracy in finding the correct answer increases with the number of iterations. Let’s create a circuit with one and two iterations to see this effect."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:148
msgid "Let’s look at the circuits:"
msgstr "Veamos los circuitos:"

#: ../../tutorials/grover_with_sampler.ipynb:200
msgid "Submit the circuits to a quantum computer on the cloud"
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:202
msgid "Now that the Grover’s circuits are created, let’s submit them to a quantum computer on the cloud by using the Sampler program."
msgstr "Ahora que se crearon los circuitos de Grover, enviémoslos a una computadora cuántica en la nube usando el programa Sampler."

#: ../../tutorials/grover_with_sampler.ipynb:214
msgid "Connect to the Qiskit Runtime service"
msgstr "Conectarse al servicio Qiskit Runtime"

#: ../../tutorials/grover_with_sampler.ipynb:216
msgid "First, connect to the Qiskit Runtime service instance that you created in `the first step <#Set-up-your-local-development-environment>`__."
msgstr "Primero, conéctate a la instancia del servicio Qiskit Runtime que creaste en `el primer paso <#Set-up-your-local-development-environment>`__."

#: ../../tutorials/grover_with_sampler.ipynb:239
msgid "Grover’s algorithm determines the correct answer based on the highest probability of measurement outcomes. The ``Sampler`` primitive program is perfect for getting probabilities, so we will use that. In the cell below, we create an instance of the ``Sampler`` program, and start a Runtime session using the context manager (``with ... as ... :``), which automatically opens and closes the session for us."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:241
msgid "The ``Sampler`` program allows a batch submission of circuits in a job. Here we are passing a list of two circuits (Grover with 1 iteration and 2 iterations) to the Sampler but only one call is needed to sample the probability of measurement outcomes of both circuits."
msgstr ""

#: ../../tutorials/grover_with_sampler.ipynb:290
msgid "Let’s look at the results:"
msgstr "Veamos los resultados:"

#: ../../tutorials/grover_with_sampler.ipynb:358
msgid "Let’s print out the quantum result, along with the secret string, to check the quantum computer found the correct answer."
msgstr "Imprimamos el resultado cuántico, junto con la cadena secreta, para verificar que la computadora cuántica encontró la respuesta correcta."

#: ../../tutorials/grover_with_sampler.ipynb:412
msgid "You can re-run the tutorials a few times to generate other random secret strings to see that we are not cheating! The quantum computer finds the correct answer every time."
msgstr ""

