msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-22 15:51+0000\n"
"PO-Revision-Date: 2022-07-24 05:03\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/sample_expval_program/qiskit_runtime_expval_program.po\n"
"X-Crowdin-File-ID: 9824\n"
"Language: es_UN\n"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:9
msgid "This page was generated from `docs/tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb`__."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:9
msgid "Custom Expectation Value Program for the Qiskit Runtime"
msgstr "Programa de Valor Esperado Personalizado para Qiskit Runtime"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:15
msgid "Paul Nation"
msgstr "Paul Nation"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:25
msgid "IBM Quantum Partners Technical Enablement Team"
msgstr "Equipo de Habilitación Técnica de IBM Quantum Partners"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:31
msgid "Here we will show how to make a program that takes a circuit, or list of circuits, and computes the expectation values of one or more diagonal operators."
msgstr "Aquí vamos a mostrar cómo hacer un programa que toma un circuito, o lista de circuitos, y calcula los valores esperados de uno o más operadores diagonales."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:43
msgid "Prerequisites"
msgstr "Requisitos previos"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:45
msgid "You must have the latest Qiskit installed."
msgstr "Debes tener instalado el último Qiskit."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:46
msgid "You must have either an IBM Cloud or an IBM Quantum account that can access Qiskit Runtime."
msgstr "Debes tener una cuenta de IBM Cloud o IBM Quantum que pueda acceder a Qiskit Runtime."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:58
msgid "Background"
msgstr "Antecedentes"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:60
msgid "The primary method by which information is obtained from quantum computers is via expectation values. Indeed, the samples that come from executing a quantum circuit multiple times, once converted to probabilities, can be viewed as just a finite sample approximation to the expectation value for the projection operators corresponding to each bitstring. More practically, many quantum algorithms require computing expectation values over Pauli operators, e.g. Variational Quantum Eigensolvers, and thus having a runtime program that computes these quantities is of fundamental importance. Here we look at one such example, where a user passes one or more circuits and expectation operators and gets back the computed expectation values, and possibly error bounds."
msgstr "El método principal por el cual se obtiene información de las computadoras cuánticas es a través de valores esperados. De hecho, las muestras que provienen de ejecutar un circuito cuántico varias veces, una vez convertidas en probabilidades, pueden verse como una aproximación de muestra finita al valor esperado para los operadores de proyección correspondientes a cada cadena de bits. De manera más práctica, muchos algoritmos cuánticos requieren calcular los valores esperados sobre los operadores de Pauli, por ejemplo, Solucionadores Propios Cuánticos Variacionales y, por lo tanto, tener un programa runtime que calcule estas cantidades es de fundamental importancia. Aquí vemos uno de esos ejemplos, donde un usuario pasa uno o más circuitos y operadores esperanza y obtiene los valores esperados calculados y posiblemente los límites de error."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:64
msgid "Expectation value of a diagonal operator"
msgstr "Valor esperado de un operador diagonal"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:66
msgid "Consider a generic observable given by the tensor product of diagonal operators over :math:`N` qubits :math:`O = O_{N-1}\\dots O_{0}` where the subscript indicates the qubit on which the operator acts. Then for a set of observed :math:`M` bitstrings :math:`\\{b_{0}, \\dots b_{M-1}\\}`, where $M :nbsphinx-math:`\\leq `2^N $, with corresponding approximate probabilities :math:`p_{m}` the expectation value is given by"
msgstr "Considera un observable genérico dado por el producto tensorial de operadores diagonales sobre :math:`N` qubits :math:`O = O_{N-1}\\dots O_{0}` donde el subíndice indica el qubit sobre el que actúa el operador. Luego, para un conjunto de :math:`M` cadenas de bits observadas :math:`\\{b_{0}, \\dots b_{M-1}\\}`, donde :math:`M \\leq 2^N`, con las probabilidades aproximadas correspondientes :math:`p_{m}`, el valor esperado viene dado por"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:68
msgid "\\langle O\\rangle \\simeq \\sum_{m=0}^{M-1} p_{m}\\prod_{n=0}^{N-1}O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]],"
msgstr "\\langle O\\rangle \\simeq \\sum_{m=0}^{M-1} p_{m}\\prod_{n=0}^{N-1}O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]],"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:73
msgid "where :math:`O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]]` is the diagonal element of :math:`O_{n}` specified by the :math:`N-n-1`\\ th bit in bitstring :math:`b_{m}`. The reason for the complicated indexing in ``b_{m}`` is because Qiskit uses least-significant bit indexing where the zeroth element of the bit-strings is given by the right-most bit."
msgstr "donde :math:`O_{n}[b_{m}[N-n-1], b_{m}[N-n-1]]` es el elemento diagonal de :math:`O_{n}` especificado por el bit :math:`N-n-1` en la cadena de bits :math:`b_{m}`. La razón de la indexación complicada en ``b_{m}`` se debe a que Qiskit usa la indexación de bits menos significativa donde el elemento cero de las cadenas de bits viene dado por el bit más a la derecha."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:75
msgid "Here we will use built-in routines to compute these expectation values. However, it is not hard to do yourself, with plenty of examples to be found."
msgstr "Aquí usaremos rutinas integradas para calcular estos valores esperados. Sin embargo, no es difícil hacerlo por ti mismo, con muchos ejemplos por encontrar."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:87
msgid "Main program"
msgstr "Programa principal"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:89
msgid "Here we define our main function for the expectation value runtime program. As always, our program must start with the ``backend``, and ``user_messenger`` arguements, followed by the actual inputs we pass to the program. Here our options are quite simple:"
msgstr "Aquí definimos nuestra función principal para el programa runtime del valor esperado. Como siempre, nuestro programa debe comenzar con los argumentos ``backend`` y ``user_messenger``, seguidos de las entradas reales que le pasamos al programa. Aquí nuestras opciones son bastante simples:"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:91
msgid "``circuits``: A single QuantumCircuit or list of QuantumCircuits to be executed on the target backend."
msgstr "``circuits``: Un solo QuantumCircuit o una lista de QuantumCircuits que se ejecutarán en el backend de destino."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:93
msgid "``expectation_operators``: The operators we want to evaluate. These can be strings of diagonal Pauli’s, eg, ``ZIZZ``, or custom operators defined by dictionaries. For example, the projection operator on the all ones state of 4 qubits is ``{'1111': 1}``."
msgstr "``expectation_operators``: Los operadores que queremos evaluar. Estos pueden ser cadenas de Pauli diagonales, por ejemplo, ``ZIZZ``, u operadores personalizados definidos con diccionarios. Por ejemplo, el operador de proyección en el estado de todos unos de 4 qubits es ``{'1111': 1}``."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:95
msgid "``shots``: How many times to sample each circuit."
msgstr "``shots``: Cuántas veces muestrear cada circuito."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:97
msgid "``transpiler_config``: A dictionary that passes additional arguments on to the transpile function, eg. ``optimization_level``."
msgstr "``transpiler_config``: Un diccionario que pasa argumentos adicionales a la función de transpilación, por ejemplo ``optimization_level``."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:99
msgid "``run_config``: A dictionary that passes additional arguments on to ``backend.run()``."
msgstr "``run_config``: Un diccionario que pasa argumentos adicionales a ``backend.run()``."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:101
msgid "``skip_transpilation``: A flag to skip transpilation altogether and just run the circuits. This is useful for situations where you need to transpile parameterized circuits once, but must bind parameters multiple times and evaluate."
msgstr "``skip_transpilation``: Una bandera para omitir la transpilación por completo y simplemente ejecutar los circuitos. Esto es útil para situaciones en las que necesitas transpilar circuitos parametrizados una vez, pero se deben vincular parámetros varias veces y evaluar."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:103
msgid "``return_stddev``: Flag to return bound on standard deviation. If using measurement mitigation this adds some overhead to the computation."
msgstr "``return_stddev``: Bandera para devolver el límite de la desviación estándar. Si usas la mitigación de medición, esto agrega algo de sobrecarga al cálculo."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:105
msgid "``use_measurement_mitigation``: Use M3 measurement mitigation and compute expectation value and standard deviation bound from quasi-probabilities."
msgstr "``use_measurement_mitigation``: Usar la mitigación de medición M3 y calcular el valor esperado y el límite de desviación estándar de las cuasi probabilidades."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:107
#, python-format
msgid "At the top of the cell below you will see a commented out ``%%writefile sample_expval.py``. We will use this to convert the cell to a Python module named ``sample_expval.py`` to upload."
msgstr "En la parte superior de la celda a continuación, verás un ``%%writefile sample_expval.py`` comentado. Usaremos esto para convertir la celda en un módulo de Python llamado ``sample_expval.py`` para cargar."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:228
msgid "Local testing"
msgstr "Pruebas locales"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:230
msgid "Here we test with a local “Fake” backend that mimics the noise properties of a real system and a 4-qubit GHZ state."
msgstr "Aquí probamos con un backend local “Falso” que imita las propiedades de ruido de un sistema real y un estado GHZ de 4 qubits."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:320
msgid "If we have done our job correctly, the above should print out two expectation values close to one and a final expectation value close to zero."
msgstr "Si hemos hecho nuestro trabajo correctamente, lo anterior debería imprimir dos valores esperados cercanos a uno y un valor esperado final cercano a cero."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:332
msgid "Program metadata"
msgstr "Metadatos del programa"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:334
msgid "Next we add the needed program data to a dictionary for uploading with our program."
msgstr "A continuación, agregamos los datos de programa necesarios a un diccionario para cargarlos con nuestro programa."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:402
msgid "Upload the program"
msgstr "Cagar el programa"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:404
#, python-format
msgid "We are now in a position to upload the program. To do so we first uncomment and execute the line ``%%writefile sample_expval.py`` giving use the ``sample_expval.py`` file we need to upload."
msgstr "Ahora estamos en condiciones de cargar el programa. Para hacerlo, primero descomentamos y ejecutamos la línea ``%%writefile sample_expval.py`` dando uso al archivo ``sample_expval.py`` que necesitamos cargar."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:464
msgid "Delete program if needed"
msgstr "Eliminar el programa si es necesario"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:486
msgid "Wrapping the runtime program"
msgstr "Encapsular el programa runtime"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:488
msgid "As always, it is best to wrap the call to the runtime program with a function (or possibly a class) that makes input easier and does some validation."
msgstr "Como siempre, es mejor encapsular la llamada al programa runtime con una función (o posiblemente una clase) que facilite la entrada y realice alguna validación."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:565
msgid "Trying it out"
msgstr "Intentándolo"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:567
msgid "Let’s try running the program here with our previously made GHZ state and running on the simulator."
msgstr "Intentemos ejecutar el programa aquí con nuestro estado GHZ creado anteriormente y ejecutándolo en el simulador."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:627
msgid "The first two projectors should be nearly :math:`0.50` as they tell us the probability of being in the all zeros and ones states, respectively, which should be 50/50 for our GHZ state. The final expectation value of ``ZZZZ`` should be one since this is a GHZ over an even number of qubits. It should go close to zero for an odd number."
msgstr "Los primeros dos proyectores deberían ser casi :math:`0.50`, ya que nos indican la probabilidad de estar en los estados todos ceros y todos unos, respectivamente, que debería ser 50/50 para nuestro estado GHZ. El valor esperado final de ``ZZZZ`` debe ser uno, ya que se trata de un GHZ sobre un número par de qubits. Debe ir cerca de cero para un número impar."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:700
msgid "Quantum Volume as an expectation value"
msgstr "Volumen Cuántico como un valor esperado"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:702
msgid "Here we formulate QV as an expectation value of a projector onto the heavy-output elements on a distribution. We can then use our expectation value routine to compute whether a given circuit has passed the QV metric."
msgstr "Aquí formulamos QV como un valor esperado de un proyector en los elementos de alto rendimiento en una distribución. Luego podemos usar nuestra rutina de valor esperado para calcular si un circuito dado ha pasado la métrica QV."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:704
msgid "QV is defined in terms of heavy-outputs of a distribution. Heavy-outputs are those bit-strings that are those that have probabilities above the median value of the distribution. Below we define the projection operator onto the set of bit-strings that are heavy-outputs for a given distribution."
msgstr "QV se define en términos de salidas pesadas de una distribución. Las salidas pesadas son aquellas cadenas de bits que tienen probabilidades por encima del valor medio de la distribución. A continuación, definimos el operador de proyección en el conjunto de cadenas de bits que son salidas pesadas para una distribución dada."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:739
msgid "Now we generate 10 QV circuits as our dataset."
msgstr "Ahora generamos 10 circuitos QV como nuestro conjunto de datos."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:766
msgid "Next, we have to determine the heavy-set of each circuit from the ideal answer, and then pass this along to our heavy-set projector function that we defined above."
msgstr "A continuación, tenemos que determinar el conjunto pesado de cada circuito a partir de la respuesta ideal, y luego pasar esto a nuestra función de proyector de conjunto pesado que definimos anteriormente."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:790
msgid "QV circuits have no measurements on them so need to add them:"
msgstr "Los circuitos QV no tienen mediciones, por lo que es necesario agregarlas:"

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:811
msgid "With a list of circuits and projection operators we now need only to pass both sets to our above expectation value runner targeting the desired backend. We will also set the best transpiler arguments to give us a sporting chance of getting some passing scores."
msgstr "Con una lista de circuitos y operadores de proyección, ahora solo necesitamos pasar ambos conjuntos a nuestro ejecutador anterior de valor esperado que apunta al backend deseado. También estableceremos los mejores argumentos del transpilador para darnos una gran oportunidad de obtener algunos puntajes de aprobación."

#: ../../tutorials/sample_expval_program/qiskit_runtime_expval_program.ipynb:890
msgid "A passing QV score is one where the value of the heavy-set projector is above :math:`2/3`. So let us see who passed:"
msgstr "Una puntuación QV aprobatoria es aquella en la que el valor del proyector pesado está por encima de :math:`2/3`. Así que veamos quién pasó:"

