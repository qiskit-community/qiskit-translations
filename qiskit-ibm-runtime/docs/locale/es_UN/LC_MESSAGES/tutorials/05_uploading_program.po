msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-06-21 16:00+0000\n"
"PO-Revision-Date: 2022-07-09 22:15\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/05_uploading_program.po\n"
"X-Crowdin-File-ID: 9814\n"
"Language: es_UN\n"

#: ../../tutorials/05_uploading_program.ipynb:9
msgid "This page was generated from `docs/tutorials/05_uploading_program.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/05_uploading_program.ipynb`__."

#: ../../tutorials/05_uploading_program.ipynb:8
msgid "|qiskit_header.png|"
msgstr "|qiskit_header.png|"

#: ../../tutorials/05_uploading_program.ipynb:10
msgid "qiskit_header.png"
msgstr "qiskit_header.png"

#: ../../tutorials/05_uploading_program.ipynb:22
msgid "Uploading a Qiskit runtime program"
msgstr "Cargar un programa Qiskit runtime"

#: ../../tutorials/05_uploading_program.ipynb:33
msgid "Here we provide an overview on how to construct and upload a runtime program. A runtime program is a piece of Python code that lives in the cloud and can be invoked by passing in just its parameters. Runtime programs are private by default, which means only you can see and access your programs. Some authorized users can also mark their programs as public, making them visible and accessible by everyone."
msgstr "Aquí proporcionamos una descripción general sobre cómo construir y cargar un programa runtime. Un programa runtime es una pieza de código de Python que vive en la nube y se puede invocar pasándole solo sus parámetros. Los programas runtime son privados de forma predeterminada, lo que significa que solamente tú puedes ver y acceder a tus programas. Algunos usuarios autorizados también pueden marcar tus programas como públicos, haciéndolos visibles y accesibles para todos."

#: ../../tutorials/05_uploading_program.ipynb:45
msgid "Constructing a runtime program"
msgstr "Construir un programa runtime"

#: ../../tutorials/05_uploading_program.ipynb:56
msgid "Below is a template of a runtime program. You can find the template file in the `qiskit-ibm-runtime <https://github.com/Qiskit/qiskit-ibm-runtime/blob/main/qiskit_ibm_runtime/program/program_template.py>`__ repository."
msgstr "A continuación, se muestra una plantilla de un programa runtime. Puedes encontrar el archivo de la plantilla en el repositorio `qiskit-ibm-runtime <https://github.com/Qiskit/qiskit-ibm-runtime/blob/main/qiskit_ibm_runtime/program/program_template.py>`__."

#: ../../tutorials/05_uploading_program.ipynb:104
msgid "Each runtime program must have a ``main()`` function, which serves as the entry point to the program. This function must have ``backend`` and ``user_messenger`` as the first two positional arguments:"
msgstr "Cada programa runtime debe tener una función ``main()``, que sirve como punto de entrada al programa. Esta función debe tener ``backend`` y ``user_messenger`` como los dos primeros argumentos posicionales:"

#: ../../tutorials/05_uploading_program.ipynb:106
msgid "``backend`` is an instance of `ProgramBackend <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ProgramBackend.html#qiskit_ibm_runtime.ProgramBackend>`__ and has a `run() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ProgramBackend.html#qiskit_ibm_runtime.ProgramBackend.run>`__ method that can be used to submit circuits."
msgstr "``backend`` es una instancia de `ProgramBackend <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ProgramBackend.html#qiskit_ibm_runtime.ProgramBackend>`__ y tiene un método `run() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ProgramBackend.html#qiskit_ibm_runtime.ProgramBackend.run>`__ que se puede utilizar para enviar circuitos."

#: ../../tutorials/05_uploading_program.ipynb:107
msgid "``user_messenger`` is an instance of `UserMessenger <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.UserMessenger.html#qiskit_ibm_runtime.UserMessenger>`__ and has a `publish() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.UserMessenger.html#qiskit_ibm_runtime.UserMessenger.publish>`__ method that can be used to send interim and final results to the program user. This method takes a parameter ``final`` that indicates whether it’s a final result. However, it is recommended to return the final result directly from the ``main()`` function. Currently only final results are stored after a program execution finishes."
msgstr "``user_messenger`` es una instancia de `UserMessenger <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.UserMessenger.html#qiskit_ibm_runtime.UserMessenger>`__ y tiene un método `publish() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.UserMessenger.html#qiskit_ibm_runtime.UserMessenger.publish>`__ que se puede utilizar para enviar resultados intermedios y finales al usuario del programa. Este método toma un parámetro ``final`` que indica si es un resultado final. Sin embargo, se recomienda devolver el resultado final directamente desde la función ``main()``. Actualmente, solo los resultados finales se almacenan después de que finaliza la ejecución de un programa."

#: ../../tutorials/05_uploading_program.ipynb:119
msgid "There are several runtime program source code in the ``program_source`` directory in this repository. ``program_source/hello_world/hello_world.py`` is one of them. It is a sample runtime program that submits random circuits for user-specified iterations:"
msgstr "Hay varios códigos fuente de programas runtime en el directorio ``program_source`` en este repositorio. ``program_source/hello_world/hello_world.py`` es uno de ellos. Es un programa runtime de muestra que envía circuitos aleatorios para iteraciones especificadas por el usuario:"

#: ../../tutorials/05_uploading_program.ipynb:178
msgid "Data serialization"
msgstr "Serialización de datos"

#: ../../tutorials/05_uploading_program.ipynb:189
msgid "Runtime programs live in the cloud, and JSON is the standard way of passing data to and from cloud services. Therefore, when a user invokes a runtime program, the input parameters must first be serialized into the JSON format and then deserialized once received by the server. By default, this serialization and deserialization is done automatically using the `RuntimeEncoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.RuntimeEncoder.html#qiskit_ibm_runtime.RuntimeEncoder>`__ and `RuntimeDecoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.RuntimeDecoder.html#qiskit_ibm_runtime.RuntimeDecoder>`__ classes."
msgstr "Los programas Runtime viven en la nube, y JSON es la forma estándar de pasar datos hacia y desde los servicios en la nube. Por lo tanto, cuando un usuario invoca un programa runtime, los parámetros de entrada primero deben serializarse en formato JSON y luego deserializarse una vez recibidos por el servidor. De forma predeterminada, esta serialización y deserialización se realiza automáticamente mediante las clases `RuntimeEncoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.RuntimeEncoder.html#qiskit_ibm_runtime.RuntimeEncoder>`__ y `RuntimeDecoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.RuntimeDecoder.html#qiskit_ibm_runtime.RuntimeDecoder>`__."

#: ../../tutorials/05_uploading_program.ipynb:202
msgid "Custom classes"
msgstr "Clases personalizadas"

#: ../../tutorials/05_uploading_program.ipynb:213
msgid "``RuntimeEncoder`` and ``RuntimeDecoder`` only support types commonly used in Qiskit, such as complex numbers and numpy arrays. If your program uses custom Python classes for input or output, these two methods only have partial support for that."
msgstr "``RuntimeEncoder`` y ``RuntimeDecoder`` solo admiten tipos comúnmente utilizados en Qiskit, como números complejos y arreglos numpy. Si tu programa usa clases personalizadas de Python para entrada o salida, estos dos métodos solo tienen soporte parcial para eso."

#: ../../tutorials/05_uploading_program.ipynb:215
msgid "Your custom class should have the following methods:"
msgstr "Tu clase personalizada debe tener los siguientes métodos:"

#: ../../tutorials/05_uploading_program.ipynb:217
msgid "a ``to_json()`` method that returns a JSON string representation of the object"
msgstr "un método ``to_json()`` que devuelve una representación en cadena JSON del objeto"

#: ../../tutorials/05_uploading_program.ipynb:218
msgid "a ``from_json()`` class method that accepts a JSON string and returns the corresponding object."
msgstr "un método de clase ``from_json()`` que acepta una cadena JSON y devuelve el objeto correspondiente."

#: ../../tutorials/05_uploading_program.ipynb:220
msgid "When ``RuntimeEncoder`` serializes a Python object, it checks whether the object has a ``to_json()`` method. If so, it calls the method to serialize the object. ``RuntimeDecoder``, however, does *not* invoke ``from_json()`` to convert the data back because it doesn’t know how to import your custom class. Therefore the deserialization needs to be done explicitly."
msgstr "Cuando ``RuntimeEncoder`` serializa un objeto de Python, comprueba si el objeto tiene un método ``to_json()``. Si es así, llama al método para serializar el objeto. ``RuntimeDecoder``, sin embargo, *no* invoca ``from_json()`` para volver a convertir los datos porque no sabe cómo importar tu clase personalizada. Por lo tanto, la deserialización debe hacerse explícitamente."

#: ../../tutorials/05_uploading_program.ipynb:231
msgid "Here is an example of serializing and deserializing a custom class. First we define the class ``MyCustomClass``:"
msgstr "Este es un ejemplo de cómo serializar y deserializar una clase personalizada. Primero definimos la clase ``MyCustomClass``:"

#: ../../tutorials/05_uploading_program.ipynb:267
msgid "Note that it has the ``to_json()`` method that converts a ``MyCustomClass`` instance to a JSON string, and a ``from_json()`` class method that converts a JSON string back to a ``MyCustomClass`` instance."
msgstr "Ten en cuenta que tiene el método ``to_json()`` que convierte una instancia de ``MyCustomClass`` en una cadena JSON, y un método de clase ``from_json()`` que convierte una cadena JSON de nuevo en una instancia ``MyCustomClass``."

#: ../../tutorials/05_uploading_program.ipynb:278
msgid "Here is how one would use ``MyCustomClass`` as an **input** to your program:"
msgstr "Así es como uno usaría ``MyCustomClass`` como una **entrada** para tu programa:"

#: ../../tutorials/05_uploading_program.ipynb:310
msgid "Since ``MyCustomClass`` has a ``to_json()`` method, the method is automatically called to convert the instance to a JSON string when ``service.run()`` is invoked."
msgstr "Dado que ``MyCustomClass`` tiene un método ``to_json()``, se llama automáticamente al método para convertir la instancia en una cadena JSON cuando ``service.run()`` es invocado."

#: ../../tutorials/05_uploading_program.ipynb:312
msgid "Your program can then use the ``from_json()`` method to restore the JSON string back to a ``MyCustomClass`` instance:"
msgstr "Tu programa puede usar el método ``from_json()`` para restaurar la cadena JSON a una instancia de ``MyCustomClass``:"

#: ../../tutorials/05_uploading_program.ipynb:336
msgid "Similarly, if you pass a ``MyCustomClass`` instance as an **output** of your program, it is automatically converted to a JSON string (via the ``to_json()`` method):"
msgstr "De manera similar, si pasas una instancia de ``MyCustomClass`` como una **salida** de tu programa, se convierte automáticamente en una cadena JSON (a través del método ``to_json()``):"

#: ../../tutorials/05_uploading_program.ipynb:359
msgid "Now when the user of this program calls ``job.result()``, they will receive a JSON string rather than a ``MyCustomClass`` instance. The user can convert the string back to ``MyCustomClass`` themselves:"
msgstr "Ahora, cuando el usuario de este programa llame a ``job.result()``, recibirá una cadena JSON en lugar de una instancia de ``MyCustomClass``. El usuario puede volver a convertir la cadena a ``MyCustomClass``:"

#: ../../tutorials/05_uploading_program.ipynb:384
msgid "Alternatively, you can provide a decoder for the users. Your decoder class should inherit `ResultDecoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ResultDecoder.html#qiskit_ibm_runtime.ResultDecoder>`__ and overwrite the ``decode()`` method:"
msgstr "Alternativamente, puedes proporcionar un decodificador para los usuarios. Tu clase decodificadora debe heredar de `ResultDecoder <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.ResultDecoder.html#qiskit_ibm_runtime.ResultDecoder>`__ y sobrescribir el método ``decode()``:"

#: ../../tutorials/05_uploading_program.ipynb:412
msgid "Your user can then use this ``MyResultDecoder`` to decode the result of your program:"
msgstr "Tu usuario puede usar este ``MyResultDecoder`` para decodificar el resultado de tu programa:"

#: ../../tutorials/05_uploading_program.ipynb:428
msgid "Testing your runtime program"
msgstr "Probar tu programa runtime"

#: ../../tutorials/05_uploading_program.ipynb:439
msgid "You can test your runtime program using a local simulator or a real backend before uploading it. Simply import and invoke the ``main()`` function of your program and pass the following parameters:"
msgstr "Puedes probar tu programa runtime utilizando un simulador local o un backend real antes de cargarlo. Simplemente importa e invoca la función ``main()`` de tu programa y pasa los siguientes parámetros:"

#: ../../tutorials/05_uploading_program.ipynb:441
msgid "the ``backend`` instance you want to use"
msgstr "la instancia del ``backend`` que deseas usar"

#: ../../tutorials/05_uploading_program.ipynb:442
msgid "a new ``UserMessenger`` instance."
msgstr "una instancia nueva de ``UserMessenger``."

#: ../../tutorials/05_uploading_program.ipynb:443
msgid "program input parameters that are serialized and then deserialized using the correct encoder and decoder. While this may seem redundant, it is to ensure input parameters can be passed to your program properly once it’s uploaded to the cloud."
msgstr "parámetros de entrada del programa que se serializan y luego se deserializan utilizando el codificador y decodificador correctos. Si bien esto puede parecer redundante, es para garantizar que los parámetros de entrada se puedan pasar a tu programa correctamente una vez que se carga en la nube."

#: ../../tutorials/05_uploading_program.ipynb:454
msgid "The following example tests the ``hello-world`` program we saw earlier. It uses the ``qasm_simulator`` from Qiskit Aer as the test backend. It serializes and deserializes input data using ``RuntimeEncoder`` and ``RuntimeDecoder``, which are the default en/decoders used by runtime."
msgstr "El siguiente ejemplo prueba el programa ``hello-world`` que vimos anteriormente. Utiliza el ``qasm_simulator`` de Qiskit Aer como backend de prueba. Serializa y deserializa los datos de entrada utilizando ``RuntimeEncoder`` y ``RuntimeDecoder``, que son los codificadores/decodificadores predeterminados utilizados por runtime."

#: ../../tutorials/05_uploading_program.ipynb:547
msgid "Defining program metadata"
msgstr "Definir los metadatos del programa"

#: ../../tutorials/05_uploading_program.ipynb:558
msgid "Program metadata helps users to understand how to use your program. It includes:"
msgstr "Los metadatos del programa ayudan a los usuarios a entender cómo usar tu programa. Incluye:"

#: ../../tutorials/05_uploading_program.ipynb:560
msgid "``name``: Name of the program."
msgstr "``name``: Nombre del programa."

#: ../../tutorials/05_uploading_program.ipynb:561
msgid "``max_execution_time``: Maximum amount of time, in seconds, a program can run before being forcibly terminated."
msgstr "``max_execution_time``: Cantidad máxima de tiempo, en segundos, que un programa puede ejecutarse antes de ser terminado por la fuerza."

#: ../../tutorials/05_uploading_program.ipynb:562
msgid "``description``: Describes the program."
msgstr "``description``: Describe el programa."

#: ../../tutorials/05_uploading_program.ipynb:563
msgid "``spec``: Detailed information about the program, which includes the following attributes:"
msgstr "``spec``: Información detallada sobre el programa, que incluye los siguientes atributos:"

#: ../../tutorials/05_uploading_program.ipynb:565
msgid "``backend_requirements``: Describes the backend attributes needed to run the program."
msgstr "``backend_requirements``: Describe los atributos del backend necesarios para ejecutar el programa."

#: ../../tutorials/05_uploading_program.ipynb:566
msgid "``parameters``: Describes the program input parameters as a JSON schema"
msgstr "``parameters``: Describe los parámetros de entrada del programa como un esquema JSON"

#: ../../tutorials/05_uploading_program.ipynb:567
msgid "``return_values``: Describes the return values as a JSON schema"
msgstr "``return_values``: Describe los valores devueltos como un esquema JSON"

#: ../../tutorials/05_uploading_program.ipynb:568
msgid "``interim_results``: Describes the interim results as a JSON schema"
msgstr "``interim_results``: Describe los resultados intermedios como un esquema JSON"

#: ../../tutorials/05_uploading_program.ipynb:570
msgid "When uploading a program, you must specify at least ``name``, ``max_execution_time``, and ``description``. It is strongly encouraged to also specify ``parameters``, ``return_values``, and ``interim_results`` within ``spec`` if the program has them."
msgstr "Al cargar un programa, debes especificar al menos ``name``, ``max_execution_time``, y ``description``. Se recomienda enfáticamente especificar también ``parameters``, ``return_values``, e ``interim_results`` dentro de ``spec`` si el programa los tiene."

#: ../../tutorials/05_uploading_program.ipynb:581
msgid "Below shows the metadata JSON file of the ``hello-world`` program as an example:"
msgstr "A continuación se muestra el archivo JSON de metadatos del programa ``hello-world`` como ejemplo:"

#: ../../tutorials/05_uploading_program.ipynb:759
msgid "Uploading a program"
msgstr "Cargar un programa"

#: ../../tutorials/05_uploading_program.ipynb:770
msgid "You can use the `QiskitRuntimeService.upload_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html#qiskit_ibm_runtime.QiskitRuntimeService.upload_program>`__ method to upload your program. In the example below, the program data lives in the file ``hello_world.py``, and its metadata, as described above, is in ``hello_world.json``."
msgstr "Puedes usar el método `QiskitRuntimeService.upload_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html#qiskit_ibm_runtime.QiskitRuntimeService.upload_program>`__ para cargar tu programa. En el siguiente ejemplo, los datos del programa residen en el archivo ``hello_world.py``, y sus metadatos, como se describe arriba, están en ``hello_world.json``."

#: ../../tutorials/05_uploading_program.ipynb:828
msgid "``upload_program()`` returns a program ID, which uniquely identifies the program. It is derived from the program name, usually with a randomly-generated suffix. Program ID is needed to invoke the program."
msgstr "``upload_program()`` devuelve un ID del programa, que identifica de forma única el programa. Se deriva del nombre del programa, generalmente con un sufijo generado aleatoriamente. Se necesita el ID del programa para invocar al programa."

#: ../../tutorials/05_uploading_program.ipynb:840
msgid "Updating a program"
msgstr "Actualizar un programa"

#: ../../tutorials/05_uploading_program.ipynb:851
msgid "You can use the `QiskitRuntimeService.update_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.update_program.html#qiskit_ibm_runtime.QiskitRuntimeService.update_program>`__ method to update the source code and/or metadata of a program:"
msgstr "Puedes usar el método `QiskitRuntimeService.update_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.update_program.html#qiskit_ibm_runtime.QiskitRuntimeService.update_program>`__ para actualizar el código fuente y/o los metadatos de un programa:"

#: ../../tutorials/05_uploading_program.ipynb:872
msgid "This method allows you to make changes to your program while retaining the same program ID."
msgstr "Este método te permite realizar cambios en tu programa conservando el mismo ID de programa."

#: ../../tutorials/05_uploading_program.ipynb:884
msgid "Deleting a program"
msgstr "Eliminar un programa"

#: ../../tutorials/05_uploading_program.ipynb:895
msgid "You can use the `QiskitRuntimeService.delete_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html#qiskit_ibm_runtime.QiskitRuntimeService.delete_program>`__ method to delete a program. Only the person who uploaded the program can delete it."
msgstr "Puedes usar el método `QiskitRuntimeService.delete_program() <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.QiskitRuntimeService.html#qiskit_ibm_runtime.QiskitRuntimeService.delete_program>`__ para eliminar un programa. Solo la persona que cargó el programa puede eliminarlo."

#: ../../tutorials/05_uploading_program.ipynb:917
msgid "Additional materials"
msgstr "Materiales adicionales"

#: ../../tutorials/05_uploading_program.ipynb:928
msgid "This is an introductory tutorial on creating and uploading a very simple custom program. `sample_vqe_program/qiskit_runtime_vqe_program.ipynb <sample_vqe_program/qiskit_runtime_vqe_program.ipynb>`__ provides a more in-depth tutorial on creating a real-world Qiskit Runtime program."
msgstr "Este es un tutorial introductorio sobre cómo crear y cargar un programa personalizado muy simple. `sample_vqe_program/qiskit_runtime_vqe_program.ipynb <sample_vqe_program/qiskit_runtime_vqe_program.ipynb>`__ proporciona un tutorial más detallado sobre cómo crear un programa Qiskit Runtime del mundo real."

