msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-09 04:52+0000\n"
"PO-Revision-Date: 2022-11-09 05:36\n"
"Last-Translator: \n"
"Language-Team: Spanish (United)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/qpe_with_sampler.po\n"
"X-Crowdin-File-ID: 9844\n"
"Language: es_UN\n"

#: ../../tutorials/qpe_with_sampler.ipynb:9
msgid "This page was generated from `docs/tutorials/qpe_with_sampler.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/qpe_with_sampler.ipynb`__."

#: ../../tutorials/qpe_with_sampler.ipynb:9
msgid "Quantum phase estimation using the Sampler primitive"
msgstr "Estimación de fase cuántica utilizando la primitiva Sampler"

#: ../../tutorials/qpe_with_sampler.ipynb:11
msgid "The quantum phase estimation (QPE) algorithm is an important subroutine in quantum computation. It serves as a central building block of many quantum algorithms including the Shor’s factoring algorithm and the quantum algorithm for linear systems of equations (HHL algorithm). In this tutorial, you will build a parameterized version of QPE circuit and run it using the Sampler primitive, which makes running parameterized circuits very easy."
msgstr "El algoritmo de estimación de fase cuántica (quantum phase estimation, QPE) es una subrutina importante en la computación cuántica. Sirve como un bloque de construcción central de muchos algoritmos cuánticos, incluido el algoritmo de factorización de Shor y el algoritmo cuántico para sistemas lineales de ecuaciones (algoritmo HHL). En este tutorial, construirás una versión parametrizada del circuito QPE y la ejecutarás utilizando la primitiva Sampler, lo que facilita mucho la ejecución de circuitos parametrizados."

#: ../../tutorials/qpe_with_sampler.ipynb:23
msgid "Before you begin"
msgstr "Antes de comenzar"

#: ../../tutorials/qpe_with_sampler.ipynb:25
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow the instructions in the Qiskit `Getting started guide <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "Este tutorial requiere una instancia del servicio Qiskit Runtime. Si aún no lo has hecho, sigue las instrucciones de la `guía de Primeros pasos de Qiskit <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ para configurar uno."

#: ../../tutorials/qpe_with_sampler.ipynb:37
msgid "Background information"
msgstr "Información de antecedentes"

#: ../../tutorials/qpe_with_sampler.ipynb:49
msgid "Quantum phase estimation algorithm"
msgstr "Algoritmo de estimación de fase cuántica"

#: ../../tutorials/qpe_with_sampler.ipynb:51
msgid "The QPE algorithm [1][2] estimates the value of theta, where a unitary operator :math:`U` has an eigenvector :math:`|\\psi \\rangle` with eigenvalue :math:`e^{2\\pi i \\theta}`. To find the estimation, we assume we have black boxes (sometimes called *oracles*), that can prepare the state :math:`|\\psi \\rangle` and run a controlled-\\ :math:`U^{2^j}` operation."
msgstr "El algoritmo QPE [1][2] estima el valor de theta, donde un operador unitario :math:`U` tiene un vector propio :math:`|\\psi \\rangle` con valor propio :math:`e^{2\\pi i \\theta}`. Para encontrar la estimación, asumimos que tenemos cajas negras (a veces llamadas *oráculos*), que pueden preparar el estado :math:`|\\psi \\rangle` y ejecutar una operación control-\\ :math:`U^{2^j}`."

#: ../../tutorials/qpe_with_sampler.ipynb:53
msgid "Because it relies on black boxes, the QPE algorithm is not actually a complete algorithm, but can be thought of as a subroutine. It can work with other subroutines to perform other computations, such as Shor’s factoring algorithm and the HHL algorithm."
msgstr "Debido a que se basa en cajas negras, el algoritmo QPE no es en realidad un algoritmo completo, pero puede considerarse como una subrutina. Puede funcionar con otras subrutinas para realizar otros cálculos, como el algoritmo de factorización de Shor y el algoritmo HHL."

#: ../../tutorials/qpe_with_sampler.ipynb:55
msgid "We are not going to explain the details of the QPE algorithm here. If you want to learn more, you can read the chapter about the QPE algorithm in `the Qiskit textbook <https://learn.qiskit.org/course/ch-algorithms/quantum-phase-estimation>`__ [3]."
msgstr "No vamos a explicar aquí los detalles del algoritmo QPE. Si desea obtener más información, puedes leer el capítulo sobre el algoritmo QPE en `el libro de texto de Qiskit <https://learn.qiskit.org/course/ch-algorithms/quantum-phase-estimation>`__ [3]."

#: ../../tutorials/qpe_with_sampler.ipynb:67
msgid "Overview"
msgstr "Descripción General"

#: ../../tutorials/qpe_with_sampler.ipynb:69
msgid "As explained above, there are black boxes in the QPE algorithm to prepare the state :math:`|\\psi \\rangle` and perform the controlled-\\ :math:`U^{2^j}` operation. In this tutorial, you will prepare a series of QPE circuits containing different black boxes corresponding to different phases. You will then run these circuits using the `Sampler primitive <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html>`__ and analyze the results. As you will see, the Sampler primitive makes running parameterized circuits very easy. Instead of creating a series of QPE circuits, you only need to create *one* QPE circuit with a parameter specifying the phase the black boxes generate and a series of phase values for the parameter."
msgstr "Como se explicó anteriormente, hay cajas negras en el algoritmo QPE para preparar el estado :math:`|\\psi \\rangle` y realizar la operación control-\\ :math:`U^{2^j}`. En este tutorial, prepararás una serie de circuitos QPE que contienen diferentes cajas negras correspondientes a diferentes fases. Después, ejecutarás estos circuitos utilizando la `primitiva Sampler <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Sampler.html>`__ y analizarás los resultados. Como verás, la primitiva Sampler facilita mucho la ejecución de circuitos parametrizados. En lugar de crear una serie de circuitos QPE, solo necesitas crear *un* circuito QPE con un parámetro que especifique la fase que generan las cajas negras y una serie de valores de fase para el parámetro."

#: ../../tutorials/qpe_with_sampler.ipynb:76
msgid "Note"
msgstr "Nota"

#: ../../tutorials/qpe_with_sampler.ipynb:78
msgid "In a typical usage of the QPE algorithm, such as the Shor’s factoring algorithm, the black boxes are not configured by the user but instead are specified by other subroutines. However, the purpose of this tutorial is to use the QPE algorithm to illustrate the ease of running parameterized circuits by using the Sampler primitive."
msgstr "En un uso típico del algoritmo QPE, como el algoritmo de factorización de Shor, el usuario no configura las cajas negras, sino que las especifican otras subrutinas. Sin embargo, el propósito de este tutorial es usar el algoritmo QPE para ilustrar la facilidad de ejecutar circuitos parametrizados usando la primitiva Sampler."

#: ../../tutorials/qpe_with_sampler.ipynb:94
msgid "Step 1: Create QPE circuits"
msgstr "Paso 1: Crear circuitos QPE"

#: ../../tutorials/qpe_with_sampler.ipynb:106
msgid "Create a parameterized QPE circuit"
msgstr "Crea un circuito CHSH parametrizado"

#: ../../tutorials/qpe_with_sampler.ipynb:108
msgid "The procedure of the QPE algorithm is as follows:"
msgstr "El procedimiento del algoritmo QPE es el siguiente:"

#: ../../tutorials/qpe_with_sampler.ipynb:110
msgid "Create a circuit with two quantum registers (the first for estimating the phase and the second for storing the eigenvector :math:`|\\psi\\rangle`) and one classical register for readout."
msgstr "Crea un circuito con dos registros cuánticos (el primero para estimar la fase y el segundo para almacenar el vector propio :math:`|\\psi\\rangle`) y un registro clásico para la lectura de la salida."

#: ../../tutorials/qpe_with_sampler.ipynb:111
msgid "Initialize the qubits in the first register as :math:`|0\\rangle` and the second register as :math:`|\\psi\\rangle`."
msgstr "Inicializa los qubits en el primer registro como :math:`|0\\rangle` y el segundo registro como :math:`|\\psi\\rangle`."

#: ../../tutorials/qpe_with_sampler.ipynb:112
msgid "Create a superposition in the first register."
msgstr "Crea una superposición en el primer registro."

#: ../../tutorials/qpe_with_sampler.ipynb:113
msgid "Apply the controlled-\\ :math:`U^{2^j}` black box."
msgstr "Aplica la caja negra control-\\ :math:`U^{2^j}`."

#: ../../tutorials/qpe_with_sampler.ipynb:114
msgid "Apply an inverse quantum Fourier transform (QFT) to the first register."
msgstr "Aplica una transformada de Fourier cuántica (QFT) inversa al primer registro."

#: ../../tutorials/qpe_with_sampler.ipynb:115
msgid "Measure the first register."
msgstr "Mide el primer registro."

#: ../../tutorials/qpe_with_sampler.ipynb:117
msgid "The following code creates a function ``create_qpe_circuit`` for creating a QPE circuit given the keyword arguments ``theta`` and ``num_qubits``. Note that ``theta`` doesn’t contain the :math:`2\\pi` factor. The ``num_qubits`` argument specifies the number of qubits in the first register. More qubits will provide more precision for the phase estimation."
msgstr "El siguiente código crea una función ``create_qpe_circuit`` para crear un circuito QPE dados los argumentos de palabra clave ``theta`` y ``num_qubits``. Ten en cuenta que ``theta`` no contiene el factor :math:`2\\pi`. El argumento ``num_qubits`` especifica el número de qubits en el primer registro. Más qubits proporcionarán más precisión para la estimación de fase."

#: ../../tutorials/qpe_with_sampler.ipynb:173
msgid "If you pass a real number to the ``theta`` argument in the ``create_qpe_circuit`` function, it will return a circuit with a fixed phase encoded."
msgstr "Si pasas un número real al argumento ``theta`` en la función ``create_qpe_circuit``, devolverá un circuito con una fase fija codificada."

#: ../../tutorials/qpe_with_sampler.ipynb:205
msgid "However, if you pass a ```Parameter`` <https://qiskit.org/documentation/stubs/qiskit.circuit.Parameter.html>`__ object instead, it will return a parameterized circuit whose parameter values can be assigned after the circuit has been created. You will use the parameterized version of the QPE circuit for the rest of the tutorial."
msgstr "Sin embargo, si pasas un objeto ```Parameter`` <https://qiskit.org/documentation/stubs/qiskit.circuit.Parameter.html>`__ en su lugar, devolverá un circuito parametrizado cuyos valores de parámetro se pueden asignar después de que se haya creado el circuito. Utilizarás la versión parametrizada del circuito QPE durante el resto del tutorial."

#: ../../tutorials/qpe_with_sampler.ipynb:240
msgid "Create a list of phase values to be assigned later"
msgstr "Crea una lista de valores de fase para asignarlos más adelante"

#: ../../tutorials/qpe_with_sampler.ipynb:242
msgid "After creating the parameterized QPE circuit, you will create a list of phase values to be assigned to the circuit in the next step. You can use the code below to create a list of 21 phase values that range from ``0`` to ``2`` with equal spacing, i.e. \\ ``0``, ``0.1``, ``0.2``, …, ``1.9``, ``2.0``."
msgstr "Después de crear el circuito QPE parametrizado, crearás una lista de valores de fase que se asignarán al circuito en el siguiente paso. Puedes usar el siguiente código para crear una lista de 21 valores de fase que van desde ``0`` a ``2`` con espacios iguales, es decir, \\ ``0``, ``0.1``, ``0.2``, …, ``1.9``, ``2.0``."

#: ../../tutorials/qpe_with_sampler.ipynb:266
msgid "Step 2: Submit the circuits to a quantum computer on the cloud"
msgstr "Paso 2: Enviar los circuitos a una computadora cuántica en la nube"

#: ../../tutorials/qpe_with_sampler.ipynb:278
msgid "Connect to the Qiskit Runtime service"
msgstr "Conéctate al servicio Qiskit Runtime"

#: ../../tutorials/qpe_with_sampler.ipynb:280
msgid "First, you will connect to the Qiskit Runtime service instance that you created in `the first step <#Before-you-begin>`__. We will use ``ibmq_qasm_simulator`` to run this tutorial."
msgstr "Primero, te conectarás a la instancia del servicio Qiskit Runtime que creaste en `el primer paso <#Before-you-begin>`__. Usaremos ``ibmq_qasm_simulator`` para ejecutar este tutorial."

#: ../../tutorials/qpe_with_sampler.ipynb:305
msgid "Run the parameterized circuits by using the Sampler primitive"
msgstr "Ejecuta los circuitos parametrizados usando la primitiva Sampler"

#: ../../tutorials/qpe_with_sampler.ipynb:307
msgid "With the Qiskit Runtime service connected, a parameterized QPE circuit, and a list of parameter values, you are now ready to use the Sampler primitive to run the QPE circuits. The ``with ...`` syntax opens a Qiskit Runtime session. Within the session, you will run the parameterized QPE circuit with 21 parameter values with just one line of code. The Sampler primitive will take the parameter values, assign them to the circuit and run it as 21 circuits with fixed parameter values and return a single job result containing the (quasi-)probabilities of bitstrings. This saves you from writing dozens of lines of code."
msgstr "Con el servicio Qiskit Runtime conectado, un circuito QPE parametrizado y una lista de valores de parámetros, ahora estás listo para usar la primitiva Sampler para ejecutar los circuitos QPE. La sintaxis ``with ...`` abre una sesión de Qiskit Runtime. Dentro de la sesión, ejecutarás el circuito QPE parametrizado con 21 valores de parámetros con solo una línea de código. La primitiva Sampler tomará los valores de los parámetros, los asignará al circuito y lo ejecutará como 21 circuitos con valores de parámetros fijos y devolverá un solo resultado de trabajo que contiene las (cuasi) probabilidades de cadenas de bits. Esto te ahorra tener que escribir docenas de líneas de código."

#: ../../tutorials/qpe_with_sampler.ipynb:310
msgid "The ``Estimator`` primitive has a similar API interface for parameterized circuits. See `the API reference <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ for more details."
msgstr "La primitiva ``Estimator`` tiene una interfaz API similar a la de los circuitos parametrizados. Consulta `la referencia de la API <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/stubs/qiskit_ibm_runtime.Estimator.html>`__ para obtener más detalles."

#: ../../tutorials/qpe_with_sampler.ipynb:338
msgid "Step 3: Analyze the results"
msgstr "Paso 3: Analizar los resultados"

#: ../../tutorials/qpe_with_sampler.ipynb:350
msgid "Analyze the results of one circuit"
msgstr "Analiza los resultados de un circuito"

#: ../../tutorials/qpe_with_sampler.ipynb:352
msgid "After the job has been completed, you can start analyzing the results by looking at the histogram of one of the circuits. The (quasi-)probability distribution of the measurement outcome is stored in ``results.quasi_dists`` and you can access results from an individual circuit by passing the index of the circuit (:math:`idx=6` in the example below) you are interested in."
msgstr "Una vez que se haya completado el trabajo, puedes comenzar a analizar los resultados mirando el histograma de uno de los circuitos. La (cuasi) distribución de probabilidad del resultado de la medición se almacena en ``results.quasi_dists`` y puedes acceder a los resultados de un circuito individual pasando el índice del circuito (:math:`idx=6` en el ejemplo a continuación) en el que estás interesado."

#: ../../tutorials/qpe_with_sampler.ipynb:385
msgid "To estimate :math:`\\theta`, you need to divide the most likely outcome :math:`N_1` (``1010`` in binary or ``10`` in decimal) by :math:`2^n`, where :math:`n` is the number of qubits in the first register (:math:`n=4` in our example):"
msgstr "Para estimar :math:`\\theta`, debes dividir el resultado más probable :math:`N_1` (``1010`` en binario o ``10`` en decimal) entre :math:`2^n`, donde :math:`n` es el número de qubits en el primer registro (:math:`n=4` en nuestro ejemplo):"

#: ../../tutorials/qpe_with_sampler.ipynb:387
msgid "\\theta = \\frac{N_1}{2^n} =  \\frac{10}{2^4} = 0.625.\n\n"
msgstr "\\theta = \\frac{N_1}{2^n} =  \\frac{10}{2^4} = 0.625.\n\n"

#: ../../tutorials/qpe_with_sampler.ipynb:389
msgid "This is close to the expected value of :math:`0.6`, but you can do a better estimate by taking the weighted average of the most likely outcome (``1010`` in binary or ``10`` in decimal) and the second most likely outcome (``1001`` in binary or ``9`` in decimal):"
msgstr "Esto está cerca del valor esperado de :math:`0.6`, pero puedes hacer una mejor estimación tomando el promedio ponderado del resultado más probable (``1010`` en binario o ``10`` en decimal) y el segundo resultado más probable (``1001`` en binario o ``9`` en decimal):"

#: ../../tutorials/qpe_with_sampler.ipynb:391
msgid "\\theta = \\frac{P_1 \\times \\frac{N_1}{2^n} + P_2 \\times \\frac{N_2}{2^n}}{P_1 + P_2} = \\frac{0.554 \\times \\frac{10}{2^4} + 0.269 \\times \\frac{9}{2^4}}{0.554 + 0.269} = 0.605,\n\n"
msgstr "\\theta = \\frac{P_1 \\times \\frac{N_1}{2^n} + P_2 \\times \\frac{N_2}{2^n}}{P_1 + P_2} = \\frac{0.554 \\times \\frac{10}{2^4} + 0.269 \\times \\frac{9}{2^4}}{0.554 + 0.269} = 0.605,\n\n"

#: ../../tutorials/qpe_with_sampler.ipynb:393
msgid "where :math:`N_1` and :math:`P_1` are the most likely outcome and its probability and :math:`N_2` and :math:`P_2` are the second most likely outcome and its probability. The result, :math:`0.605`, is much closer to the expected value of :math:`0.6`. We will use this method to analyze the results from all circuits."
msgstr "donde :math:`N_1` y :math:`P_1` son el resultado más probable y su probabilidad, mientras que :math:`N_2` y :math:`P_2` son el segundo resultado más probable y su probabilidad. El resultado, :math:`0.605`, está mucho más cerca del valor esperado de :math:`0.6`. Usaremos este método para analizar los resultados de todos los circuitos."

#: ../../tutorials/qpe_with_sampler.ipynb:405
msgid "Analyze the results of all circuits"
msgstr "Analiza los resultados de todos los circuitos"

#: ../../tutorials/qpe_with_sampler.ipynb:407
msgid "You can use the helper functions below to find the values for :math:`N_1`, :math:`P_1`, :math:`N_2`, and :math:`P_2` for a phase and calculate the estimated :math:`\\theta`. Ideally :math:`N_2` should be a “neighbor” of :math:`N_1` (for example, the neighbors of ``1010`` are ``1001`` and ``1011``), however due to the presence of noise, the second most likely outcome may not be a neighbor of :math:`N_1` if the results were obtained from a real quantum system. The helper functions take the :math:`N_2` value only from :math:`N_1`\\ ’s neighbors."
msgstr "Puedes utilizar las siguientes funciones auxiliares para encontrar los valores de :math:`N_1`, :math:`P_1`, :math:`N_2`, y :math:`P_2` para una fase y calcular el valor estimado de :math:`\\theta`. Idealmente, :math:`N_2` debería ser un “vecino” de :math:`N_1` (por ejemplo, los vecinos de ``1010`` son ``1001`` y ``1011``), sin embargo, debido a la presencia de ruido, el segundo resultado más probable puede no ser vecino de :math:`N_1` si los resultados se obtuvieron de un sistema cuántico real. Las funciones auxiliares toman el valor :math:`N_2` solo de los vecinos de :math:`N_1`."

#: ../../tutorials/qpe_with_sampler.ipynb:495
msgid "You can use the ``estimate_phase`` helper function to estimate phases from the results of all circuits."
msgstr "Puedes usar la función auxiliar ``estimate_phase`` para estimar fases a partir de los resultados de todos los circuitos."

#: ../../tutorials/qpe_with_sampler.ipynb:518
msgid "The ideal solutions for the phases :math:`\\theta` are periodic with a period of ``1`` because the eigenvalue :math:`e^{2 \\pi i \\theta}` is :math:`2 \\pi` periodic. You can run the cell below to generate the ideal solutions for comparison with the solutions obtained from the QPE algorithm."
msgstr "Las soluciones ideales para las fases :math:`\\theta` son periódicas con un periodo de ``1`` porque el valor propio :math:`e^{2 \\pi i \\theta}` es :math:`2 \\pi` periódico. Puedes ejecutar la celda a continuación para generar las soluciones ideales para compararlas con las soluciones obtenidas del algoritmo QPE."

#: ../../tutorials/qpe_with_sampler.ipynb:543
msgid "You can run the code below to visualize the solutions."
msgstr "Puedes ejecutar el siguiente código para visualizar las soluciones."

#: ../../tutorials/qpe_with_sampler.ipynb:607
msgid "As you can see, the solutions obtained from the QPE algorithm follow closely to the ideal solutions. Congratulations! You have successfully run the QPE algorithm and obtained good solutions!"
msgstr "Como puedes ver, las soluciones obtenidas del algoritmo QPE siguen de cerca las soluciones ideales. ¡Felicidades! ¡Ha ejecutado con éxito el algoritmo QPE y has obtenido buenas soluciones!"

#: ../../tutorials/qpe_with_sampler.ipynb:619
msgid "Summary"
msgstr "Resumen"

#: ../../tutorials/qpe_with_sampler.ipynb:621
msgid "In this tutorial, you have created a parameterized QPE circuit, run it using the Sampler primitive, analyzed the results, and obtained solutions that are closed to the ideal solutions. You can see that the Sampler primitive makes running parameterized circuits very easy."
msgstr "En este tutorial, creaste un circuito QPE parametrizado, lo ejecutaste con la primitiva Sampler, analizaste los resultados y obtuviste soluciones cercanas a las soluciones ideales. Puedes ver que la primitiva Sampler facilita mucho la ejecución de circuitos parametrizados."

#: ../../tutorials/qpe_with_sampler.ipynb:633
msgid "References"
msgstr "Referencias"

#: ../../tutorials/qpe_with_sampler.ipynb:635
msgid "Kitaev, A. Y. (1995). Quantum measurements and the Abelian stabilizer problem. arXiv preprint quant-ph/9511026."
msgstr "Kitaev, A. Y. (1995). Quantum measurements and the Abelian stabilizer problem. arXiv preprint quant-ph/9511026."

#: ../../tutorials/qpe_with_sampler.ipynb:636
msgid "Nielsen, M., & Chuang, I. (2010). Quantum computation and quantum information (2nd ed., pp. 221-226). Cambridge University Press."
msgstr "Nielsen, M., & Chuang, I. (2010). Quantum computation and quantum information (2nd ed., pp. 221-226). Cambridge University Press."

#: ../../tutorials/qpe_with_sampler.ipynb:637
msgid "Abbas, A., Andersson, S., Asfaw, A., Córcoles, A., Bello, L., Ben-Haim, Y., … & Wootton, J. (2020). Learn quantum computation using qiskit. URL: https://qiskit.org/textbook/preface.html (accessed 07/14/2022)."
msgstr "Abbas, A., Andersson, S., Asfaw, A., Córcoles, A., Bello, L., Ben-Haim, Y., … & Wootton, J. (2020). Learn quantum computation using qiskit. URL: https://qiskit.org/textbook/preface.html (accessed 07/14/2022)."

#: ../../tutorials/qpe_with_sampler.ipynb:649
msgid "Qiskit versions and copyright"
msgstr "Versiones de Qiskit y derechos de autor"

