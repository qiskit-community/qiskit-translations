msgid ""
msgstr ""
"Project-Id-Version: qiskit-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-02 18:20+0000\n"
"PO-Revision-Date: 2023-03-06 17:48\n"
"Last-Translator: \n"
"Language: es_UN\n"
"Language-Team: Spanish (United)\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"
"X-Crowdin-Project: qiskit-docs\n"
"X-Crowdin-Project-ID: 369271\n"
"X-Crowdin-Language: es-un\n"
"X-Crowdin-File: /master/qiskit-ibm-runtime/docs/locale/en/LC_MESSAGES/tutorials/vqe_with_estimator.po\n"
"X-Crowdin-File-ID: 9834\n"

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "This page was generated from `docs/tutorials/vqe_with_estimator.ipynb`__."
msgstr "Esta página fue generada a partir de `docs/tutorials/vqe_with_estimator.ipynb`__."

#: ../../tutorials/vqe_with_estimator.ipynb:9
msgid "Variational Quantum Eigensolver with Estimator Primitive"
msgstr "Solucionador Propio Variacional Cuántico con Estimador Primitivo"

#: ../../tutorials/vqe_with_estimator.ipynb:12
msgid "Overview"
msgstr "Descripción general"

#: ../../tutorials/vqe_with_estimator.ipynb:14
msgid "The Variational Quantum Eigensolver (VQE) is an optimization routine for finding the ground state energy (the lowest eigenvalue) of a `Hamiltonian <https://en.wikipedia.org/wiki/Hamiltonian_(quantum_mechanics)>`__ and is a considered to be a viable candidate for near-term hardware. In this tutorial, you will learn how to use Qiskit Runtime to submit variational jobs using the estimator primitive. Specifically, you will calculate the ground state energy of the :math:`H_2` molecule."
msgstr "El Solucionador Propio Variacional Cuántico (Variational Quantum Eigensolver, VQE) es una rutina de optimización para encontrar la energía del estado fundamental (el valor propio más bajo) de un `Hamiltoniano <https://en.wikipedia.org/wiki/Hamiltonian_(quantum_mechanics)>`__ y es considerado a ser un candidato viable para el hardware a corto plazo. En este tutorial, aprenderás a usar Qiskit Runtime para enviar trabajos variacionales usando el estimator primitivo. Específicamente, calcularás la energía del estado fundamental de la molécula :math:`H_2`."

#: ../../tutorials/vqe_with_estimator.ipynb:26
msgid "Set up your local development environment"
msgstr "Configura tu entorno de desarrollo local"

#: ../../tutorials/vqe_with_estimator.ipynb:28
msgid "This tutorial requires a Qiskit Runtime service instance. If you haven’t done so already, follow `these steps <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ to set one up."
msgstr "Este tutorial requiere una instancia de servicio Qiskit Runtime. Si aún no lo has hecho, sigue `estos pasos <https://qiskit.org/documentation/partners/qiskit_ibm_runtime/getting_started.html>`__ para configurar uno."

#: ../../tutorials/vqe_with_estimator.ipynb:40
msgid "Generate molecular Hamiltonians"
msgstr "Generar Hamiltonianos moleculares"

#: ../../tutorials/vqe_with_estimator.ipynb:42
msgid "This tutorial uses Qiskit Nature to generate and handle molecular Hamiltonians. If you haven’t already, you can install Qiskit Nature (and the PySCF addon) using the commands shown below. For more information about Qiskit Nature, see the `Getting started guide <https://qiskit.org/documentation/nature/getting_started.html>`__."
msgstr "Este tutorial utiliza Qiskit Nature para generar y manejar Hamiltonianos moleculares. Si aún no lo has hecho, puedes instalar Qiskit Nature (y el complemento PySCF) usando los comandos que se muestran a continuación. Para obtener más información sobre Qiskit Nature, consulta la `guía de Primeros pasos <https://qiskit.org/documentation/nature/getting_started.html>`__."

#: ../../tutorials/vqe_with_estimator.ipynb:49
msgid "Next, we will generate the Hamiltonians that we want to find the ground state energy of. The first step is to use the ``PySCFDriver`` to convert a string representing our molecule to an ``ElectronicStructureProblem``. The next step is to use the ``ParityMapper`` to convert this problem into a qubit Hamiltonian that can run on a quantum computer."
msgstr "A continuación, generaremos los Hamiltonianos de los que queremos encontrar la energía del estado fundamental. El primer paso es usar ``PySCFDriver`` para convertir una cadena que represente a nuestra molécula en un ``ElectronicStructureProblem``. El siguiente paso es usar ``ParityMapper`` para convertir este problema en un Hamiltoniano de qubit que pueda ejecutarse en una computadora cuántica."

#: ../../tutorials/vqe_with_estimator.ipynb:79
msgid "Solve classically"
msgstr "Resolver clásicamente"

#: ../../tutorials/vqe_with_estimator.ipynb:81
msgid "Since this problem is very small, we can solve it exactly using classical methods. The code below uses the minimum eigensolver from the ``NumPy`` package to find the electronic ground state energy (in Hartree units), which we will use to assess the performance of the VQE."
msgstr "Como este problema es muy pequeño, podemos resolverlo exactamente usando métodos clásicos. El siguiente código usa el solucionador propio mínimo del paquete ``NumPy`` para encontrar la energía del estado fundamental electrónico (en unidades Hartree), que usaremos para evaluar el rendimiento del VQE."

#: ../../tutorials/vqe_with_estimator.ipynb:132
msgid "Solve with VQE"
msgstr "Resolver con VQE"

#: ../../tutorials/vqe_with_estimator.ipynb:134
msgid "Next, we will create our service instance and specify our backend. In this example we will use a simulator to avoid queue times, but you can use the code below to run on a real device by simply changing the backend."
msgstr "A continuación, crearemos nuestra instancia de servicio y especificaremos nuestro backend. En este ejemplo, usaremos un simulador para evitar tiempos de encolamiento, pero puedes usar el código a continuación para ejecutarlo en un dispositivo real simplemente cambiando el backend."

#: ../../tutorials/vqe_with_estimator.ipynb:159
msgid "The next code cell specifies how we want to run the VQE. This includes"
msgstr "La siguiente celda de código especifica cómo queremos ejecutar el VQE. Esto incluye"

#: ../../tutorials/vqe_with_estimator.ipynb:161
msgid "the type of circuit (ansatz) used to create our trial state,"
msgstr "el tipo de circuito (ansatz) utilizado para crear nuestro estado de prueba,"

#: ../../tutorials/vqe_with_estimator.ipynb:162
msgid "the classical algorithm that decides how to adjust our trial state to acheive better solutions, and"
msgstr "el algoritmo clásico que decide cómo ajustar nuestro estado de prueba para lograr mejores soluciones, y"

#: ../../tutorials/vqe_with_estimator.ipynb:163
msgid "the starting parameters."
msgstr "los parámetros de inicio."

#: ../../tutorials/vqe_with_estimator.ipynb:165
msgid "We will also create a simple object to log our intermediate resuts for plotting later."
msgstr "También crearemos un objeto simple para registrar resultados intermedios para graficarlos más tarde."

#: ../../tutorials/vqe_with_estimator.ipynb:212
msgid "The next code cell runs the VQE algorithm. If you chose to run on a real device, the code runs `zero-noise extrapolation <https://arxiv.org/abs/2005.10921>`__ on the final result to estimate the effects of noise, and guess what the result would be from a noiseless device."
msgstr "La siguiente celda de código ejecuta el algoritmo VQE. Si eliges ejecutar en un dispositivo real, el código ejecuta la `extrapolación de ruido cero <https://arxiv.org/abs/2005.10921>`__ en el resultado final para estimar los efectos del ruido y adivinar cuál sería el resultado de un dispositivo sin ruido."

#: ../../tutorials/vqe_with_estimator.ipynb:277
msgid "Finally, the code cell below plots the intermediate results from the optimization process. The optimization algorithm tweaks the parameters to gradually home in on values that produce lower energies. Provided the algorithm does not get caught in a local minima, this graph will plateau at the electronic ground state energy of the molecule."
msgstr "Finalmente, la siguiente celda de código grafica los resultados intermedios del proceso de optimización. El algoritmo de optimización ajusta los parámetros para ubicarse gradualmente en los valores que producen energías más bajas. Siempre que el algoritmo no quede atrapado en un mínimo local, esta gráfica se estancará en la energía del estado fundamental electrónico de la molécula."

